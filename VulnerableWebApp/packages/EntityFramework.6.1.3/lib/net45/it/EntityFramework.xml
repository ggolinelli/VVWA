<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>EntityFramework</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.IndexAttribute">
      <summary>Rappresenta un attributo che si trova in una proprietà per indicare che la colonna del database a cui la proprietà è mappata è priva di indice.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.#ctor">
      <summary>Inizializza una nuova istanza di <see cref="T:System.ComponentModel.DataAnnotations.Schema.IndexAttribute" /> per un indice che sarà denominato in base alla convenzione e non dispone di alcun ordine di colonne, clustering o univocità specificati.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza di <see cref="T:System.ComponentModel.DataAnnotations.Schema.IndexAttribute" /> per un indice con il nome specificato e non dispone di alcun ordine di colonne, clustering o univocità specificati.</summary>
      <param name="name">Nome dell'indice.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.#ctor(System.String,System.Int32)">
      <summary>Inizializza una nuova istanza di <see cref="T:System.ComponentModel.DataAnnotations.Schema.IndexAttribute" /> per un indice con il nome e l'ordine di colonne specificati, ma senza clustering o univocità specificati.</summary>
      <param name="name">Nome dell'indice.</param>
      <param name="order">Numero che verrà utilizzato per determinare l'ordine delle colonne per gli indici a più colonne.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.Equals(System.ComponentModel.DataAnnotations.Schema.IndexAttribute)">
      <summary>Determina se questo attributo specifica lo stesso nome e la stessa configurazione dell'attributo specificato.</summary>
      <returns>true se l'altro oggetto è uguale a questo oggetto. In caso contrario, false.</returns>
      <param name="other">Attributo da confrontare.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.Equals(System.Object)">
      <summary>Determina se questo attributo specifica lo stesso nome e la stessa configurazione dell'attributo specificato.</summary>
      <returns>true se l'altro oggetto è uguale a questo oggetto. In caso contrario, false.</returns>
      <param name="obj">Attributo da confrontare.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash per l'istanza.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.IsClustered">
      <summary>Ottiene o imposta un valore per indicare se l'indice definisce un indice cluster.</summary>
      <returns>true se l'indice definisce un indice cluster, false se l'indice definisce un indice non cluster.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.IsClusteredConfigured">
      <summary>Ottiene o imposta se <see cref="P:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.IsClustered" /> è stato impostato su un valore.</summary>
      <returns>true se <see cref="P:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.IsClustered" /> è stato impostato su un valore. In caso contrario, false.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.IsUnique">
      <summary>Ottiene o imposta un valore per indicare se definire un indice univoco.</summary>
      <returns>true per definire un indice univoco, false per definire un indice non univoco.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.IsUniqueConfigured">
      <summary>Ottiene o imposta se <see cref="P:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.IsUnique" /> è stato impostato su un valore.</summary>
      <returns>true se <see cref="P:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.IsUnique" /> è stato impostato su un valore. In caso contrario, false.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.Name">
      <summary>Ottiene o imposta il nome dell'indice.</summary>
      <returns>Nome dell'indice.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.Order">
      <summary>Ottiene o imposta un numero che determina l'ordine delle colonne per indici a più colonne.Il valore sarà -1 se nessun ordine di colonne è stato specificato.</summary>
      <returns>Numero che determina l'ordine delle colonne per indici a più colonne o -1 se non è stato specificato alcun ordine per le colonne.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.ToString">
      <summary>Restituisce la rappresentazione di stringa per questa istanza.</summary>
      <returns>Rappresentazione di stringa per questa istanza.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.TypeId">
      <summary>Ottiene o imposta un ID diverso per ogni istanza dell'oggetto in modo che i descrittori di tipo non tenteranno di combinare tutte le istanze di IndexAttribute in una singola istanza.</summary>
      <returns>ID diverso per ogni istanza dell'oggetto.</returns>
    </member>
    <member name="T:System.Data.Entity.CreateDatabaseIfNotExists`1">
      <summary>Implementazione di IDatabaseInitializer che ricrea il database e, facoltativamente, ne ripete il seeding solo se il database non esiste.Per eseguire il seeding del database, creare una classe derivata ed eseguire l'override del metodo Seed.</summary>
      <typeparam name="TContext"> Tipo di contesto. </typeparam>
    </member>
    <member name="M:System.Data.Entity.CreateDatabaseIfNotExists`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.CreateDatabaseIfNotExists`1" />.</summary>
    </member>
    <member name="M:System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(`0)">
      <summary>     Esegue la strategia per inizializzare il database per il contesto specificato. </summary>
      <param name="context"> Contesto. </param>
    </member>
    <member name="M:System.Data.Entity.CreateDatabaseIfNotExists`1.Seed(`0)">
      <summary>Metodo che deve essere sottoposto override per poter aggiungere i dati al contesto per il seeding.L'implementazione predefinita non esegue alcuna operazione.</summary>
      <param name="context"> Contesto di cui eseguire il seeding. </param>
    </member>
    <member name="T:System.Data.Entity.Database">
      <summary>Un'istanza di questa classe viene ottenuta da un oggetto <see cref="T:System.Data.Entity.DbContext" /> e può essere usata per gestire il database effettivo che supporta un oggetto DbContext o una connessione.Include la creazione, l'eliminazione e il controllo dell'esistenza di un database.Si noti che l'eliminazione e il controllo della presenza di un database possono essere eseguiti usando una connessione, anchesenza un contesto completo, usando i metodi statici della classe.</summary>
    </member>
    <member name="M:System.Data.Entity.Database.BeginTransaction">
      <summary>Avvia una transazione sulla connessione all'archivio sottostante</summary>
      <returns>oggetto <see cref="T:System.Data.Entity.DbContextTransaction" /> che esegue il wrapping dell'accesso all'oggetto transazione dell'archivio sottostante</returns>
    </member>
    <member name="M:System.Data.Entity.Database.BeginTransaction(System.Data.IsolationLevel)">
      <summary>Avvia una transazione sulla connessione all'archivio sottostante usando il livello di isolamento specificato</summary>
      <returns>oggetto <see cref="T:System.Data.Entity.DbContextTransaction" /> che esegue il wrapping dell'accesso all'oggetto transazione dell'archivio sottostante</returns>
      <param name="isolationLevel">Livello di isolamento del database con cui verrà creata la transazione dell'archivio sottostante.</param>
    </member>
    <member name="P:System.Data.Entity.Database.CommandTimeout">
      <summary>Ottiene o imposta il valore di timeout, espresso in secondi, per tutte le operazioni del contesto.Il valore predefinito è Null, dove Null indica che verrà usato il valore predefinito del provider sottostante.</summary>
      <returns>Timeout, espresso in secondi, o Null per usare l'impostazione predefinita del provider.</returns>
    </member>
    <member name="M:System.Data.Entity.Database.CompatibleWithModel(System.Boolean)">
      <summary>Verifica se il database è compatibile o meno con il modello Code First corrente.</summary>
      <returns>True se l'hash del modello nel contesto e nel database corrispondono; in caso contrario, false.</returns>
      <param name="throwIfNoMetadata">Se impostato su true verrà generata un'eccezione se non vengono trovati metadati del modello nel database.Se impostato su false, questo metodo restituirà true se non sono presenti metadati.</param>
    </member>
    <member name="P:System.Data.Entity.Database.Connection">
      <summary>Restituisce la connessione usata da questo contesto.È possibile che venga creata la connessione se non esiste ancora.</summary>
    </member>
    <member name="M:System.Data.Entity.Database.Create">
      <summary>Crea un nuovo database nel server di database per il modello definito nel contesto di supporto.Se tale metodo viene chiamato prima dell'esecuzione della strategia di inizializzazione del database, l'esecuzione della strategia verrà disabilitata.</summary>
    </member>
    <member name="M:System.Data.Entity.Database.CreateIfNotExists">
      <summary>Crea un nuovo database nel server di database per il modello definito nel contesto di supporto, ma solo se un database con lo stesso nome non esiste già nel server.</summary>
      <returns>True se il database non esisteva ed è stato creato; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Database.CurrentTransaction">
      <summary>Ottiene la transazione in cui è integrata la connessione all'archivio sottostante.Può essere Null.</summary>
    </member>
    <member name="P:System.Data.Entity.Database.DefaultConnectionFactory">
      <summary>Factory di connessione da usare per la creazione di un oggetto <see cref="T:System.Data.Common.DbConnection" /> da un nome di database o una stringa di connessione.</summary>
    </member>
    <member name="M:System.Data.Entity.Database.Delete">
      <summary>Elimina il database nel server di database se esiste; in caso contrario, non esegue alcuna operazione.Chiamando questo metodo dall'esterno di inizializzatore si contrassegna il database come se non fosse stato inizializzato.Ciò significa che se si tenta di usare nuovamente il database dopo che è stato eliminato, qualsiasi set dell'inizializzatore verrà eseguito nuovamente e di solito verrà effettuato un altro tentativo di creare il database.</summary>
      <returns>True se il database esisteva ed è stato eliminato; in caso contrario, false.</returns>
    </member>
    <member name="M:System.Data.Entity.Database.Delete(System.Data.Common.DbConnection)">
      <summary>Elimina il database nel server di database se esiste; in caso contrario, non esegue alcuna operazione.</summary>
      <returns>True se il database esisteva ed è stato eliminato; in caso contrario, false.</returns>
      <param name="existingConnection">Connessione esistente al database.</param>
    </member>
    <member name="M:System.Data.Entity.Database.Delete(System.String)">
      <summary>Elimina il database nel server di database se esiste; in caso contrario, non esegue alcuna operazione.La connessione al database viene creata usando il nome del database o la stringa di connessione specificata nella stessa modalità descritta nella documentazione per la classe <see cref="T:System.Data.Entity.DbContext" />.</summary>
      <returns>True se il database esisteva ed è stato eliminato; in caso contrario, false.</returns>
      <param name="nameOrConnectionString">Nome del database o stringa di connessione al database.</param>
    </member>
    <member name="M:System.Data.Entity.Database.Equals(System.Object)">
      <summary>Determina un valore che indica se il database specificato è uguale al database corrente.</summary>
      <returns>true se il database specificato è uguale al database corrente; in caso contrario, false.</returns>
      <param name="obj">Database da confrontare all'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.Database.ExecuteSqlCommand(System.Data.Entity.TransactionalBehavior,System.String,System.Object[])">
      <summary>Esegue il comando DDL/DML specificato sul database.Come con qualsiasi API che accetta SQL, è importante parametrizzare un input utente in modo da fornire protezione da un attacco SQL injection.È possibile includere i segnaposto dei parametri nella stringa di query SQL e quindi fornire i valori dei parametri come argomenti aggiuntivi.Tutti i valori dei parametri forniti verranno convertiti automaticamente in DbParameter.context.Database.ExecuteSqlCommand("UPDATE dbo.Posts SET Rating = 5 WHERE Author = @p0", userSuppliedAuthor); in alternativa, è anche possibile costruire un oggetto DbParameter e fornirlo a SqlQuery.In questo modo è possibile usare i parametri denominati nella stringa di query SQL.context.Database.ExecuteSqlCommand("UPDATE dbo.Posts SET Rating = 5 WHERE Author = @author", new SqlParameter("@author", userSuppliedAuthor));</summary>
      <returns>Risultato restituito dal database dopo l'esecuzione del comando.</returns>
      <param name="transactionalBehavior">Controlla la creazione di una transazione per questo comando.</param>
      <param name="sql">Stringa di comando.</param>
      <param name="parameters">Parametri da applicare alla stringa di comando.</param>
    </member>
    <member name="M:System.Data.Entity.Database.ExecuteSqlCommand(System.String,System.Object[])">
      <summary>Esegue il comando DDL/DML specificato sul database.Come con qualsiasi API che accetta SQL, è importante parametrizzare un input utente in modo da fornire protezione da un attacco SQL injection.È possibile includere i segnaposto dei parametri nella stringa di query SQL e quindi fornire i valori dei parametri come argomenti aggiuntivi.Tutti i valori dei parametri forniti verranno convertiti automaticamente in DbParameter.context.Database.ExecuteSqlCommand("UPDATE dbo.Posts SET Rating = 5 WHERE Author = @p0", userSuppliedAuthor); in alternativa, è anche possibile costruire un oggetto DbParameter e fornirlo a SqlQuery.In questo modo è possibile usare i parametri denominati nella stringa di query SQL.context.Database.ExecuteSqlCommand("UPDATE dbo.Posts SET Rating = 5 WHERE Author = @author", new SqlParameter("@author", userSuppliedAuthor));</summary>
      <returns>Risultato restituito dal database dopo l'esecuzione del comando.</returns>
      <param name="sql">Stringa di comando.</param>
      <param name="parameters">Parametri da applicare alla stringa di comando.</param>
    </member>
    <member name="M:System.Data.Entity.Database.ExecuteSqlCommandAsync(System.Data.Entity.TransactionalBehavior,System.String,System.Object[])">
      <summary>Esegue in modo asincrono il comando DDL/DML specificato sul database.Come con qualsiasi API che accetta SQL, è importante parametrizzare un input utente in modo da fornire protezione da un attacco SQL injection.È possibile includere i segnaposto dei parametri nella stringa di query SQL e quindi fornire i valori dei parametri come argomenti aggiuntivi.Tutti i valori dei parametri forniti verranno convertiti automaticamente in DbParameter.context.Database.ExecuteSqlCommandAsync("UPDATE dbo.Posts SET Rating = 5 WHERE Author = @p0", userSuppliedAuthor); in alternativa, è anche possibile costruire un oggetto DbParameter e fornirlo a SqlQuery.In questo modo è possibile usare i parametri denominati nella stringa di query SQL.context.Database.ExecuteSqlCommandAsync("UPDATE dbo.Posts SET Rating = 5 WHERE Author = @author", new SqlParameter("@author", userSuppliedAuthor));</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il risultato restituito dal database dopo l'esecuzione del comando.</returns>
      <param name="transactionalBehavior">Controlla la creazione di una transazione per questo comando.</param>
      <param name="sql">Stringa di comando.</param>
      <param name="parameters">Parametri da applicare alla stringa di comando.</param>
    </member>
    <member name="M:System.Data.Entity.Database.ExecuteSqlCommandAsync(System.Data.Entity.TransactionalBehavior,System.String,System.Threading.CancellationToken,System.Object[])">
      <summary>Esegue in modo asincrono il comando DDL/DML specificato sul database.Come con qualsiasi API che accetta SQL, è importante parametrizzare un input utente in modo da fornire protezione da un attacco SQL injection.È possibile includere i segnaposto dei parametri nella stringa di query SQL e quindi fornire i valori dei parametri come argomenti aggiuntivi.Tutti i valori dei parametri forniti verranno convertiti automaticamente in DbParameter.context.Database.ExecuteSqlCommandAsync("UPDATE dbo.Posts SET Rating = 5 WHERE Author = @p0", userSuppliedAuthor); in alternativa, è anche possibile costruire un oggetto DbParameter e fornirlo a SqlQuery.In questo modo è possibile usare i parametri denominati nella stringa di query SQL.context.Database.ExecuteSqlCommandAsync("UPDATE dbo.Posts SET Rating = 5 WHERE Author = @author", new SqlParameter("@author", userSuppliedAuthor));</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il risultato restituito dal database dopo l'esecuzione del comando.</returns>
      <param name="transactionalBehavior">Controlla la creazione di una transazione per questo comando.</param>
      <param name="sql">Stringa di comando.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <param name="parameters">Parametri da applicare alla stringa di comando.</param>
    </member>
    <member name="M:System.Data.Entity.Database.ExecuteSqlCommandAsync(System.String,System.Object[])">
      <summary>Esegue in modo asincrono il comando DDL/DML specificato sul database.Come con qualsiasi API che accetta SQL, è importante parametrizzare un input utente in modo da fornire protezione da un attacco SQL injection.È possibile includere i segnaposto dei parametri nella stringa di query SQL e quindi fornire i valori dei parametri come argomenti aggiuntivi.Tutti i valori dei parametri forniti verranno convertiti automaticamente in DbParameter.context.Database.ExecuteSqlCommandAsync("UPDATE dbo.Posts SET Rating = 5 WHERE Author = @p0", userSuppliedAuthor); in alternativa, è anche possibile costruire un oggetto DbParameter e fornirlo a SqlQuery.In questo modo è possibile usare i parametri denominati nella stringa di query SQL.context.Database.ExecuteSqlCommandAsync("UPDATE dbo.Posts SET Rating = 5 WHERE Author = @author", new SqlParameter("@author", userSuppliedAuthor));</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il risultato restituito dal database dopo l'esecuzione del comando.</returns>
      <param name="sql">Stringa di comando.</param>
      <param name="parameters">Parametri da applicare alla stringa di comando.</param>
    </member>
    <member name="M:System.Data.Entity.Database.ExecuteSqlCommandAsync(System.String,System.Threading.CancellationToken,System.Object[])">
      <summary>Esegue in modo asincrono il comando DDL/DML specificato sul database.Come con qualsiasi API che accetta SQL, è importante parametrizzare un input utente in modo da fornire protezione da un attacco SQL injection.È possibile includere i segnaposto dei parametri nella stringa di query SQL e quindi fornire i valori dei parametri come argomenti aggiuntivi.Tutti i valori dei parametri forniti verranno convertiti automaticamente in DbParameter.context.Database.ExecuteSqlCommandAsync("UPDATE dbo.Posts SET Rating = 5 WHERE Author = @p0", userSuppliedAuthor); in alternativa, è anche possibile costruire un oggetto DbParameter e fornirlo a SqlQuery.In questo modo è possibile usare i parametri denominati nella stringa di query SQL.context.Database.ExecuteSqlCommandAsync("UPDATE dbo.Posts SET Rating = 5 WHERE Author = @author", new SqlParameter("@author", userSuppliedAuthor));</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il risultato restituito dal database dopo l'esecuzione del comando.</returns>
      <param name="sql">Stringa di comando.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <param name="parameters">Parametri da applicare alla stringa di comando.</param>
    </member>
    <member name="M:System.Data.Entity.Database.Exists">
      <summary>Controlla se il database esiste nel server.</summary>
      <returns>True se il database esiste; in caso contrario, false.</returns>
    </member>
    <member name="M:System.Data.Entity.Database.Exists(System.Data.Common.DbConnection)">
      <summary>Controlla se il database esiste nel server.</summary>
      <returns>True se il database esiste; in caso contrario, false.</returns>
      <param name="existingConnection">Connessione esistente al database.</param>
    </member>
    <member name="M:System.Data.Entity.Database.Exists(System.String)">
      <summary>Controlla se il database esiste nel server.La connessione al database viene creata usando il nome del database o la stringa di connessione specificata nella stessa modalità descritta nella documentazione per la classe <see cref="T:System.Data.Entity.DbContext" />.</summary>
      <returns>True se il database esiste; in caso contrario, false.</returns>
      <param name="nameOrConnectionString">Nome del database o stringa di connessione al database.</param>
    </member>
    <member name="M:System.Data.Entity.Database.GetHashCode">
      <summary>Restituisce la funzione hash per questo database.</summary>
      <returns>Funzione hash per questo database.</returns>
    </member>
    <member name="M:System.Data.Entity.Database.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Database.Initialize(System.Boolean)">
      <summary>Esegue l'oggetto <see cref="T:System.Data.Entity.IDatabaseInitializer`1" /> registrato in questo contesto.Se 'force' è impostato su true, l'inizializzatore viene eseguito indipendentemente dal fatto che sia stato eseguito prima.Ciò può essere utile se un database viene eliminato mentre un'applicazione è in esecuzione e deve essere reinizializzato.Se 'force' è impostato su false, l'inizializzatore verrà eseguito solo se non è già stato eseguito per tale contesto, modello e connessione in questo dominio dell'applicazione.Questo metodo viene in genere usato quando è necessario garantire la creazione e il seeding del database prima di avviare un'operazione nel caso in cui questo l'approccio lazy comporti dei problemi, ad esempio quando l'operazione fa parte di una transazione.</summary>
      <param name="force">Se impostato su true, l'inizializzatore viene eseguito anche se è già stato eseguito.</param>
    </member>
    <member name="P:System.Data.Entity.Database.Log">
      <summary>Imposta questa proprietà per registrare il codice SQL generato da <see cref="T:System.Data.Entity.DbContext" /> nel delegato specificato.Ad esempio, per registrare nella console, imposta questa proprietà su <see cref="M:System.Console.Write(System.String)" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Database.SetInitializer``1(System.Data.Entity.IDatabaseInitializer{``0})">
      <summary>Imposta l'inizializzatore del database da usare per il tipo di contesto specificato.L'inizializzatore del database viene chiamato quando il tipo <see cref="T:System.Data.Entity.DbContext" /> specificato viene usato per accedere a un database per la prima volta.La strategia predefinita per i contesti Code First è un'istanza di <see cref="T:System.Data.Entity.CreateDatabaseIfNotExists`1" />.</summary>
      <param name="strategy">Inizializzatore da usare o Null per disabilitare l'inizializzazione per il tipo di contesto specificato.</param>
      <typeparam name="TContext">Tipo di contesto.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Database.SqlQuery``1(System.String,System.Object[])">
      <summary>Crea una query SQL non elaborata che restituirà gli elementi del tipo generico specificato.Il tipo può essere un qualsiasi tipo che dispone di proprietà che corrispondono ai nomi delle colonne restituite dalla query o può essere un semplice tipo primitivo.Non è necessario che il tipo sia un tipo di entità.I risultati di questa query non verranno mai rilevati dal contesto anche se il tipo di oggetto restituito è un tipo di entità.Usare il metodo <see cref="M:System.Data.Entity.DbSet`1.SqlQuery(System.String,System.Object[])" /> per restituire le entità rilevate dal contesto.Come con qualsiasi API che accetta SQL, è importante parametrizzare un input utente in modo da fornire protezione da un attacco SQL injection.È possibile includere i segnaposto dei parametri nella stringa di query SQL e quindi fornire i valori dei parametri come argomenti aggiuntivi.Tutti i valori dei parametri forniti verranno convertiti automaticamente in DbParameter.context.Database.SqlQuery&amp;amp;lt;Post&amp;amp;gt;("SELECT * FROM dbo.Posts WHERE Author = @p0", userSuppliedAuthor); in alternativa, è anche possibile costruire un oggetto DbParameter e fornirlo a SqlQuery.In questo modo è possibile usare i parametri denominati nella stringa di query SQL.context.Database.SqlQuery&amp;amp;lt;Post&amp;amp;gt;("SELECT * FROM dbo.Posts WHERE Author = @author", new SqlParameter("@author", userSuppliedAuthor));</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Infrastructure.DbRawSqlQuery`1" /> che eseguirà la query quando viene enumerato.</returns>
      <param name="sql">Stringa di query SQL.</param>
      <param name="parameters">Parametri da applicare alla stringa di query SQL.Se si usano parametri di output, i relativi valori non saranno disponibili fino alla lettura completa dei risultati.Questo è dovuto al comportamento sottostante di DbDataReader. Per altre informazioni, vedi http://go.microsoft.com/fwlink/?LinkID=398589.</param>
      <typeparam name="TElement">Tipo di oggetto restituito dalla query.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Database.SqlQuery(System.Type,System.String,System.Object[])">
      <summary>Crea una query SQL non elaborata che restituirà gli elementi del tipo specificato.Il tipo può essere un qualsiasi tipo che dispone di proprietà che corrispondono ai nomi delle colonne restituite dalla query o può essere un semplice tipo primitivo.Non è necessario che il tipo sia un tipo di entità.I risultati di questa query non verranno mai rilevati dal contesto anche se il tipo di oggetto restituito è un tipo di entità.Usare il metodo <see cref="M:System.Data.Entity.DbSet.SqlQuery(System.String,System.Object[])" /> per restituire le entità rilevate dal contesto.Come con qualsiasi API che accetta SQL, è importante parametrizzare un input utente in modo da fornire protezione da un attacco SQL injection.È possibile includere i segnaposto dei parametri nella stringa di query SQL e quindi fornire i valori dei parametri come argomenti aggiuntivi.Tutti i valori dei parametri forniti verranno convertiti automaticamente in DbParameter.context.Database.SqlQuery(typeof(Post), "SELECT * FROM dbo.Posts WHERE Author = @p0", userSuppliedAuthor); in alternativa, è inoltre possibile costruire un oggetto DbParameter e fornirlo a SqlQuery.In questo modo è possibile usare i parametri denominati nella stringa di query SQL.context.Database.SqlQuery(typeof(Post), "SELECT * FROM dbo.Posts WHERE Author = @author", new SqlParameter("@author", userSuppliedAuthor));</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Infrastructure.DbRawSqlQuery" /> che eseguirà la query quando viene enumerato.</returns>
      <param name="elementType">Tipo di oggetto restituito dalla query.</param>
      <param name="sql">Stringa di query SQL.</param>
      <param name="parameters">Parametri da applicare alla stringa di query SQL.Se si usano parametri di output, i relativi valori non saranno disponibili fino alla lettura completa dei risultati.Questo è dovuto al comportamento sottostante di DbDataReader. Per altre informazioni, vedi http://go.microsoft.com/fwlink/?LinkID=398589.</param>
    </member>
    <member name="M:System.Data.Entity.Database.ToString">
      <summary>Restituisce una rappresentazione di stringa del database.</summary>
      <returns>Rappresentazione di stringa del database.</returns>
    </member>
    <member name="M:System.Data.Entity.Database.UseTransaction(System.Data.Common.DbTransaction)">
      <summary>Consente all'utente di passare una transazione di database creata al di fuori dell'oggetto <see cref="T:System.Data.Entity.Database" /> se si desidera che Entity Framework esegua comandi in quella transazione esterna.In alternativa, passare Null per cancellare la consapevolezza del framework di tale transazione.</summary>
      <param name="transaction">transazione esterna</param>
      <exception cref="T:System.InvalidOperationException">Generata se la transazione è già completata</exception>
      <exception cref="T:System.InvalidOperationException">Generata se la connessione associata all'oggetto <see cref="T:System.Data.Entity.Database" /> è già inserita in una transazione <see cref="T:System.Transactions.TransactionScope" />.</exception>
      <exception cref="T:System.InvalidOperationException">Generata se la connessione associata all'oggetto <see cref="T:System.Data.Entity.Database" /> partecipa già a una transazione.</exception>
      <exception cref="T:System.InvalidOperationException">Generata se la connessione associata alla transazione non corrisponde alla connessione di Entity Framework</exception>
    </member>
    <member name="T:System.Data.Entity.DbConfiguration">
      <summary>Una classe derivata da questa classe può essere inserita nello stesso assembly di una classe derivata da <see cref="T:System.Data.Entity.DbContext" /> per definire la configurazione di Entity Framework per un'applicazione.La configurazione viene impostata chiamando metodi protetti e impostando proprietà protette di questa classe nel costruttore del tipo derivato.Il tipo da usare può anche essere registrato nel file di configurazione dell'applicazione.Per altre informazioni sulla configurazione di Entity Framework, vedere http://go.microsoft.com/fwlink/?LinkId=260883.</summary>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.DbConfiguration" />.</summary>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.AddDefaultResolver(System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver)">
      <summary>Aggiunge un'istanza di <see cref="T:System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver" /> alla catena di responsabilità dei sistemi di risoluzione usati per risolvere le dipendenze necessarie a Entity Framework.</summary>
      <param name="resolver">Sistema di risoluzione da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.AddDependencyResolver(System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver)">
      <summary>Aggiunge un'istanza di <see cref="T:System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver" /> alla catena di responsabilità dei sistemi di risoluzione usati per risolvere le dipendenze necessarie a Entity Framework.</summary>
      <param name="resolver">Sistema di risoluzione da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.AddInterceptor(System.Data.Entity.Infrastructure.Interception.IDbInterceptor)">
      <summary>Registra un <see cref="T:System.Data.Entity.Infrastructure.Interception.IDbInterceptor" /> all'avvio dell'applicazione.Si noti che gli intercettori possono essere aggiunti e rimossi in qualsiasi momento usando <see cref="T:System.Data.Entity.Infrastructure.Interception.DbInterception" />.</summary>
      <param name="interceptor">Intercettore da registrare.</param>
    </member>
    <member name="P:System.Data.Entity.DbConfiguration.DependencyResolver">
      <summary>Ottiene l'oggetto <see cref="T:System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver" /> usato per risolvere le dipendenze del servizio in Entity Framework.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver" /> usato per risolvere le dipendenze del servizio in Entity Framework.</returns>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.Equals(System.Object)">
      <summary>Specifica se questa istanza è uguale a un oggetto specifico.</summary>
      <returns>true se questa istanza è uguale a un oggetto specifico; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare.</param>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.GetHashCode">
      <summary>Ottiene il codice hash associato a questa istanza.</summary>
      <returns>Codice hash associato a questa istanza.</returns>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.LoadConfiguration(System.Reflection.Assembly)">
      <summary>Tenta di individuare e caricare <see cref="T:System.Data.Entity.DbConfiguration" /> dall'assembly specificato.Questo metodo è progettato per essere usato dagli strumenti al fine di garantire che la corretta configurazione venga caricata nel dominio dell'applicazione.Gli strumenti devono usare questo metodo prima di accedere alla proprietà <see cref="P:System.Data.Entity.DbConfiguration.DependencyResolver" />.Gli strumenti riconoscono il tipo di <see cref="T:System.Data.Entity.DbContext" /> usato, quindi è necessario usare il metodo <see cref="M:System.Data.Entity.DbConfiguration.LoadConfiguration(System.Type)" /> perché consente di trovare con maggiore probabilità la configurazione corretta.</summary>
      <param name="assemblyHint">Oggetto <see cref="T:System.Reflection.Assembly" /> da usare per l'individuazione della configurazione.</param>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.LoadConfiguration(System.Type)">
      <summary>Tenta di individuare e caricare l'oggetto <see cref="T:System.Data.Entity.DbConfiguration" /> associato al tipo di <see cref="T:System.Data.Entity.DbContext" /> specificato.Questo metodo è progettato per essere usato dagli strumenti al fine di garantire che la corretta configurazione venga caricata nel dominio dell'applicazione.Gli strumenti devono usare questo metodo prima di accedere alla proprietà <see cref="P:System.Data.Entity.DbConfiguration.DependencyResolver" />.</summary>
      <param name="contextType">Tipo di <see cref="T:System.Data.Entity.DbContext" /> da usare per l'individuazione della configurazione.</param>
    </member>
    <member name="E:System.Data.Entity.DbConfiguration.Loaded">
      <summary>Si verifica durante l'inizializzazione di EF dopo la costruzione di DbConfiguration ma appena prima che la configurazione venga bloccata per l'utilizzo. </summary>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.MemberwiseClone">
      <summary>Crea una copia superficiale dell'oggetto <see cref="T:System.Object" /> corrente.</summary>
      <returns>Copia superficiale dell'oggetto <see cref="T:System.Object" /> corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.SetConfiguration(System.Data.Entity.DbConfiguration)">
      <summary>Istanza Singleton di <see cref="T:System.Data.Entity.DbConfiguration" /> per il dominio dell'applicazione.Può essere impostata all'avvio dell'applicazione prima che vengano usate le funzionalità di Entity Framework e in seguito deve essere considerata di sola lettura.</summary>
      <param name="configuration">Istanza di <see cref="T:System.Data.Entity.DbConfiguration" />.</param>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.SetContextFactory``1(System.Func{``0})">
      <summary>Chiamare il metodo dal costruttore di una classe derivata da <see cref="T:System.Data.Entity.DbConfiguration" /> per impostare una factory per consentire a <see cref="T:System.Data.Entity.Infrastructure.DbContextInfo" /> di creare istanze di un contesto che non dispone di un costruttore pubblico e senza parametri.</summary>
      <param name="factory">Delegato da usare per creare istanze del contesto.</param>
      <typeparam name="TContext">Tipo di contesto per cui la factory deve essere usata.</typeparam>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.SetContextFactory(System.Type,System.Func{System.Data.Entity.DbContext})">
      <summary>Chiamare il metodo dal costruttore di una classe derivata da <see cref="T:System.Data.Entity.DbConfiguration" /> per impostare una factory per consentire a <see cref="T:System.Data.Entity.Infrastructure.DbContextInfo" /> di creare istanze di un contesto che non dispone di un costruttore pubblico e senza parametri.</summary>
      <param name="contextType">Tipo di contesto per cui la factory deve essere usata.</param>
      <param name="factory">Delegato da usare per creare istanze del contesto.</param>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.SetDatabaseInitializer``1(System.Data.Entity.IDatabaseInitializer{``0})">
      <summary>Chiamare questo metodo dal costruttore di una classe derivata da <see cref="T:System.Data.Entity.DbConfiguration" /> per impostare l'inizializzatore del database da usare per il tipo di contesto specificato.L'inizializzatore del database viene chiamato quando il tipo <see cref="T:System.Data.Entity.DbContext" /> specificato viene usato per accedere a un database per la prima volta.La strategia predefinita per i contesti Code First è un'istanza di <see cref="T:System.Data.Entity.CreateDatabaseIfNotExists`1" />.</summary>
      <param name="initializer">Inizializzatore da usare o Null per disabilitare l'inizializzazione per il tipo di contesto specificato.</param>
      <typeparam name="TContext">Tipo di contesto.</typeparam>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.SetDatabaseLogFormatter(System.Func{System.Data.Entity.DbContext,System.Action{System.String},System.Data.Entity.Infrastructure.Interception.DatabaseLogFormatter})">
      <summary>Chiamare il metodo dal costruttore di una classe derivata da <see cref="T:System.Data.Entity.DbConfiguration" /> per impostare una factory per il tipo di <see cref="T:System.Data.Entity.Infrastructure.Interception.DatabaseLogFormatter" /> da usare con <see cref="P:System.Data.Entity.Database.Log" />.</summary>
      <param name="logFormatterFactory">Delegato che crea le istanze del formattatore.</param>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.SetDefaultConnectionFactory(System.Data.Entity.Infrastructure.IDbConnectionFactory)">
      <summary>Imposta l'oggetto <see cref="T:System.Data.Entity.Infrastructure.IDbConnectionFactory" /> che viene usato per creare connessioni per convenzione se nessun'altra stringa di connessione o connessione viene assegnata a o può essere individuata da <see cref="T:System.Data.Entity.DbContext" />.Si noti che viene impostata una factory di connessione predefinita nel file app.config o web.config ogni volta che viene installato il pacchetto NuGet di Entity Framework.Come per tutte le impostazioni del file di configurazione, la factory di connessione predefinita impostata nel file di configurazione avrà la precedenza sulle impostazioni definite con questo metodo.Pertanto, l'impostazione dovrà essere rimossa dal file di configurazione prima che la chiamata a questo metodo diventi effettiva.Chiamare questo metodo dal costruttore di una classe derivata da <see cref="T:System.Data.Entity.DbConfiguration" /> per modificare la factory di connessione predefinita usata.</summary>
      <param name="connectionFactory">Factory di connessione.</param>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.SetDefaultHistoryContext(System.Func{System.Data.Common.DbConnection,System.String,System.Data.Entity.Migrations.History.HistoryContext})">
      <summary>Chiamare il metodo dal costruttore di una classe derivata da <see cref="T:System.Data.Entity.DbConfiguration" /> per impostare un delegato <see cref="T:System.Func`3" /> che può essere usato per la creazione dell'oggetto <see cref="T:System.Data.Entity.Migrations.History.HistoryContext" /> predefinito per un oggetto <see cref="T:System.Data.Entity.Migrations.DbMigrationsConfiguration" />.La factory predefinita verrà usata solo se la factory è impostata in modo esplicito in <see cref="T:System.Data.Entity.Migrations.DbMigrationsConfiguration" /> e se nessuna factory è stata registrata per il provider in uso usando il metodo <see cref="M:System.Data.Entity.DbConfiguration.SetHistoryContext(System.String,System.Func{System.Data.Common.DbConnection,System.String,System.Data.Entity.Migrations.History.HistoryContext})" />.</summary>
      <param name="factory">Factory per la creazione di istanze dell'oggetto <see cref="T:System.Data.Entity.Migrations.History.HistoryContext" /> per gli <see cref="T:System.Data.Common.DbConnection" /> e <see cref="T:System.String" /> specificati che rappresentano lo schema predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.SetDefaultSpatialServices(System.Data.Entity.Spatial.DbSpatialServices)">
      <summary>Chiamare il metodo dal costruttore di una classe derivata da <see cref="T:System.Data.Entity.DbConfiguration" /> per impostare l'istanza globale di <see cref="T:System.Data.Entity.Spatial.DbSpatialServices" /> che verrà usata ogni volta che è richiesto un provider spaziale e non viene trovato un provider spaziale specifico.In genere, un provider spaziale specifico viene ottenuto dall'implementazione di un oggetto <see cref="T:System.Data.Entity.Core.Common.DbProviderServices" /> che a sua volta viene restituito risolvendo un servizio di <see cref="T:System.Data.Entity.Spatial.DbSpatialServices" /> passando il nome invariante del provider come chiave.Tuttavia, ciò non vale per le istanze autonome di <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> e <see cref="T:System.Data.Entity.Spatial.DbGeography" /> poiché è impossibile ottenere il provider spaziale da usare.Pertanto quando si creano le istanze autonome di <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> e <see cref="T:System.Data.Entity.Spatial.DbGeography" /> sarà sempre usato il provider spaziale globale.</summary>
      <param name="spatialProvider">Provider spaziale.</param>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.SetDefaultTransactionHandler(System.Func{System.Data.Entity.Infrastructure.TransactionHandler})">
      <summary>Chiamare il metodo dal costruttore di una classe derivata da <see cref="T:System.Data.Entity.DbConfiguration" /> per registrare un oggetto <see cref="T:System.Data.Entity.Infrastructure.TransactionHandler" />.</summary>
      <param name="transactionHandlerFactory">Funzione che restituisce una nuova istanza di un gestore delle transazioni.</param>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.SetExecutionStrategy(System.String,System.Func{System.Data.Entity.Infrastructure.IDbExecutionStrategy})">
      <summary>Chiamare il metodo dal costruttore di una classe derivata da <see cref="T:System.Data.Entity.DbConfiguration" /> per registrare un oggetto <see cref="T:System.Data.Entity.Infrastructure.IDbExecutionStrategy" /> da usare con il provider rappresentato dal nome invariante specificato.</summary>
      <param name="providerInvariantName">Nome invariante del provider ADO.NET che indica il tipo di connessione ADO.NET per cui verrà usata questa strategia di esecuzione.</param>
      <param name="getExecutionStrategy">Funzione che restituisce una nuova istanza di una strategia di esecuzione.</param>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.SetExecutionStrategy(System.String,System.Func{System.Data.Entity.Infrastructure.IDbExecutionStrategy},System.String)">
      <summary>Chiamare il metodo dal costruttore di una classe derivata da <see cref="T:System.Data.Entity.DbConfiguration" /> per registrare un oggetto <see cref="T:System.Data.Entity.Infrastructure.IDbExecutionStrategy" /> da usare con il provider rappresentato dal nome invariante specificato e per un nome server specificato.</summary>
      <param name="providerInvariantName">Nome invariante del provider ADO.NET che indica il tipo di connessione ADO.NET per cui verrà usata questa strategia di esecuzione.</param>
      <param name="getExecutionStrategy">Funzione che restituisce una nuova istanza di una strategia di esecuzione.</param>
      <param name="serverName">Stringa che sarà confrontata al nome del server nella stringa di connessione.</param>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.SetHistoryContext(System.String,System.Func{System.Data.Common.DbConnection,System.String,System.Data.Entity.Migrations.History.HistoryContext})">
      <summary>Chiamare il metodo dal costruttore di una classe derivata da <see cref="T:System.Data.Entity.DbConfiguration" /> per impostare un delegato <see cref="T:System.Func`3" /> che consente la creazione di un oggetto <see cref="T:System.Data.Entity.Migrations.History.HistoryContext" /> personalizzato per il provider specificato per un oggetto <see cref="T:System.Data.Entity.Migrations.DbMigrationsConfiguration" /> che non dispone di una factory esplicita impostata.</summary>
      <param name="providerInvariantName">Nome invariante del provider ADO.NET per il quale usare questo generatore.</param>
      <param name="factory">Factory per la creazione di istanze dell'oggetto <see cref="T:System.Data.Entity.Migrations.History.HistoryContext" /> per gli <see cref="T:System.Data.Common.DbConnection" /> e <see cref="T:System.String" /> specificati che rappresentano lo schema predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.SetManifestTokenResolver(System.Data.Entity.Infrastructure.IManifestTokenResolver)">
      <summary>Chiamare il metodo dal costruttore di una classe derivata da <see cref="T:System.Data.Entity.DbConfiguration" /> per impostare un'implementazione dell'oggetto <see cref="T:System.Data.Entity.Infrastructure.IManifestTokenResolver" /> che consenta di ottenere i token del manifesto del provider dalle connessioni senza necessariamente aprire la connessione.</summary>
      <param name="resolver">Sistema di risoluzione token del manifesto.</param>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.SetMetadataAnnotationSerializer(System.String,System.Func{System.Data.Entity.Infrastructure.IMetadataAnnotationSerializer})">
      <summary>Chiamare il metodo dal costruttore di una classe derivata da <see cref="T:System.Data.Entity.DbConfiguration" /> per impostare una factory per le implementazioni di <see cref="T:System.Data.Entity.Infrastructure.IMetadataAnnotationSerializer" /> che consente alle annotazioni personalizzate di essere rappresentate dalle istanze di <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataProperty" /> da serializzare da e verso EDMX XML.</summary>
      <param name="annotationName">Nome dell'annotazione personalizzata che verrà gestita dal serializzatore.</param>
      <param name="serializerFactory">Delegato che verrà usato per creare le istanze del serializzatore.</param>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.SetMigrationSqlGenerator(System.String,System.Func{System.Data.Entity.Migrations.Sql.MigrationSqlGenerator})">
      <summary>Chiamare il metodo dal costruttore di una classe derivata da <see cref="T:System.Data.Entity.DbConfiguration" /> per registrare un oggetto <see cref="T:System.Data.Entity.Migrations.Sql.MigrationSqlGenerator" /> da usare con il provider rappresentato dal nome invariante specificato.</summary>
      <param name="providerInvariantName">Nome invariante del provider ADO.NET per il quale usare questo generatore.</param>
      <param name="sqlGenerator">Delegato che restituisce una nuova istanza del generatore SQL ogni volta che viene chiamato.</param>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.SetModelCacheKey(System.Func{System.Data.Entity.DbContext,System.Data.Entity.Infrastructure.IDbModelCacheKey})">
      <summary>Chiamare il metodo dal costruttore di una classe derivata da <see cref="T:System.Data.Entity.DbConfiguration" /> per impostare un oggetto <see cref="T:System.Func`2" /> come factory chiave della cache del modello che consente la modifica della chiave usata per memorizzare nella cache il modello dietro <see cref="T:System.Data.Entity.DbContext" />.</summary>
      <param name="keyFactory">Factory chiave.</param>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.SetPluralizationService(System.Data.Entity.Infrastructure.Pluralization.IPluralizationService)">
      <summary>Chiamare il metodo dal costruttore di una classe derivata da <see cref="T:System.Data.Entity.DbConfiguration" /> per impostare il servizio di pluralizzazione.</summary>
      <param name="pluralizationService">Servizio di pluralizzazione da usare.</param>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.SetProviderFactory(System.String,System.Data.Common.DbProviderFactory)">
      <summary>Chiamare il metodo dal costruttore di una classe derivata da <see cref="T:System.Data.Entity.DbConfiguration" /> per registrare un provider ADO.NET.</summary>
      <param name="providerInvariantName">Nome invariante del provider ADO.NET che indica il tipo di connessione ADO.NET per cui verrà usato questo provider.</param>
      <param name="providerFactory">Istanza del provider.</param>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.SetProviderFactoryResolver(System.Data.Entity.Infrastructure.IDbProviderFactoryResolver)">
      <summary>Chiamare il metodo dal costruttore di una classe derivata da <see cref="T:System.Data.Entity.DbConfiguration" /> per impostare un'implementazione dell'oggetto <see cref="T:System.Data.Entity.Infrastructure.IDbProviderFactoryResolver" /> che consenta di ottenere un oggetto <see cref="T:System.Data.Common.DbProviderFactory" /> da <see cref="T:System.Data.Common.DbConnection" /> nei casi in cui l'implementazione predefinita non sia sufficiente.</summary>
      <param name="providerFactoryResolver">Servizio factory del provider.</param>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.SetProviderServices(System.String,System.Data.Entity.Core.Common.DbProviderServices)">
      <summary>Chiamare il metodo dal costruttore di una classe derivata da <see cref="T:System.Data.Entity.DbConfiguration" /> per registrare un provider di Entity Framework.</summary>
      <param name="providerInvariantName">Nome invariante del provider ADO.NET che indica il tipo di connessione ADO.NET per cui verrà usato questo provider.</param>
      <param name="provider">Istanza del provider.</param>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.SetSpatialServices(System.Data.Entity.Infrastructure.DbProviderInfo,System.Data.Entity.Spatial.DbSpatialServices)">
      <summary>Chiamare il metodo dal costruttore di una classe derivata da <see cref="T:System.Data.Entity.DbConfiguration" /> per impostare un'implementazione di <see cref="T:System.Data.Entity.Spatial.DbSpatialServices" /> da usare per un provider specifico e un token del manifesto del provider.</summary>
      <param name="key">Oggetto <see cref="T:System.Data.Entity.Infrastructure.DbProviderInfo" /> che indica il tipo di connessione ADO.NET per cui verrà usato questo provider spaziale.</param>
      <param name="spatialProvider">Provider spaziale.</param>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.SetSpatialServices(System.String,System.Data.Entity.Spatial.DbSpatialServices)">
      <summary>Chiamare il metodo dal costruttore di una classe derivata da <see cref="T:System.Data.Entity.DbConfiguration" /> per impostare un'implementazione di <see cref="T:System.Data.Entity.Spatial.DbSpatialServices" /> da usare per un provider specifico con un token del manifesto.</summary>
      <param name="providerInvariantName">Nome invariante del provider ADO.NET che indica il tipo di connessione ADO.NET per cui verrà usato questo provider spaziale.</param>
      <param name="spatialProvider">Provider spaziale.</param>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.SetTableExistenceChecker(System.String,System.Data.Entity.Infrastructure.TableExistenceChecker)">
      <summary>Chiamare questo metodo dal costruttore di una classe derivata da <see cref="T:System.Data.Entity.DbConfiguration" /> per registrare un'utilità di verifica esistenza tabelle di database per un provider specificato.</summary>
      <param name="providerInvariantName">Nome invariante del provider ADO.NET che indica il tipo di connessione ADO.NET per cui verrà usato questo provider.</param>
      <param name="tableExistenceChecker">Utilità di verifica esistenza tabelle da usare.</param>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.SetTransactionHandler(System.String,System.Func{System.Data.Entity.Infrastructure.TransactionHandler})">
      <summary>Chiamare il metodo dal costruttore di una classe derivata da <see cref="T:System.Data.Entity.DbConfiguration" /> per registrare un oggetto <see cref="T:System.Data.Entity.Infrastructure.TransactionHandler" /> da usare con il provider rappresentato dal nome invariante specificato.</summary>
      <param name="providerInvariantName">Nome invariante del provider ADO.NET che indica il tipo di connessione ADO.NET per cui verrà usato questo gestore delle transazioni.</param>
      <param name="transactionHandlerFactory">Funzione che restituisce una nuova istanza di un gestore delle transazioni.</param>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.SetTransactionHandler(System.String,System.Func{System.Data.Entity.Infrastructure.TransactionHandler},System.String)">
      <summary>Chiamare il metodo dal costruttore di una classe derivata da <see cref="T:System.Data.Entity.DbConfiguration" /> per registrare un oggetto <see cref="T:System.Data.Entity.Infrastructure.TransactionHandler" /> da usare con il provider rappresentato dal nome invariante specificato e per un nome server specificato.</summary>
      <param name="providerInvariantName">Nome invariante del provider ADO.NET che indica il tipo di connessione ADO.NET per cui verrà usato questo gestore delle transazioni.</param>
      <param name="transactionHandlerFactory">Funzione che restituisce una nuova istanza di un gestore delle transazioni.</param>
      <param name="serverName">Stringa che sarà confrontata al nome del server nella stringa di connessione.</param>
    </member>
    <member name="M:System.Data.Entity.DbConfiguration.ToString">
      <summary>Restituisce una rappresentazione di stringa di questa istanza.</summary>
      <returns>Rappresentazione di stringa di questa istanza.</returns>
    </member>
    <member name="T:System.Data.Entity.DbConfigurationTypeAttribute">
      <summary>Questo attributo può essere inserito in una sottoclasse di <see cref="T:System.Data.Entity.DbContext" /> per indicare che la sottoclasse di <see cref="T:System.Data.Entity.DbConfiguration" /> che rappresenta la configurazione basata su codice per l'applicazione si trova in un assembly diverso rispetto al tipo di contesto.</summary>
    </member>
    <member name="M:System.Data.Entity.DbConfigurationTypeAttribute.#ctor(System.String)">
      <summary>Indica che la sottoclasse di <see cref="T:System.Data.Entity.DbConfiguration" /> rappresentata dal nome completo dell'assembly specificato deve essere utilizzata per la configurazione basata su codice per questa applicazione.</summary>
      <param name="configurationTypeName">Tipo <see cref="T:System.Data.Entity.DbConfiguration" /> da utilizzare.</param>
    </member>
    <member name="M:System.Data.Entity.DbConfigurationTypeAttribute.#ctor(System.Type)">
      <summary>Indica che la sottoclasse di <see cref="T:System.Data.Entity.DbConfiguration" /> specificata deve essere utilizzata per la configurazione basata su codice per questa applicazione.</summary>
      <param name="configurationType">Tipo <see cref="T:System.Data.Entity.DbConfiguration" /> da utilizzare.</param>
    </member>
    <member name="P:System.Data.Entity.DbConfigurationTypeAttribute.ConfigurationType">
      <summary>Ottiene la sottoclasse di <see cref="T:System.Data.Entity.DbConfiguration" /> che deve essere utilizzata per la configurazione basata su codice per questa applicazione.</summary>
      <returns>Sottoclasse di <see cref="T:System.Data.Entity.DbConfiguration" /> che deve essere usata per la configurazione basata su codice per questa applicazione.</returns>
    </member>
    <member name="T:System.Data.Entity.DbContext">
      <summary>Un'istanza di DbContext rappresenta una combinazione dei pattern Unità di lavoro e Repository in modo che possa essere utilizzata per eseguire query da un database e raggruppare le modifiche che verranno scritte nell'archivio come unità.DbContext è concettualmente simile a ObjectContext.</summary>
    </member>
    <member name="M:System.Data.Entity.DbContext.#ctor">
      <summary>Costruisce una nuova istanza del contesto utilizzando le convenzioni per creare il nome del database al quale verrà effettuata una connessione.Per convenzione, il nome è costituito dal nome completo (spazio dei nomi + nome della classe) della classe del contesto derivato.Vedere la sezione osservazioni sulle classi per informazioni su come utilizzarle per creare una connessione.</summary>
    </member>
    <member name="M:System.Data.Entity.DbContext.#ctor(System.Data.Common.DbConnection,System.Boolean)">
      <summary>Costruisce una nuova istanza del contesto utilizzando la connessione esistente per connettersi a un database.La connessione non verrà eliminata con l'eliminazione del contesto se <paramref name="contextOwnsConnection" /> è false.</summary>
      <param name="existingConnection">Connessione esistente da utilizzare per il nuovo contesto.</param>
      <param name="contextOwnsConnection">Se impostato su true, la connessione verrà eliminata con l'eliminazione del contesto; in caso contrario, il chiamante deve eliminare la connessione.</param>
    </member>
    <member name="M:System.Data.Entity.DbContext.#ctor(System.Data.Common.DbConnection,System.Data.Entity.Infrastructure.DbCompiledModel,System.Boolean)">
      <summary>Costruisce una nuova istanza del contesto utilizzando la connessione esistente per connettersi a un database e la inizializza dal modello specificato.La connessione non verrà eliminata con l'eliminazione del contesto se <paramref name="contextOwnsConnection" /> è false.</summary>
      <param name="existingConnection">Connessione esistente da utilizzare per il nuovo contesto.</param>
      <param name="model">Modello che supporta questo contesto.</param>
      <param name="contextOwnsConnection">Se impostato su true, la connessione verrà eliminata con l'eliminazione del contesto; in caso contrario, il chiamante deve eliminare la connessione.</param>
    </member>
    <member name="M:System.Data.Entity.DbContext.#ctor(System.Data.Entity.Core.Objects.ObjectContext,System.Boolean)">
      <summary>Costruisce una nuova istanza del contesto intorno a un oggetto ObjectContext esistente.</summary>
      <param name="objectContext">Oggetto ObjectContext esistente di cui eseguire il wrapping con il nuovo contesto.</param>
      <param name="dbContextOwnsObjectContext">Se impostato su true, ObjectContext viene eliminato con l'eliminazione di DbContext; in caso contrario il chiamante deve eliminare la connessione.</param>
    </member>
    <member name="M:System.Data.Entity.DbContext.#ctor(System.Data.Entity.Infrastructure.DbCompiledModel)">
      <summary>Costruisce una nuova istanza del contesto utilizzando le convenzioni per creare il nome del database al quale verrà effettuata una connessione e la inizializza dal modello specificato.Per convenzione, il nome è costituito dal nome completo (spazio dei nomi + nome della classe) della classe del contesto derivato.Vedere la sezione osservazioni sulle classi per informazioni su come utilizzarle per creare una connessione.</summary>
      <param name="model">Modello che supporta questo contesto.</param>
    </member>
    <member name="M:System.Data.Entity.DbContext.#ctor(System.String)">
      <summary>Costruisce una nuova istanza del contesto utilizzando la stringa specificata come nome o stringa di connessione per il database al quale verrà effettuata una connessione.Vedere la sezione osservazioni sulle classi per informazioni su come utilizzarle per creare una connessione.</summary>
      <param name="nameOrConnectionString">Nome del database o stringa di connessione.</param>
    </member>
    <member name="M:System.Data.Entity.DbContext.#ctor(System.String,System.Data.Entity.Infrastructure.DbCompiledModel)">
      <summary>Costruisce una nuova istanza del contesto utilizzando la stringa specificata come nome o stringa di connessione per il database al quale verrà effettuata una connessione e la inizializza dal modello specificato.Vedere la sezione osservazioni sulle classi per informazioni su come utilizzarle per creare una connessione.</summary>
      <param name="nameOrConnectionString">Nome del database o stringa di connessione.</param>
      <param name="model">Modello che supporta questo contesto.</param>
    </member>
    <member name="P:System.Data.Entity.DbContext.ChangeTracker">
      <summary>Fornisce l'accesso alle funzionalità del contesto che gestiscono il rilevamento delle modifiche delle entità.</summary>
      <returns>Oggetto utilizzato per accedere alle funzionalità che gestiscono il rilevamento delle modifiche.</returns>
    </member>
    <member name="P:System.Data.Entity.DbContext.Configuration">
      <summary>Fornisce l'accesso alle opzioni di configurazione del contesto.</summary>
      <returns>Oggetto utilizzato per accedere alle opzioni di configurazione.</returns>
    </member>
    <member name="P:System.Data.Entity.DbContext.Database">
      <summary>Crea un'istanza del database per questo contesto che consente i controlli di creazione, eliminazione e presenza per il database sottostante.</summary>
    </member>
    <member name="M:System.Data.Entity.DbContext.Dispose">
      <summary>Chiama il metodo Dispose protetto.</summary>
    </member>
    <member name="M:System.Data.Entity.DbContext.Dispose(System.Boolean)">
      <summary>Elimina il contesto.Viene eliminato anche l'oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" /> sottostante se è stato creato da questo contesto o se la proprietà è stata passata a questo contesto alla creazione del contesto.La connessione al database (oggetto <see cref="T:System.Data.Common.DbConnection" />) viene eliminata anche se è stata creata da tale contesto o se la proprietà è stata passata a questo contesto durante la creazione dello stesso.</summary>
      <param name="disposing">true per rilasciare le risorse gestite e non gestite; false per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.Data.Entity.DbContext.Entry(System.Object)">
      <summary>Ottiene un oggetto <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> per l'entità specificata che fornisce l'accesso alle informazioni sull'entità e la possibilità di eseguire azioni sull'entità.</summary>
      <returns>Voce per l'entità.</returns>
      <param name="entity">Entità.</param>
    </member>
    <member name="M:System.Data.Entity.DbContext.Entry``1(``0)">
      <summary>Ottiene un oggetto <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> per l'entità specificata che fornisce l'accesso alle informazioni sull'entità e la possibilità di eseguire azioni sull'entità.</summary>
      <returns>Voce per l'entità.</returns>
      <param name="entity">Entità.</param>
      <typeparam name="TEntity">Tipo dell'entità.</typeparam>
    </member>
    <member name="M:System.Data.Entity.DbContext.Equals(System.Object)">
      <summary>Determina se l'oggetto DbContext specificato è uguale all'oggetto DbContext corrente.</summary>
      <returns>true se l'oggetto DbContext specificato è uguale all'oggetto DbContext corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto DbContext da confrontare all'oggetto DbContext corrente.</param>
    </member>
    <member name="M:System.Data.Entity.DbContext.GetHashCode">
      <summary>Restituisce la funzione hash per questo oggetto DBContext.</summary>
      <returns>Funzione hash per questo oggetto DBContext.</returns>
    </member>
    <member name="M:System.Data.Entity.DbContext.GetType">
      <summary>Restituisce il tipo per l'oggetto DbContext corrente.</summary>
      <returns>Tipo per l'oggetto DbContext corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.DbContext.GetValidationErrors">
      <summary>Convalida le entità rilevate e restituisce una raccolta di <see cref="T:System.Data.Entity.Validation.DbEntityValidationResult" /> che contiene i risultati della convalida.</summary>
      <returns>Raccolta dei risultati della convalida per le entità non valide.La raccolta non è mai Null e non deve contenere valori Null o risultati per le entità valide.</returns>
    </member>
    <member name="M:System.Data.Entity.DbContext.OnModelCreating(System.Data.Entity.DbModelBuilder)">
      <summary>Tale metodo viene chiamato dopo l'inizializzazione del modello di un contesto derivato, ma prima che il modello sia stato bloccato e utilizzato per inizializzare il contesto.L'implementazione predefinita di questo metodo non esegue alcuna operazione, ma è possibile eseguirne l'override in una classe derivata in modo da poter configurare ulteriormente il modello prima che venga bloccato.</summary>
      <param name="modelBuilder">Generatore che definisce il modello per il contesto creato.</param>
    </member>
    <member name="M:System.Data.Entity.DbContext.SaveChanges">
      <summary>Salva tutte le modifiche apportate in questo contesto nel database sottostante.</summary>
      <returns>Numero di oggetti scritti nel database sottostante.</returns>
      <exception cref="T:System.Data.Entity.Infrastructure.DbUpdateException">Si è verificato un errore durante l'invio degli aggiornamenti al database.</exception>
      <exception cref="T:System.Data.Entity.Infrastructure.DbUpdateConcurrencyException">Un comando di database non ha influito sul numero previsto di righe.Questo indica in genere una violazione della concorrenza ottimistica, ovvero che una riga è cambiata nel database rispetto a quando è stata eseguita la query.</exception>
      <exception cref="T:System.Data.Entity.Validation.DbEntityValidationException">Il salvataggio è stato annullato perché la convalida dei valori di proprietà delle entità non è riuscita.</exception>
      <exception cref="T:System.NotSupportedException">È stato effettuato un tentativo di usare un comportamento non supportato, ad esempio eseguire simultaneamente più comandi asincroni sulla stessa istanza del contesto.</exception>
      <exception cref="T:System.ObjectDisposedException">Il contesto o la connessione è stata eliminata.</exception>
      <exception cref="T:System.InvalidOperationException">Si sono verificati errori durante il tentativo di elaborare entità nel contesto prima o dopo aver inviato comandi al database.</exception>
    </member>
    <member name="M:System.Data.Entity.DbContext.SaveChangesAsync">
      <summary>Salva in modo asincrono tutte le modifiche apportate in questo contesto nel database sottostante.</summary>
      <returns>Attività che rappresenta l'operazione di salvataggio asincrona.Il risultato dell'attività contiene il numero di oggetti scritti nel database sottostante.</returns>
      <exception cref="T:System.Data.Entity.Infrastructure.DbUpdateException">Si è verificato un errore durante l'invio degli aggiornamenti al database.</exception>
      <exception cref="T:System.Data.Entity.Infrastructure.DbUpdateConcurrencyException">Un comando di database non ha influito sul numero previsto di righe.Questo indica in genere una violazione della concorrenza ottimistica, ovvero che una riga è cambiata nel database rispetto a quando è stata eseguita la query.</exception>
      <exception cref="T:System.Data.Entity.Validation.DbEntityValidationException">Il salvataggio è stato annullato perché la convalida dei valori di proprietà delle entità non è riuscita.</exception>
      <exception cref="T:System.NotSupportedException">È stato effettuato un tentativo di usare un comportamento non supportato, ad esempio eseguire simultaneamente più comandi asincroni sulla stessa istanza del contesto.</exception>
      <exception cref="T:System.ObjectDisposedException">Il contesto o la connessione è stata eliminata.</exception>
      <exception cref="T:System.InvalidOperationException">Si sono verificati errori durante il tentativo di elaborare entità nel contesto prima o dopo aver inviato comandi al database.</exception>
    </member>
    <member name="M:System.Data.Entity.DbContext.SaveChangesAsync(System.Threading.CancellationToken)">
      <summary>Salva in modo asincrono tutte le modifiche apportate in questo contesto nel database sottostante.</summary>
      <returns>Attività che rappresenta l'operazione di salvataggio asincrona.Il risultato dell'attività contiene il numero di oggetti scritti nel database sottostante.</returns>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.InvalidOperationException">Generata se il contesto è stato eliminato.</exception>
    </member>
    <member name="M:System.Data.Entity.DbContext.Set``1">
      <summary>Restituisce un'istanza di <see cref="T:System.Data.Entity.DbSet`1" /> per l'accesso alle entità del tipo specificato nel contesto e all'archivio sottostante.</summary>
      <returns>Set per il tipo di entità specificato.</returns>
      <typeparam name="TEntity">Tipo di entità per cui deve essere restituito un set.</typeparam>
    </member>
    <member name="M:System.Data.Entity.DbContext.Set(System.Type)">
      <summary>Restituisce un'istanza di <see cref="T:System.Data.Entity.DbSet" /> non generica per l'accesso alle entità del tipo specificato nel contesto e all'archivio sottostante.</summary>
      <returns>Set per il tipo di entità specificato.</returns>
      <param name="entityType">Tipo di entità per cui deve essere restituito un set.</param>
    </member>
    <member name="M:System.Data.Entity.DbContext.ShouldValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry)">
      <summary>Punto di estensione che consente all'utente di eseguire l'override del comportamento predefinito della convalida solo delle entità Added e Modified.</summary>
      <returns>true per procedere con la convalida; in caso contrario false.</returns>
      <param name="entityEntry">Istanza di DbEntityEntry da convalidare.</param>
    </member>
    <member name="P:System.Data.Entity.DbContext.System#Data#Entity#Infrastructure#IObjectContextAdapter#ObjectContext">
      <summary>Restituisce l'oggetto ObjectContext di Entity Framework sottostante a questo contesto.</summary>
    </member>
    <member name="M:System.Data.Entity.DbContext.ToString">
      <summary>Restituisce la rappresentazione in forma di stringa dell'oggetto DbContext.</summary>
      <returns>Rappresentazione in forma di stringa dell'oggetto DbContext.</returns>
    </member>
    <member name="M:System.Data.Entity.DbContext.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})">
      <summary>Punto di estensione che consente all'utente di personalizzare la convalida di un'entità o di filtrare i risultati della convalida.Chiamato da <see cref="M:System.Data.Entity.DbContext.GetValidationErrors" />.</summary>
      <returns>Risultato della convalida dell'entità.Può essere null se viene sottoposto a override.</returns>
      <param name="entityEntry">Istanza di DbEntityEntry da convalidare.</param>
      <param name="items">Dizionario definito dall'utente che contiene informazioni aggiuntive per la convalida personalizzata.Verrà passato a <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> e verrà esposto come <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.Items" />.Questo parametro è facoltativo e può essere null.</param>
    </member>
    <member name="T:System.Data.Entity.DbContextTransaction">
      <summary>Esegue il wrapping dell'accesso all'oggetto transazione sulla connessione all'archivio sottostante e garantisce che Entity Framework esegua comandi sul database nel contesto della transazione.Un'istanza di questa classe viene recuperata chiamando BeginTransaction() sull'oggetto <see cref="T:System.Data.Entity.DbContext" /><see cref="T:System.Data.Entity.Database" />.</summary>
    </member>
    <member name="M:System.Data.Entity.DbContextTransaction.Commit">
      <summary>Esegue il commit della transazione all'archivio sottostante.</summary>
    </member>
    <member name="M:System.Data.Entity.DbContextTransaction.Dispose">
      <summary>Elimina l'oggetto transazione e assicura che Entity Framework non utilizzi più la transazione.</summary>
    </member>
    <member name="M:System.Data.Entity.DbContextTransaction.Dispose(System.Boolean)">
      <summary>Rilascia le risorse usate da questo oggetto transazione.</summary>
      <param name="disposing">true per rilasciare sia le risorse gestite sia quelle non gestite; false per rilasciare solo quelle non gestite.</param>
    </member>
    <member name="M:System.Data.Entity.DbContextTransaction.Equals(System.Object)">
      <summary>Determina se questa istanza è uguale all'oggetto specificato.</summary>
      <returns>true se questa istanza è uguale all'oggetto specificato. In caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con questa istanza.</param>
    </member>
    <member name="M:System.Data.Entity.DbContextTransaction.GetHashCode">
      <summary>Restituisce il codice hash dell'istanza corrente.</summary>
      <returns>Codice hash dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.DbContextTransaction.GetType">
      <summary>Ottiene il tipo sottostante associato a questa istanza.</summary>
      <returns>Tipo sottostante associato a questa istanza.</returns>
    </member>
    <member name="M:System.Data.Entity.DbContextTransaction.Rollback">
      <summary>Esegue il rollback della transazione all'archivio sottostante.</summary>
    </member>
    <member name="M:System.Data.Entity.DbContextTransaction.ToString">
      <summary>Restituisce la rappresentazione di stringa di questa istanza.</summary>
      <returns>Rappresentazione di stringa di questa istanza.</returns>
    </member>
    <member name="P:System.Data.Entity.DbContextTransaction.UnderlyingTransaction">
      <summary>Ottiene la transazione di database (archivio) sottostante questa transazione di contesto.</summary>
      <returns>Transazione di database (archivio) sottostante questa transazione di contesto.</returns>
    </member>
    <member name="T:System.Data.Entity.DbFunctionAttribute">
      <summary>Indica che il metodo specificato è un proxy per una funzione EDM.</summary>
    </member>
    <member name="M:System.Data.Entity.DbFunctionAttribute.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.DbFunctionAttribute" />.</summary>
      <param name="namespaceName">Spazio dei nomi della funzione a cui è stato eseguito il mapping.</param>
      <param name="functionName">Nome della funzione a cui è stato eseguito il mapping.</param>
    </member>
    <member name="P:System.Data.Entity.DbFunctionAttribute.FunctionName">
      <summary>Nome della funzione a cui è stato eseguito il mapping.</summary>
      <returns>Nome della funzione a cui è stato eseguito il mapping.</returns>
    </member>
    <member name="P:System.Data.Entity.DbFunctionAttribute.NamespaceName">
      <summary>Spazio dei nomi della funzione a cui è stato eseguito il mapping.</summary>
      <returns>Spazio dei nomi della funzione a cui è stato eseguito il mapping.</returns>
    </member>
    <member name="T:System.Data.Entity.DbFunctions">
      <summary>Fornisce metodi CLR (Common Language Runtime) che espongono funzioni canoniche EDM per l'utilizzo nelle query LINQ to Entities <see cref="T:System.Data.Entity.DbContext" /> o <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.</summary>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.AddDays(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddDays canonica per aggiungere il numero di giorni specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="dateValue">Data/ora di input.</param>
      <param name="addValue">Numero di giorni da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.AddDays(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddDays canonica per aggiungere il numero di giorni specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="dateValue">Data/ora di input.</param>
      <param name="addValue">Numero di giorni da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.AddHours(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddHours canonica per aggiungere il numero di ore specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di ore da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.AddHours(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddHours canonica per aggiungere il numero di ore specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di ore da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.AddHours(System.Nullable{System.TimeSpan},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddHours canonica per aggiungere il numero di ore specificato a un intervallo di tempo.</summary>
      <returns>Intervallo di tempo risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di ore da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.AddMicroseconds(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddMicroseconds canonica per aggiungere il numero di microsecondi specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di microsecondi da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.AddMicroseconds(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddMicroseconds canonica per aggiungere il numero di microsecondi specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di microsecondi da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.AddMicroseconds(System.Nullable{System.TimeSpan},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddMicroseconds canonica per aggiungere il numero di microsecondi specificato a un intervallo di tempo.</summary>
      <returns>Intervallo di tempo risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di microsecondi da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.AddMilliseconds(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddMilliseconds canonica per aggiungere il numero di millisecondi specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di millisecondi da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.AddMilliseconds(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddMilliseconds canonica per aggiungere il numero di millisecondi specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di millisecondi da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.AddMilliseconds(System.Nullable{System.TimeSpan},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddMilliseconds canonica per aggiungere il numero di millisecondi specificato a un intervallo di tempo.</summary>
      <returns>Intervallo di tempo risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di millisecondi da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.AddMinutes(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddMinutes canonica per aggiungere il numero di minuti specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di minuti da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.AddMinutes(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddMinutes canonica per aggiungere il numero di minuti specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di minuti da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.AddMinutes(System.Nullable{System.TimeSpan},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddMinutes canonica per aggiungere il numero di minuti specificato a un intervallo di tempo.</summary>
      <returns>Intervallo di tempo risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di minuti da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.AddMonths(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddMonths canonica per aggiungere il numero di mesi specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="dateValue">Data/ora di input.</param>
      <param name="addValue">Numero di mesi da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.AddMonths(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddMonths canonica per aggiungere il numero di mesi specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="dateValue">Data/ora di input.</param>
      <param name="addValue">Numero di mesi da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.AddNanoseconds(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddNanoseconds canonica per aggiungere il numero di nanosecondi specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di nanosecondi da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.AddNanoseconds(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddNanoseconds canonica per aggiungere il numero di nanosecondi specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di nanosecondi da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.AddNanoseconds(System.Nullable{System.TimeSpan},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddNanoseconds canonica per aggiungere il numero di nanosecondi specificato a un intervallo di tempo.</summary>
      <returns>Intervallo di tempo risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di nanosecondi da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.AddSeconds(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddSeconds canonica per aggiungere il numero di secondi specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di secondi da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.AddSeconds(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddSeconds canonica per aggiungere il numero di secondi specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di secondi da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.AddSeconds(System.Nullable{System.TimeSpan},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddSeconds canonica per aggiungere il numero di secondi specificato a un intervallo di tempo.</summary>
      <returns>Intervallo di tempo risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di secondi da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.AddYears(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddYears canonica per aggiungere il numero di anni specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="dateValue">Data/ora di input.</param>
      <param name="addValue">Numero di anni da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.AddYears(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddYears canonica per aggiungere il numero di anni specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="dateValue">Data/ora di input.</param>
      <param name="addValue">Numero di anni da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.AsNonUnicode(System.String)">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo funge da operatore che fa in modo che l'input venga trattato come una stringa non Unicode.</summary>
      <returns>Stringa di input considerata come stringa non Unicode.</returns>
      <param name="value">Stringa di input.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.AsUnicode(System.String)">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo funge da operatore che fa in modo che l'input venga trattato come una stringa Unicode.</summary>
      <returns>Stringa di input considerata come stringa Unicode.</returns>
      <param name="value">Stringa di input.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.CreateDateTime(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Double})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM CreateDateTime canonica per creare un nuovo oggetto <see cref="T:System.DateTime" />.</summary>
      <returns>Nuova data/ora.</returns>
      <param name="year">Anno.</param>
      <param name="month">Mese (in base 1).</param>
      <param name="day">Giorno (in base 1).</param>
      <param name="hour">Ore.</param>
      <param name="minute">Minuti.</param>
      <param name="second">Secondi, incluse le parti frazionarie dei secondi se lo si desidera.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.CreateDateTimeOffset(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Double},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM CreateDateTimeOffset canonica per creare un nuovo oggetto <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Nuova data/ora.</returns>
      <param name="year">Anno.</param>
      <param name="month">Mese (in base 1).</param>
      <param name="day">Giorno (in base 1).</param>
      <param name="hour">Ore.</param>
      <param name="minute">Minuti.</param>
      <param name="second">Secondi, incluse le parti frazionarie dei secondi se lo si desidera.</param>
      <param name="timeZoneOffset">Parte relativa alla differenza di fuso orario della nuova data.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.CreateTime(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Double})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM CreateTime canonica per creare un nuovo oggetto <see cref="T:System.TimeSpan" />.</summary>
      <returns>Nuovo intervallo di tempo.</returns>
      <param name="hour">Ore.</param>
      <param name="minute">Minuti.</param>
      <param name="second">Secondi, incluse le parti frazionarie dei secondi se lo si desidera.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.DiffDays(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffDays canonica per calcolare il numero di giorni tra due date/ore.</summary>
      <returns>Numero di giorni tra la prima e la seconda data/ora.</returns>
      <param name="dateValue1">Prima data/ora.</param>
      <param name="dateValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.DiffDays(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffDays canonica per calcolare il numero di giorni tra due date/ore.</summary>
      <returns>Numero di giorni tra la prima e la seconda data/ora.</returns>
      <param name="dateValue1">Prima data/ora.</param>
      <param name="dateValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.DiffHours(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffHours canonica per calcolare il numero di ore tra due date/ore.</summary>
      <returns>Numero di ore tra la prima e la seconda data/ora.</returns>
      <param name="timeValue1">Prima data/ora.</param>
      <param name="timeValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.DiffHours(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffHours canonica per calcolare il numero di ore tra due date/ore.</summary>
      <returns>Numero di ore tra la prima e la seconda data/ora.</returns>
      <param name="timeValue1">Prima data/ora.</param>
      <param name="timeValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.DiffHours(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffHours canonica per calcolare il numero di ore tra due intervalli di tempo.</summary>
      <returns>Numero di ore tra il primo e il secondo intervallo di tempo.</returns>
      <param name="timeValue1">Primo intervallo di tempo.</param>
      <param name="timeValue2">Secondo intervallo di tempo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.DiffMicroseconds(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffMicroseconds canonica per calcolare il numero di microsecondi tra due date/ore.</summary>
      <returns>Numero di microsecondi tra la prima e la seconda data/ora.</returns>
      <param name="timeValue1">Prima data/ora.</param>
      <param name="timeValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.DiffMicroseconds(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffMicroseconds canonica per calcolare il numero di microsecondi tra due date/ore.</summary>
      <returns>Numero di microsecondi tra la prima e la seconda data/ora.</returns>
      <param name="timeValue1">Prima data/ora.</param>
      <param name="timeValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.DiffMicroseconds(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffMicroseconds canonica per calcolare il numero di microsecondi tra due intervalli di tempo.</summary>
      <returns>Numero di microsecondi tra il primo e il secondo intervallo di tempo.</returns>
      <param name="timeValue1">Primo intervallo di tempo.</param>
      <param name="timeValue2">Secondo intervallo di tempo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.DiffMilliseconds(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffMilliseconds canonica per calcolare il numero di millisecondi tra due date/ore.</summary>
      <returns>Numero di millisecondi tra la prima e la seconda data/ora.</returns>
      <param name="timeValue1">Prima data/ora.</param>
      <param name="timeValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.DiffMilliseconds(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffMilliseconds canonica per calcolare il numero di millisecondi tra due date/ore.</summary>
      <returns>Numero di millisecondi tra la prima e la seconda data/ora.</returns>
      <param name="timeValue1">Prima data/ora.</param>
      <param name="timeValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.DiffMilliseconds(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffMilliseconds canonica per calcolare il numero di millisecondi tra due intervalli di tempo.</summary>
      <returns>Numero di millisecondi tra il primo e il secondo intervallo di tempo.</returns>
      <param name="timeValue1">Primo intervallo di tempo.</param>
      <param name="timeValue2">Secondo intervallo di tempo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.DiffMinutes(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffMinutes canonica per calcolare il numero di minuti tra due date/ore.</summary>
      <returns>Numero di minuti tra la prima e la seconda data/ora.</returns>
      <param name="timeValue1">Prima data/ora.</param>
      <param name="timeValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.DiffMinutes(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffMinutes canonica per calcolare il numero di minuti tra due date/ore.</summary>
      <returns>Numero di minuti tra la prima e la seconda data/ora.</returns>
      <param name="timeValue1">Prima data/ora.</param>
      <param name="timeValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.DiffMinutes(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffMinutes canonica per calcolare il numero di minuti tra due intervalli di tempo.</summary>
      <returns>Numero di minuti tra il primo e il secondo intervallo di tempo.</returns>
      <param name="timeValue1">Primo intervallo di tempo.</param>
      <param name="timeValue2">Secondo intervallo di tempo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.DiffMonths(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffMonths canonica per calcolare il numero di mesi tra due date/ore.</summary>
      <returns>Numero di mesi tra la prima e la seconda data/ora.</returns>
      <param name="dateValue1">Prima data/ora.</param>
      <param name="dateValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.DiffMonths(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffMonths canonica per calcolare il numero di mesi tra due date/ore.</summary>
      <returns>Numero di mesi tra la prima e la seconda data/ora.</returns>
      <param name="dateValue1">Prima data/ora.</param>
      <param name="dateValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.DiffNanoseconds(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffNanoseconds canonica per calcolare il numero di nanosecondi tra due date/ore.</summary>
      <returns>Numero di nanosecondi tra la prima e la seconda data/ora.</returns>
      <param name="timeValue1">Prima data/ora.</param>
      <param name="timeValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.DiffNanoseconds(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffNanoseconds canonica per calcolare il numero di nanosecondi tra due date/ore.</summary>
      <returns>Numero di nanosecondi tra la prima e la seconda data/ora.</returns>
      <param name="timeValue1">Prima data/ora.</param>
      <param name="timeValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.DiffNanoseconds(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffNanoseconds canonica per calcolare il numero di nanosecondi tra due intervalli di tempo.</summary>
      <returns>Numero di nanosecondi tra il primo e il secondo intervallo di tempo.</returns>
      <param name="timeValue1">Primo intervallo di tempo.</param>
      <param name="timeValue2">Secondo intervallo di tempo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.DiffSeconds(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffSeconds canonica per calcolare il numero di secondi tra due date/ore.</summary>
      <returns>Numero di secondi tra la prima e la seconda data/ora.</returns>
      <param name="timeValue1">Prima data/ora.</param>
      <param name="timeValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.DiffSeconds(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffSeconds canonica per calcolare il numero di secondi tra due date/ore.</summary>
      <returns>Numero di secondi tra la prima e la seconda data/ora.</returns>
      <param name="timeValue1">Prima data/ora.</param>
      <param name="timeValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.DiffSeconds(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffSeconds canonica per calcolare il numero di secondi tra due intervalli di tempo.</summary>
      <returns>Numero di secondi tra il primo e il secondo intervallo di tempo.</returns>
      <param name="timeValue1">Primo intervallo di tempo.</param>
      <param name="timeValue2">Secondo intervallo di tempo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.DiffYears(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffYears canonica per calcolare il numero di anni tra due date/ore.</summary>
      <returns>Numero di anni tra la prima e la seconda data/ora.</returns>
      <param name="dateValue1">Prima data/ora.</param>
      <param name="dateValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.DiffYears(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffYears canonica per calcolare il numero di anni tra due date/ore.</summary>
      <returns>Numero di anni tra la prima e la seconda data/ora.</returns>
      <param name="dateValue1">Prima data/ora.</param>
      <param name="dateValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.GetTotalOffsetMinutes(System.Nullable{System.DateTimeOffset})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM GetTotalOffsetMinutes canonica per restituire il numero di minuti di offset della data/ora specificata rispetto al fuso orario UTC.In genere si tratta di un valore compreso tra +780 e -780 (+ o - 13 ore).</summary>
      <returns>Offset dell'input da UTC.</returns>
      <param name="dateTimeOffsetArgument">Valore data/ora da utilizzare.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.Left(System.String,System.Nullable{System.Int64})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM Left canonica per restituire un numero specificato dei caratteri più a sinistra in una stringa.</summary>
      <returns>Stringa che contiene il numero di caratteri richiesto dal lato sinistro della stringa di input.</returns>
      <param name="stringArgument">Stringa di input.</param>
      <param name="length">Numero dei caratteri da restituire.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.Reverse(System.String)">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM Reverse canonica per restituire una stringa specificata con l'ordine dei caratteri invertito.</summary>
      <returns>Stringa di input con l'ordine dei caratteri invertito.</returns>
      <param name="stringArgument">Stringa di input.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.Right(System.String,System.Nullable{System.Int64})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM Right canonica per restituire un numero specificato dei caratteri più a destra in una stringa.</summary>
      <returns>Stringa che contiene il numero di caratteri richiesto dal lato destro della stringa di input.</returns>
      <param name="stringArgument">Stringa di input.</param>
      <param name="length">Numero dei caratteri da restituire.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Decimal})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM StDev canonica per calcolare la deviazione standard della raccolta.</summary>
      <returns>Deviazione standard.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Double})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM StDev canonica per calcolare la deviazione standard della raccolta.</summary>
      <returns>Deviazione standard.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM StDev canonica per calcolare la deviazione standard della raccolta.</summary>
      <returns>Deviazione standard.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM StDev canonica per calcolare la deviazione standard della raccolta.</summary>
      <returns>Deviazione standard.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM StDev canonica per calcolare la deviazione standard della raccolta.</summary>
      <returns>Deviazione standard.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM StDev canonica per calcolare la deviazione standard della raccolta.</summary>
      <returns>Deviazione standard.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM StDev canonica per calcolare la deviazione standard della raccolta.</summary>
      <returns>Deviazione standard.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM StDev canonica per calcolare la deviazione standard della raccolta.</summary>
      <returns>Deviazione standard.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Decimal})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM StDevP canonica per calcolare la deviazione standard per la popolazione.</summary>
      <returns>Deviazione standard della popolazione.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Double})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM StDevP canonica per calcolare la deviazione standard per la popolazione.</summary>
      <returns>Deviazione standard della popolazione.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM StDevP canonica per calcolare la deviazione standard per la popolazione.</summary>
      <returns>Deviazione standard della popolazione.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM StDevP canonica per calcolare la deviazione standard per la popolazione.</summary>
      <returns>Deviazione standard della popolazione.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM StDevP canonica per calcolare la deviazione standard per la popolazione.</summary>
      <returns>Deviazione standard della popolazione.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM StDevP canonica per calcolare la deviazione standard per la popolazione.</summary>
      <returns>Deviazione standard della popolazione.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM StDevP canonica per calcolare la deviazione standard per la popolazione.</summary>
      <returns>Deviazione standard della popolazione.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM StDevP canonica per calcolare la deviazione standard per la popolazione.</summary>
      <returns>Deviazione standard della popolazione.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.Truncate(System.Nullable{System.Decimal},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM Truncate canonica per troncare il valore specificato in base al numero di cifre indicate.</summary>
      <returns>Valore troncato.</returns>
      <param name="value">Valore da troncare.</param>
      <param name="digits">Numero di cifre da mantenere.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.Truncate(System.Nullable{System.Double},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM Truncate canonica per troncare il valore specificato in base al numero di cifre indicate.</summary>
      <returns>Valore troncato.</returns>
      <param name="value">Valore da troncare.</param>
      <param name="digits">Numero di cifre da mantenere.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.TruncateTime(System.Nullable{System.DateTime})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM TruncateTime canonica per restituire la data specificata con la porzione ora cancellata.</summary>
      <returns>Data di input priva della porzione relativa all'ora.</returns>
      <param name="dateValue">Valore data/ora da utilizzare.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.TruncateTime(System.Nullable{System.DateTimeOffset})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM TruncateTime canonica per restituire la data specificata con la porzione ora cancellata.</summary>
      <returns>Data di input priva della porzione relativa all'ora.</returns>
      <param name="dateValue">Valore data/ora da utilizzare.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.Var(System.Collections.Generic.IEnumerable{System.Decimal})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM Var canonica per calcolare la varianza della raccolta.</summary>
      <returns>Varianza.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.Var(System.Collections.Generic.IEnumerable{System.Double})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM Var canonica per calcolare la varianza della raccolta.</summary>
      <returns>Varianza.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.Var(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM Var canonica per calcolare la varianza della raccolta.</summary>
      <returns>Varianza.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.Var(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM Var canonica per calcolare la varianza della raccolta.</summary>
      <returns>Varianza.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.Var(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM Var canonica per calcolare la varianza della raccolta.</summary>
      <returns>Varianza.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.Var(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM Var canonica per calcolare la varianza della raccolta.</summary>
      <returns>Varianza.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.Var(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM Var canonica per calcolare la varianza della raccolta.</summary>
      <returns>Varianza.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.Var(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM Var canonica per calcolare la varianza della raccolta.</summary>
      <returns>Varianza.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.VarP(System.Collections.Generic.IEnumerable{System.Decimal})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM VarP canonica per calcolare la varianza per la popolazione.</summary>
      <returns>Varianza della popolazione.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.VarP(System.Collections.Generic.IEnumerable{System.Double})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM VarP canonica per calcolare la varianza per la popolazione.</summary>
      <returns>Varianza della popolazione.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.VarP(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM VarP canonica per calcolare la varianza per la popolazione.</summary>
      <returns>Varianza della popolazione.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.VarP(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM VarP canonica per calcolare la varianza per la popolazione.</summary>
      <returns>Varianza della popolazione.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.VarP(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM VarP canonica per calcolare la varianza per la popolazione.</summary>
      <returns>Varianza della popolazione.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.VarP(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM VarP canonica per calcolare la varianza per la popolazione.</summary>
      <returns>Varianza della popolazione.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.VarP(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM VarP canonica per calcolare la varianza per la popolazione.</summary>
      <returns>Varianza della popolazione.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.DbFunctions.VarP(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM VarP canonica per calcolare la varianza per la popolazione.</summary>
      <returns>Varianza della popolazione.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="T:System.Data.Entity.DbModelBuilder">
      <summary>DbModelBuilder viene usato per eseguire il mapping delle classi CLR a uno schema del database.Questo approccio incentrato sul codice per la compilazione di un modello Entity Data Model (EDM) è noto come 'Code First'.</summary>
    </member>
    <member name="M:System.Data.Entity.DbModelBuilder.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.DbModelBuilder" />.Il processo di individuazione del modello iniziale utilizzerà il set di convenzioni incluso nella versione più recente di Entity Framework installata nel computer.</summary>
    </member>
    <member name="M:System.Data.Entity.DbModelBuilder.#ctor(System.Data.Entity.DbModelBuilderVersion)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.DbModelBuilder" /> che utilizzerà un set di convenzioni specifico per individuare il modello iniziale.</summary>
      <param name="modelBuilderVersion">Versione delle convenzioni da usare.</param>
    </member>
    <member name="M:System.Data.Entity.DbModelBuilder.Build(System.Data.Common.DbConnection)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Infrastructure.DbModel" /> basato sulla configurazione eseguita mediante questo generatore.La connessione viene usata per determinare il provider del database usato poiché influisce sul livello di database del modello generato.</summary>
      <returns>Modello compilato.</returns>
      <param name="providerConnection">Connessione da usare per determinare le informazioni sul provider.</param>
    </member>
    <member name="M:System.Data.Entity.DbModelBuilder.Build(System.Data.Entity.Infrastructure.DbProviderInfo)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Infrastructure.DbModel" /> basato sulla configurazione eseguita mediante questo generatore.È necessario specificare le informazioni sul provider poiché quest'ultimo influisce sul livello di database del modello generato.Per SqlClient il nome invariante è 'System.Data.SqlClient' e il token del manifesto è l'anno della versione, ad esempio '2005', '2008' e così via.</summary>
      <returns>Modello compilato.</returns>
      <param name="providerInfo">Il provider del database con il quale verrà usato il modello.</param>
    </member>
    <member name="M:System.Data.Entity.DbModelBuilder.ComplexType``1">
      <summary>Registra un tipo come tipo complesso nel modello e restituisce un oggetto che può essere usato per configurare il tipo complesso.Tale metodo può essere chiamato più volte per lo stesso tipo per eseguire più righe della configurazione.</summary>
      <returns>Oggetto di configurazione per il tipo complesso specificato.</returns>
      <typeparam name="TComplexType">Tipo da registrare o configurare.</typeparam>
    </member>
    <member name="P:System.Data.Entity.DbModelBuilder.Configurations">
      <summary>Ottiene l'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar" /> per questo DbModelBuilder.Il registrar consente di registrare le configurazioni del tipo complesso e del tipo di entità derivato con il generatore.</summary>
    </member>
    <member name="P:System.Data.Entity.DbModelBuilder.Conventions">
      <summary>Fornisce l'accesso alle impostazioni di questo DbModelBuilder che gestisce le convenzioni.</summary>
    </member>
    <member name="M:System.Data.Entity.DbModelBuilder.Entity``1">
      <summary>Registra un tipo di entità come parte del modello e restituisce un oggetto che può essere usato per configurare l'entità.Questo metodo può essere chiamato più volte per la stessa entità per eseguire più righe della configurazione.</summary>
      <returns>Oggetto di configurazione per il tipo di entità specificato.</returns>
      <typeparam name="TEntityType">Tipo da registrare o configurare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.DbModelBuilder.Equals(System.Object)">
      <summary>Specifica se <see cref="T:System.Data.Entity.DbModelBuilder" /> è uguale all'oggetto specificato.</summary>
      <returns>true se <see cref="T:System.Data.Entity.DbModelBuilder" /> è uguale all'oggetto specificato; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare.</param>
    </member>
    <member name="M:System.Data.Entity.DbModelBuilder.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza corrente.</summary>
      <returns>Codice hash per l'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.DbModelBuilder.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.DbModelBuilder.HasDefaultSchema(System.String)">
      <summary>Configurare il nome dello schema predefinito del database.Il nome dello schema di database predefinito viene usato per gli oggetti di database che non dispongono di un nome dello schema configurato in modo esplicito.</summary>
      <returns>Stessa istanza di DbModelBuilder in modo che possano essere concatenate più chiamate.</returns>
      <param name="schema">Nome dello schema predefinito del database.</param>
    </member>
    <member name="M:System.Data.Entity.DbModelBuilder.Ignore``1">
      <summary>Esclude un tipo dal modello.Viene usato per rimuovere i tipi dal modello che sono stati aggiunti per convenzione durante l'individuazione del modello iniziale.</summary>
      <returns>Stessa istanza di DbModelBuilder in modo che possano essere concatenate più chiamate.</returns>
      <typeparam name="T">Tipo da escludere.</typeparam>
    </member>
    <member name="M:System.Data.Entity.DbModelBuilder.Ignore(System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Esclude il tipo o i tipi specificati dal modello.Viene usato per rimuovere i tipi dal modello che sono stati aggiunti per convenzione durante l'individuazione del modello iniziale.</summary>
      <returns>Stessa istanza di DbModelBuilder in modo che possano essere concatenate più chiamate.</returns>
      <param name="types">Tipi da escludere dal modello.</param>
    </member>
    <member name="M:System.Data.Entity.DbModelBuilder.Properties">
      <summary>Avvia la configurazione di una convenzione leggera che si applica a tutte le proprietà nel modello.</summary>
      <returns>Oggetto configurazione per la convenzione.</returns>
    </member>
    <member name="M:System.Data.Entity.DbModelBuilder.Properties``1">
      <summary>Avvia la configurazione di una convenzione leggera che si applica a tutte le proprietà primitive del tipo specificato nel modello.</summary>
      <returns>Oggetto configurazione per la convenzione.</returns>
      <typeparam name="T">Tipo delle proprietà a cui si applica la convenzione.</typeparam>
    </member>
    <member name="M:System.Data.Entity.DbModelBuilder.RegisterEntityType(System.Type)">
      <summary>Registra un tipo di entità come parte del modello.</summary>
      <param name="entityType">Tipo da registrare.</param>
    </member>
    <member name="M:System.Data.Entity.DbModelBuilder.ToString">
      <summary>Restituisce una rappresentazione in forma di stringa di <see cref="T:System.Data.Entity.DbModelBuilder" />.</summary>
      <returns>Rappresentazione in forma di stringa di <see cref="T:System.Data.Entity.DbModelBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Entity.DbModelBuilder.Types``1">
      <summary>Avvia la configurazione di una convenzione leggera che si applica a tutte le entità e ai tipi complessi del modello che ereditano da o implementano il tipo specificato dall'argomento generico.Questo metodo non registra i tipi come parte del modello.</summary>
      <returns>Oggetto configurazione per la convenzione.</returns>
      <typeparam name="T">Tipo delle entità o tipi complessi a cui si applica questa convenzione.</typeparam>
    </member>
    <member name="M:System.Data.Entity.DbModelBuilder.Types">
      <summary>Avvia la configurazione di una convenzione leggera che si applica a tutte le entità e ai tipi complessi nel modello.</summary>
      <returns>Oggetto configurazione per la convenzione.</returns>
    </member>
    <member name="T:System.Data.Entity.DbModelBuilderVersion">
      <summary>Un valore restituito da tale enumerazione può essere fornito direttamente alla classe <see cref="T:System.Data.Entity.DbModelBuilder" /> o può essere utilizzato nell'oggetto <see cref="T:System.Data.Entity.DbModelBuilderVersionAttribute" /> applicato a una classe derivata da <see cref="T:System.Data.Entity.DbContext" />.Il valore utilizzato definisce la versione delle convenzioni DbContext e DbModelBuilder che deve essere utilizzata durante la compilazione di un modello dal codice, noto anche come 'Code First'.</summary>
    </member>
    <member name="F:System.Data.Entity.DbModelBuilderVersion.Latest">
      <summary>     Indica che deve essere utilizzata la versione più recente delle convenzioni <see cref="T:System.Data.Entity.DbModelBuilder" /> e <see cref="T:System.Data.Entity.DbContext" />. </summary>
    </member>
    <member name="F:System.Data.Entity.DbModelBuilderVersion.V4_1">
      <summary>     Indica che deve essere utilizzata la versione delle convenzioni <see cref="T:System.Data.Entity.DbModelBuilder" /> e <see cref="T:System.Data.Entity.DbContext" /> fornita con Entity Framework v4.1. </summary>
    </member>
    <member name="F:System.Data.Entity.DbModelBuilderVersion.V5_0">
      <summary>     Indica che deve essere utilizzata la versione delle convenzioni <see cref="T:System.Data.Entity.DbModelBuilder" /> e <see cref="T:System.Data.Entity.DbContext" /> fornita con Entity Framework v5.0. </summary>
    </member>
    <member name="F:System.Data.Entity.DbModelBuilderVersion.V5_0_Net4">
      <summary>Indica che deve essere utilizzata la versione delle convenzioni <see cref="T:System.Data.Entity.DbModelBuilder" /> e <see cref="T:System.Data.Entity.DbContext" /> fornita con Entity Framework v5.0 quando si fa riferimento a .Net Framework 4.</summary>
    </member>
    <member name="F:System.Data.Entity.DbModelBuilderVersion.V6_0">
      <summary>     Indica che deve essere utilizzata la versione delle convenzioni <see cref="T:System.Data.Entity.DbModelBuilder" /> e <see cref="T:System.Data.Entity.DbContext" /> fornita con Entity Framework v6.0. </summary>
    </member>
    <member name="T:System.Data.Entity.DbModelBuilderVersionAttribute">
      <summary>È possibile applicare tale attributo a una classe derivata da <see cref="T:System.Data.Entity.DbContext" /> per impostare la versione delle convenzioni DbContext e <see cref="T:System.Data.Entity.DbModelBuilder" /> da utilizzare durante la compilazione di un modello dal codice, noto anche come 'Code First'.Vedere l'enumerazione <see cref="T:System.Data.Entity.DbModelBuilderVersion" /> per dettagli sulle versioni di DbModelBuilder.</summary>
    </member>
    <member name="M:System.Data.Entity.DbModelBuilderVersionAttribute.#ctor(System.Data.Entity.DbModelBuilderVersion)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.DbModelBuilderVersionAttribute" />.</summary>
      <param name="version">Versione delle convenzioni <see cref="T:System.Data.Entity.DbModelBuilder" /> da utilizzare.</param>
    </member>
    <member name="P:System.Data.Entity.DbModelBuilderVersionAttribute.Version">
      <summary>Ottiene la versione delle convenzioni <see cref="T:System.Data.Entity.DbModelBuilder" />.</summary>
      <returns>Versione delle convenzioni <see cref="T:System.Data.Entity.DbModelBuilder" />.</returns>
    </member>
    <member name="T:System.Data.Entity.DbSet">
      <summary>Versione non generica di <see cref="T:System.Data.Entity.DbSet`1" /> che può essere utilizzata quando il tipo di entità non è noto in fase di compilazione.</summary>
    </member>
    <member name="M:System.Data.Entity.DbSet.#ctor">
      <summary>Crea un'istanza di un oggetto <see cref="T:System.Data.Entity.DbSet" /> quando chiamato dal costruttore di un tipo derivato che verrà usato come copia di test per il metodo DbSets.I metodi e le proprietà che verranno usati dalla copia di test devono essere implementati da quest'ultima, ad eccezione di AsNoTracking, AsStreaming e un'istruzione Include in cui l'implementazione predefinita non prevede alcuna operazione.</summary>
    </member>
    <member name="M:System.Data.Entity.DbSet.Add(System.Object)">
      <summary>Aggiunge l'entità specificata al contesto sottostante il set nello stato Added in modo tale da essere inserita nel database quando viene chiamato SaveChanges.</summary>
      <returns>Entità.</returns>
      <param name="entity">Entità da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.DbSet.AddRange(System.Collections.IEnumerable)">
      <summary>Aggiunge la raccolta di entità specificata nel contesto sottostante il set con ciascuna entità nello stato Added in modo tale da consentirne l'inserimento nel database quando viene chiamato SaveChanges.</summary>
      <returns>Raccolta di entità.</returns>
      <param name="entities">Raccolta di entità da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.DbSet.Attach(System.Object)">
      <summary>Associa l'entità specificata al contesto sottostante il set,ovvero l'entità viene posizionata nel contesto nello stato Unchanged, come se fosse stata letta dal database.</summary>
      <returns>Entità.</returns>
      <param name="entity">Entità da associare.</param>
    </member>
    <member name="M:System.Data.Entity.DbSet.Cast``1">
      <summary>Restituisce l'oggetto <see cref="T:System.Data.Entity.DbSet`1" /> generico equivalente.</summary>
      <returns>Oggetto del set generico.</returns>
      <typeparam name="TEntity">Tipo di entità per cui è stato creato il set.</typeparam>
    </member>
    <member name="M:System.Data.Entity.DbSet.Create">
      <summary>Crea una nuova istanza di un'entità per il tipo di questo set.Si noti che questa istanza NON viene aggiunta né collegata al set.L'istanza restituita sarà un proxy se il contesto sottostante è configurato per creare proxy e il tipo di entità soddisfa i requisiti per la creazione di un proxy.</summary>
      <returns>Istanza dell'entità che può essere un proxy.</returns>
    </member>
    <member name="M:System.Data.Entity.DbSet.Create(System.Type)">
      <summary>Crea una nuova istanza di un'entità per il tipo di questo set o per un tipo derivato dal tipo di questo set.Si noti che questa istanza NON viene aggiunta né collegata al set.L'istanza restituita sarà un proxy se il contesto sottostante è configurato per creare proxy e il tipo di entità soddisfa i requisiti per la creazione di un proxy.</summary>
      <returns>Istanza dell'entità che può essere un proxy.</returns>
      <param name="derivedEntityType">Tipo di entità da creare.</param>
    </member>
    <member name="M:System.Data.Entity.DbSet.Equals(System.Object)">
      <summary>Restituisce un valore che indica se il set specificato è uguale al set corrente.</summary>
      <returns>true se l'oggetto specificato è uguale al set corrente; in caso contrario, false.</returns>
      <param name="obj">Set da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.DbSet.Find(System.Object[])">
      <summary>Consente di trovare un'entità con i valori della chiave primaria specificati.Se un'entità con i valori della chiave primaria specificati esiste nel contesto, verrà restituita immediatamente senza effettuare una richiesta all'archivio.In caso contrario, viene richiesta all'archivio un'entità con i valori della chiave primaria specificati. L'eventuale entità così trovata verrà associata al contesto e restituita.Se non viene trovata alcuna entità nel contesto né nell'archivio, viene restituito null.</summary>
      <returns>Entità trovata o Null.</returns>
      <param name="keyValues">Valori della chiave primaria dell'entità da trovare.</param>
      <exception cref="T:System.InvalidOperationException">Generata se esistono più entità nel contesto con i valori della chiave primaria specificati.</exception>
      <exception cref="T:System.InvalidOperationException">Generata se il tipo di entità non fa parte del modello di dati per questo contesto.</exception>
      <exception cref="T:System.InvalidOperationException">Generata se i tipi dei valori chiave non corrispondono ai tipi dei valori chiave per il tipo di entità da trovare.</exception>
      <exception cref="T:System.InvalidOperationException">Generata se il contesto è stato eliminato.</exception>
    </member>
    <member name="M:System.Data.Entity.DbSet.FindAsync(System.Object[])">
      <summary>Consente di trovare in modo asincrono un'entità con i valori della chiave primaria specificati.Se un'entità con i valori della chiave primaria specificati esiste nel contesto, verrà restituita immediatamente senza effettuare una richiesta all'archivio.In caso contrario, viene richiesta all'archivio un'entità con i valori della chiave primaria specificati. L'eventuale entità così trovata verrà associata al contesto e restituita.Se non viene trovata alcuna entità nel contesto né nell'archivio, viene restituito null.</summary>
      <returns>Attività che rappresenta l'operazione di ricerca asincrona.Il risultato dell'attività contiene l'entità trovata o Null.</returns>
      <param name="keyValues">Valori della chiave primaria dell'entità da trovare.</param>
      <exception cref="T:System.InvalidOperationException">Generata se esistono più entità nel contesto con i valori della chiave primaria specificati.</exception>
      <exception cref="T:System.InvalidOperationException">Generata se il tipo di entità non fa parte del modello di dati per questo contesto.</exception>
      <exception cref="T:System.InvalidOperationException">Generata se i tipi dei valori chiave non corrispondono ai tipi dei valori chiave per il tipo di entità da trovare.</exception>
      <exception cref="T:System.InvalidOperationException">Generata se il contesto è stato eliminato.</exception>
    </member>
    <member name="M:System.Data.Entity.DbSet.FindAsync(System.Threading.CancellationToken,System.Object[])">
      <summary>Consente di trovare in modo asincrono un'entità con i valori della chiave primaria specificati.Se un'entità con i valori della chiave primaria specificati esiste nel contesto, verrà restituita immediatamente senza effettuare una richiesta all'archivio.In caso contrario, viene richiesta all'archivio un'entità con i valori della chiave primaria specificati. L'eventuale entità così trovata verrà associata al contesto e restituita.Se non viene trovata alcuna entità nel contesto né nell'archivio, viene restituito null.</summary>
      <returns>Attività che rappresenta l'operazione di ricerca asincrona.Il risultato dell'attività contiene l'entità trovata o Null.</returns>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <param name="keyValues">Valori della chiave primaria dell'entità da trovare.</param>
      <exception cref="T:System.InvalidOperationException">Generata se esistono più entità nel contesto con i valori della chiave primaria specificati.</exception>
      <exception cref="T:System.InvalidOperationException">Generata se il tipo di entità non fa parte del modello di dati per questo contesto.</exception>
      <exception cref="T:System.InvalidOperationException">Generata se i tipi dei valori chiave non corrispondono ai tipi dei valori chiave per il tipo di entità da trovare.</exception>
      <exception cref="T:System.InvalidOperationException">Generata se il contesto è stato eliminato.</exception>
    </member>
    <member name="M:System.Data.Entity.DbSet.GetHashCode">
      <summary>Restituisce la funzione hash per il set specificato.</summary>
      <returns>Funzione hash per il set.</returns>
    </member>
    <member name="M:System.Data.Entity.DbSet.GetType">
      <summary>Ottiene il tipo per il set corrente.</summary>
      <returns>Tipo per il set corrente.</returns>
    </member>
    <member name="P:System.Data.Entity.DbSet.Local">
      <summary>Ottiene un oggetto <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> che rappresenta una visualizzazione locale di tutte le entità Added, Unchanged e Modified in questo set.La visualizzazione locale viene sincronizzata man mano che le entità vengono aggiunte o rimosse dal contesto.Analogamente, le entità aggiunte o rimosse dalla visualizzazione locale verranno automaticamente aggiunte o rimosse dal contesto.</summary>
      <returns>Visualizzazione locale.</returns>
    </member>
    <member name="M:System.Data.Entity.DbSet.Remove(System.Object)">
      <summary>Contrassegna l'entità specificata come Deleted in modo tale da essere eliminata dal database quando viene chiamato SaveChanges.Si noti che l'entità deve esistere nel contesto in un altro stato affinché venga chiamato questo metodo.</summary>
      <returns>Entità.</returns>
      <param name="entity">Entità da rimuovere.</param>
    </member>
    <member name="M:System.Data.Entity.DbSet.RemoveRange(System.Collections.IEnumerable)">
      <summary>Rimuove la raccolta di entità specificata dal contesto sottostante il set con ciascuna entità nello stato Deleted in modo tale da consentirne l'eliminazione dal database quando viene chiamato SaveChanges.</summary>
      <returns>Raccolta di entità.</returns>
      <param name="entities">Raccolta di entità da eliminare.</param>
    </member>
    <member name="M:System.Data.Entity.DbSet.SqlQuery(System.String,System.Object[])">
      <summary>Crea una query SQL non elaborata che restituirà le entità in questo set.Per impostazione predefinita, le entità restituite vengono rilevate dal contesto. Tale impostazione può essere modificata chiamando AsNoTracking nell'oggetto <see cref="T:System.Data.Entity.Infrastructure.DbRawSqlQuery" /> restituito.Si noti che le entità restituite sono sempre del tipo per questo set e mai di un tipo derivato.Se la tabella o le tabelle su cui è stata eseguita una query possono contenere dati per altri tipi di entità, è necessario che la query SQL venga scritta in modo appropriato per garantire che vengano restituite solo le entità del tipo corretto.Come con qualsiasi API che accetta SQL, è importante parametrizzare un input utente in modo da fornire protezione da un attacco SQL injection.È possibile includere i segnaposto dei parametri nella stringa di query SQL e quindi fornire i valori dei parametri come argomenti aggiuntivi.Tutti i valori dei parametri forniti verranno convertiti automaticamente in DbParameter.context.Set(typeof(Blog)).SqlQuery("SELECT * FROM dbo.Posts WHERE Author = @p0", userSuppliedAuthor); in alternativa, è inoltre possibile costruire un oggetto DbParameter e fornirlo a SqlQuery.In questo modo è possibile utilizzare i parametri denominati nella stringa di query SQL.context.Set(typeof(Blog)).SqlQuery("SELECT * FROM dbo.Posts WHERE Author = @author", new SqlParameter("@author", userSuppliedAuthor));</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Infrastructure.DbSqlQuery" /> che eseguirà la query quando viene enumerato.</returns>
      <param name="sql">Stringa di query SQL.</param>
      <param name="parameters">Parametri da applicare alla stringa di query SQL.Se si usano parametri di output, i relativi valori non saranno disponibili fino alla lettura completa dei risultati.Questo è dovuto al comportamento sottostante di DbDataReader. Per altre informazioni, vedi http://go.microsoft.com/fwlink/?LinkID=398589.</param>
    </member>
    <member name="T:System.Data.Entity.DbSet`1">
      <summary>Un elemento DbSet rappresenta la raccolta di tutte le entità nel contesto o di cui è possibile eseguire query dal database, di un tipo specificato.Gli oggetti DbSet vengono creati da un oggetto DbContext mediante il metodo DbContext.Set.</summary>
      <typeparam name="TEntity">Tipo che definisce il set.</typeparam>
    </member>
    <member name="M:System.Data.Entity.DbSet`1.#ctor">
      <summary>Crea un'istanza di un oggetto <see cref="T:System.Data.Entity.DbSet`1" /> quando chiamato dal costruttore di un tipo derivato che verrà usato come copia di test per il metodo DbSets.I metodi e le proprietà che verranno usati dalla copia di test devono essere implementati da quest'ultima, ad eccezione di AsNoTracking, AsStreaming e un'istruzione Include in cui l'implementazione predefinita non prevede alcuna operazione.</summary>
    </member>
    <member name="M:System.Data.Entity.DbSet`1.Add(`0)">
      <summary>Aggiunge l'entità specificata al contesto sottostante il set nello stato Added in modo tale da essere inserita nel database quando viene chiamato SaveChanges.</summary>
      <param name="entity">Entità da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.DbSet`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
      <summary>Aggiunge la raccolta di entità specificata nel contesto sottostante il set con ciascuna entità nello stato Added in modo tale da consentirne l'inserimento nel database quando viene chiamato SaveChanges.</summary>
      <returns>Raccolta di entità.</returns>
      <param name="entities">Raccolta di entità da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.DbSet`1.Attach(`0)">
      <summary>Associa l'entità specificata al contesto sottostante il set,ovvero l'entità viene posizionata nel contesto nello stato Unchanged, come se fosse stata letta dal database.</summary>
      <param name="entity">Entità da associare.</param>
    </member>
    <member name="M:System.Data.Entity.DbSet`1.Create">
      <summary>Crea una nuova istanza di un'entità per il tipo di questo set.Si noti che questa istanza NON viene aggiunta né collegata al set.L'istanza restituita sarà un proxy se il contesto sottostante è configurato per creare proxy e il tipo di entità soddisfa i requisiti per la creazione di un proxy.</summary>
    </member>
    <member name="M:System.Data.Entity.DbSet`1.Create``1">
      <summary>Crea una nuova istanza di un'entità per il tipo di questo set o per un tipo derivato dal tipo di questo set.Si noti che questa istanza NON viene aggiunta né collegata al set.L'istanza restituita sarà un proxy se il contesto sottostante è configurato per creare proxy e il tipo di entità soddisfa i requisiti per la creazione di un proxy.</summary>
      <typeparam name="TDerivedEntity">Tipo di entità da creare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.DbSet`1.Equals(System.Object)">
      <summary>Determina se l'elemento DbSet specificato è uguale all'elemento DbSet corrente.</summary>
      <returns>true se l'elemento DbSet specificato è uguale all'elemento DbSet corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare all'elemento DbSet corrente.</param>
    </member>
    <member name="M:System.Data.Entity.DbSet`1.Find(System.Object[])">
      <summary>Consente di trovare un'entità con i valori della chiave primaria specificati.Se un'entità con i valori della chiave primaria specificati esiste nel contesto, verrà restituita immediatamente senza effettuare una richiesta all'archivio.In caso contrario, viene richiesta all'archivio un'entità con i valori della chiave primaria specificati. L'eventuale entità così trovata verrà associata al contesto e restituita.Se non viene trovata alcuna entità nel contesto né nell'archivio, viene restituito null.</summary>
      <returns>Entità trovata o Null.</returns>
      <param name="keyValues">Valori della chiave primaria dell'entità da trovare.</param>
      <exception cref="T:System.InvalidOperationException">Generata se esistono più entità nel contesto con i valori della chiave primaria specificati.</exception>
      <exception cref="T:System.InvalidOperationException">Generata se il tipo di entità non fa parte del modello di dati per questo contesto.</exception>
      <exception cref="T:System.InvalidOperationException">Generata se i tipi dei valori chiave non corrispondono ai tipi dei valori chiave per il tipo di entità da trovare.</exception>
      <exception cref="T:System.InvalidOperationException">Generata se il contesto è stato eliminato.</exception>
    </member>
    <member name="M:System.Data.Entity.DbSet`1.FindAsync(System.Object[])">
      <summary>Consente di trovare in modo asincrono un'entità con i valori della chiave primaria specificati.Se un'entità con i valori della chiave primaria specificati esiste nel contesto, verrà restituita immediatamente senza effettuare una richiesta all'archivio.In caso contrario, viene richiesta all'archivio un'entità con i valori della chiave primaria specificati. L'eventuale entità così trovata verrà associata al contesto e restituita.Se non viene trovata alcuna entità nel contesto né nell'archivio, viene restituito null.</summary>
      <returns>Attività che rappresenta l'operazione di ricerca asincrona.Il risultato dell'attività contiene l'entità trovata o Null.</returns>
      <param name="keyValues">Valori della chiave primaria dell'entità da trovare.</param>
    </member>
    <member name="M:System.Data.Entity.DbSet`1.FindAsync(System.Threading.CancellationToken,System.Object[])">
      <summary>Consente di trovare in modo asincrono un'entità con i valori della chiave primaria specificati.Se un'entità con i valori della chiave primaria specificati esiste nel contesto, verrà restituita immediatamente senza effettuare una richiesta all'archivio.In caso contrario, viene richiesta all'archivio un'entità con i valori della chiave primaria specificati. L'eventuale entità così trovata verrà associata al contesto e restituita.Se non viene trovata alcuna entità nel contesto né nell'archivio, viene restituito null.</summary>
      <returns>Attività che rappresenta l'operazione di ricerca asincrona.Il risultato dell'attività contiene l'entità trovata o Null.</returns>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <param name="keyValues">Valori della chiave primaria dell'entità da trovare.</param>
      <exception cref="T:System.InvalidOperationException">Generata se esistono più entità nel contesto con i valori della chiave primaria specificati.</exception>
      <exception cref="T:System.InvalidOperationException">Generata se il tipo di entità non fa parte del modello di dati per questo contesto.</exception>
      <exception cref="T:System.InvalidOperationException">Generata se i tipi dei valori chiave non corrispondono ai tipi dei valori chiave per il tipo di entità da trovare.</exception>
      <exception cref="T:System.InvalidOperationException">Generata se il contesto è stato eliminato.</exception>
    </member>
    <member name="M:System.Data.Entity.DbSet`1.GetHashCode">
      <summary>Restituisce la funzione hash per questo elemento DbSet.</summary>
      <returns>Funzione hash per questo elemento DbSet.</returns>
    </member>
    <member name="M:System.Data.Entity.DbSet`1.GetType">
      <summary>Restituisce il tipo per l'elemento DbSet corrente.</summary>
      <returns>Tipo per l'elemento DbSet corrente.</returns>
    </member>
    <member name="P:System.Data.Entity.DbSet`1.Local">
      <summary>Ottiene un oggetto <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> che rappresenta una visualizzazione locale di tutte le entità Added, Unchanged e Modified in questo set.La visualizzazione locale viene sincronizzata man mano che le entità vengono aggiunte o rimosse dal contesto.Analogamente, le entità aggiunte o rimosse dalla visualizzazione locale verranno automaticamente aggiunte o rimosse dal contesto.</summary>
      <returns>Visualizzazione locale.</returns>
    </member>
    <member name="M:System.Data.Entity.DbSet`1.op_Implicit(System.Data.Entity.DbSet{`0})~System.Data.Entity.DbSet">
      <summary>Restituisce l'oggetto <see cref="T:System.Data.Entity.DbSet" /> non generico equivalente.</summary>
      <returns>Oggetto del set non generico.</returns>
      <param name="entry">Oggetto del set generico.</param>
    </member>
    <member name="M:System.Data.Entity.DbSet`1.Remove(`0)">
      <summary>Contrassegna l'entità specificata come Deleted in modo tale da essere eliminata dal database quando viene chiamato SaveChanges.Si noti che l'entità deve esistere nel contesto in un altro stato affinché venga chiamato questo metodo.</summary>
      <param name="entity">Entità da rimuovere.</param>
    </member>
    <member name="M:System.Data.Entity.DbSet`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})">
      <summary>Rimuove la raccolta di entità specificata dal contesto sottostante il set con ciascuna entità nello stato Deleted in modo tale da consentirne l'eliminazione dal database quando viene chiamato SaveChanges.</summary>
      <returns>Raccolta di entità.</returns>
      <param name="entities">Raccolta di entità da eliminare.</param>
    </member>
    <member name="M:System.Data.Entity.DbSet`1.SqlQuery(System.String,System.Object[])">
      <summary>Crea una query SQL non elaborata che restituirà le entità in questo set.Per impostazione predefinita, le entità restituite vengono rilevate dal contesto. Tale impostazione può essere modificata chiamando AsNoTracking nell'oggetto <see cref="T:System.Data.Entity.Infrastructure.DbSqlQuery`1" /> restituito.Si noti che le entità restituite sono sempre del tipo per questo set e mai di un tipo derivato.Se la tabella o le tabelle su cui è stata eseguita una query possono contenere dati per altri tipi di entità, è necessario che la query SQL venga scritta in modo appropriato per garantire che vengano restituite solo le entità del tipo corretto.Come con qualsiasi API che accetta SQL, è importante parametrizzare un input utente in modo da fornire protezione da un attacco SQL injection.È possibile includere i segnaposto dei parametri nella stringa di query SQL e quindi fornire i valori dei parametri come argomenti aggiuntivi.Tutti i valori dei parametri forniti verranno convertiti automaticamente in DbParameter.context.Blogs.SqlQuery("SELECT * FROM dbo.Posts WHERE Author = @p0", userSuppliedAuthor); in alternativa, è inoltre possibile costruire un oggetto DbParameter e fornirlo a SqlQuery.In questo modo è possibile utilizzare i parametri denominati nella stringa di query SQL.context.Blogs.SqlQuery("SELECT * FROM dbo.Posts WHERE Author = @author", new SqlParameter("@author", userSuppliedAuthor));</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Infrastructure.DbSqlQuery`1" /> che eseguirà la query quando viene enumerato.</returns>
      <param name="sql">Stringa di query SQL.</param>
      <param name="parameters">Parametri da applicare alla stringa di query SQL.Se si usano parametri di output, i relativi valori non saranno disponibili fino alla lettura completa dei risultati.Questo è dovuto al comportamento sottostante di DbDataReader. Per altre informazioni, vedi http://go.microsoft.com/fwlink/?LinkID=398589.</param>
    </member>
    <member name="T:System.Data.Entity.DropCreateDatabaseAlways`1">
      <summary>Implementazione di IDatabaseInitializer che ricrea sempre il database e, se necessario, ne ripete il seeding al primo utilizzo di un contesto nel dominio dell'applicazione.Per eseguire il seeding del database, creare una classe derivata ed eseguire l'override del metodo Seed.</summary>
      <typeparam name="TContext">Tipo di contesto.</typeparam>
    </member>
    <member name="M:System.Data.Entity.DropCreateDatabaseAlways`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.DropCreateDatabaseAlways`1" />.</summary>
    </member>
    <member name="M:System.Data.Entity.DropCreateDatabaseAlways`1.InitializeDatabase(`0)">
      <summary>Esegue la strategia per inizializzare il database per il contesto specificato.</summary>
      <param name="context">Contesto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> è null.</exception>
    </member>
    <member name="M:System.Data.Entity.DropCreateDatabaseAlways`1.Seed(`0)">
      <summary>Metodo che deve essere sottoposto override per poter aggiungere i dati al contesto per il seeding.L'implementazione predefinita non esegue alcuna operazione.</summary>
      <param name="context">Contesto di cui eseguire il seeding.</param>
    </member>
    <member name="T:System.Data.Entity.DropCreateDatabaseIfModelChanges`1">
      <summary>Implementazione di IDatabaseInitializer che ELIMINERÀ, ricreerà e facoltativamente ne ripeterà il seeding solo se il modello è stato modificato dall'ultima creazione del database.</summary>
      <typeparam name="TContext">Tipo di contesto.</typeparam>
    </member>
    <member name="M:System.Data.Entity.DropCreateDatabaseIfModelChanges`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.DropCreateDatabaseIfModelChanges`1" />.</summary>
    </member>
    <member name="M:System.Data.Entity.DropCreateDatabaseIfModelChanges`1.InitializeDatabase(`0)">
      <summary>Esegue la strategia per inizializzare il database per il contesto specificato.</summary>
      <param name="context">Contesto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> è null.</exception>
    </member>
    <member name="M:System.Data.Entity.DropCreateDatabaseIfModelChanges`1.Seed(`0)">
      <summary>Metodo che deve essere sottoposto override per poter aggiungere i dati al contesto per il seeding.L'implementazione predefinita non esegue alcuna operazione.</summary>
      <param name="context">Contesto di cui eseguire il seeding.</param>
    </member>
    <member name="T:System.Data.Entity.EntityState">
      <summary>     Descrive lo stato di un'entità. </summary>
    </member>
    <member name="F:System.Data.Entity.EntityState.Added">
      <summary>     L'entità viene rilevata dal contesto che non esiste ancora nel database. </summary>
    </member>
    <member name="F:System.Data.Entity.EntityState.Deleted">
      <summary>     L'entità viene rilevata dal contesto ed esiste nel database, ma è stata contrassegnata per l'eliminazione dal database alla chiamata successiva a SaveChanges. </summary>
    </member>
    <member name="F:System.Data.Entity.EntityState.Detached">
      <summary>L'entità non è rilevata dal contesto.Un'entità si trova in questo stato subito dopo che è stata creata con il nuovo operatore o con uno dei metodi Create <see cref="T:System.Data.Entity.DbSet" />.</summary>
    </member>
    <member name="F:System.Data.Entity.EntityState.Modified">
      <summary>     L'entità viene rilevata dal contesto ed esiste nel database e alcuni o tutti i relativi valori di proprietà sono stati modificati. </summary>
    </member>
    <member name="F:System.Data.Entity.EntityState.Unchanged">
      <summary>     L'entità viene rilevata dal contesto ed esiste nel database e i relativi valori di proprietà non sono cambiati rispetto ai valori nel database. </summary>
    </member>
    <member name="T:System.Data.Entity.IDatabaseInitializer`1">
      <summary>Un'implementazione di questa interfaccia viene utilizzata per inizializzare il database sottostante quando un'istanza di una classe derivata <see cref="T:System.Data.Entity.DbContext" /> viene utilizzata per la prima volta.Questa inizializzazione può creare in modo condizionale il database e/o eseguirne il seed con dati.La strategia utilizzata viene impostata tramite la proprietà InitializationStrategy statica della classe <see cref="T:System.Data.Entity.Database" />.Vengono fornite le implementazioni seguenti: <see cref="T:System.Data.Entity.DropCreateDatabaseIfModelChanges`1" />,     <see cref="T:System.Data.Entity.DropCreateDatabaseAlways`1" />, <see cref="T:System.Data.Entity.CreateDatabaseIfNotExists`1" />.</summary>
      <typeparam name="TContext">Il parametro di questo tipo è controvariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo meno derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere .</typeparam>
    </member>
    <member name="M:System.Data.Entity.IDatabaseInitializer`1.InitializeDatabase(`0)">
      <summary>     Esegue la strategia per inizializzare il database per il contesto specificato. </summary>
      <param name="context"> Contesto. </param>
    </member>
    <member name="T:System.Data.Entity.IDbSet`1">
      <summary>Un elemento <see cref="T:System.Data.Entity.IDbSet`1" /> rappresenta la raccolta di tutte le entità nel contesto o di cui è possibile eseguire query dal database, di un tipo specificato.<see cref="T:System.Data.Entity.DbSet`1" /> è un'implementazione concreta di IDbSet.</summary>
      <typeparam name="TEntity">Tipo che definisce il set.</typeparam>
    </member>
    <member name="M:System.Data.Entity.IDbSet`1.Add(`0)">
      <summary>Aggiunge l'entità specificata al contesto sottostante il set nello stato Added in modo tale da essere inserita nel database quando viene chiamato SaveChanges.</summary>
      <returns>Entità.</returns>
      <param name="entity">Entità da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.IDbSet`1.Attach(`0)">
      <summary>Associa l'entità specificata al contesto sottostante il set,ovvero l'entità viene posizionata nel contesto nello stato Unchanged, come se fosse stata letta dal database.</summary>
      <returns>Entità.</returns>
      <param name="entity">Entità da associare.</param>
    </member>
    <member name="M:System.Data.Entity.IDbSet`1.Create">
      <summary>Crea una nuova istanza di un'entità per il tipo di questo set.Si noti che questa istanza NON viene aggiunta né collegata al set.L'istanza restituita sarà un proxy se il contesto sottostante è configurato per creare proxy e il tipo di entità soddisfa i requisiti per la creazione di un proxy.</summary>
      <returns>Istanza dell'entità che può essere un proxy.</returns>
    </member>
    <member name="M:System.Data.Entity.IDbSet`1.Create``1">
      <summary>Crea una nuova istanza di un'entità per il tipo di questo set o per un tipo derivato dal tipo di questo set.Si noti che questa istanza NON viene aggiunta né collegata al set.L'istanza restituita sarà un proxy se il contesto sottostante è configurato per creare proxy e il tipo di entità soddisfa i requisiti per la creazione di un proxy.</summary>
      <returns>Istanza dell'entità che può essere un proxy.</returns>
      <typeparam name="TDerivedEntity">Tipo di entità da creare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.IDbSet`1.Find(System.Object[])">
      <summary>Consente di trovare un'entità con i valori della chiave primaria specificati.Se un'entità con i valori della chiave primaria specificati esiste nel contesto, verrà restituita immediatamente senza effettuare una richiesta all'archivio.In caso contrario, viene richiesta all'archivio un'entità con i valori della chiave primaria specificati. L'eventuale entità così trovata verrà associata al contesto e restituita.Se non viene trovata alcuna entità nel contesto né nell'archivio, viene restituito null.</summary>
      <returns>Entità trovata o Null.</returns>
      <param name="keyValues">Valori della chiave primaria dell'entità da trovare.</param>
    </member>
    <member name="P:System.Data.Entity.IDbSet`1.Local">
      <summary>Ottiene un oggetto <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> che rappresenta una visualizzazione locale di tutte le entità Added, Unchanged e Modified in questo set.La visualizzazione locale viene sincronizzata man mano che le entità vengono aggiunte o rimosse dal contesto.Analogamente, le entità aggiunte o rimosse dalla visualizzazione locale verranno automaticamente aggiunte o rimosse dal contesto.</summary>
      <returns>Visualizzazione locale.</returns>
    </member>
    <member name="M:System.Data.Entity.IDbSet`1.Remove(`0)">
      <summary>Contrassegna l'entità specificata come Deleted in modo tale da essere eliminata dal database quando viene chiamato SaveChanges.Si noti che l'entità deve esistere nel contesto in un altro stato affinché venga chiamato questo metodo.</summary>
      <returns>Entità.</returns>
      <param name="entity">Entità da rimuovere.</param>
    </member>
    <member name="T:System.Data.Entity.MigrateDatabaseToLatestVersion`2">
      <summary>Implementazione di <see cref="T:System.Data.Entity.IDatabaseInitializer`1" /> che utilizzerà Migrazioni Code First per aggiornare il database alla versione più recente.</summary>
      <typeparam name="TContext">Tipo di contesto.</typeparam>
      <typeparam name="TMigrationsConfiguration">Tipo della configurazione delle migrazioni da usare durante l'inizializzazione.</typeparam>
    </member>
    <member name="M:System.Data.Entity.MigrateDatabaseToLatestVersion`2.#ctor">
      <summary>Inizializza una nuova istanza della classe MigrateDatabaseToLatestVersion che userà le informazioni sulla connessione di un contesto costruito con il costruttore predefinito o la factory registrata se applicabile.</summary>
    </member>
    <member name="M:System.Data.Entity.MigrateDatabaseToLatestVersion`2.#ctor(System.Boolean)">
      <summary>Inizializza una nuova istanza della classe MigrateDatabaseToLatestVersion specificando se usare le informazioni sulla connessione del contesto che ha attivato l'inizializzazione per eseguire la migrazione.</summary>
      <param name="useSuppliedContext">Se impostato su true, l'inizializzatore verrà eseguito con le informazioni sulla connessione del contesto che ha attivato l'inizializzazione.In caso contrario, le informazioni sulla connessione deriveranno da un contesto costruito con il costruttore predefinito o la factory registrata se applicabile.</param>
    </member>
    <member name="M:System.Data.Entity.MigrateDatabaseToLatestVersion`2.#ctor(System.Boolean,`1)">
      <summary>Inizializza una nuova istanza della classe MigrateDatabaseToLatestVersion specificando se usare le informazioni sulla connessione del contesto che ha attivato l'inizializzazione per eseguire la migrazione.Consente inoltre di specificare la configurazione delle migrazioni da usare durante l'inizializzazione.</summary>
      <param name="useSuppliedContext">Se impostato su true, l'inizializzatore verrà eseguito con le informazioni sulla connessione del contesto che ha attivato l'inizializzazione.In caso contrario, le informazioni sulla connessione deriveranno da un contesto costruito con il costruttore predefinito o la factory registrata se applicabile.</param>
      <param name="configuration">Configurazione delle migrazioni da usare durante l'inizializzazione.</param>
    </member>
    <member name="M:System.Data.Entity.MigrateDatabaseToLatestVersion`2.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe MigrateDatabaseToLatestVersion che utilizzerà una stringa di connessione specifica dal file di configurazione per connettersi al database ed eseguire la migrazione.</summary>
      <param name="connectionStringName">Nome della stringa di connessione da usare per la migrazione.</param>
    </member>
    <member name="M:System.Data.Entity.MigrateDatabaseToLatestVersion`2.InitializeDatabase(`0)">
      <summary>Inizializza il database per il contesto specificato.</summary>
      <param name="context">Contesto.</param>
    </member>
    <member name="T:System.Data.Entity.NullDatabaseInitializer`1">
      <summary>Implementazione di <see cref="T:System.Data.Entity.IDatabaseInitializer`1" /> che non esegue alcuna operazione.L'utilizzo di questo inizializzatore comporta la disabilitazione dell'inizializzazione del database per il tipo di contesto specificato.Passare un'istanza di questa classe a <see cref="M:System.Data.Entity.Database.SetInitializer``1(System.Data.Entity.IDatabaseInitializer{``0})" /> equivale a passare Null.Quando si utilizza <see cref="T:System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver" /> per risolvere gli inizializzatori è necessario utilizzare un'istanza di questa classe per disabilitare l'inizializzazione.</summary>
      <typeparam name="TContext">Tipo di contesto.</typeparam>
    </member>
    <member name="M:System.Data.Entity.NullDatabaseInitializer`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.NullDatabaseInitializer`1" />.</summary>
    </member>
    <member name="M:System.Data.Entity.NullDatabaseInitializer`1.InitializeDatabase(`0)">
      <summary>Esegue la strategia per inizializzare il database per il contesto specificato.</summary>
      <param name="context">Contesto.</param>
    </member>
    <member name="T:System.Data.Entity.ObservableCollectionExtensions">
      <summary>Metodi di estensione per <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ObservableCollectionExtensions.ToBindingList``1(System.Collections.ObjectModel.ObservableCollection{``0})">
      <summary>Restituisce un'implementazione di <see cref="T:System.ComponentModel.BindingList`1" /> che resta sincronizzato con l'oggetto <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> specificato.</summary>
      <returns>Elenco di associazioni.</returns>
      <param name="source">Raccolta con la quale resta sincronizzato l'elenco di associazioni.</param>
      <typeparam name="T">Tipo dell'elemento.</typeparam>
    </member>
    <member name="T:System.Data.Entity.QueryableExtensions">
      <summary>Fornisce metodi di estensione utili per l'uso con le query LINQ di Entity Framework.</summary>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AllAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary>Determina in modo asincrono se tutti gli elementi di una sequenza soddisfano una condizione.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene true se ogni elemento della sequenza di origine supera il test nel predicato specificato; in caso contrario false.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> i cui elementi vengono verificati per trovare una condizione.</param>
      <param name="predicate">Funzione per testare ogni elemento per una condizione.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="predicate" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AllAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
      <summary>Determina in modo asincrono se tutti gli elementi di una sequenza soddisfano una condizione.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene true se ogni elemento della sequenza di origine supera il test nel predicato specificato; in caso contrario false.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> i cui elementi vengono verificati per trovare una condizione.</param>
      <param name="predicate">Funzione per testare ogni elemento per una condizione.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="predicate" /> è null .</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AnyAsync``1(System.Linq.IQueryable{``0})">
      <summary>Determina in modo asincrono se una sequenza contiene elementi.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene true se la sequenza di origine contiene elementi; in caso contrario false.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> da verificare come vuoto.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AnyAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary>Determina in modo asincrono se uno o più elementi di una sequenza soddisfano una condizione.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene true se un elemento della sequenza di origine supera il test nel predicato specificato; in caso contrario false.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> i cui elementi vengono verificati per trovare una condizione.</param>
      <param name="predicate">Funzione per testare ogni elemento per una condizione.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="predicate" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AnyAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
      <summary>Determina in modo asincrono se uno o più elementi di una sequenza soddisfano una condizione.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene true se un elemento della sequenza di origine supera il test nel predicato specificato; in caso contrario false.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> i cui elementi vengono verificati per trovare una condizione.</param>
      <param name="predicate">Funzione per testare ogni elemento per una condizione.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="predicate" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AnyAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
      <summary>Determina in modo asincrono se una sequenza contiene elementi.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene true se la sequenza di origine contiene elementi; in caso contrario false.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> da verificare come vuoto.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AsNoTracking(System.Linq.IQueryable)">
      <summary>Restituisce una nuova query in cui le entità restituite non verranno memorizzate nella cache di <see cref="T:System.Data.Entity.DbContext" /> o <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.Questo metodo si utilizza chiamando il metodo AsNoTracking dell'oggetto query sottostante.Se l'oggetto query sottostante non dispone di un metodo AsNoTracking, la chiamata a questo metodo non avrà alcun effetto.</summary>
      <returns>Una nuova query a cui è stato applicato NoTracking o la query di origine se NoTracking non è supportato.</returns>
      <param name="source">Query di origine.</param>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AsNoTracking``1(System.Linq.IQueryable{``0})">
      <summary>Restituisce una nuova query in cui le entità restituite non verranno memorizzate nella cache di <see cref="T:System.Data.Entity.DbContext" /> o <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.Questo metodo si utilizza chiamando il metodo AsNoTracking dell'oggetto query sottostante.Se l'oggetto query sottostante non dispone di un metodo AsNoTracking, la chiamata a questo metodo non avrà alcun effetto.</summary>
      <returns>Una nuova query a cui è stato applicato NoTracking o la query di origine se NoTracking non è supportato.</returns>
      <param name="source">Query di origine.</param>
      <typeparam name="T">Tipo dell'elemento.</typeparam>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AsStreaming(System.Linq.IQueryable)">
      <summary>Restituisce una nuova query che trasmetterà come flusso e non come buffer i risultati.Questo metodo si utilizza chiamando il metodo AsStreaming dell'oggetto query sottostante.Se l'oggetto query sottostante non dispone di un metodo AsStreaming, la chiamata a questo metodo non avrà alcun effetto.</summary>
      <returns>Una nuova query a cui è stato applicato AsStreaming o la query di origine se AsStreaming non è supportato.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable" /> a cui applicare AsStreaming.</param>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AsStreaming``1(System.Linq.IQueryable{``0})">
      <summary>Restituisce una nuova query che trasmetterà come flusso e non come buffer i risultati.Questo metodo si utilizza chiamando il metodo AsStreaming dell'oggetto query sottostante.Se l'oggetto query sottostante non dispone di un metodo AsStreaming, la chiamata a questo metodo non avrà alcun effetto.</summary>
      <returns>Una nuova query a cui è stato applicato AsStreaming o la query di origine se AsStreaming non è supportato.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> a cui applicare AsStreaming.</param>
      <typeparam name="T">Tipo degli elementi di <paramref name="source" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync(System.Linq.IQueryable{System.Decimal})">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Decimal" />.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Decimal" /> di cui calcolare la media.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non contiene elementi.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync(System.Linq.IQueryable{System.Decimal},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Decimal" />.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Decimal" /> di cui calcolare la media.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non contiene elementi.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync(System.Linq.IQueryable{System.Double})">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Double" />.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Double" /> di cui calcolare la media.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non contiene elementi.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync(System.Linq.IQueryable{System.Double},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Double" />.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Double" /> di cui calcolare la media.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non contiene elementi.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync(System.Linq.IQueryable{System.Int32})">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Int32" />.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Int32" /> di cui calcolare la media.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non contiene elementi.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync(System.Linq.IQueryable{System.Int32},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Int32" />.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Int32" /> di cui calcolare la media.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non contiene elementi.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync(System.Linq.IQueryable{System.Int64})">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Int64" />.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Int64" /> di cui calcolare la media.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non contiene elementi.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync(System.Linq.IQueryable{System.Int64},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Int64" />.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Int64" /> di cui calcolare la media.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non contiene elementi.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync(System.Linq.IQueryable{System.Nullable{System.Decimal}})">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Decimal" /> che ammettono valori null.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Decimal" /> che ammettono valori null di cui calcolare la media.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync(System.Linq.IQueryable{System.Nullable{System.Decimal}},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Decimal" /> che ammettono valori null.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Decimal" /> che ammettono valori null di cui calcolare la media.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync(System.Linq.IQueryable{System.Nullable{System.Double}})">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Double" /> che ammettono valori null.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Double" /> che ammettono valori null di cui calcolare la media.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync(System.Linq.IQueryable{System.Nullable{System.Double}},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Double" /> che ammettono valori null.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Double" /> che ammettono valori null di cui calcolare la media.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync(System.Linq.IQueryable{System.Nullable{System.Int32}})">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Int32" /> che ammettono valori null.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Int32" /> che ammettono valori null di cui calcolare la media.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync(System.Linq.IQueryable{System.Nullable{System.Int32}},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Int32" /> che ammettono valori null.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Int32" /> che ammettono valori null di cui calcolare la media.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync(System.Linq.IQueryable{System.Nullable{System.Int64}})">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Int64" /> che ammettono valori null.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Int64" /> che ammettono valori null di cui calcolare la media.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync(System.Linq.IQueryable{System.Nullable{System.Int64}},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Int64" /> che ammettono valori null.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Int64" /> che ammettono valori null di cui calcolare la media.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync(System.Linq.IQueryable{System.Nullable{System.Single}})">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Single" /> che ammettono valori null.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Single" /> che ammettono valori null di cui calcolare la media.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync(System.Linq.IQueryable{System.Nullable{System.Single}},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Single" /> che ammettono valori null.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Single" /> che ammettono valori null di cui calcolare la media.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync(System.Linq.IQueryable{System.Single})">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Single" />.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Single" /> di cui calcolare la media.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non contiene elementi.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync(System.Linq.IQueryable{System.Single},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Single" />.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Single" /> di cui calcolare la media.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non contiene elementi.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Decimal" /> ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori di cui calcolare la media.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non contiene elementi.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Decimal" /> ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori di cui calcolare la media.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non contiene elementi.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Double" /> ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori di cui calcolare la media.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non contiene elementi.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Double" /> ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori di cui calcolare la media.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non contiene elementi.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Int32" /> ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori di cui calcolare la media.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non contiene elementi.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Int32" /> ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori di cui calcolare la media.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non contiene elementi.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Int64" /> ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori di cui calcolare la media.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non contiene elementi.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Int64" /> ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori di cui calcolare la media.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non contiene elementi.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Decimal" /> che ammettono valori null ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori di cui calcolare la media.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Decimal" /> che ammettono valori null ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori di cui calcolare la media.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Double" /> che ammettono valori null ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori di cui calcolare la media.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Double" /> che ammettono valori null ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori di cui calcolare la media.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Int32" /> che ammettono valori null ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori di cui calcolare la media.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Int32" /> che ammettono valori null ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori di cui calcolare la media.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Int64" /> che ammettono valori null ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori di cui calcolare la media.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Int64" /> che ammettono valori null ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori di cui calcolare la media.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Single" /> che ammettono valori null ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori di cui calcolare la media.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Single" /> che ammettono valori null ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori di cui calcolare la media.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Single" /> ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori di cui calcolare la media.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non contiene elementi.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la media di una sequenza di valori <see cref="T:System.Single" /> ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la media della sequenza di valori.</returns>
      <param name="source">Sequenza di valori di cui calcolare la media.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non contiene elementi.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.ContainsAsync``1(System.Linq.IQueryable{``0},``0)">
      <summary>Determina in modo asincrono se una sequenza contiene un elemento specificato utilizzando l'operatore di uguaglianza predefinito.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene true se la sequenza di input contiene il valore specificato; in caso contrario false.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> di cui restituire il singolo elemento.</param>
      <param name="item">Oggetto da individuare nella sequenza .</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.ContainsAsync``1(System.Linq.IQueryable{``0},``0,System.Threading.CancellationToken)">
      <summary>Determina in modo asincrono se una sequenza contiene un elemento specificato utilizzando l'operatore di uguaglianza predefinito.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene true se la sequenza di input contiene il valore specificato; in caso contrario false.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> di cui restituire il singolo elemento.</param>
      <param name="item">Oggetto da individuare nella sequenza .</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.CountAsync``1(System.Linq.IQueryable{``0})">
      <summary>Restituisce in modo asincrono il numero di elementi in una sequenza.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il numero di elementi nella sequenza di input.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> che contiene gli elementi da contare.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.OverflowException">Il numero di elementi in <paramref name="source" /> è maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.CountAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary>Restituisce in modo asincrono il numero di elementi in una sequenza che soddisfano una condizione.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il numero di elementi nella sequenza che soddisfano la condizione nella funzione predicativa.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> che contiene gli elementi da contare.</param>
      <param name="predicate">Funzione per testare ogni elemento per una condizione.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="predicate" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.OverflowException">Il numero di elementi in <paramref name="source" /> che soddisfano la condizione nella funzione predicativa è maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.CountAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
      <summary>Restituisce in modo asincrono il numero di elementi in una sequenza che soddisfano una condizione.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il numero di elementi nella sequenza che soddisfano la condizione nella funzione predicativa.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> che contiene gli elementi da contare.</param>
      <param name="predicate">Funzione per testare ogni elemento per una condizione.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="predicate" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" />.</exception>
      <exception cref="T:System.OverflowException">Il numero di elementi in <paramref name="source" /> che soddisfano la condizione nella funzione predicativa è maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.CountAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
      <summary>Restituisce in modo asincrono il numero di elementi in una sequenza.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il numero di elementi nella sequenza di input.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> che contiene gli elementi da contare.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.OverflowException">Il numero di elementi in <paramref name="source" /> è maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.FirstAsync``1(System.Linq.IQueryable{``0})">
      <summary>Restituisce in modo asincrono il primo elemento di una sequenza.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il primo elemento in <paramref name="source" />.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> di cui restituire il primo elemento.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" />.</exception>
      <exception cref="T:System.InvalidOperationException">La sequenza di origine è vuota.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.FirstAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary>Restituisce in modo asincrono il primo elemento di una sequenza che soddisfa una condizione specificata.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il primo elemento in <paramref name="source" /> che supera il test in <paramref name="predicate" />.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> di cui restituire il primo elemento.</param>
      <param name="predicate">Funzione per testare ogni elemento per una condizione.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="predicate" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.InvalidOperationException">Nessun elemento soddisfa la condizione in <paramref name="predicate" />.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.FirstAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
      <summary>Restituisce in modo asincrono il primo elemento di una sequenza che soddisfa una condizione specificata.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il primo elemento in <paramref name="source" /> che supera il test in <paramref name="predicate" />.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> di cui restituire il primo elemento.</param>
      <param name="predicate">Funzione per testare ogni elemento per una condizione.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="predicate" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.InvalidOperationException">Nessun elemento soddisfa la condizione in <paramref name="predicate" />.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.FirstAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
      <summary>Restituisce in modo asincrono il primo elemento di una sequenza.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il primo elemento in <paramref name="source" />.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> di cui restituire il primo elemento.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.InvalidOperationException">La sequenza di origine è vuota.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.FirstOrDefaultAsync``1(System.Linq.IQueryable{``0})">
      <summary>Restituisce in modo asincrono il primo elemento di una sequenza o un valore predefinito se la sequenza non contiene elementi.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene default ( <paramref name="TSource" /> ) se <paramref name="source" /> è vuoto; in caso contrario, il primo elemento in <paramref name="source" />.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> di cui restituire il primo elemento.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.FirstOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary>Restituisce in modo asincrono il primo elemento di una sequenza che soddisfa una condizione specificata o un valore predefinito se non viene trovato tale elemento.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene default (<paramref name="TSource" />) se <paramref name="source" /> è vuoto o se nessun elemento supera il test specificato da <paramref name="predicate" />; in caso contrario il primo elemento in <paramref name="source" /> che supera il test specificato da <paramref name="predicate" />.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> di cui restituire il primo elemento.</param>
      <param name="predicate">Funzione per testare ogni elemento per una condizione.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="predicate" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.FirstOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
      <summary>Restituisce in modo asincrono il primo elemento di una sequenza che soddisfa una condizione specificata o un valore predefinito se non viene trovato tale elemento.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene default (<paramref name="TSource" />) se <paramref name="source" /> è vuoto o se nessun elemento supera il test specificato da <paramref name="predicate" />; in caso contrario il primo elemento in <paramref name="source" /> che supera il test specificato da <paramref name="predicate" />.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> di cui restituire il primo elemento.</param>
      <param name="predicate">Funzione per testare ogni elemento per una condizione.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="predicate" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> dispone di più di un elemento.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.FirstOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
      <summary>Restituisce in modo asincrono il primo elemento di una sequenza o un valore predefinito se la sequenza non contiene elementi.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene default ( <paramref name="TSource" /> ) se <paramref name="source" /> è vuoto; in caso contrario, il primo elemento in <paramref name="source" />.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> di cui restituire il primo elemento.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.ForEachAsync(System.Linq.IQueryable,System.Action{System.Object})">
      <summary>Restituisce in modo asincrono i risultati della query ed esegue l'azione specificata su ogni elemento.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable" /> da enumerare.</param>
      <param name="action">Azione da eseguire su ciascun elemento.</param>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.ForEachAsync(System.Linq.IQueryable,System.Action{System.Object},System.Threading.CancellationToken)">
      <summary>Restituisce in modo asincrono i risultati della query ed esegue l'azione specificata su ogni elemento.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable" /> da enumerare.</param>
      <param name="action">Azione da eseguire su ciascun elemento.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.ForEachAsync``1(System.Linq.IQueryable{``0},System.Action{``0})">
      <summary>Restituisce in modo asincrono i risultati della query ed esegue l'azione specificata su ogni elemento.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> da enumerare.</param>
      <param name="action">Azione da eseguire su ciascun elemento.</param>
      <typeparam name="T">Tipo degli elementi di <paramref name="source" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.ForEachAsync``1(System.Linq.IQueryable{``0},System.Action{``0},System.Threading.CancellationToken)">
      <summary>Restituisce in modo asincrono i risultati della query ed esegue l'azione specificata su ogni elemento.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> da enumerare.</param>
      <param name="action">Azione da eseguire su ciascun elemento.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="T">Tipo degli elementi di <paramref name="source" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.Include(System.Linq.IQueryable,System.String)">
      <summary>Specifica gli oggetti correlati da includere nei risultati della query.</summary>
      <returns>Nuovo oggetto <see cref="T:System.Linq.IQueryable" /> con il percorso della query definito.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable" /> di origine sul quale chiamare Include.</param>
      <param name="path">Elenco di oggetti correlati separato da punti da restituire nei risultati della query.</param>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.Include``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Specifica gli oggetti correlati da includere nei risultati della query.</summary>
      <returns>Nuovo oggetto IQueryable&amp;lt;T&amp;gt; con il percorso della query definito.</returns>
      <param name="source">Oggetto IQueryable di origine sul quale chiamare Include.</param>
      <param name="path">Espressione lambda che rappresenta il percorso da includere.</param>
      <typeparam name="T">Tipo di entità per la quale viene eseguita una query.</typeparam>
      <typeparam name="TProperty">Tipo di proprietà di navigazione da includere.</typeparam>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.Include``1(System.Linq.IQueryable{``0},System.String)">
      <summary>Specifica gli oggetti correlati da includere nei risultati della query.</summary>
      <returns>Nuovo oggetto <see cref="T:System.Linq.IQueryable`1" /> con il percorso della query definito.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> di origine sul quale chiamare Include.</param>
      <param name="path">Elenco di oggetti correlati separato da punti da restituire nei risultati della query.</param>
      <typeparam name="T">Tipo di entità per la quale viene eseguita una query.</typeparam>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.Load(System.Linq.IQueryable)">
      <summary>Enumera la query in modo che per le query del server, ad esempio quelle di <see cref="T:System.Data.Entity.DbSet`1" />, <see cref="T:System.Data.Entity.Core.Objects.ObjectSet`1" />, <see cref="T:System.Data.Entity.Core.Objects.ObjectQuery`1" /> e altre, i risultati della query verranno caricati nell'oggetto <see cref="T:System.Data.Entity.DbContext" /> associato, in <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" /> o in altra cache del client.Ciò equivale a chiamare ToList e a eliminare l'elenco senza l'overhead dell'effettiva creazione dell'elenco.</summary>
      <param name="source">Query di origine.</param>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.LoadAsync(System.Linq.IQueryable)">
      <summary>Enumera in modo asincrono la query in modo che per le query del server, ad esempio quelle di <see cref="T:System.Data.Entity.DbSet`1" />, <see cref="T:System.Data.Entity.Core.Objects.ObjectSet`1" />, <see cref="T:System.Data.Entity.Core.Objects.ObjectQuery`1" /> e altre, i risultati della query verranno caricati nell'oggetto <see cref="T:System.Data.Entity.DbContext" /> associato, in <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" /> o in altra cache del client.Ciò equivale a chiamare ToList e a eliminare l'elenco senza l'overhead dell'effettiva creazione dell'elenco.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
      <param name="source">Query di origine.</param>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.LoadAsync(System.Linq.IQueryable,System.Threading.CancellationToken)">
      <summary>Enumera in modo asincrono la query in modo che per le query del server, ad esempio quelle di <see cref="T:System.Data.Entity.DbSet`1" />, <see cref="T:System.Data.Entity.Core.Objects.ObjectSet`1" />, <see cref="T:System.Data.Entity.Core.Objects.ObjectQuery`1" /> e altre, i risultati della query verranno caricati nell'oggetto <see cref="T:System.Data.Entity.DbContext" /> associato, in <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" /> o in altra cache del client.Ciò equivale a chiamare ToList e a eliminare l'elenco senza l'overhead dell'effettiva creazione dell'elenco.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
      <param name="source">Query di origine.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.LongCountAsync``1(System.Linq.IQueryable{``0})">
      <summary>Restituisce in modo asincrono un oggetto <see cref="T:System.Int64" /> che rappresenta il numero totale di elementi in una sequenza.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il numero di elementi nella sequenza di input.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> che contiene gli elementi da contare.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.OverflowException">Il numero di elementi in <paramref name="source" /> è maggiore di <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.LongCountAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary>Restituisce in modo asincrono un oggetto <see cref="T:System.Int64" /> che rappresenta il numero di elementi in una sequenza che soddisfano una condizione.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il numero di elementi nella sequenza che soddisfano la condizione nella funzione predicativa.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> che contiene gli elementi da contare.</param>
      <param name="predicate">Funzione per testare ogni elemento per una condizione.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="predicate" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.OverflowException">Il numero di elementi in <paramref name="source" /> che soddisfano la condizione nella funzione predicativa è maggiore di <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.LongCountAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
      <summary>Restituisce in modo asincrono un oggetto <see cref="T:System.Int64" /> che rappresenta il numero di elementi in una sequenza che soddisfano una condizione.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il numero di elementi nella sequenza che soddisfano la condizione nella funzione predicativa.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> che contiene gli elementi da contare.</param>
      <param name="predicate">Funzione per testare ogni elemento per una condizione.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="predicate" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.OverflowException">Il numero di elementi in <paramref name="source" /> che soddisfano la condizione nella funzione predicativa è maggiore di <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.LongCountAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
      <summary>Restituisce in modo asincrono un oggetto <see cref="T:System.Int64" /> che rappresenta il numero totale di elementi in una sequenza.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il numero di elementi nella sequenza di input.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> che contiene gli elementi da contare.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.OverflowException">Il numero di elementi in <paramref name="source" /> è maggiore di <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.MaxAsync``1(System.Linq.IQueryable{``0})">
      <summary>Restituisce in modo asincrono il valore massimo di una sequenza.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il valore massimo nel risultato della sequenza.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> che contiene gli elementi di cui determinare il valore massimo.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.MaxAsync``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Richiama in modo asincrono una funzione di proiezione su ogni elemento di una sequenza e restituisce il valore massimo risultante.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il valore massimo nel risultato della sequenza.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> che contiene gli elementi di cui determinare il valore massimo.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TResult">Tipo del valore restituito dalla funzione rappresentata dall'oggetto <paramref name="selector" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.MaxAsync``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)">
      <summary>Richiama in modo asincrono una funzione di proiezione su ogni elemento di una sequenza e restituisce il valore massimo risultante.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il valore massimo nel risultato della sequenza.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> che contiene gli elementi di cui determinare il valore massimo.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TResult">Tipo del valore restituito dalla funzione rappresentata dall'oggetto <paramref name="selector" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.MaxAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
      <summary>Restituisce in modo asincrono il valore massimo di una sequenza.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il valore massimo nel risultato della sequenza.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> che contiene gli elementi di cui determinare il valore massimo.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.MinAsync``1(System.Linq.IQueryable{``0})">
      <summary>Restituisce in modo asincrono il valore minimo di una sequenza.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il valore minimo nel risultato della sequenza.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> che contiene gli elementi di cui determinare il valore minimo.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.MinAsync``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Richiama in modo asincrono una funzione di proiezione su ogni elemento di una sequenza e restituisce il valore minimo risultante.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il valore minimo nel risultato della sequenza.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> che contiene gli elementi di cui determinare il valore minimo.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TResult">Tipo del valore restituito dalla funzione rappresentata dall'oggetto <paramref name="selector" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.MinAsync``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)">
      <summary>Richiama in modo asincrono una funzione di proiezione su ogni elemento di una sequenza e restituisce il valore minimo risultante.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il valore minimo nel risultato della sequenza.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> che contiene gli elementi di cui determinare il valore minimo.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TResult">Tipo del valore restituito dalla funzione rappresentata dall'oggetto <paramref name="selector" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.MinAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
      <summary>Restituisce in modo asincrono il valore minimo di una sequenza.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il valore minimo nel risultato della sequenza.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> che contiene gli elementi di cui determinare il valore minimo.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SingleAsync``1(System.Linq.IQueryable{``0})">
      <summary>Restituisce in modo asincrono l'unico elemento di una sequenza e genera un'eccezione se nella sequenza non è presente esattamente un solo elemento.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il singolo elemento della sequenza di input.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> di cui restituire il singolo elemento.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.InvalidOperationException">La sequenza di origine è vuota.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SingleAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary>Restituisce in modo asincrono l'unico elemento di una sequenza che soddisfa una condizione specificata e genera un'eccezione se esistono più elementi di tale tipo.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il singolo elemento della sequenza di input che soddisfa la condizione in <paramref name="predicate" />.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> di cui restituire il singolo elemento.</param>
      <param name="predicate">Funzione per testare un elemento per una condizione.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="predicate" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.InvalidOperationException">Nessun elemento soddisfa la condizione in <paramref name="predicate" />.</exception>
      <exception cref="T:System.InvalidOperationException">Più elementi soddisfano la condizione in <paramref name="predicate" />.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SingleAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
      <summary>Restituisce in modo asincrono l'unico elemento di una sequenza che soddisfa una condizione specificata e genera un'eccezione se esistono più elementi di tale tipo.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il singolo elemento della sequenza di input che soddisfa la condizione in <paramref name="predicate" />.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> di cui restituire il singolo elemento.</param>
      <param name="predicate">Funzione per testare un elemento per una condizione.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="predicate" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.InvalidOperationException">Nessun elemento soddisfa la condizione in <paramref name="predicate" />.</exception>
      <exception cref="T:System.InvalidOperationException">Più elementi soddisfano la condizione in <paramref name="predicate" />.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SingleAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
      <summary>Restituisce in modo asincrono l'unico elemento di una sequenza e genera un'eccezione se nella sequenza non è presente esattamente un solo elemento.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il singolo elemento della sequenza di input.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> di cui restituire il singolo elemento.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> dispone di più di un elemento.</exception>
      <exception cref="T:System.InvalidOperationException">La sequenza di origine è vuota.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SingleOrDefaultAsync``1(System.Linq.IQueryable{``0})">
      <summary>Restituisce in modo asincrono l'unico elemento di una sequenza o un valore predefinito se la sequenza è vuota. Questo metodo genera un'eccezione se esistono più elementi nella sequenza.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il singolo elemento della sequenza di input o default (<paramref name="TSource" />) se la sequenza non contiene elementi.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> di cui restituire il singolo elemento.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> dispone di più di un elemento.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SingleOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary>Restituisce in modo asincrono il singolo elemento di una sequenza che soddisfa una condizione specificata o un valore predefinito se tale elemento esiste. Questo metodo genera un'eccezione se più elementi soddisfano la condizione.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il singolo elemento della sequenza di input che soddisfa la condizione in <paramref name="predicate" /> o default (<paramref name="TSource" />) se non viene trovato un elemento di tale tipo.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> di cui restituire il singolo elemento.</param>
      <param name="predicate">Funzione per testare un elemento per una condizione.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="predicate" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SingleOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
      <summary>Restituisce in modo asincrono il singolo elemento di una sequenza che soddisfa una condizione specificata o un valore predefinito se tale elemento esiste. Questo metodo genera un'eccezione se più elementi soddisfano la condizione.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il singolo elemento della sequenza di input che soddisfa la condizione in <paramref name="predicate" /> o default (<paramref name="TSource" />) se non viene trovato un elemento di tale tipo.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> di cui restituire il singolo elemento.</param>
      <param name="predicate">Funzione per testare un elemento per una condizione.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="predicate" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SingleOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
      <summary>Restituisce in modo asincrono l'unico elemento di una sequenza o un valore predefinito se la sequenza è vuota. Questo metodo genera un'eccezione se esistono più elementi nella sequenza.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il singolo elemento della sequenza di input o default (<paramref name="TSource" />) se la sequenza non contiene elementi.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> di cui restituire il singolo elemento.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> dispone di più di un elemento.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.Skip``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{System.Int32}})">
      <summary>Ignora un numero specificato di elementi in una sequenza e quindi restituisce gli elementi rimanenti.</summary>
      <returns>Sequenza che contiene gli elementi presenti dopo l'indice specificato nella sequenza di input.</returns>
      <param name="source">Sequenza dalla quale vengono restituiti gli elementi.</param>
      <param name="countAccessor">Espressione che restituisce il numero di elementi da ignorare.</param>
      <typeparam name="TSource">Tipo degli elementi di source.</typeparam>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync(System.Linq.IQueryable{System.Decimal})">
      <summary>Calcola in modo asincrono la somma di una sequenza di valori <see cref="T:System.Decimal" />.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori della sequenza.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Decimal" /> di cui calcolare la somma.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync(System.Linq.IQueryable{System.Decimal},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la somma di una sequenza di valori <see cref="T:System.Decimal" />.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori della sequenza.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Decimal" /> di cui calcolare la somma.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync(System.Linq.IQueryable{System.Double})">
      <summary>Calcola in modo asincrono la somma di una sequenza di valori <see cref="T:System.Double" />.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori della sequenza.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Double" /> di cui calcolare la somma.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync(System.Linq.IQueryable{System.Double},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la somma di una sequenza di valori <see cref="T:System.Double" />.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori della sequenza.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Double" /> di cui calcolare la somma.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync(System.Linq.IQueryable{System.Int32})">
      <summary>Calcola in modo asincrono la somma di una sequenza di valori <see cref="T:System.Int32" />.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori della sequenza.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Int32" /> di cui calcolare la somma.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.OverflowException">Il numero di elementi in <paramref name="source" /> è maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync(System.Linq.IQueryable{System.Int32},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la somma di una sequenza di valori <see cref="T:System.Int32" />.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori della sequenza.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Int32" /> di cui calcolare la somma.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.OverflowException">Il numero di elementi in <paramref name="source" /> è maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync(System.Linq.IQueryable{System.Int64})">
      <summary>Calcola in modo asincrono la somma di una sequenza di valori <see cref="T:System.Int64" />.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori della sequenza.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Int64" /> di cui calcolare la somma.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.OverflowException">Il numero di elementi in <paramref name="source" /> è maggiore di <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync(System.Linq.IQueryable{System.Int64},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la somma di una sequenza di valori <see cref="T:System.Int64" />.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori della sequenza.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Int64" /> di cui calcolare la somma.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.OverflowException">Il numero di elementi in <paramref name="source" /> è maggiore di <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync(System.Linq.IQueryable{System.Nullable{System.Decimal}})">
      <summary>Calcola in modo asincrono la somma di una sequenza di valori <see cref="T:System.Decimal" /> che ammettono valori null.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori della sequenza.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Decimal" /> che ammettono valori null di cui calcolare la somma.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync(System.Linq.IQueryable{System.Nullable{System.Decimal}},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la somma di una sequenza di valori <see cref="T:System.Decimal" /> che ammettono valori null.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori della sequenza.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Decimal" /> che ammettono valori null di cui calcolare la somma.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.OverflowException">Il numero di elementi in <paramref name="source" /> è maggiore di <see cref="F:System.Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync(System.Linq.IQueryable{System.Nullable{System.Double}})">
      <summary>Calcola in modo asincrono la somma di una sequenza di valori <see cref="T:System.Double" /> che ammettono valori null.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori della sequenza.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Double" /> che ammettono valori null di cui calcolare la somma.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync(System.Linq.IQueryable{System.Nullable{System.Double}},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la somma di una sequenza di valori <see cref="T:System.Double" /> che ammettono valori null.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori della sequenza.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Double" /> che ammettono valori null di cui calcolare la somma.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync(System.Linq.IQueryable{System.Nullable{System.Int32}})">
      <summary>Calcola in modo asincrono la somma di una sequenza di valori <see cref="T:System.Int32" /> che ammettono valori null.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori della sequenza.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Int32" /> che ammettono valori null di cui calcolare la somma.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.OverflowException">Il numero di elementi in <paramref name="source" /> è maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync(System.Linq.IQueryable{System.Nullable{System.Int32}},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la somma di una sequenza di valori <see cref="T:System.Int32" /> che ammettono valori null.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori della sequenza.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Int32" /> che ammettono valori null di cui calcolare la somma.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.OverflowException">Il numero di elementi in <paramref name="source" /> è maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync(System.Linq.IQueryable{System.Nullable{System.Int64}})">
      <summary>Calcola in modo asincrono la somma di una sequenza di valori <see cref="T:System.Int64" /> che ammettono valori null.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori della sequenza.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Int64" /> che ammettono valori null di cui calcolare la somma.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.OverflowException">Il numero di elementi in <paramref name="source" /> è maggiore di <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync(System.Linq.IQueryable{System.Nullable{System.Int64}},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la somma di una sequenza di valori <see cref="T:System.Int64" /> che ammettono valori null.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori della sequenza.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Int64" /> che ammettono valori null di cui calcolare la somma.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.OverflowException">Il numero di elementi in <paramref name="source" /> è maggiore di <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync(System.Linq.IQueryable{System.Nullable{System.Single}})">
      <summary>Calcola in modo asincrono la somma di una sequenza di valori <see cref="T:System.Single" /> che ammettono valori null.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori della sequenza.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Single" /> che ammettono valori null di cui calcolare la somma.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync(System.Linq.IQueryable{System.Nullable{System.Single}},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la somma di una sequenza di valori <see cref="T:System.Single" /> che ammettono valori null.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori della sequenza.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Single" /> che ammettono valori null di cui calcolare la somma.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync(System.Linq.IQueryable{System.Single})">
      <summary>Calcola in modo asincrono la somma di una sequenza di valori <see cref="T:System.Single" />.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori della sequenza.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Single" /> di cui calcolare la somma.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync(System.Linq.IQueryable{System.Single},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la somma di una sequenza di valori <see cref="T:System.Single" />.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori della sequenza.</returns>
      <param name="source">Sequenza di valori <see cref="T:System.Single" /> di cui calcolare la somma.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
      <summary>Calcola in modo asincrono la somma della sequenza di valori <see cref="T:System.Decimal" /> ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori proiettati.</returns>
      <param name="source">Sequenza di valori di tipo <paramref name="TSource" />.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.OverflowException">Il numero di elementi in <paramref name="source" /> è maggiore di <see cref="F:System.Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la somma della sequenza di valori <see cref="T:System.Decimal" /> ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori proiettati.</returns>
      <param name="source">Sequenza di valori di tipo <paramref name="TSource" />.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.OverflowException">Il numero di elementi in <paramref name="source" /> è maggiore di <see cref="F:System.Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
      <summary>Calcola in modo asincrono la somma della sequenza di valori <see cref="T:System.Double" /> ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori proiettati.</returns>
      <param name="source">Sequenza di valori di tipo <paramref name="TSource" />.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la somma della sequenza di valori <see cref="T:System.Double" /> ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori proiettati.</returns>
      <param name="source">Sequenza di valori di tipo <paramref name="TSource" />.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
      <summary>Calcola in modo asincrono la somma della sequenza di valori <see cref="T:System.Int32" /> ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori proiettati.</returns>
      <param name="source">Sequenza di valori di tipo <paramref name="TSource" />.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.OverflowException">Il numero di elementi in <paramref name="source" /> è maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la somma della sequenza di valori <see cref="T:System.Int32" /> ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori proiettati.</returns>
      <param name="source">Sequenza di valori di tipo <paramref name="TSource" />.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.OverflowException">Il numero di elementi in <paramref name="source" /> è maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
      <summary>Calcola in modo asincrono la somma della sequenza di valori <see cref="T:System.Int64" /> ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori proiettati.</returns>
      <param name="source">Sequenza di valori di tipo <paramref name="TSource" />.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.OverflowException">Il numero di elementi in <paramref name="source" /> è maggiore di <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la somma della sequenza di valori <see cref="T:System.Int64" /> ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori proiettati.</returns>
      <param name="source">Sequenza di valori di tipo <paramref name="TSource" />.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.OverflowException">Il numero di elementi in <paramref name="source" /> è maggiore di <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
      <summary>Calcola in modo asincrono la somma della sequenza di valori <see cref="T:System.Decimal" /> che ammettono valori null ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori proiettati.</returns>
      <param name="source">Sequenza di valori di tipo <paramref name="TSource" />.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.OverflowException">Il numero di elementi in <paramref name="source" /> è maggiore di <see cref="F:System.Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la somma della sequenza di valori <see cref="T:System.Decimal" /> che ammettono valori null ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori proiettati.</returns>
      <param name="source">Sequenza di valori di tipo <paramref name="TSource" />.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.OverflowException">Il numero di elementi in <paramref name="source" /> è maggiore di <see cref="F:System.Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
      <summary>Calcola in modo asincrono la somma della sequenza di valori <see cref="T:System.Double" /> che ammettono valori null ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori proiettati.</returns>
      <param name="source">Sequenza di valori di tipo <paramref name="TSource" />.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la somma della sequenza di valori <see cref="T:System.Double" /> che ammettono valori null ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori proiettati.</returns>
      <param name="source">Sequenza di valori di tipo <paramref name="TSource" />.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
      <summary>Calcola in modo asincrono la somma della sequenza di valori <see cref="T:System.Int32" /> che ammettono valori null ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori proiettati.</returns>
      <param name="source">Sequenza di valori di tipo <paramref name="TSource" />.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.OverflowException">Il numero di elementi in <paramref name="source" /> è maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la somma della sequenza di valori <see cref="T:System.Int32" /> che ammettono valori null ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori proiettati.</returns>
      <param name="source">Sequenza di valori di tipo <paramref name="TSource" />.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.OverflowException">Il numero di elementi in <paramref name="source" /> è maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
      <summary>Calcola in modo asincrono la somma della sequenza di valori <see cref="T:System.Int64" /> che ammettono valori null ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori proiettati.</returns>
      <param name="source">Sequenza di valori di tipo <paramref name="TSource" />.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.OverflowException">Il numero di elementi in <paramref name="source" /> è maggiore di <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la somma della sequenza di valori <see cref="T:System.Int64" /> che ammettono valori null ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori proiettati.</returns>
      <param name="source">Sequenza di valori di tipo <paramref name="TSource" />.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
      <exception cref="T:System.OverflowException">Il numero di elementi in <paramref name="source" /> è maggiore di <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
      <summary>Calcola in modo asincrono la somma della sequenza di valori <see cref="T:System.Single" /> che ammettono valori null ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori proiettati.</returns>
      <param name="source">Sequenza di valori di tipo <paramref name="TSource" />.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la somma della sequenza di valori <see cref="T:System.Single" /> che ammettono valori null ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori proiettati.</returns>
      <param name="source">Sequenza di valori di tipo <paramref name="TSource" />.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
      <summary>Calcola in modo asincrono la somma della sequenza di valori <see cref="T:System.Single" /> ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori proiettati.</returns>
      <param name="source">Sequenza di valori di tipo <paramref name="TSource" />.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}},System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono la somma della sequenza di valori <see cref="T:System.Single" /> ottenuta chiamando una funzione di proiezione su ogni elemento della sequenza di input.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene la somma dei valori proiettati.</returns>
      <param name="source">Sequenza di valori di tipo <paramref name="TSource" />.</param>
      <param name="selector">Funzione di proiezione da applicare a ogni elemento.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="selector" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> non implementa <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider" /> .</exception>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.Take``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{System.Int32}})">
      <summary>Restituisce un numero specificato di elementi contigui dall'inizio di una sequenza.</summary>
      <returns>Sequenza che contiene il numero specificato di elementi, dall'inizio della sequenza di input.</returns>
      <param name="source">Sequenza dalla quale vengono restituiti gli elementi.</param>
      <param name="countAccessor">Espressione che restituisce il numero di elementi da restituire.</param>
      <typeparam name="TSource">Tipo degli elementi di source.</typeparam>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.ToArrayAsync``1(System.Linq.IQueryable{``0})">
      <summary>Crea una matrice da un oggetto <see cref="T:System.Linq.IQueryable`1" /> enumerandolo in modo asincrono.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene una matrice che contiene elementi della sequenza di input.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> da cui creare una matrice.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.ToArrayAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
      <summary>Crea una matrice da un oggetto <see cref="T:System.Linq.IQueryable`1" /> enumerandolo in modo asincrono.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene una matrice che contiene elementi della sequenza di input.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> da cui creare una matrice.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.ToDictionaryAsync``2(System.Linq.IQueryable{``0},System.Func{``0,``1})">
      <summary>Crea un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> da un oggetto <see cref="T:System.Linq.IQueryable`1" /> enumerandolo in modo asincrono in base a una funzione del selettore di chiave specificata.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> che contiene le chiavi e i valori selezionati.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> dal quale creare un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <param name="keySelector">Funzione per estrarre una chiave da ogni elemento.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TKey">Tipo della chiave restituita da <paramref name="keySelector" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.ToDictionaryAsync``2(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>Crea un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> da un oggetto <see cref="T:System.Linq.IQueryable`1" /> enumerandolo in modo asincrono in base a una funzione del selettore di chiave specificata e a un operatore di confronto.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> che contiene le chiavi e i valori selezionati.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> dal quale creare un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <param name="keySelector">Funzione per estrarre una chiave da ogni elemento.</param>
      <param name="comparer">Oggetto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> per confrontare le chiavi.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TKey">Tipo della chiave restituita da <paramref name="keySelector" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.ToDictionaryAsync``2(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1},System.Threading.CancellationToken)">
      <summary>Crea un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> da un oggetto <see cref="T:System.Linq.IQueryable`1" /> enumerandolo in modo asincrono in base a una funzione del selettore di chiave specificata e a un operatore di confronto.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> che contiene le chiavi e i valori selezionati.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> dal quale creare un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <param name="keySelector">Funzione per estrarre una chiave da ogni elemento.</param>
      <param name="comparer">Oggetto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> per confrontare le chiavi.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TKey">Tipo della chiave restituita da <paramref name="keySelector" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.ToDictionaryAsync``3(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <summary>Crea un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> da un oggetto <see cref="T:System.Linq.IQueryable`1" /> enumerandolo in modo asincrono in base a una funzione del selettore di chiave specificata e a una funzione del selettore di elemento.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> che contiene i valori di tipo <paramref name="TElement" /> selezionati dalla sequenza di input.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> dal quale creare un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <param name="keySelector">Funzione per estrarre una chiave da ogni elemento.</param>
      <param name="elementSelector">Funzione di trasformazione per produrre un valore dell'elemento di risultato da ogni elemento.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TKey">Tipo della chiave restituita da <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement">Tipo del valore restituito da <paramref name="elementSelector" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.ToDictionaryAsync``3(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>Crea un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> da un oggetto <see cref="T:System.Linq.IQueryable`1" /> enumerandolo in modo asincrono in base a una funzione del selettore di chiave specificata, a un operatore di confronto e a una funzione del selettore di elemento.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> che contiene i valori di tipo <paramref name="TElement" /> selezionati dalla sequenza di input.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> dal quale creare un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <param name="keySelector">Funzione per estrarre una chiave da ogni elemento.</param>
      <param name="elementSelector">Funzione di trasformazione per produrre un valore dell'elemento di risultato da ogni elemento.</param>
      <param name="comparer">Oggetto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> per confrontare le chiavi.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TKey">Tipo della chiave restituita da <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement">Tipo del valore restituito da <paramref name="elementSelector" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.ToDictionaryAsync``3(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Threading.CancellationToken)">
      <summary>Crea un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> da un oggetto <see cref="T:System.Linq.IQueryable`1" /> enumerandolo in modo asincrono in base a una funzione del selettore di chiave specificata, a un operatore di confronto e a una funzione del selettore di elemento.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> che contiene i valori di tipo <paramref name="TElement" /> selezionati dalla sequenza di input.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> dal quale creare un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <param name="keySelector">Funzione per estrarre una chiave da ogni elemento.</param>
      <param name="elementSelector">Funzione di trasformazione per produrre un valore dell'elemento di risultato da ogni elemento.</param>
      <param name="comparer">Oggetto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> per confrontare le chiavi.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TKey">Tipo della chiave restituita da <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement">Tipo del valore restituito da <paramref name="elementSelector" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.ToDictionaryAsync``3(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Threading.CancellationToken)">
      <summary>Crea un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> da un oggetto <see cref="T:System.Linq.IQueryable`1" /> enumerandolo in modo asincrono in base a una funzione del selettore di chiave specificata e a una funzione del selettore di elemento.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> che contiene i valori di tipo <paramref name="TElement" /> selezionati dalla sequenza di input.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> dal quale creare un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <param name="keySelector">Funzione per estrarre una chiave da ogni elemento.</param>
      <param name="elementSelector">Funzione di trasformazione per produrre un valore dell'elemento di risultato da ogni elemento.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TKey">Tipo della chiave restituita da <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement">Tipo del valore restituito da <paramref name="elementSelector" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.ToDictionaryAsync``2(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Threading.CancellationToken)">
      <summary>Crea un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> da un oggetto <see cref="T:System.Linq.IQueryable`1" /> enumerandolo in modo asincrono in base a una funzione del selettore di chiave specificata.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> che contiene le chiavi e i valori selezionati.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> dal quale creare un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <param name="keySelector">Funzione per estrarre una chiave da ogni elemento.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
      <typeparam name="TKey">Tipo della chiave restituita da <paramref name="keySelector" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.ToListAsync(System.Linq.IQueryable)">
      <summary>Crea un oggetto <see cref="T:System.Collections.Generic.List`1" /> da un oggetto <see cref="T:System.Linq.IQueryable" /> enumerandolo in modo asincrono.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene un oggetto <see cref="T:System.Collections.Generic.List`1" /> che contiene elementi della sequenza di input.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable" /> dal quale creare un oggetto <see cref="T:System.Collections.Generic.List`1" />.</param>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.ToListAsync(System.Linq.IQueryable,System.Threading.CancellationToken)">
      <summary>Crea un oggetto <see cref="T:System.Collections.Generic.List`1" /> da un oggetto <see cref="T:System.Linq.IQueryable" /> enumerandolo in modo asincrono.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene un oggetto <see cref="T:System.Collections.Generic.List`1" /> che contiene elementi della sequenza di input.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable" /> dal quale creare un oggetto <see cref="T:System.Collections.Generic.List`1" />.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.ToListAsync``1(System.Linq.IQueryable{``0})">
      <summary>Crea un oggetto <see cref="T:System.Collections.Generic.List`1" /> da un oggetto <see cref="T:System.Linq.IQueryable`1" /> enumerandolo in modo asincrono.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene un oggetto <see cref="T:System.Collections.Generic.List`1" /> che contiene elementi della sequenza di input.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> dal quale creare un oggetto <see cref="T:System.Collections.Generic.List`1" />.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.QueryableExtensions.ToListAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
      <summary>Crea un oggetto <see cref="T:System.Collections.Generic.List`1" /> da un oggetto <see cref="T:System.Linq.IQueryable`1" /> enumerandolo in modo asincrono.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene un oggetto <see cref="T:System.Collections.Generic.List`1" /> che contiene elementi della sequenza di input.</returns>
      <param name="source">Oggetto <see cref="T:System.Linq.IQueryable`1" /> dal quale creare un elenco .</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TSource">Tipo degli elementi di <paramref name="source" />.</typeparam>
    </member>
    <member name="T:System.Data.Entity.TransactionalBehavior">
      <summary>Controlla il comportamento di creazione delle transazioni durante l'esecuzione di un comando o di una query di database.</summary>
    </member>
    <member name="F:System.Data.Entity.TransactionalBehavior.DoNotEnsureTransaction">
      <summary>Se invece sono presenti transazioni esistenti, verranno usate; in caso contrario, il comando o la query verrà eseguita senza transazioni.</summary>
    </member>
    <member name="F:System.Data.Entity.TransactionalBehavior.EnsureTransaction">
      <summary>Se non sono presenti transazioni, ne verrà usata una nuova per l'operazione.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.EntityCommandCompilationException">
      <summary>Rappresenta un errore durante il tentativo di preparazione o esecuzione di CommandCompilation.Questa eccezione vuole essere un'eccezione comune da rilevare per contenere le eccezioni del provider (SqlException, OracleException) quando si utilizza EntityCommand per eseguire istruzioni.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.EntityCommandCompilationException.#ctor">
      <summary>Inizializza una nuova istanza di <see cref="T:System.Data.Entity.Core.EntityCommandCompilationException" />, nessun messaggio, nessuna eccezione interna.Probabilmente non dovrebbe esistere, ma soddisfa FxCop.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.EntityCommandCompilationException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza di <see cref="T:System.Data.Entity.Core.EntityCommandCompilationException" />, con messaggio, nessuna eccezione interna.Probabilmente non dovrebbe esistere, ma soddisfa FxCop.</summary>
      <param name="message">Messaggio.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityCommandCompilationException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza di <see cref="T:System.Data.Entity.Core.EntityCommandCompilationException" />, con messaggio e un'istanza di un'eccezione interna.</summary>
      <param name="message">Messaggio.</param>
      <param name="innerException">Eccezione interna.</param>
    </member>
    <member name="T:System.Data.Entity.Core.EntityCommandExecutionException">
      <summary>Rappresenta un errore durante il tentativo di preparazione o esecuzione di CommandExecution.Questa eccezione vuole essere un'eccezione comune da rilevare per contenere le eccezioni del provider (SqlException, OracleException) quando si utilizza EntityCommand per eseguire istruzioni.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.EntityCommandExecutionException.#ctor">
      <summary>Inizializza una nuova istanza di EntityCommandExecutionException, nessun messaggio, nessuna eccezione interna.Probabilmente non dovrebbe esistere, ma soddisfa FxCop.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.EntityCommandExecutionException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza di EntityCommandExecutionException, con messaggio, nessuna eccezione interna.Probabilmente non dovrebbe esistere, ma soddisfa FxCop.</summary>
      <param name="message">Messaggio in cui viene descritto l'errore.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityCommandExecutionException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza di EntityCommandExecutionException, con messaggio e un'istanza di un'eccezione interna.</summary>
      <param name="message">Messaggio in cui viene descritto l'errore.</param>
      <param name="innerException">Eccezione interna che ha causato questa eccezione corrente.</param>
    </member>
    <member name="T:System.Data.Entity.Core.EntityException">
      <summary>Fornisce l'eccezione utilizzata dal client dell'entità.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.EntityException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.EntityException" /> con i valori predefiniti.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.EntityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.EntityException" />.</summary>
      <param name="info">Informazioni di serializzazione.</param>
      <param name="context">Contesto di flusso.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.EntityException" /> che accetta un messaggio preformattato.</summary>
      <param name="message">Messaggio di errore localizzato.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.EntityException" /> che accetta un messaggio preformattato e un'eccezione interna.</summary>
      <param name="message">Messaggio di errore localizzato.</param>
      <param name="innerException">Eccezione interna.</param>
    </member>
    <member name="T:System.Data.Entity.Core.EntityKey">
      <summary>Rappresenta un identificatore di un'entità.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.EntityKey.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.EntityKey" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.EntityKey" /> con i valori chiave specificati.</summary>
      <param name="qualifiedEntitySetName">Nome di EntitySet, completato dal nome di EntityContainer dell'entità.</param>
      <param name="entityKeyValues">Coppie chiave-valore che identificano l'entità.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.EntityKeyMember})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.EntityKey" /> con i valori chiave specificati.</summary>
      <param name="qualifiedEntitySetName">Nome di EntitySet, completato dal nome di EntityContainer dell'entità.</param>
      <param name="entityKeyValues">Coppie chiave-valore che identificano l'entità.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityKey.#ctor(System.String,System.String,System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.EntityKey" /> con il valore e il nome della chiave singola specificati.</summary>
      <param name="qualifiedEntitySetName">Nome di EntitySet, completato dal nome di EntityContainer dell'entità.</param>
      <param name="keyName">Nome della chiave che identifica l'entità.</param>
      <param name="keyValue">Valore della chiave che identifica l'entità.</param>
    </member>
    <member name="P:System.Data.Entity.Core.EntityKey.EntityContainerName">
      <summary>Ottiene o imposta il nome di EntityContainer che identifica il contenitore che contiene l'entità.</summary>
      <returns>Nome di EntityContainer che identifica il contenitore che contiene l'entità.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityKey.EntityKeyValues">
      <summary>Ottiene o imposta i valori della chiave che identificano l'entità.</summary>
      <returns>Valori della chiave che identificano l'entità.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityKey.EntityNotValidKey">
      <summary>Ottiene un elemento <see cref="T:System.Data.Entity.Core.EntityKey" /> che identifica un'entità risultante da un'operazione TREAT non eseguita correttamente.</summary>
      <returns>Elemento <see cref="T:System.Data.Entity.Core.EntityKey" /> che identifica un'entità risultante da un'operazione TREAT non eseguita correttamente.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityKey.EntitySetName">
      <summary>Ottiene o imposta il nome di EntitySet che identifica il set di entità che contiene l'entità.</summary>
      <returns>Nome di EntitySet che identifica il set di entità che contiene l'entità.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.EntityKey.Equals(System.Data.Entity.Core.EntityKey)">
      <summary>Indica un valore che specifica se questa istanza è uguale alla chiave specificata.</summary>
      <returns>true se questa istanza è uguale alla chiave specificata; in caso contrario, false.</returns>
      <param name="other">Chiave da confrontare a questa istanza.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityKey.Equals(System.Object)">
      <summary>Indica un valore che specifica se questa istanza è uguale alla chiave specificata.</summary>
      <returns>true se questa istanza è uguale alla chiave specificata; in caso contrario, false.</returns>
      <param name="obj">Chiave da confrontare a questa istanza.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityKey.GetEntitySet(System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace)">
      <summary>Ottiene il set di entità per questa chiave di entità dall'area di lavoro dei metadati specificata, in base al nome del set di entità e del contenitore di entità.</summary>
      <returns>Set di entità presente nell'area di lavoro specificata per questa chiave di entità.</returns>
      <param name="metadataWorkspace">Area di lavoro in cui cercare il set di entità.</param>
      <exception cref="T:System.ArgumentException">Impossibile trovare il set di entità nell'area di lavoro.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.EntityKey.GetHashCode">
      <summary>Restituisce un codice hash basato su valori per consentire l'utilizzo di EntityKey nelle tabelle hash.</summary>
      <returns>Valore hash di <see cref="T:System.Data.Entity.Core.EntityKey" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityKey.IsTemporary">
      <summary>Ottiene un valore che indica se questa chiave è temporanea.</summary>
      <returns>true se la chiave è una chiave temporanea; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityKey.NoEntitySetKey">
      <summary>Ottiene un elemento <see cref="T:System.Data.Entity.Core.EntityKey" /> Singleton mediante il quale viene identificata un'entità di sola lettura.</summary>
      <returns>Elemento <see cref="T:System.Data.Entity.Core.EntityKey" /> Singleton mediante il quale viene identificata un'entità di sola lettura</returns>
    </member>
    <member name="M:System.Data.Entity.Core.EntityKey.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>Chiama dopo la deserializzazione di <see cref="T:System.Data.Entity.Core.EntityKey" />.</summary>
      <param name="context">Contesto di serializzazione.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityKey.OnDeserializing(System.Runtime.Serialization.StreamingContext)">
      <summary>Chiama dopo la deserializzazione di <see cref="T:System.Data.Entity.Core.EntityKey" />.</summary>
      <param name="context">Contesto di serializzazione.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityKey.op_Equality(System.Data.Entity.Core.EntityKey,System.Data.Entity.Core.EntityKey)">
      <summary>Indica un valore che specifica se le due chiavi sono uguali.</summary>
      <returns>true se le due chiavi sono uguali; in caso contrario, false.</returns>
      <param name="key1">Chiave da confrontare.</param>
      <param name="key2">Chiave da confrontare.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityKey.op_Inequality(System.Data.Entity.Core.EntityKey,System.Data.Entity.Core.EntityKey)">
      <summary>Indica un valore che specifica se le due chiavi non sono uguali.</summary>
      <returns>true se le due chiavi non sono uguali; in caso contrario, false.</returns>
      <param name="key1">Chiave da confrontare.</param>
      <param name="key2">Chiave da confrontare.</param>
    </member>
    <member name="T:System.Data.Entity.Core.EntityKeyMember">
      <summary>Informazioni su una chiave che fa parte di un elemento EntityKey.Un membro chiave contiene il nome e il valore della chiave.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.EntityKeyMember.#ctor">
      <summary>Crea un elemento EntityKeyMember vuoto.Questo costruttore viene utilizzato dalla serializzazione.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.EntityKeyMember.#ctor(System.String,System.Object)">
      <summary>     Crea un nuovo elemento EntityKeyMember con il valore e il nome della chiave specificati. </summary>
      <param name="keyName"> Nome della chiave </param>
      <param name="keyValue"> Valore della chiave </param>
    </member>
    <member name="P:System.Data.Entity.Core.EntityKeyMember.Key">
      <summary>     Nome della chiave </summary>
    </member>
    <member name="M:System.Data.Entity.Core.EntityKeyMember.ToString">
      <summary>     Restituisce una rappresentazione in forma di stringa di EntityKeyMember </summary>
      <returns> Rappresentazione in forma di stringa di EntityKeyMember </returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityKeyMember.Value">
      <summary>     Valore della chiave </summary>
    </member>
    <member name="T:System.Data.Entity.Core.EntitySqlException">
      <summary>Rappresenta un'eccezione di compilazione della query eSQL Query. Di seguito sono elencati i tipi principali di condizioni eccezionali che possono generare questa eccezione:     1) Errori di sintassi: generati durante l'analisi del testo della query e quando una query specifica non è conforme alla grammatica formale di eSQL.     2) Errori di semantica: generati quando le regole di semantica del linguaggio eSQL non sono soddisfatte, ad esempio quando i medatati o le informazioni dello schema non sono precisi o presenti oppure in caso di errori di convalida del tipo, violazioni delle regole di ambito, uso di variabili non definite e così via.Per ulteriori informazioni, vedere la specifica del linguaggio eSQL.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.EntitySqlException.#ctor">
      <summary>Inizializza una nuova istanza di <see cref="T:System.Data.Entity.Core.EntitySqlException" /> con un messaggio di errore generico.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.EntitySqlException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza di <see cref="T:System.Data.Entity.Core.EntitySqlException" /> con il messaggio specificato.</summary>
      <param name="message">Messaggio di errore.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntitySqlException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza di <see cref="T:System.Data.Entity.Core.EntitySqlException" /> con l'istanza di innerException e il messaggio specificato.</summary>
      <param name="message">Messaggio di errore.</param>
      <param name="innerException">Eccezione interna.</param>
    </member>
    <member name="P:System.Data.Entity.Core.EntitySqlException.Column">
      <summary>Ottiene il numero di colonna approssimativo in cui si è verificato l'errore.</summary>
      <returns>Numero di colonna approssimativo in cui si è verificato l'errore.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntitySqlException.ErrorContext">
      <summary>Ottiene il contesto approssimativo in cui si è verificato l'errore, se disponibile.</summary>
      <returns>Contesto approssimativo in cui si è verificato l'errore, se disponibile.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntitySqlException.ErrorDescription">
      <summary>Ottiene la descrizione dell'errore che spiega il motivo per cui la query non è stata accettata o l'elemento String.Empty è vuoto </summary>
      <returns>Descrizione dell'errore che spiega il motivo per cui la query non è stata accettata o l'elemento String.Empty è vuoto.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntitySqlException.Line">
      <summary>Ottiene il numero di riga approssimativo in cui si è verificato l'errore </summary>
      <returns>Numero di riga approssimativo in cui si è verificato l'errore.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.IExtendedDataRecord">
      <summary>Fornisce l'interfaccia DataRecord che supporta i tipi strutturati e informazioni sui metadati dettagliate.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.IExtendedDataRecord.DataRecordInfo">
      <summary>Ottiene la proprietà DataRecordInfo che descrive il contenuto del record.</summary>
      <returns>Proprietà DataRecordInfo che descrive il contenuto del record.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.IExtendedDataRecord.GetDataReader(System.Int32)">
      <summary>Restituisce lettori annidati come oggetti DbDataReader.</summary>
      <returns>Lettori annidati come oggetti DbDataReader.</returns>
      <param name="i">Ordinale della colonna.</param>
    </member>
    <member name="M:System.Data.Entity.Core.IExtendedDataRecord.GetDataRecord(System.Int32)">
      <summary>Ottiene un oggetto DbDataRecord con l'indice specificato.</summary>
      <returns>Oggetto DbDataRecord.</returns>
      <param name="i">Indice della riga.</param>
    </member>
    <member name="T:System.Data.Entity.Core.InvalidCommandTreeException">
      <summary>     Generata per indicare che un albero dei comandi non è valido. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.InvalidCommandTreeException.#ctor">
      <summary>     Costruisce un nuovo InvalidCommandTreeException con un messaggio predefinito. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.InvalidCommandTreeException.#ctor(System.String)">
      <summary>     Costruisce un nuovo InvalidCommandTreeException con il messaggio specificato. </summary>
      <param name="message"> Messaggio dell'eccezione </param>
    </member>
    <member name="M:System.Data.Entity.Core.InvalidCommandTreeException.#ctor(System.String,System.Exception)">
      <summary>     Costruisce un nuovo InvalidCommandTreeException con il messaggio specificato e un'eccezione interna. </summary>
      <param name="message"> Messaggio dell'eccezione. </param>
      <param name="innerException"> Eccezione che rappresenta la causa di questa InvalidCommandTreeException. </param>
    </member>
    <member name="T:System.Data.Entity.Core.MappingException">
      <summary>Classe di eccezioni di mapping.Si noti che questa classe presenta uno stato, pertanto se se ne modificano gli elementi interni, le conseguenze possono essere sostanziali</summary>
    </member>
    <member name="M:System.Data.Entity.Core.MappingException.#ctor">
      <summary>     costruttore con messaggio predefinito </summary>
    </member>
    <member name="M:System.Data.Entity.Core.MappingException.#ctor(System.String)">
      <summary>     costruttore predefinito </summary>
      <param name="message"> messaggio di errore localizzato </param>
    </member>
    <member name="M:System.Data.Entity.Core.MappingException.#ctor(System.String,System.Exception)">
      <summary>     costruttore </summary>
      <param name="message"> messaggio di errore localizzato </param>
      <param name="innerException"> eccezione interna </param>
    </member>
    <member name="T:System.Data.Entity.Core.MetadataException">
      <summary>     classe di eccezione dei metadati </summary>
    </member>
    <member name="M:System.Data.Entity.Core.MetadataException.#ctor">
      <summary>     costruttore con messaggio predefinito </summary>
    </member>
    <member name="M:System.Data.Entity.Core.MetadataException.#ctor(System.String)">
      <summary>     costruttore predefinito </summary>
      <param name="message"> messaggio di errore localizzato </param>
    </member>
    <member name="M:System.Data.Entity.Core.MetadataException.#ctor(System.String,System.Exception)">
      <summary>     costruttore </summary>
      <param name="message"> messaggio di errore localizzato </param>
      <param name="innerException"> eccezione interna </param>
    </member>
    <member name="T:System.Data.Entity.Core.ObjectNotFoundException">
      <summary>Questa eccezione viene generata quando un oggetto richiesto non viene trovato nell'archivio.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.ObjectNotFoundException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.ObjectNotFoundException" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.ObjectNotFoundException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.ObjectNotFoundException" />.</summary>
      <param name="message">Messaggio di errore localizzato.</param>
    </member>
    <member name="M:System.Data.Entity.Core.ObjectNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.ObjectNotFoundException" /> e del costruttore che accetta un messaggio e un'eccezione interna.</summary>
      <param name="message">Messaggio di errore localizzato.</param>
      <param name="innerException">Eccezione interna.</param>
    </member>
    <member name="T:System.Data.Entity.Core.OptimisticConcurrencyException">
      <summary>Questa eccezione viene generata quando un'operazione di aggiornamento viola il vincolo di concorrenza.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.OptimisticConcurrencyException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.OptimisticConcurrencyException" /> utilizzando i valori predefiniti.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.OptimisticConcurrencyException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.OptimisticConcurrencyException" /> con il messaggio specificato.</summary>
      <param name="message">Messaggio associato all'eccezione.</param>
    </member>
    <member name="M:System.Data.Entity.Core.OptimisticConcurrencyException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.OptimisticConcurrencyException" /> con il messaggio specificato e un'eccezione interna.</summary>
      <param name="message">Messaggio associato all'eccezione.</param>
      <param name="innerException">Errore che ha causato l'eccezione.</param>
    </member>
    <member name="M:System.Data.Entity.Core.OptimisticConcurrencyException.#ctor(System.String,System.Exception,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Objects.ObjectStateEntry})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.OptimisticConcurrencyException" /> con il messaggio specificato e un'eccezione interna.</summary>
      <param name="message">Messaggio.</param>
      <param name="innerException">Errore che ha causato l'eccezione.</param>
      <param name="stateEntries">Voci di stato.</param>
    </member>
    <member name="T:System.Data.Entity.Core.PropertyConstraintException">
      <summary>Rappresenta la classe di eccezioni del vincolo di proprietà.Si noti che questa classe presenta uno stato, pertanto se se ne modificano gli elementi interni, le conseguenze possono essere sostanziali.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.PropertyConstraintException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.PropertyConstraintException" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.PropertyConstraintException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.PropertyConstraintException" />.</summary>
      <param name="message">Messaggio di errore localizzato.</param>
    </member>
    <member name="M:System.Data.Entity.Core.PropertyConstraintException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.PropertyConstraintException" /> con il messaggio fornito e un'eccezione interna </summary>
      <param name="message">Messaggio di errore localizzato.</param>
      <param name="innerException">Eccezione interna.</param>
    </member>
    <member name="M:System.Data.Entity.Core.PropertyConstraintException.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.PropertyConstraintException" />.</summary>
      <param name="message">Messaggio di errore localizzato.</param>
      <param name="propertyName">Nome della proprietà.</param>
    </member>
    <member name="M:System.Data.Entity.Core.PropertyConstraintException.#ctor(System.String,System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.PropertyConstraintException" />.</summary>
      <param name="message">Messaggio di errore localizzato.</param>
      <param name="propertyName">Nome della proprietà.</param>
      <param name="innerException">Eccezione interna.</param>
    </member>
    <member name="P:System.Data.Entity.Core.PropertyConstraintException.PropertyName">
      <summary>Ottiene il nome della proprietà che ha violato il vincolo.</summary>
      <returns>Nome della proprietà che ha violato il vincolo.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.ProviderIncompatibleException">
      <summary>Eccezione che viene generata quando il provider dell'archivio mostra un comportamento incompatibile con il provider client di entità.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.ProviderIncompatibleException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.ProviderIncompatibleException" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.ProviderIncompatibleException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.ProviderIncompatibleException" /> con il messaggio di errore specificato.</summary>
      <param name="message">Messaggio di errore in cui viene descritta l'eccezione.</param>
    </member>
    <member name="M:System.Data.Entity.Core.ProviderIncompatibleException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.ProviderIncompatibleException" /> con il messaggio di errore e l'eccezione interna specificati.</summary>
      <param name="message">Messaggio di errore in cui viene descritta l'eccezione.</param>
      <param name="innerException">Eccezione interna che ha determinato l'eccezione corrente.</param>
    </member>
    <member name="T:System.Data.Entity.Core.UpdateException">
      <summary>Eccezione generata durante l'errore di aggiornamento del salvataggio delle modifiche nell'archiviazione.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.UpdateException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.UpdateException" /> con i valori predefiniti.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.UpdateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.UpdateException" /> con dati serializzati.</summary>
      <param name="info">Oggetto che include le informazioni serializzate sull'eccezione.</param>
      <param name="context">Informazioni contestuali sull'origine o sulla destinazione.</param>
    </member>
    <member name="M:System.Data.Entity.Core.UpdateException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.UpdateException" /> con messaggio di errore.</summary>
      <param name="message">Messaggio di errore in cui viene descritta l'eccezione.</param>
    </member>
    <member name="M:System.Data.Entity.Core.UpdateException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.UpdateException" /> con un messaggio di errore e un'eccezione interna. </summary>
      <param name="message">Messaggio di errore in cui viene descritta l'eccezione.</param>
      <param name="innerException">Eccezione interna che ha determinato l'eccezione corrente.</param>
    </member>
    <member name="M:System.Data.Entity.Core.UpdateException.#ctor(System.String,System.Exception,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Objects.ObjectStateEntry})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.UpdateException" /> con un messaggio di errore, un'eccezione interna e voci di stato.</summary>
      <param name="message">Messaggio di errore in cui viene descritta l'eccezione.</param>
      <param name="innerException">Eccezione interna che ha determinato l'eccezione corrente.</param>
      <param name="stateEntries">Voci di stato interessate dall'errore.</param>
    </member>
    <member name="P:System.Data.Entity.Core.UpdateException.StateEntries">
      <summary>Ottiene le voci di stato interessate dall'errore. </summary>
      <returns>Voci di stato interessate dall'errore.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Common.DataRecordInfo">
      <summary>Classe DataRecordInfo che fornisce un modo semplice per accedere sia alle informazioni sul tipo sia a quelle sulle colonne.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DataRecordInfo.#ctor(System.Data.Entity.Core.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.EdmMember})">
      <summary>Inizializza un nuovo oggetto <see cref="T:System.Data.Common.DbDataRecord" /> per un tipo specifico con una raccolta enumerabile di campi dati.</summary>
      <param name="metadata">Metadati per il tipo rappresentato da questo oggetto, forniti da <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" />.</param>
      <param name="memberInfo">Raccolta enumerabile di oggetti <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmMember" /> che rappresentano le informazioni relative alle colonne.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Common.DataRecordInfo.FieldMetadata">
      <summary>Ottiene un oggetto <see cref="T:System.Data.Entity.Core.Common.FieldMetadata" /> per questo oggetto <see cref="P:System.Data.Entity.Core.IExtendedDataRecord.DataRecordInfo" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.FieldMetadata" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Common.DataRecordInfo.RecordType">
      <summary>Ottiene le informazioni sul tipo per questo oggetto come oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" />.</summary>
      <returns>Valore di <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" />.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Common.DbCommandDefinition">
      <summary>Rappresenta una definizione di comando preparata che può essere memorizzata nella cache e riutilizzata per evitare l'operazione di ripreparazione di un comando.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbCommandDefinition.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Common.DbCommandDefinition" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbCommandDefinition.#ctor(System.Data.Common.DbCommand,System.Func{System.Data.Common.DbCommand,System.Data.Common.DbCommand})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Common.DbCommandDefinition" /> usando l'oggetto <see cref="T:System.Data.Common.DbCommand" /> fornito.</summary>
      <param name="prototype">Oggetto <see cref="T:System.Data.Common.DbCommand" /> fornito.</param>
      <param name="cloneMethod">metodo usato per clonare l'oggetto <see cref="T:System.Data.Common.DbCommand" /></param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbCommandDefinition.CreateCommand">
      <summary>Crea e restituisce un oggetto DbCommand che può essere eseguito.</summary>
      <returns>Comando per il database.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Common.DbProviderManifest">
      <summary>Interfaccia dei metadati per tutti i tipi CLR</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderManifest.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Common.DbProviderManifest" />.</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.DbProviderManifest.CollationFacetName">
      <summary>Nome del facet delle regole di confronto</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.DbProviderManifest.ConceptualSchemaDefinition">
      <summary>Valore da passare a GetInformation per ottenere ConceptualSchemaDefinition</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.DbProviderManifest.ConceptualSchemaDefinitionVersion3">
      <summary>Valore da passare a GetInformation per ottenere ConceptualSchemaDefinitionVersion3</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.DbProviderManifest.DefaultValueFacetName">
      <summary>Nome del facet DefaultValue</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderManifest.EscapeLikeArgument(System.String)">
      <summary>I writer del provider devono eseguire l'override di questo metodo per restituire l'argomento con l'escape dei caratteri jolly e dei caratteri di escape.Il metodo è utilizzato solo se SupportsEscapingLikeArgument restituisce true.</summary>
      <returns>Argomento con l'escape dei caratteri jolly e dei caratteri di escape.</returns>
      <param name="argument">Argomento di cui effettuare l'escape.</param>
    </member>
    <member name="F:System.Data.Entity.Core.Common.DbProviderManifest.FixedLengthFacetName">
      <summary>Nome del facet FixedLength</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderManifest.GetDbInformation(System.String)">
      <summary>Quando sottoposto a override in una classe derivata, questo metodo restituisce informazioni specifiche del provider.</summary>
      <returns>Oggetto XmlReader che rappresenta il mapping al catalogo dell'archivio dati sottostante.</returns>
      <param name="informationType">Tipo di informazioni da restituire.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderManifest.GetEdmType(System.Data.Entity.Core.Metadata.Edm.TypeUsage)">
      <summary>Quando sottoposto a override in una classe derivata, questo metodo esegue il mapping del tipo di archiviazione specificato e di un set di facet per tale tipo a un tipo EDM.</summary>
      <returns>Istanza di <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" /> che descrive un tipo EDM e un set di facet per tale tipo.</returns>
      <param name="storeType">Istanza di TypeUsage che descrive un tipo di archiviazione e un set di facet per tale tipo di cui eseguire il mapping al tipo EDM.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderManifest.GetFacetDescriptions(System.Data.Entity.Core.Metadata.Edm.EdmType)">
      <summary>Restituisce gli oggetti FacetDescription per un tipo specifico.</summary>
      <returns>Oggetti FacetDescription per il tipo EDM specificato.</returns>
      <param name="edmType">Tipo EDM per cui restituire la descrizione dei facet.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderManifest.GetInformation(System.String)">
      <summary>Ottiene le informazioni specifiche del provider.</summary>
      <returns>Informazioni specifiche del provider.</returns>
      <param name="informationType">Tipo di informazioni da restituire.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderManifest.GetStoreFunctions">
      <summary>Quando sottoposto a override in una classe derivata, restituisce una raccolta di funzioni EDM supportate dal manifesto del provider.</summary>
      <returns>Raccolta di funzioni EDM.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderManifest.GetStoreType(System.Data.Entity.Core.Metadata.Edm.TypeUsage)">
      <summary>Quando sottoposto a override in una classe derivata, questo metodo esegue il mapping del tipo EDM specificato e di un set di facet per tale tipo a un tipo di archiviazione.</summary>
      <returns>Istanza di TypeUsage che descrive un tipo di archiviazione e un set di facet per tale tipo.</returns>
      <param name="edmType">Istanza di TypeUsage che descrive il tipo EDM e un set di facet per tale tipo di cui eseguire il mapping al tipo di archiviazione.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderManifest.GetStoreTypes">
      <summary>Quando sottoposto a override in una classe derivata, restituisce il set di tipi primitivi supportati dall'origine dati.</summary>
      <returns>Set di tipi supportati dall'origine dati.</returns>
    </member>
    <member name="F:System.Data.Entity.Core.Common.DbProviderManifest.IsStrictFacetName">
      <summary>Nome del facet IsStrict</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.DbProviderManifest.MaxLengthFacetName">
      <summary>Nome del facet MaxLength</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.DbProviderManifest.NamespaceName">
      <summary>Ottiene lo spazio dei nomi utilizzato da questo manifesto del provider.</summary>
      <returns>Spazio dei nomi utilizzato da questo manifesto del provider.</returns>
    </member>
    <member name="F:System.Data.Entity.Core.Common.DbProviderManifest.NullableFacetName">
      <summary>Nome del facet Nullable</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.DbProviderManifest.PrecisionFacetName">
      <summary>Nome del facet Precision</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.DbProviderManifest.ScaleFacetName">
      <summary>Nome del facet Scale</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.DbProviderManifest.SridFacetName">
      <summary>Nome del facet SRID</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.DbProviderManifest.StoreSchemaDefinition">
      <summary>Valore da passare a GetInformation per ottenere StoreSchemaDefinition</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.DbProviderManifest.StoreSchemaDefinitionVersion3">
      <summary>Valore da passare a GetInformation per ottenere StoreSchemaDefinitionVersion3</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.DbProviderManifest.StoreSchemaMapping">
      <summary>Valore da passare a GetInformation per ottenere StoreSchemaMapping</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.DbProviderManifest.StoreSchemaMappingVersion3">
      <summary>Valore da passare a GetInformation per ottenere StoreSchemaMappingVersion3</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderManifest.SupportsEscapingLikeArgument(System.Char@)">
      <summary>Indica se il provider supporta l'utilizzo di stringhe di escape come modelli in un'espressione Like.</summary>
      <returns>True se il provider supporta l'utilizzo di stringhe di escape come modelli in un'espressione Like; in caso contrario, false.</returns>
      <param name="escapeCharacter">Se il provider supporta l'escape, carattere utilizzato come carattere di escape.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderManifest.SupportsInExpression">
      <summary>Restituisce un valore booleano che specifica se il provider può gestire alberi delle espressioni contenenti istanze di DbInExpression.L'implementazione predefinita restituisce false per la compatibilità con le versioni precedenti.Le classi derivate possono eseguire l'override di questo metodo.</summary>
      <returns>false</returns>
    </member>
    <member name="F:System.Data.Entity.Core.Common.DbProviderManifest.UnicodeFacetName">
      <summary>Nome del facet Unicode</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.DbProviderServices">
      <summary>Factory per la compilazione delle definizioni dei comandi. Usare il tipo di questo oggetto come argomento del metodo IServiceProvider.GetService sulla factory del provider.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Common.DbProviderServices" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.AddDependencyResolver(System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver)">
      <summary>Aggiunge un oggetto <see cref="T:System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver" /> che verrà usato per risolvere i servizi del provider predefinito aggiuntivi quando un tipo derivato è registrato come provider EF usando una voce del file di configurazione dell'applicazione o attraverso la registrazione basata su codice in <see cref="T:System.Data.Entity.DbConfiguration" />.</summary>
      <param name="resolver">Sistema di risoluzione da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.CloneDbCommand(System.Data.Common.DbCommand)">
      <summary>Vedere il problema 2390. La clonazione della proprietà DesignTimeVisible nell'oggetto DbCommand può causare deadlock.Consentire quindi l'override delle sottoclassi in questo punto.</summary>
      <returns>clone dell'oggetto <see cref="T:System.Data.Common.DbCommand" /></returns>
      <param name="fromDbCommand">oggetto <see cref="T:System.Data.Common.DbCommand" /> da clonare</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.DbCommand)">
      <summary>Crea l'oggetto DbCommandDefinition predefinito basato sul comando del prototipo. Questo metodo è destinato ai writer del provider per la compilazione di una definizione di comando predefinita da un comando.Nota: verrà clonato il prototipo</summary>
      <returns>oggetto definizione del comando eseguibile</returns>
      <param name="prototype">comando del prototipo</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.CreateCommandDefinition(System.Data.Entity.Core.Common.CommandTrees.DbCommandTree)">
      <summary>Crea un oggetto Definizione comando dato un albero dei comandi.</summary>
      <returns>oggetto definizione del comando eseguibile</returns>
      <param name="commandTree">albero dei comandi per l'istruzione</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.CreateCommandDefinition(System.Data.Entity.Core.Common.DbProviderManifest,System.Data.Entity.Core.Common.CommandTrees.DbCommandTree)">
      <summary>Crea una definizione di comando dal manifesto e dall'albero dei comandi specificati.</summary>
      <returns>Definizione di comando creata.</returns>
      <param name="providerManifest">Manifesto.</param>
      <param name="commandTree">Albero dei comandi.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.CreateDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Entity.Core.Metadata.Edm.StoreItemCollection)">
      <summary>Crea un database indicato dalla connessione e crea oggetti dello schema (tabelle, chiavi primarie, chiavi esterne) in base al contenuto di storeItemCollection.</summary>
      <param name="connection">Connessione a un database che non esiste che deve essere creato e popolato con gli oggetti dell'archivio indicati dal parametro storeItemCollection.</param>
      <param name="commandTimeout">Timeout di esecuzione per i comandi necessari per creare il database.</param>
      <param name="storeItemCollection">Raccolta di tutti gli elementi dell'archivio in base ai quali dovrà essere creato lo script.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.CreateDatabaseScript(System.String,System.Data.Entity.Core.Metadata.Edm.StoreItemCollection)">
      <summary>Genera uno script Data Definition Language (DDL) che crea oggetti dello schema (tabelle, chiavi primarie, chiavi esterne) in base al contenuto del parametro StoreItemCollection e la cui destinazione è la versione del database corrispondente al token del manifesto del provider.</summary>
      <returns>Script DDL che crea oggetti dello schema in base al contenuto del parametro StoreItemCollection e la cui destinazione è la versione del database corrispondente al token del manifesto del provider.</returns>
      <param name="providerManifestToken">Token del manifesto del provider che identifica la versione di destinazione.</param>
      <param name="storeItemCollection">Struttura del database.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.CreateDbCommandDefinition(System.Data.Entity.Core.Common.DbProviderManifest,System.Data.Entity.Core.Common.CommandTrees.DbCommandTree)">
      <summary>Crea un oggetto definizione di comando per il manifesto del provider e l'albero dei comandi specificati.</summary>
      <returns>Oggetto definizione comando eseguibile.</returns>
      <param name="providerManifest">Manifesto del provider recuperato in precedenza dal provider dell'archivio.</param>
      <param name="commandTree">Albero dei comandi per l'istruzione.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.DatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Entity.Core.Metadata.Edm.StoreItemCollection)">
      <summary>Restituisce un valore che indica se un database specifico esiste sul server.</summary>
      <returns>True se il provider è in grado di dedurre il database solo in base alla connessione.</returns>
      <param name="connection">Connessione a un database la cui esistenza viene verificata da questo metodo.</param>
      <param name="commandTimeout">Timeout di esecuzione per tutti i comandi necessari per determinare l'esistenza del database.</param>
      <param name="storeItemCollection">Raccolta di tutti gli elementi dell'archivio dal modello.Parametro non più usato per determinare l'esistenza del database.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.DatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Lazy{System.Data.Entity.Core.Metadata.Edm.StoreItemCollection})">
      <summary>Restituisce un valore che indica se un database specifico esiste sul server.</summary>
      <returns>True se il provider è in grado di dedurre il database solo in base alla connessione.</returns>
      <param name="connection">Connessione a un database la cui esistenza viene verificata da questo metodo.</param>
      <param name="commandTimeout">Timeout di esecuzione per tutti i comandi necessari per determinare l'esistenza del database.</param>
      <param name="storeItemCollection">Raccolta di tutti gli elementi dell'archivio dal modello.Parametro non più usato per determinare l'esistenza del database.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.DbCreateDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Entity.Core.Metadata.Edm.StoreItemCollection)">
      <summary>Crea un database indicato dalla connessione e crea oggetti dello schema (tabelle, chiavi primarie, chiavi esterne) in base al contenuto di un parametro StoreItemCollection.</summary>
      <param name="connection">Connessione a un database che non esiste che deve essere creato e popolato con gli oggetti dell'archivio indicati dal parametro storeItemCollection.</param>
      <param name="commandTimeout">Timeout di esecuzione per i comandi necessari per creare il database.</param>
      <param name="storeItemCollection">Raccolta di tutti gli elementi dell'archivio in base ai quali dovrà essere creato lo script.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.DbCreateDatabaseScript(System.String,System.Data.Entity.Core.Metadata.Edm.StoreItemCollection)">
      <summary>Genera uno script Data Definition Language (DDL) che crea oggetti dello schema (tabelle, chiavi primarie, chiavi esterne) in base al contenuto del parametro StoreItemCollection e la cui destinazione è la versione del database corrispondente al token del manifesto del provider.</summary>
      <returns>Script DDL che crea oggetti dello schema in base al contenuto del parametro StoreItemCollection e la cui destinazione è la versione del database corrispondente al token del manifesto del provider.</returns>
      <param name="providerManifestToken">Token del manifesto del provider che identifica la versione di destinazione.</param>
      <param name="storeItemCollection">Struttura del database.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.DbDatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Entity.Core.Metadata.Edm.StoreItemCollection)">
      <summary>Restituisce un valore che indica se un database specifico esiste sul server.</summary>
      <returns>True se il provider è in grado di dedurre il database solo in base alla connessione.</returns>
      <param name="connection">Connessione a un database la cui esistenza viene verificata da questo metodo.</param>
      <param name="commandTimeout">Timeout di esecuzione per tutti i comandi necessari per determinare l'esistenza del database.</param>
      <param name="storeItemCollection">Raccolta di tutti gli elementi dell'archivio dal modello.Parametro non più usato per determinare l'esistenza del database.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.DbDatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Lazy{System.Data.Entity.Core.Metadata.Edm.StoreItemCollection})">
      <summary>Restituisce un valore che indica se un database specifico esiste sul server.</summary>
      <returns>True se il provider è in grado di dedurre il database solo in base alla connessione.</returns>
      <param name="connection">Connessione a un database la cui esistenza viene verificata da questo metodo.</param>
      <param name="commandTimeout">Timeout di esecuzione per tutti i comandi necessari per determinare l'esistenza del database.</param>
      <param name="storeItemCollection">Raccolta di tutti gli elementi dell'archivio dal modello.Parametro non più usato per determinare l'esistenza del database.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.DbDeleteDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Entity.Core.Metadata.Edm.StoreItemCollection)">
      <summary>Elimina il database specificato.</summary>
      <param name="connection">Connessione a un database esistente che deve essere eliminato.</param>
      <param name="commandTimeout">Timeout di esecuzione per i comandi necessari per eliminare il database.</param>
      <param name="storeItemCollection">Raccolta di tutti gli elementi dell'archivio dal modello.Parametro non più usato per l'eliminazione del database.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.DbGetSpatialServices(System.String)">
      <summary>Ottiene i servizi spaziali per <see cref="T:System.Data.Entity.Core.Common.DbProviderServices" />.</summary>
      <returns>Servizi spaziali.</returns>
      <param name="manifestToken">Informazioni sul token associate al manifesto del provider.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.DeleteDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Entity.Core.Metadata.Edm.StoreItemCollection)">
      <summary>Elimina il database specificato.</summary>
      <param name="connection">Connessione a un database esistente che deve essere eliminato.</param>
      <param name="commandTimeout">Timeout di esecuzione per i comandi necessari per eliminare il database.</param>
      <param name="storeItemCollection">Raccolta di tutti gli elementi dell'archivio dal modello.Parametro non più usato per l'eliminazione del database.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.ExpandDataDirectory(System.String)">
      <summary>Espande |DataDirectory| nel percorso specificato se inizia con |DataDirectory| e restituisce il percorso espanso o la stringa specificata se non inizia con |DataDirectory|.</summary>
      <returns>Percorso espanso.</returns>
      <param name="path">Percorso da espandere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.GetConceptualSchemaDefinition(System.String)">
      <summary>Restituisce un lettore XML che rappresenta la descrizione CSDL.</summary>
      <returns>XmlReader che rappresenta la descrizione CSDL</returns>
      <param name="csdlName">Nome della descrizione CSDL.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.GetDbProviderManifest(System.String)">
      <summary>Quando sottoposto a override in una classe derivata, restituisce un'istanza di una classe che deriva da DbProviderManifest.</summary>
      <returns>Oggetto DbProviderManifest che rappresenta il manifesto del provider.</returns>
      <param name="manifestToken">Informazioni sul token associate al manifesto del provider.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.GetDbProviderManifestToken(System.Data.Common.DbConnection)">
      <summary>Restituisce il token del manifesto del provider per una data connessione.</summary>
      <returns>Token del manifesto del provider per la connessione specificata.</returns>
      <param name="connection">Connessione da cui trovare il token del manifesto.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.GetDbSpatialDataReader(System.Data.Common.DbDataReader,System.String)">
      <summary>Ottiene il lettore dati spaziali per l'oggetto <see cref="T:System.Data.Entity.Core.Common.DbProviderServices" />.</summary>
      <returns>Lettore dati spaziali.</returns>
      <param name="fromReader">Lettore da cui provengono i dati spaziali.</param>
      <param name="manifestToken">Informazioni sul token associate al manifesto del provider.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.GetExecutionStrategy(System.Data.Common.DbConnection)">
      <summary>Ottiene l'oggetto <see cref="T:System.Data.Entity.Infrastructure.IDbExecutionStrategy" /> che verrà usato per eseguire metodi che usano la connessione specificata.</summary>
      <returns>Nuova istanza di <see cref="T:System.Data.Entity.Infrastructure.DbExecutionStrategy" /></returns>
      <param name="connection">Connessione di database</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.GetExecutionStrategy(System.Data.Common.DbConnection,System.String)">
      <summary>Ottiene l'oggetto <see cref="T:System.Data.Entity.Infrastructure.IDbExecutionStrategy" /> che verrà usato per eseguire metodi che usano la connessione specificata.Questo overload deve essere usato dalle classi derivate per compatibilità con i provider di wrapping.</summary>
      <returns>Nuova istanza di <see cref="T:System.Data.Entity.Infrastructure.DbExecutionStrategy" /></returns>
      <param name="connection">Connessione di database</param>
      <param name="providerInvariantName">Nome invariante del provider.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.GetProviderFactory(System.Data.Common.DbConnection)">
      <summary>Recupera DbProviderFactory in base alla DbConnection specificata.</summary>
      <returns>Oggetto DbProviderFactory recuperato.</returns>
      <param name="connection">Connessione da usare.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.GetProviderManifest(System.String)">
      <summary>Restituisce il manifesto del provider usando le informazioni sulla versione specificate.</summary>
      <returns>Manifesto del provider usando le informazioni sulla versione specificate.</returns>
      <param name="manifestToken">Informazioni sul token associate al manifesto del provider.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.GetProviderManifestToken(System.Data.Common.DbConnection)">
      <summary>Restituisce il token del manifesto del provider corrispondente a una connessione.</summary>
      <returns>Token del manifesto del provider.</returns>
      <param name="connection">Connessione al provider.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.GetProviderServices(System.Data.Common.DbConnection)">
      <summary>Restituisce i provider corrispondenti a una connessione.</summary>
      <returns>Istanza di <see cref="T:System.Data.Entity.Core.Common.DbProviderServices" /> basata sulla connessione specificata.</returns>
      <param name="connection">Connessione al provider.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.GetService(System.Type,System.Object)">
      <summary>Chiamato per risolvere i servizi del provider predefinito aggiuntivi quando un tipo derivato è registrato come provider EF usando una voce nel file di configurazione dell'applicazione o attraverso la registrazione basata su codice in <see cref="T:System.Data.Entity.DbConfiguration" />.L'implementazione di questo metodo in questa classe usa i sistemi di risoluzione aggiunti con il metodo AddDependencyResolver per risolvere le dipendenze.</summary>
      <returns>Istanza del tipo specificato o Null se il servizio non può essere risolto.</returns>
      <param name="type">Tipo del servizio da risolvere.</param>
      <param name="key">Chiave facoltativa che fornisce informazioni aggiuntive per la risoluzione del servizio.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.GetServices(System.Type,System.Object)">
      <summary>Chiamato per risolvere i servizi del provider predefinito aggiuntivi quando un tipo derivato è registrato come provider EF usando una voce nel file di configurazione dell'applicazione o attraverso la registrazione basata su codice in <see cref="T:System.Data.Entity.DbConfiguration" />.L'implementazione di questo metodo in questa classe usa i sistemi di risoluzione aggiunti con il metodo AddDependencyResolver per risolvere le dipendenze.</summary>
      <returns>Tutti i servizi registrati che soddisfano il tipo e la chiave forniti o un'enumerazione vuota se non ne esistono.</returns>
      <param name="type">Tipo del servizio da risolvere.</param>
      <param name="key">Chiave facoltativa che fornisce informazioni aggiuntive per la risoluzione del servizio.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.GetSpatialDataReader(System.Data.Common.DbDataReader,System.String)">
      <summary>Ottiene il lettore dati spaziali per l'oggetto <see cref="T:System.Data.Entity.Core.Common.DbProviderServices" />.</summary>
      <returns>Lettore dati spaziali.</returns>
      <param name="fromReader">Lettore da cui provengono i dati spaziali.</param>
      <param name="manifestToken">Token associato al manifesto del provider.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.GetSpatialServices(System.Data.Entity.Infrastructure.DbProviderInfo)">
      <summary>Ottiene i servizi spaziali per <see cref="T:System.Data.Entity.Core.Common.DbProviderServices" />.</summary>
      <returns>Servizi spaziali.</returns>
      <param name="key">Informazioni sul database per cui verranno usati i servizi spaziali.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.GetSpatialServices(System.String)">
      <summary>Ottiene i servizi spaziali per <see cref="T:System.Data.Entity.Core.Common.DbProviderServices" />.</summary>
      <returns>Servizi spaziali.</returns>
      <param name="manifestToken">Informazioni sul token associate al manifesto del provider.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.RegisterInfoMessageHandler(System.Data.Common.DbConnection,System.Action{System.String})">
      <summary>Registra un gestore per l'elaborazione dei messaggi non di errore provenienti dal provider di database.</summary>
      <param name="connection">Connessione per la quale ricevere le informazioni.</param>
      <param name="handler">Gestore per elaborare i messaggi.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.SetDbParameterValue(System.Data.Common.DbParameter,System.Data.Entity.Core.Metadata.Edm.TypeUsage,System.Object)">
      <summary>Imposta il valore del parametro e i facet appropriati per l'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" /> specificato.</summary>
      <param name="parameter">Parametro.</param>
      <param name="parameterType">Tipo del parametro.</param>
      <param name="value">Valore del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbProviderServices.SetParameterValue(System.Data.Common.DbParameter,System.Data.Entity.Core.Metadata.Edm.TypeUsage,System.Object)">
      <summary>Imposta il valore del parametro e i facet appropriati per l'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" /> specificato.</summary>
      <param name="parameter">Parametro.</param>
      <param name="parameterType">Tipo del parametro.</param>
      <param name="value">Valore del parametro.</param>
    </member>
    <member name="T:System.Data.Entity.Core.Common.DbXmlEnabledProviderManifest">
      <summary>Specializzazione di ProviderManifest che accetta XmlReader</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbXmlEnabledProviderManifest.#ctor(System.Xml.XmlReader)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Common.DbXmlEnabledProviderManifest" />.</summary>
      <param name="reader">Oggetto <see cref="T:System.Xml.XmlReader" /> che fornisce accesso ai dati XML nel file manifesto del provider.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbXmlEnabledProviderManifest.GetFacetDescriptions(System.Data.Entity.Core.Metadata.Edm.EdmType)">
      <summary>Restituisce l'elenco di descrizioni dei facet per il tipo Entity Data Model (EDM) specificato.</summary>
      <returns>Raccolta di tipo <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> che contiene l'elenco di descrizioni dei facet per il tipo EDM specificato.</returns>
      <param name="edmType">Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" /> per il quale devono essere recuperate le descrizioni dei facet.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbXmlEnabledProviderManifest.GetStoreFunctions">
      <summary>Restituisce l'elenco di funzioni supportate dal provider.</summary>
      <returns>Raccolta di tipo <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> che contiene l'elenco di funzioni supportate dal provider.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Common.DbXmlEnabledProviderManifest.GetStoreTypes">
      <summary>Restituisce l'elenco dei tipi primitivi supportati dal provider di archiviazione.</summary>
      <returns>Raccolta di tipo <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> che contiene l'elenco di tipi primitivi supportati dal provider di archiviazione.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Common.DbXmlEnabledProviderManifest.NamespaceName">
      <summary>Ottiene il nome dello spazio dei nomi supportato da questo manifesto del provider.</summary>
      <returns>Nome dello spazio dei nomi supportato da questo manifesto del provider.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Common.DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType">
      <summary>Ottiene il tipo Entity Data Model (EDM) equivalente con il mapping migliore per un nome di tipo di archiviazione specificato.</summary>
      <returns>Tipo EDM equivalente con il mapping migliore per un nome di tipo di archiviazione specificato.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Common.DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType">
      <summary>Ottiene il tipo primitivo di archiviazione equivalente con il mapping migliore per un nome di tipo di archiviazione specificato.</summary>
      <returns>Tipo primitivo di archiviazione equivalente con il mapping migliore per un nome di tipo di archiviazione specificato.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Common.EntityRecordInfo">
      <summary>Classe EntityRecordInfo che fornisce un modo semplice per accedere sia alle informazioni sul tipo sia a quelle sulle colonne.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.EntityRecordInfo.#ctor(System.Data.Entity.Core.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.EdmMember},System.Data.Entity.Core.EntityKey,System.Data.Entity.Core.Metadata.Edm.EntitySet)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Common.EntityRecordInfo" /> di un tipo di entità specifico con una raccolta enumerabile di campi dati e con informazioni specifiche sulla chiave e sul set di entità.</summary>
      <param name="metadata">Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityType" /> dell'entità rappresentato dall'oggetto <see cref="T:System.Data.Common.DbDataRecord" /> descritto da questo oggetto <see cref="T:System.Data.Entity.Core.Common.EntityRecordInfo" />.</param>
      <param name="memberInfo">Raccolta enumerabile di oggetti <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmMember" /> che rappresentano le informazioni relative alle colonne.</param>
      <param name="entityKey">Chiave per l'entità.</param>
      <param name="entitySet">Set a cui appartiene l'entità.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Common.EntityRecordInfo.EntityKey">
      <summary>Ottiene l'oggetto <see cref="T:System.Data.Entity.Core.EntityKey" /> dell'entità.</summary>
      <returns>Chiave per l'entità.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Common.FieldMetadata">
      <summary>Classe FieldMetadata che fornisce la correlazione tra i numeri ordinali delle colonne e MemberMetadata.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.FieldMetadata.#ctor(System.Int32,System.Data.Entity.Core.Metadata.Edm.EdmMember)">
      <summary>Inizializza un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.FieldMetadata" /> con il valore ordinale e il tipo di campo specificati.</summary>
      <param name="ordinal">Integer che specifica il percorso dei metadati.</param>
      <param name="fieldType">Tipo del campo.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Common.FieldMetadata.FieldType">
      <summary>Ottiene il tipo del campo per questo oggetto <see cref="T:System.Data.Entity.Core.Common.FieldMetadata" />.</summary>
      <returns>Tipo di campo per questo oggetto <see cref="T:System.Data.Entity.Core.Common.FieldMetadata" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Common.FieldMetadata.Ordinal">
      <summary>Ottiene il valore ordinale per questo oggetto <see cref="T:System.Data.Entity.Core.Common.FieldMetadata" />.</summary>
      <returns>Integer che rappresenta il valore ordinale.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.BasicCommandTreeVisitor">
      <summary>Rappresenta un tipo di base astratto per i tipi che implementano l'interfaccia IExpressionVisitor da cui eseguire la derivazione.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicCommandTreeVisitor.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Common.CommandTrees.BasicCommandTreeVisitor" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicCommandTreeVisitor.VisitCommandTree(System.Data.Entity.Core.Common.CommandTrees.DbCommandTree)">
      <summary>Implementa il pattern visitor per l'albero dei comandi.</summary>
      <param name="commandTree">Albero dei comandi.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicCommandTreeVisitor.VisitDeleteCommandTree(System.Data.Entity.Core.Common.CommandTrees.DbDeleteCommandTree)">
      <summary>Implementa il pattern visitor per l'albero dei comandi di eliminazione.</summary>
      <param name="deleteTree">Albero dei comandi di eliminazione.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicCommandTreeVisitor.VisitFunctionCommandTree(System.Data.Entity.Core.Common.CommandTrees.DbFunctionCommandTree)">
      <summary>Implementa il pattern visitor per l'albero dei comandi della funzione.</summary>
      <param name="functionTree">Albero dei comandi della funzione.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicCommandTreeVisitor.VisitInsertCommandTree(System.Data.Entity.Core.Common.CommandTrees.DbInsertCommandTree)">
      <summary>Implementa il pattern visitor per l'albero dei comandi di inserimento.</summary>
      <param name="insertTree">Albero dei comandi di inserimento.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicCommandTreeVisitor.VisitModificationClause(System.Data.Entity.Core.Common.CommandTrees.DbModificationClause)">
      <summary>Implementa il pattern visitor per la clausola di modifica.</summary>
      <param name="modificationClause">Clausola di modifica.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicCommandTreeVisitor.VisitModificationClauses(System.Collections.Generic.IList{System.Data.Entity.Core.Common.CommandTrees.DbModificationClause})">
      <summary>Implementa il pattern visitor per la raccolta di clausole di modifica.</summary>
      <param name="modificationClauses">Clausole di modifica.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicCommandTreeVisitor.VisitQueryCommandTree(System.Data.Entity.Core.Common.CommandTrees.DbQueryCommandTree)">
      <summary>Implementa il pattern visitor per l'albero dei comandi di query.</summary>
      <param name="queryTree">Albero dei comandi di query.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicCommandTreeVisitor.VisitSetClause(System.Data.Entity.Core.Common.CommandTrees.DbSetClause)">
      <summary>Implementa il pattern visitor per la clausola Set.</summary>
      <param name="setClause">Clausola Set.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicCommandTreeVisitor.VisitUpdateCommandTree(System.Data.Entity.Core.Common.CommandTrees.DbUpdateCommandTree)">
      <summary>Implementa il pattern visitor per l'albero dei comandi di aggiornamento.</summary>
      <param name="updateTree">Albero dei comandi di aggiornamento.</param>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor">
      <summary>Tipo di base astratto per i tipi che implementano l'interfaccia IExpressionVisitor da cui eseguire la derivazione.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbAndExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbAndExpression" />.</summary>
      <param name="expression">DbAndExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbApplyExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbApplyExpression" />.</summary>
      <param name="expression">DbApplyExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbArithmeticExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbArithmeticExpression" />.</summary>
      <param name="expression">DbArithmeticExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbCaseExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbCaseExpression" />.</summary>
      <param name="expression">DbCaseExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbCastExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbCastExpression" />.</summary>
      <param name="expression">DbCastExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbComparisonExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbComparisonExpression" />.</summary>
      <param name="expression">DbComparisonExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbConstantExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbConstantExpression" />.</summary>
      <param name="expression">DbConstantExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbCrossJoinExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbCrossJoinExpression" />.</summary>
      <param name="expression">DbCrossJoinExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbDerefExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbDerefExpression" />.</summary>
      <param name="expression">DeRefExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbDistinctExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbDistinctExpression" />.</summary>
      <param name="expression">DbDistinctExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbElementExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbElementExpression" />.</summary>
      <param name="expression">DbElementExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbEntityRefExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbEntityRefExpression" />.</summary>
      <param name="expression">DbEntityRefExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbExceptExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExceptExpression" />.</summary>
      <param name="expression">DbExceptExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Chiamato quando viene rilevato un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> di un tipo altrimenti non riconosciuto.</summary>
      <param name="expression">Espressione</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
      <exception cref="T:System.NotSupportedException">Viene sempre generato se viene chiamato questo metodo, poiché indica che <paramref name="expression" /> è di un tipo non supportato.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbFilterExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFilterExpression" />.</summary>
      <param name="expression">DbFilterExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" />.</summary>
      <param name="expression">DbFunctionExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbGroupByExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbGroupByExpression" />.</summary>
      <param name="expression">DbExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbInExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbInExpression" />.</summary>
      <param name="expression">DbInExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIntersectExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbIntersectExpression" />.</summary>
      <param name="expression">DbIntersectExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIsEmptyExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbIsEmptyExpression" />.</summary>
      <param name="expression">DbIsEmptyExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIsNullExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbIsNullExpression" />.</summary>
      <param name="expression">DbIsNullExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIsOfExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbIsOfExpression" />.</summary>
      <param name="expression">DbIsOfExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbJoinExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbJoinExpression" />.</summary>
      <param name="expression">DbJoinExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbLambdaExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbLambdaExpression" />.</summary>
      <param name="expression">DbLambdaExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbLikeExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbLikeExpression" />.</summary>
      <param name="expression">DbLikeExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbLimitExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbLimitExpression" />.</summary>
      <param name="expression">DbLimitExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbNewInstanceExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbNewInstanceExpression" />.</summary>
      <param name="expression">DbNewInstanceExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbNotExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbNotExpression" />.</summary>
      <param name="expression">DbNotExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbNullExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbNullExpression" />.</summary>
      <param name="expression">DbNullExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbOfTypeExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbOfTypeExpression" />.</summary>
      <param name="expression">DbOfTypeExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbOrExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbOrExpression" />.</summary>
      <param name="expression">DbOrExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbParameterReferenceExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbParameterReferenceExpression" />.</summary>
      <param name="expression">DbParameterReferenceExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbProjectExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbProjectExpression" />.</summary>
      <param name="expression">DbProjectExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbPropertyExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbPropertyExpression" />.</summary>
      <param name="expression">DbPropertyExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbQuantifierExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbQuantifierExpression" />.</summary>
      <param name="expression">DbQuantifierExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbRefExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbRefExpression" />.</summary>
      <param name="expression">DbRefExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbRefKeyExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbRefKeyExpression" />.</summary>
      <param name="expression">DbRefKeyExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbRelationshipNavigationExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbRelationshipNavigationExpression" />.</summary>
      <param name="expression">DbRelationshipNavigationExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbScanExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbScanExpression" />.</summary>
      <param name="expression">DbScanExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbSkipExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbSkipExpression" />.</summary>
      <param name="expression">DbSkipExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbSortExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbSortExpression" />.</summary>
      <param name="expression">DbSortExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbTreatExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbTreatExpression" />.</summary>
      <param name="expression">DbTreatExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbUnionAllExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbUnionAllExpression" />.</summary>
      <param name="expression">DbUnionAllExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression)">
      <summary>Metodo del pattern visitor per l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression" />.</summary>
      <param name="expression">DbVariableReferenceExpression oggetto della visita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.VisitAggregate(System.Data.Entity.Core.Common.CommandTrees.DbAggregate)">
      <summary>Metodo pratico per visitare l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbAggregate" /> specificato.</summary>
      <param name="aggregate">Aggregazione da visitare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="aggregate" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.VisitAggregateList(System.Collections.Generic.IList{System.Data.Entity.Core.Common.CommandTrees.DbAggregate})">
      <summary>Metodo pratico per visualizzare ogni oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbAggregate" /> nell'elenco, se l'elenco è non Null.</summary>
      <param name="aggregates">Elenco di aggregazioni da visitare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="aggregates" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.VisitBinaryExpression(System.Data.Entity.Core.Common.CommandTrees.DbBinaryExpression)">
      <summary>Metodo pratico per visitare l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbBinaryExpression" /> specificato.</summary>
      <param name="expression">Oggetto DbBinaryExpression da visitare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.VisitExpression(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Metodo pratico per visitare l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> specificato, se non Null.</summary>
      <param name="expression">Espressione da visitare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.VisitExpressionBindingPost(System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding)">
      <summary>Metodo pratico per la post-elaborazione dopo la visita di un oggetto DbExpressionBinding.</summary>
      <param name="binding">Oggetto DbExpressionBinding visitato in precedenza.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.VisitExpressionBindingPre(System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding)">
      <summary>Metodo pratico per visitare l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding" /> specificato.</summary>
      <param name="binding">Oggetto DbExpressionBinding da visitare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.VisitExpressionList(System.Collections.Generic.IList{System.Data.Entity.Core.Common.CommandTrees.DbExpression})">
      <summary>Metodo pratico per visitare ogni oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> nell'elenco specificato, se l'elenco è non Null.</summary>
      <param name="expressionList">Elenco di espressioni da visitare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expressionList" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.VisitGroupExpressionBindingMid(System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding)">
      <summary>Metodo pratico che indica che le chiavi di raggruppamento di un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbGroupByExpression" /> sono state visitate e che ora verranno visitate le aggregazioni.</summary>
      <param name="binding">DbGroupExpressionBinding di DbGroupByExpression</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.VisitGroupExpressionBindingPost(System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding)">
      <summary>Metodo pratico per la post-elaborazione dopo la visita di un oggetto DbGroupExpressionBinding.</summary>
      <param name="binding">Oggetto DbGroupExpressionBinding visitato in precedenza.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.VisitGroupExpressionBindingPre(System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding)">
      <summary>Metodo pratico per visitare l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding" /> specificato.</summary>
      <param name="binding">Oggetto DbGroupExpressionBinding da visitare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.VisitLambdaPost(System.Data.Entity.Core.Common.CommandTrees.DbLambda)">
      <summary>Metodo pratico per la post-elaborazione dopo la visita di un oggetto DbLambda.</summary>
      <param name="lambda">Oggetto DbLambda visitato in precedenza.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.VisitLambdaPre(System.Data.Entity.Core.Common.CommandTrees.DbLambda)">
      <summary>Metodo pratico che indica che il corpo di un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> Lambda sta per essere visitato.</summary>
      <param name="lambda">Oggetto DbLambda che sta per essere visitato</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="lambda" /> è Null</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.VisitUnaryExpression(System.Data.Entity.Core.Common.CommandTrees.DbUnaryExpression)">
      <summary>Metodo pratico per visitare l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbUnaryExpression" /> specificato.</summary>
      <param name="expression">Oggetto DbUnaryExpression da visitare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> è Null</exception>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbAggregate">
      <summary>Le aggregazioni sono pseudo-espressioni.Hanno l'aspetto delle espressioni, ma presentano restrizioni in termini della posizione in cui possono comparire, ovvero solo nella clausola di aggregazione di un'espressione group-by.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbAggregate.Arguments">
      <summary>     Ottiene l'elenco di espressioni che definiscono gli argomenti per l'aggregazione. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbAggregate.ResultType">
      <summary>     Ottiene il tipo di risultato di questa aggregazione </summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbAndExpression">
      <summary>     Rappresenta l'operatore logico And di due argomenti Boolean. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbAndExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbAndExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbApplyExpression">
      <summary>     Rappresenta un'operazione Apply, ovvero la chiamata del functor specificato per ogni elemento nel set di input specificato. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbApplyExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbApplyExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbApplyExpression.Apply">
      <summary>     Ottiene l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding" /> che specifica il functor richiamato per ogni elemento nel set di input. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbApplyExpression.Input">
      <summary>     Ottiene l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding" /> che specifica il set di input. </summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbArithmeticExpression">
      <summary>     Rappresenta un'operazione aritmetica (addizione, sottrazione, moltiplicazione, divisione, modulo o negazione) applicata a due argomenti numerici. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbArithmeticExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbArithmeticExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbArithmeticExpression.Arguments">
      <summary>     Ottiene l'elenco di espressioni che definiscono gli argomenti correnti. </summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbBinaryExpression">
      <summary>     Il tipo di base astratto per le espressioni che accettano due operandi dell'espressione. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbBinaryExpression.Left">
      <summary>     Ottiene l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che definisce l'argomento a sinistra. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbBinaryExpression.Right">
      <summary>     Ottiene l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che definisce l'argomento a destra. </summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbCaseExpression">
      <summary>     Rappresenta un'operazione logica Case When...Then...Else. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbCaseExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbCaseExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbCaseExpression.Else">
      <summary>     Ottiene la clausola Else di DbCaseExpression. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbCaseExpression.Then">
      <summary>     Ottiene le clausole Then di DbCaseExpression. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbCaseExpression.When">
      <summary>     Ottiene le clausole When di DbCaseExpression. </summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbCastExpression">
      <summary>     Rappresenta un'operazione di cast applicata a un argomento polimorfico. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbCastExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbCastExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbCommandTree">
      <summary>Rappresenta il tipo di base astratto per i tipi di DbCommandTree Delete, Query, Insert e Update.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbCommandTree.CommandTreeKind">
      <summary>Ottiene il tipo di questo albero dei comandi.</summary>
      <returns>Tipo di questo albero dei comandi.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbCommandTree.DataSpace">
      <summary>Ottiene lo spazio dati in cui devono trovarsi i metadati utilizzati da questo albero dei comandi.</summary>
      <returns>Spazio dati in cui devono trovarsi i metadati usati da questo albero dei comandi.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbCommandTree.MetadataWorkspace">
      <summary>Ottiene l'area di lavoro dei metadati utilizzata da questo albero dei comandi.</summary>
      <returns>Area di lavoro dei metadati usata da questo albero dei comandi.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbCommandTree.Parameters">
      <summary>Ottiene il nome e il tipo corrispondente di ogni parametro a cui è possibile fare riferimento all'interno di questo albero dei comandi.</summary>
      <returns>Nome e il tipo corrispondente di ogni parametro a cui è possibile fare riferimento all'interno di questo albero dei comandi.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbCommandTree.ToString">
      <summary>Restituisce una rappresentazione di stringa di <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbCommandTree" />.</summary>
      <returns>Rappresentazione di stringa dell'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbCommandTree" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbCommandTree.UseDatabaseNullSemantics">
      <summary>Ottiene un valore che indica se l'albero dei comandi usa la semantica null per il database.</summary>
      <returns>L'albero dei comandi usa la semantica null per il database.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbCommandTreeKind">
      <summary>Descrive i diversi comandi del database. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbCommandTreeKind.Delete">
      <summary>Specifica il comando di eliminazione.</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbCommandTreeKind.Function">
      <summary>Specifica il comando di funzione.</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbCommandTreeKind.Insert">
      <summary>Specifica il comando di inserimento.</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbCommandTreeKind.Query">
      <summary>Specifica il comando di query.</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbCommandTreeKind.Update">
      <summary>Specifica il comando di aggiornamento.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbComparisonExpression">
      <summary>     Rappresenta un'operazione di confronto (uguaglianza, maggiore di, maggiore o uguale a, minore di, minore o uguale a, ineguaglianza) applicata a due argomenti. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbComparisonExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbComparisonExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbConstantExpression">
      <summary>     Rappresenta un valore costante. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbConstantExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbConstantExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbConstantExpression.Value">
      <summary>     Ottiene il valore della costante. </summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbCrossJoinExpression">
      <summary>     Rappresenta un'operazione di join non condizionale tra gli argomenti della raccolta specificati </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbCrossJoinExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbCrossJoinExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbCrossJoinExpression.Inputs">
      <summary>     Ottiene un elenco <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding" /> che fornisce i set di input al join. </summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbDeleteCommandTree">
      <summary>Rappresenta un'operazione di eliminazione di una singola riga espressa come albero dei comandi canonico.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbDeleteCommandTree.#ctor(System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace,System.Data.Entity.Core.Metadata.Edm.DataSpace,System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbDeleteCommandTree" />.</summary>
      <param name="metadata">Area di lavoro metadati.</param>
      <param name="dataSpace">Spazio dati.</param>
      <param name="target">Associazione di espressioni del database.</param>
      <param name="predicate">Espressione del database.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbDeleteCommandTree.CommandTreeKind">
      <summary>Ottiene il tipo di questo albero dei comandi.</summary>
      <returns>Tipo di questo albero dei comandi.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbDeleteCommandTree.Predicate">
      <summary>Ottiene un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che specifica il predicato utilizzato per determinare i membri della raccolta di destinazione da eliminare.</summary>
      <returns>Predicato utilizzato per determinare i membri della raccolta di destinazione da eliminare.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbDerefExpression">
      <summary>     Rappresenta il recupero di una determinata entità utilizzando il riferimento specificato. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbDerefExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbDerefExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbDistinctExpression">
      <summary>     Rappresenta la rimozione di elementi duplicati dall'operando del set specificato. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbDistinctExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbDistinctExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbElementExpression">
      <summary>Rappresenta la conversione dell'operando del set specificato in un singleton.Se il set è vuoto, la conversione restituisce Null, in caso contrario la conversione restituisce uno degli elementi del set.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbElementExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbElementExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbEntityRefExpression">
      <summary>     Rappresenta il recupero di un riferimento all'entità specificata come Rif. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbEntityRefExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbEntityRefExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbExceptExpression">
      <summary>     Rappresenta l'operazione di sottrazione dei set tra gli operandi sinistro e destro. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExceptExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExceptExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression">
      <summary>Rappresenta il tipo di base per tutte le espressioni.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implementa il metodo di interfaccia del pattern per i visitor delle espressioni che non producono un valore di risultato.</summary>
      <param name="visitor">Istanza di DbExpressionVisitor.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> è null.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implementa il metodo di interfaccia del pattern per i visitor delle espressioni che producono un valore di risultato di un tipo specifico.</summary>
      <returns>Istanza di <paramref name="TResultType" />.</returns>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType.</param>
      <typeparam name="TResultType">Tipo del risultato prodotto dall'oggetto <paramref name="visitor" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visitor" /> è null.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpression.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'istanza di DbExpression corrente.</summary>
      <returns>true se l'oggetto specificato è uguale all'istanza di DbExpression corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare all'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> corrente.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbExpression.ExpressionKind">
      <summary>Ottiene il tipo dell'espressione che indica l'operazione dell'espressione.</summary>
      <returns>Tipo dell'espressione che indica l'operazione dell'espressione.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpression.FromBinary(System.Byte[])">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta il valore binario specificato che può essere Null.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta il valore binario specificato.</returns>
      <param name="value"> Valore binario su cui deve essere basata l'espressione restituita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpression.FromBoolean(System.Nullable{System.Boolean})">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta il valore booleano che ammette i valori Null specificato.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta il valore booleano specificato.</returns>
      <param name="value">Valore booleano su cui deve essere basata l'espressione restituita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpression.FromByte(System.Nullable{System.Byte})">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta il valore byte che ammette i valori Null specificato.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta il valore byte specificato.</returns>
      <param name="value">Valore byte su cui deve essere basata l'espressione restituita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpression.FromDateTime(System.Nullable{System.DateTime})">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta il valore <see cref="T:System.DateTime" /> che ammette i valori Null specificato.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta il valore DateTime specificato.</returns>
      <param name="value">Valore DateTime su cui deve essere basata l'espressione restituita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpression.FromDateTimeOffset(System.Nullable{System.DateTimeOffset})">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta il valore <see cref="T:System.DateTimeOffset" /> che ammette i valori Null specificato.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta il valore DateTimeOffset specificato.</returns>
      <param name="value">Valore DateTimeOffset su cui deve essere basata l'espressione restituita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpression.FromDecimal(System.Nullable{System.Decimal})">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta il valore decimale che ammette i valori Null specificato.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta il valore decimale specificato.</returns>
      <param name="value">Valore decimale su cui deve essere basata l'espressione restituita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpression.FromDouble(System.Nullable{System.Double})">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta il valore Double che ammette i valori Null specificato.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta il valore Double specificato.</returns>
      <param name="value">Valore Double su cui deve essere basata l'espressione restituita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpression.FromGeography(System.Data.Entity.Spatial.DbGeography)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta il valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato, che può essere Null.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta il valore DbGeography specificato.</returns>
      <param name="value">Valore DbGeography su cui deve essere basata l'espressione restituita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpression.FromGeometry(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta il valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato, che può essere Null.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta il valore DbGeometry specificato.</returns>
      <param name="value">Valore DbGeometry su cui deve essere basata l'espressione restituita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpression.FromGuid(System.Nullable{System.Guid})">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta il valore <see cref="T:System.Guid" /> che ammette i valori Null specificato.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta il valore Guid specificato.</returns>
      <param name="value">Valore Guid su cui deve essere basata l'espressione restituita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpression.FromInt16(System.Nullable{System.Int16})">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta il valore Int16 che ammette i valori Null specificato.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta il valore Int16 specificato.</returns>
      <param name="value">Valore Int16 su cui deve essere basata l'espressione restituita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpression.FromInt32(System.Nullable{System.Int32})">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta il valore Int32 che ammette i valori Null specificato.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta il valore Int32 specificato.</returns>
      <param name="value">Valore Int32 su cui deve essere basata l'espressione restituita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpression.FromInt64(System.Nullable{System.Int64})">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta il valore Int64 che ammette i valori Null specificato.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta il valore Int64 specificato.</returns>
      <param name="value">Valore Int64 su cui deve essere basata l'espressione restituita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpression.FromSingle(System.Nullable{System.Single})">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta il valore Single che ammette i valori Null specificato.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta il valore Single specificato.</returns>
      <param name="value">Valore Single su cui deve essere basata l'espressione restituita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpression.FromString(System.String)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta il valore stringa specificato.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta il valore stringa specificato.</returns>
      <param name="value">Valore stringa su cui deve essere basata l'espressione restituita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpression.GetHashCode">
      <summary>Funge da funzione hash per questo tipo.</summary>
      <returns>Codice hash per l'espressione corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpression.op_Implicit(System.Byte[])~System.Data.Entity.Core.Common.CommandTrees.DbExpression">
      <summary>Converte una matrice di Unsigned Integer a 8 bit in un <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta la matrice convertita di Unsigned Integer a 8 bit.</returns>
      <param name="value">Matrice di Unsigned Integer a 8 bit.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Entity.Spatial.DbGeography)~System.Data.Entity.Core.Common.CommandTrees.DbExpression">
      <summary>Converte un oggetto DbGeography nell'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta l'oggetto DbGeography convertito.</returns>
      <param name="value">Oggetto DbGeography.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Entity.Spatial.DbGeometry)~System.Data.Entity.Core.Common.CommandTrees.DbExpression">
      <summary>Converte un oggetto DBGeometry nell'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta l'oggetto DbGeography convertito.</returns>
      <param name="value">Oggetto DbGeometry.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Boolean})~System.Data.Entity.Core.Common.CommandTrees.DbExpression">
      <summary>Converte un oggetto booleano che ammette i valori Null nell'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta l'oggetto booleano che ammette i valori Null convertito.</returns>
      <param name="value">Oggetto booleano che ammette i valori Null.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Byte})~System.Data.Entity.Core.Common.CommandTrees.DbExpression">
      <summary>Converte un Unsigned Integer a 8 bit che ammette i valori Null in un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta l'Unsigned Integer a 8 bit convertito.</returns>
      <param name="value">Unsigned Integer a 8 bit che ammette i valori Null.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTime})~System.Data.Entity.Core.Common.CommandTrees.DbExpression">
      <summary>Converte un oggetto <see cref="T:System.DateTime" /> che ammette i valori Null nell'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta l'oggetto <see cref="T:System.DateTime" />.</returns>
      <param name="value">Oggetto <see cref="T:System.DateTime" /> che ammette i valori Null.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTimeOffset})~System.Data.Entity.Core.Common.CommandTrees.DbExpression">
      <summary>Converte un oggetto <see cref="T:System.DateTimeOffset" /> che ammette i valori Null nell'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta l'oggetto <see cref="T:System.DateTime" /> che ammette i valori Null.</returns>
      <param name="value">Oggetto <see cref="T:System.DateTime" /> che ammette i valori Null.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Decimal})~System.Data.Entity.Core.Common.CommandTrees.DbExpression">
      <summary>Converte un oggetto decimale che ammette i valori Null nell'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta l'oggetto decimale che ammette i valori Null.</returns>
      <param name="value">Oggetto decimale che ammette i valori Null.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Double})~System.Data.Entity.Core.Common.CommandTrees.DbExpression">
      <summary>Converte un oggetto Double che ammette i valori Null nell'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta l'oggetto Double che ammette i valori Null.</returns>
      <param name="value">Oggetto Double che ammette i valori Null.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Guid})~System.Data.Entity.Core.Common.CommandTrees.DbExpression">
      <summary>Converte un oggetto Guid che ammette i valori Null nell'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta l'oggetto <see cref="T:System.Guid" /> che ammette i valori Null.</returns>
      <param name="value">Oggetto <see cref="T:System.Guid" /> che ammette i valori Null.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int16})~System.Data.Entity.Core.Common.CommandTrees.DbExpression">
      <summary>Converte un Unsigned Integer a 16 bit che ammette i valori Null in un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta l'Unsigned Integer a 16 bit che ammette i valori Null.</returns>
      <param name="value">Unsigned Integer a 16 bit che ammette i valori Null.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int32})~System.Data.Entity.Core.Common.CommandTrees.DbExpression">
      <summary>Converte un Unsigned Integer a 32 bit che ammette i valori Null in un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta l'Unsigned Integer a 32 bit che ammette i valori Null.</returns>
      <param name="value">Unsigned Integer a 32 bit che ammette i valori Null.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int64})~System.Data.Entity.Core.Common.CommandTrees.DbExpression">
      <summary>Converte un Unsigned Integer a 64 bit che ammette i valori Null in un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta l'Unsigned Integer a 64 bit che ammette i valori Null.</returns>
      <param name="value">Unsigned Integer a 64 bit che ammette i valori Null.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Single})~System.Data.Entity.Core.Common.CommandTrees.DbExpression">
      <summary>Converte un numero a virgola mobile a precisione singola che ammette i valori Null nell'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta un numero a virgola mobile a precisione singola.</returns>
      <param name="value">Numero a virgola mobile a precisione singola.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpression.op_Implicit(System.String)~System.Data.Entity.Core.Common.CommandTrees.DbExpression">
      <summary>Converte una raccolta sequenziale di caratteri Unicode <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta una raccolta sequenziale di caratteri Unicode.</returns>
      <param name="value">Raccolta sequenziale di caratteri Unicode.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbExpression.ResultType">
      <summary>Ottiene i metadati del tipo per il tipo di risultato dell'espressione.</summary>
      <returns>Metadati del tipo per il tipo di risultato dell'espressione.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding">
      <summary>Descrive un'associazione per un'espressione.Concettualmente simile a un ciclo foreach in C#.La proprietà DbExpression definisce la raccolta su cui viene eseguita l'iterazione, mentre la proprietà Var fornisce un modo per fare riferimento all'elemento corrente della raccolta durante l'iterazione.DbExpressionBinding consente di descrivere gli argomenti set rispetto a espressioni relazionali come <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFilterExpression" />, <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbProjectExpression" /> e <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbJoinExpression" />.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding.Expression">
      <summary>     Ottiene l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che definisce il set di input. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding.Variable">
      <summary>     Ottiene l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression" /> che fa riferimento alla variabile dell'elemento. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding.VariableName">
      <summary>     Ottiene il nome assegnato alla variabile dell'elemento. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding.VariableType">
      <summary>     Ottiene i metadati del tipo della variabile dell'elemento. </summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind">
      <summary>     Descrive i 'tipi' diversi (classi) delle espressioni </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.All">
      <summary>     True per tutto. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.And">
      <summary>     AND logico. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.Any">
      <summary>     True per tutto. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.Case">
      <summary>     Istruzione case condizionale. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.Cast">
      <summary>     Cast di tipo polimorfico. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.Constant">
      <summary>     Valore costante. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.CrossApply">
      <summary>     Cross Apply </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.CrossJoin">
      <summary>     Cross Join </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.Deref">
      <summary>     Dereferenziazione. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.Distinct">
      <summary>     Rimozione dei duplicati. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.Divide">
      <summary>     Divisione. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.Element">
      <summary>     Impostare su conversione singleton. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.EntityRef">
      <summary>     Recupero del valore di riferimento dell'entità. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.Equals">
      <summary>     Uguaglianza </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.Except">
      <summary>     Differenza di insiemi </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.Filter">
      <summary>     Restrizione. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.FullOuterJoin">
      <summary>     Full outer join </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.Function">
      <summary>     Chiamata di una funzione autonoma </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.GreaterThan">
      <summary>     Maggiore di. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.GreaterThanOrEquals">
      <summary>     Maggiore o uguale a. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.GroupBy">
      <summary>     Raggruppamento. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.In">
      <summary>     In. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.InnerJoin">
      <summary>     Inner join </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.Intersect">
      <summary>     Intersezione dei set. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.IsEmpty">
      <summary>     Determinazione del set vuoto. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.IsNull">
      <summary>     Determinazione Null. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.IsOf">
      <summary>     Confronto dei tipi (tipo o sottotipo specificato). </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.IsOfOnly">
      <summary>     Confronto dei tipi (solo Tipo specificato). </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.Lambda">
      <summary>     Applicazione di una funzione Lambda </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.LeftOuterJoin">
      <summary>     Left outer join </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.LessThan">
      <summary>     Minore di. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.LessThanOrEquals">
      <summary>     Minore o uguale a. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.Like">
      <summary>     Confronto tra stringhe. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.Limit">
      <summary>     Restrizione del conteggio di risultati (TOP n). </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.Minus">
      <summary>     Sottrazione. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.Modulo">
      <summary>     Modulo. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.Multiply">
      <summary>     Moltiplicazione. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.NewInstance">
      <summary>     Costruzione di istanze, righe e set. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.Not">
      <summary>     Not logico. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.NotEquals">
      <summary>     Disuguaglianza. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.Null">
      <summary>     Null. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.OfType">
      <summary>     Impostare i membri per tipo (o sottotipo). </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.OfTypeOnly">
      <summary>     Impostare i membri per tipo (esatto). </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.Or">
      <summary>     OR logico. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.OuterApply">
      <summary>     Outer apply. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.ParameterReference">
      <summary>     Riferimento a un parametro. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.Plus">
      <summary>     Addizione. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.Project">
      <summary>     Proiezione. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.Property">
      <summary>     Recupero di una proprietà statica o di istanza. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.Ref">
      <summary>     Riferimento. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.RefKey">
      <summary>     Recupero del valore della chiave di riferimento. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.RelationshipNavigation">
      <summary>     Navigazione di una relazione (composizione o associazione). </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.Scan">
      <summary>     Analisi di set di entità o di relazioni. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.Skip">
      <summary>     Ignorare elementi di una raccolta ordinata. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.Sort">
      <summary>     Ordinamento. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.Treat">
      <summary>     Conversione di tipi. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.UnaryMinus">
      <summary>     Negazione. </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.UnionAll">
      <summary>     Unione dei set (con duplicati). </summary>
    </member>
    <member name="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.VariableReference">
      <summary>     Riferimento a una variabile. </summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionRebinder">
      <summary>Assicura che tutti i metadati in un albero delle espressioni provengano dall'area di lavoro dei metadati specificata, potenzialmente riassociando e ricompilando le espressioni in metadati di sostituzione.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionRebinder.#ctor(System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionRebinder" />.</summary>
      <param name="targetWorkspace">Area di lavoro di destinazione.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionRebinder.Visit(System.Data.Entity.Core.Common.CommandTrees.DbPropertyExpression)">
      <summary>Implementa il pattern visitor per il recupero della proprietà di un'istanza.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">Espressione.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionRebinder.VisitEntitySet(System.Data.Entity.Core.Metadata.Edm.EntitySetBase)">
      <summary>Implementa il pattern visitor per il set di entità.</summary>
      <returns>Pattern visitor implementato.</returns>
      <param name="entitySet">Set di entità.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionRebinder.VisitFunction(System.Data.Entity.Core.Metadata.Edm.EdmFunction)">
      <summary>Implementa il pattern visitor per la funzione.</summary>
      <returns>Pattern visitor implementato.</returns>
      <param name="functionMetadata">Metadati della funzione.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionRebinder.VisitType(System.Data.Entity.Core.Metadata.Edm.EdmType)">
      <summary>Implementa il pattern visitor per il tipo.</summary>
      <returns>Pattern visitor implementato.</returns>
      <param name="type">Tipo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionRebinder.VisitTypeUsage(System.Data.Entity.Core.Metadata.Edm.TypeUsage)">
      <summary>Implementa il pattern visitor per l'utilizzo del tipo.</summary>
      <returns>Pattern visitor implementato.</returns>
      <param name="type">Tipo.</param>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor">
      <summary>La classe di base astratta del pattern visitor dell'espressione che deve essere implementata dai visitor che non restituiscono un valore di risultato.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbAndExpression)">
      <summary>Metodo del pattern visitor per DbAndExpression.</summary>
      <param name="expression">DbAndExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbApplyExpression)">
      <summary>Metodo del pattern visitor per DbApplyExpression.</summary>
      <param name="expression">DbApplyExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbArithmeticExpression)">
      <summary>Metodo del pattern visitor per DbArithmeticExpression.</summary>
      <param name="expression">DbArithmeticExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbCaseExpression)">
      <summary>Metodo del pattern visitor per DbCaseExpression.</summary>
      <param name="expression">DbCaseExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbCastExpression)">
      <summary>Metodo del pattern visitor per DbCastExpression.</summary>
      <param name="expression">DbCastExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbComparisonExpression)">
      <summary>Metodo del pattern visitor per DbComparisonExpression.</summary>
      <param name="expression">DbComparisonExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbConstantExpression)">
      <summary>Metodo del pattern visitor per DbConstantExpression.</summary>
      <param name="expression">DbConstantExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbCrossJoinExpression)">
      <summary>Metodo del pattern visitor per DbCrossJoinExpression.</summary>
      <param name="expression">DbCrossJoinExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbDerefExpression)">
      <summary>Metodo del pattern visitor per DbDerefExpression.</summary>
      <param name="expression">DbDerefExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbDistinctExpression)">
      <summary>Metodo del pattern visitor per DbDistinctExpression.</summary>
      <param name="expression">DbDistinctExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbElementExpression)">
      <summary>Metodo del pattern visitor per DbElementExpression.</summary>
      <param name="expression">DbElementExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbEntityRefExpression)">
      <summary>Metodo del pattern visitor per DbEntityRefExpression.</summary>
      <param name="expression">DbEntityRefExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbExceptExpression)">
      <summary>Metodo del pattern visitor per DbExceptExpression.</summary>
      <param name="expression">DbExceptExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Questo metodo viene chiamato quando viene rilevata un'espressione di un tipo non riconosciuto.</summary>
      <param name="expression">Espressione.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbFilterExpression)">
      <summary>Metodo del pattern visitor per DbFilterExpression.</summary>
      <param name="expression">DbFilterExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression)">
      <summary>Metodo del pattern visitor per DbFunctionExpression.</summary>
      <param name="expression">DbFunctionExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbGroupByExpression)">
      <summary>Metodo del pattern visitor per DbGroupByExpression.</summary>
      <param name="expression">DbGroupByExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbInExpression)">
      <summary>Metodo del pattern visitor per DbInExpression.</summary>
      <param name="expression">DbInExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIntersectExpression)">
      <summary>Metodo del pattern visitor per DbIntersectExpression.</summary>
      <param name="expression">DbIntersectExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIsEmptyExpression)">
      <summary>Metodo del pattern visitor per DbIsEmptyExpression.</summary>
      <param name="expression">DbIsEmptyExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIsNullExpression)">
      <summary>Metodo del pattern visitor per DbIsNullExpression.</summary>
      <param name="expression">DbIsNullExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIsOfExpression)">
      <summary>Metodo del pattern visitor per DbIsOfExpression.</summary>
      <param name="expression">DbIsOfExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbJoinExpression)">
      <summary>Metodo del pattern visitor per DbJoinExpression.</summary>
      <param name="expression">DbJoinExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbLambdaExpression)">
      <summary>Metodo del pattern visitor per DbLambdaExpression.</summary>
      <param name="expression">DbLambdaExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbLikeExpression)">
      <summary>Metodo del pattern visitor per DbLikeExpression.</summary>
      <param name="expression">DbLikeExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbLimitExpression)">
      <summary>Metodo del pattern visitor per DbLimitExpression.</summary>
      <param name="expression">DbLimitExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbNewInstanceExpression)">
      <summary>Metodo del pattern visitor per DbNewInstanceExpression.</summary>
      <param name="expression">DbNewInstanceExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbNotExpression)">
      <summary>Metodo del pattern visitor per DbNotExpression.</summary>
      <param name="expression">DbNotExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbNullExpression)">
      <summary>Metodo del pattern visitor per DbNullExpression.</summary>
      <param name="expression">DbNullExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbOfTypeExpression)">
      <summary>Metodo del pattern visitor per DbOfTypeExpression.</summary>
      <param name="expression">DbOfTypeExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbOrExpression)">
      <summary>Metodo del pattern visitor per DbOrExpression.</summary>
      <param name="expression">DbOrExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbParameterReferenceExpression)">
      <summary>Metodo del pattern visitor per DbParameterReferenceExpression.</summary>
      <param name="expression">DbParameterReferenceExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbProjectExpression)">
      <summary>Metodo del pattern visitor per DbProjectExpression.</summary>
      <param name="expression">DbProjectExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbPropertyExpression)">
      <summary>Metodo del pattern visitor per DbPropertyExpression.</summary>
      <param name="expression">DbPropertyExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbQuantifierExpression)">
      <summary>Metodo del pattern visitor per DbQuantifierExpression.</summary>
      <param name="expression">DbQuantifierExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbRefExpression)">
      <summary>Metodo del pattern visitor per DbRefExpression.</summary>
      <param name="expression">DbRefExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbRefKeyExpression)">
      <summary>Metodo del pattern visitor per DbRefKeyExpression.</summary>
      <param name="expression">DbRefKeyExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbRelationshipNavigationExpression)">
      <summary>Metodo del pattern visitor per DbRelationshipNavigationExpression.</summary>
      <param name="expression">DbRelationshipNavigationExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbScanExpression)">
      <summary>Metodo del pattern visitor per DbScanExpression.</summary>
      <param name="expression">DbScanExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbSkipExpression)">
      <summary>Metodo del pattern visitor per DbSkipExpression.</summary>
      <param name="expression">DbSkipExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbSortExpression)">
      <summary>Metodo del pattern visitor per DbSortExpression.</summary>
      <param name="expression">DbSortExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbTreatExpression)">
      <summary>Metodo del pattern visitor per DbTreatExpression.</summary>
      <param name="expression">DbTreatExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbUnionAllExpression)">
      <summary>Metodo del pattern visitor per DbUnionAllExpression.</summary>
      <param name="expression">DbUnionAllExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression)">
      <summary>Metodo del pattern visitor per DbVariableReferenceExpression.</summary>
      <param name="expression">DbVariableReferenceExpression oggetto della visita.</param>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1">
      <summary>     La classe di base astratta del pattern visitor dell'espressione che deve essere implementata dai visitor che restituiscono un valore di risultato di un tipo specifico. </summary>
      <typeparam name="TResultType"> Tipo del valore di risultato prodotto dal visitor. </typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbAndExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbAndExpression. </summary>
      <param name="expression"> DbAndExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbApplyExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbApplyExpression. </summary>
      <param name="expression"> DbApplyExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbArithmeticExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbArithmeticExpression. </summary>
      <param name="expression"> DbArithmeticExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbCaseExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbCaseExpression. </summary>
      <param name="expression"> DbCaseExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbCastExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbCastExpression. </summary>
      <param name="expression"> DbCastExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbComparisonExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbComparisonExpression. </summary>
      <param name="expression"> DbComparisonExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbConstantExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbConstantExpression. </summary>
      <param name="expression"> DbConstantExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbCrossJoinExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbCrossJoinExpression. </summary>
      <param name="expression"> DbCrossJoinExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbDerefExpression)">
      <summary>     Metodo del pattern visitor per DbDerefExpression. </summary>
      <param name="expression"> DbDerefExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbDistinctExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbDistinctExpression. </summary>
      <param name="expression"> DbDistinctExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbElementExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbElementExpression. </summary>
      <param name="expression"> DbElementExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbEntityRefExpression)">
      <summary>     Metodo del pattern visitor per DbEntityRefExpression. </summary>
      <param name="expression"> DbEntityRefExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbExceptExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbExceptExpression. </summary>
      <param name="expression"> DbExceptExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>     Questo metodo viene chiamato quando viene rilevata un'espressione di un tipo non riconosciuto. </summary>
      <param name="expression"> Espressione. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbFilterExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbFilterExpression. </summary>
      <param name="expression"> DbFilterExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression)">
      <summary>     Metodo del pattern visitor per DbFunctionExpression </summary>
      <param name="expression"> DbFunctionExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbGroupByExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbGroupByExpression. </summary>
      <param name="expression"> DbGroupByExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbInExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbInExpression. </summary>
      <param name="expression"> DbInExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIntersectExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbIntersectExpression. </summary>
      <param name="expression"> DbIntersectExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIsEmptyExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbIsEmptyExpression. </summary>
      <param name="expression"> DbIsEmptyExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIsNullExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbIsNullExpression. </summary>
      <param name="expression"> DbIsNullExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIsOfExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbIsOfExpression. </summary>
      <param name="expression"> DbIsOfExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbJoinExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbJoinExpression. </summary>
      <param name="expression"> DbJoinExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbLambdaExpression)">
      <summary>     Metodo del pattern visitor per DbLambdaExpression. </summary>
      <param name="expression"> DbLambdaExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbLikeExpression)">
      <summary>     Metodo del pattern visitor per DbLikeExpression. </summary>
      <param name="expression"> DbLikeExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbLimitExpression)">
      <summary>     Metodo del pattern visitor per DbLimitExpression. </summary>
      <param name="expression"> DbLimitExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbNewInstanceExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbNewInstanceExpression. </summary>
      <param name="expression"> DbNewInstanceExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbNotExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbNotExpression. </summary>
      <param name="expression"> DbNotExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbNullExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbNullExpression. </summary>
      <param name="expression"> DbNullExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbOfTypeExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbOfTypeExpression. </summary>
      <param name="expression"> DbOfTypeExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbOrExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbOrExpression. </summary>
      <param name="expression"> DbOrExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbParameterReferenceExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbParameterReferenceExpression. </summary>
      <param name="expression"> DbParameterReferenceExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbProjectExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbProjectExpression. </summary>
      <param name="expression"> DbProjectExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbPropertyExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbPropertyExpression. </summary>
      <param name="expression"> DbPropertyExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbQuantifierExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbQuantifierExpression. </summary>
      <param name="expression"> DbQuantifierExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbRefExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbRefExpression. </summary>
      <param name="expression"> DbRefExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbRefKeyExpression)">
      <summary>     Metodo del pattern visitor per DbRefKeyExpression. </summary>
      <param name="expression"> DbRefKeyExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbRelationshipNavigationExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbRelationshipNavigationExpression. </summary>
      <param name="expression"> DbRelationshipNavigationExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbScanExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbScanExpression. </summary>
      <param name="expression"> DbScanExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbSkipExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbSkipExpression. </summary>
      <param name="expression"> DbSkipExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbSortExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbSortExpression. </summary>
      <param name="expression"> DbSortExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbTreatExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbTreatExpression. </summary>
      <param name="expression"> DbTreatExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbUnionAllExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbUnionAllExpression. </summary>
      <param name="expression"> DbUnionAllExpression oggetto della visita. </param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression)">
      <summary>     Metodo del pattern visitor tipizzato per DbVariableReferenceExpression. </summary>
      <param name="expression"> DbVariableReferenceExpression oggetto della visita. </param>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbFilterExpression">
      <summary>     Rappresenta un predicato applicato a un set di input per produrre il set di elementi che soddisfano il predicato. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbFilterExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbFilterExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbFilterExpression.Input">
      <summary>     Ottiene l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding" /> che specifica il set di input. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbFilterExpression.Predicate">
      <summary>     Ottiene l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che specifica il predicato utilizzato per filtrare il set di input. </summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionAggregate">
      <summary>     Tipo di aggregazione che corrisponde alla chiamata di una funzione di aggregazione. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbFunctionAggregate.Distinct">
      <summary>     Ottiene un valore che indica se la funzione di aggregazione viene applicata in modo distinto </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbFunctionAggregate.Function">
      <summary>     Ottiene i metadati del metodo che specificano la funzione di aggregazione da richiamare. </summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionCommandTree">
      <summary>Rappresenta una chiamata di funzione espressa come un albero dei comandi canonico.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbFunctionCommandTree.#ctor(System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace,System.Data.Entity.Core.Metadata.Edm.DataSpace,System.Data.Entity.Core.Metadata.Edm.EdmFunction,System.Data.Entity.Core.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Entity.Core.Metadata.Edm.TypeUsage}})">
      <summary>Costruisce un nuovo elemento DbFunctionCommandTree che utilizza l'area di lavoro dei metadati, lo spazio dati e i metadati della funzione specificati.</summary>
      <param name="metadata">Area di lavoro dei metadati che l'albero dei comandi deve utilizzare. </param>
      <param name="dataSpace">Lo 'spazio' logico a cui devono appartenere i metadati nelle espressioni utilizzate in questo albero dei comandi.</param>
      <param name="edmFunction">Funzione EDM da richiamare.</param>
      <param name="resultType">Tipo di risultato della funzione.</param>
      <param name="parameters">Parametri associati alla funzione da richiamare.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbFunctionCommandTree.CommandTreeKind">
      <summary>Ottiene o imposta il tipo di albero dei comandi.</summary>
      <returns>Tipo di albero dei comandi.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbFunctionCommandTree.EdmFunction">
      <summary>Ottiene l'oggetto <see cref="P:System.Data.Entity.Core.Common.CommandTrees.DbFunctionCommandTree.EdmFunction" /> che rappresenta la funzione da richiamare.</summary>
      <returns>Oggetto <see cref="P:System.Data.Entity.Core.Common.CommandTrees.DbFunctionCommandTree.EdmFunction" /> che rappresenta la funzione da richiamare.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbFunctionCommandTree.ResultType">
      <summary>Ottiene il tipo di risultato della funzione, attualmente vincolato a essere una raccolta di RowTypes.A differenza dell'istanza di RowType tipica, indica solo l'ordine del parametro not nome/tipo.</summary>
      <returns>Tipo di risultato della funzione.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression">
      <summary>     Rappresenta la chiamata di una funzione. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression.Arguments">
      <summary>     Ottiene un elenco <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che fornisce gli argomenti per la funzione. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression.Function">
      <summary>     Ottiene i metadati per la funzione da richiamare. </summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbGroupAggregate">
      <summary>Rappresenta una raccolta di elementi che compongono un gruppo.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbGroupByExpression">
      <summary>     Rappresenta un'operazione group by, ovvero un raggruppamento degli elementi del set di input in base alle espressioni chiave specificate seguite dall'applicazione delle aggregazioni specificate. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbGroupByExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbGroupByExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbGroupByExpression.Aggregates">
      <summary>     Ottiene un elenco <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbAggregate" /> che fornisce le aggregazioni da applicare. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbGroupByExpression.Input">
      <summary>     Ottiene l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding" /> che specifica il set di input e fornisce l'accesso alle variabili per gli elementi del set e gli elementi del gruppo. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbGroupByExpression.Keys">
      <summary>     Ottiene un elenco <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che fornisce le chiavi di raggruppamento. </summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding">
      <summary>Definisce l'associazione per il set di input in un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbGroupByExpression" />.Oltre alle proprietà di <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding" />, DbGroupExpressionBinding fornisce anche l'accesso all'elemento gruppo attraverso il riferimento alla variabile &lt;seealso cref="P:System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding.GroupVariable" /&gt; e all'aggregazione di gruppo attraverso la proprietà &lt;seealso cref="P:System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding.GroupAggregate" /&gt;.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding.Expression">
      <summary>     Ottiene l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che definisce il set di input. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding.GroupAggregate">
      <summary>     Ottiene l'oggetto DbGroupAggregate che rappresenta la raccolta di elementi del gruppo. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding.GroupVariable">
      <summary>     Ottiene l'oggetto DbVariableReferenceExpression che fa riferimento alla variabile per gli elementi del gruppo. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding.GroupVariableName">
      <summary>     Ottiene il nome assegnato alla variabile per gli elementi del gruppo. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding.GroupVariableType">
      <summary>     Ottiene i metadati del tipo della variabile per gli elementi del gruppo. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding.Variable">
      <summary>     Ottiene l'oggetto DbVariableReferenceExpression che fa riferimento alla variabile dell'elemento. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding.VariableName">
      <summary>     Ottiene il nome assegnato alla variabile dell'elemento. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding.VariableType">
      <summary>     Ottiene i metadati del tipo della variabile dell'elemento. </summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbInExpression">
      <summary>     Rappresenta un'espressione booleana che verifica se un elemento specificato corrisponde a qualsiasi elemento di un elenco. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbInExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbInExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbInExpression.Item">
      <summary>     Ottiene un oggetto DbExpression che specifica l'elemento per cui trovare la corrispondenza. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbInExpression.List">
      <summary>     Ottiene l'elenco di oggetti DbExpression da verificare per trovare una corrispondenza. </summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbInsertCommandTree">
      <summary>Rappresenta un'operazione di inserimento di una singola riga espressa come albero dei comandi canonico.Quando viene impostata la proprietà <see cref="P:System.Data.Entity.Core.Common.CommandTrees.DbInsertCommandTree.Returning" />, il comando restituisce un lettore; in caso contrario restituisce un valore scalare che indica il numero di righe interessate.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbInsertCommandTree.#ctor(System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace,System.Data.Entity.Core.Metadata.Edm.DataSpace,System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Entity.Core.Common.CommandTrees.DbModificationClause},System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbInsertCommandTree" />.</summary>
      <param name="metadata">Metadati.</param>
      <param name="dataSpace">Spazio dati.</param>
      <param name="target">Database di destinazione.</param>
      <param name="setClauses">Clausole SET che determinano i valori delle colonne nella riga inserita.</param>
      <param name="returning">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che specifica una proiezione di risultati da restituire in base alle righe modificate.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbInsertCommandTree.CommandTreeKind">
      <summary>Ottiene il tipo di albero dei comandi.</summary>
      <returns>Tipo di albero dei comandi.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbInsertCommandTree.Returning">
      <summary>Ottiene un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che specifica una proiezione di risultati da restituire in base alle righe modificate.Se Null, indica che questo comando non deve restituire alcun risultato.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che specifica una proiezione di risultati da restituire in base alle righe modificate.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbInsertCommandTree.SetClauses">
      <summary>Ottiene le clausole SET che determinano i valori delle colonne nella riga inserita.</summary>
      <returns>Clausole SET che determinano i valori delle colonne nella riga inserita.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbIntersectExpression">
      <summary>     Rappresenta l'operazione di intersezione dei set tra gli operandi sinistro e destro. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbIntersectExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbIntersectExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbIsEmptyExpression">
      <summary>     Rappresenta la determinazione del set vuoto applicata a un singolo argomento set. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbIsEmptyExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbIsEmptyExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbIsNullExpression">
      <summary>     Rappresenta la determinazione di null applicata a un singolo argomento. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbIsNullExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbIsNullExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbIsOfExpression">
      <summary>     Rappresenta il confronto dei tipi di un singolo argomento rispetto al tipo specificato. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbIsOfExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbIsOfExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbIsOfExpression.OfType">
      <summary>     Ottiene i metadati del tipo con cui devono essere confrontati i metadati del tipo dell'argomento. </summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbJoinExpression">
      <summary>     Rappresenta un'operazione inner, left outer o full outer join tra gli argomenti della raccolta specificati nella condizione di join specificata. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbJoinExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbJoinExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbJoinExpression.JoinCondition">
      <summary>     Ottiene l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che definisce la condizione di join da applicare. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbJoinExpression.Left">
      <summary>     Ottiene l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding" /> che fornisce l'input di sinistra. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbJoinExpression.Right">
      <summary>     Ottiene l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding" /> che fornisce l'input di destra. </summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbLambdaExpression">
      <summary>     Rappresenta l'applicazione di una funzione Lambda. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbLambdaExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbLambdaExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbLambdaExpression.Arguments">
      <summary>     Ottiene un elenco <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che fornisce gli argomenti a cui deve essere applicata la funzione Lambda. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbLambdaExpression.Lambda">
      <summary>     Ottiene l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbLambda" /> che rappresenta la funzione Lambda applicata da questa espressione. </summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbLikeExpression">
      <summary>     Rappresenta un confronto di stringhe rispetto al pattern specificato con una stringa di escape facoltativa </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbLikeExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbLikeExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbLikeExpression.Argument">
      <summary>     Ottiene l'espressione che specifica la stringa da confrontare rispetto al pattern specificato </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbLikeExpression.Escape">
      <summary>     Ottiene l'espressione che fornisce una stringa di escape facoltativa da utilizzare per il confronto </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbLikeExpression.Pattern">
      <summary>     Ottiene l'espressione che specifica il pattern rispetto al quale deve essere confrontata la stringa specificata </summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbLimitExpression">
      <summary>     Rappresenta la restrizione del numero di elementi nella raccolta Argument sul valore Limite specificato. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbLimitExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbLimitExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbLimitExpression.Argument">
      <summary>     Ottiene l'espressione che specifica la raccolta di input. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbLimitExpression.Limit">
      <summary>     Ottiene l'espressione che specifica il limite sul numero di elementi restituiti dalla raccolta di input. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbLimitExpression.WithTies">
      <summary>     Ottiene un valore che indica se l'operazione di limite includerà risultati correlati, cosa che potrebbe produrre più risultati rispetto a quanto specificato dal valore Limit se sono presenti collegamenti. </summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbModificationClause">
      <summary>Specifica una singola clausola in un'operazione di modifica di inserimento o di aggiornamento. Vedere <see cref="P:System.Data.Entity.Core.Common.CommandTrees.DbInsertCommandTree.SetClauses" /> e <see cref="P:System.Data.Entity.Core.Common.CommandTrees.DbUpdateCommandTree.SetClauses" />.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbModificationCommandTree">
      <summary>     Rappresenta un'operazione DML espressa come albero dei comandi canonico </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbModificationCommandTree.Target">
      <summary>     Ottiene l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding" /> che specifica la tabella di destinazione per l'operazione DML. </summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbNewInstanceExpression">
      <summary>     Rappresenta la costruzione di una nuova istanza di un tipo specificato, inclusi i tipi di set e di record. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbNewInstanceExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbNewInstanceExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbNewInstanceExpression.Arguments">
      <summary>     Ottiene un elenco <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che fornisce i valori di proprietà/colonna o gli elementi impostati per la nuova istanza. </summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbNotExpression">
      <summary>     Rappresenta il Not logico di un singolo argomento booleano. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbNotExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbNotExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbNullExpression">
      <summary>     Rappresenta un valore Null. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbNullExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbNullExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbOfTypeExpression">
      <summary>     Rappresenta il recupero di elementi del tipo specificato dall'argomento impostato indicato. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbOfTypeExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbOfTypeExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbOfTypeExpression.OfType">
      <summary>     Ottiene i metadati del tipo di elementi che devono essere recuperati dall'argomento impostato. </summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbOrExpression">
      <summary>     Rappresenta l'operatore logico Or di due argomenti Boolean. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbOrExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbOrExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbParameterReferenceExpression">
      <summary>     Rappresenta un riferimento a un parametro dichiarato nella struttura ad albero dei comandi che contiene l'espressione. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbParameterReferenceExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbParameterReferenceExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbParameterReferenceExpression.ParameterName">
      <summary>     Ottiene il nome del parametro a cui si fa riferimento. </summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbProjectExpression">
      <summary>     Rappresenta la proiezione di un set di valori specificato sul set di input specificato. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbProjectExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbProjectExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbProjectExpression.Input">
      <summary>     Ottiene l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding" /> che specifica il set di input. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbProjectExpression.Projection">
      <summary>     Ottiene l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che definisce la proiezione. </summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbPropertyExpression">
      <summary>Fornisce metodi e proprietà per il recupero di una proprietà dell'istanza.La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbPropertyExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>Implementa il pattern visitor per le espressioni che non producono alcun valore di risultato.</summary>
      <param name="visitor">Istanza di <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor" />.</param>
      <exception cref="T:System.ArgumentNullException">visitor è null.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbPropertyExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>Implementa il pattern visitor per le espressioni che producono un valore di risultato di un tipo specifico.</summary>
      <returns>Valore di risultato di un tipo specifico prodotto da <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor" />.</returns>
      <param name="visitor">Istanza di un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor" /> tipizzato che produce un valore di risultato di un tipo specifico.</param>
      <typeparam name="TResultType">Tipo del risultato prodotto da visitor.</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor è null.</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbPropertyExpression.Instance">
      <summary>Ottiene un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che definisce l'istanza da cui deve essere recuperata la proprietà.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che definisce l'istanza da cui deve essere recuperata la proprietà.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbPropertyExpression.op_Implicit(System.Data.Entity.Core.Common.CommandTrees.DbPropertyExpression)~System.Collections.Generic.KeyValuePair{System.String,System.Data.Entity.Core.Common.CommandTrees.DbExpression}">
      <summary>Abilita il cast implicito a <see cref="T:System.Collections.Generic.KeyValuePair`2" />.</summary>
      <returns>Valore convertito.</returns>
      <param name="value">Espressione da convertire.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbPropertyExpression.Property">
      <summary>Ottiene i metadati di proprietà per la proprietà da recuperare.</summary>
      <returns>Metadati di proprietà per la proprietà da recuperare.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbPropertyExpression.ToKeyValuePair">
      <summary>Crea una nuova coppia chiave/valore basata su questa espressione di proprietà.</summary>
      <returns>Nuova coppia chiave/valore con la chiave e il valore derivati da <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbPropertyExpression" />.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbQuantifierExpression">
      <summary>     Rappresenta un'operazione del quantificatore del tipo specificato (Any, All) sugli elementi del set di input indicato. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbQuantifierExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbQuantifierExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbQuantifierExpression.Input">
      <summary>     Ottiene l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding" /> che specifica il set di input. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbQuantifierExpression.Predicate">
      <summary>     Ottiene il predicato booleano che deve essere valutato per ogni elemento del set di input. </summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbQueryCommandTree">
      <summary>Rappresenta un'operazione di query espressa come un albero dei comandi canonico.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbQueryCommandTree.#ctor(System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace,System.Data.Entity.Core.Metadata.Edm.DataSpace,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbQueryCommandTree" /> che usa l'area di lavoro dei metadati specificata.</summary>
      <param name="metadata">Area di lavoro dei metadati che l'albero dei comandi deve utilizzare.</param>
      <param name="dataSpace">Lo 'spazio' logico a cui devono appartenere i metadati nelle espressioni utilizzate in questo albero dei comandi.</param>
      <param name="query">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che definisce la logica della query.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="metadata" /> o <paramref name="query" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="dataSpace" /> non rappresenta uno spazio dati valido.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbQueryCommandTree.#ctor(System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace,System.Data.Entity.Core.Metadata.Edm.DataSpace,System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbQueryCommandTree" /> che usa l'area di lavoro dei metadati specificata.</summary>
      <param name="metadata">Area di lavoro dei metadati che l'albero dei comandi deve utilizzare.</param>
      <param name="dataSpace">Lo 'spazio' logico a cui devono appartenere i metadati nelle espressioni utilizzate in questo albero dei comandi. </param>
      <param name="query">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che definisce la logica della query. </param>
      <param name="validate">true per convalidare l'albero. In caso contrario, false.Se impostato su false la convalida dell'albero è disabilitata.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="metadata" /> o <paramref name="query" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="dataSpace" /> non rappresenta uno spazio dati valido.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbQueryCommandTree.#ctor(System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace,System.Data.Entity.Core.Metadata.Edm.DataSpace,System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Boolean,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbQueryCommandTree" />.</summary>
      <param name="metadata">Area di lavoro dei metadati che l'albero dei comandi deve utilizzare.</param>
      <param name="dataSpace">Lo 'spazio' logico a cui devono appartenere i metadati nelle espressioni utilizzate in questo albero dei comandi.</param>
      <param name="query">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che definisce la logica della query.</param>
      <param name="validate">true per convalidare l'albero. In caso contrario, false.Se impostato su false la convalida dell'albero è disabilitata.</param>
      <param name="useDatabaseNullSemantics">true per usare la semantica null del database. In caso contrario, false.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbQueryCommandTree.CommandTreeKind">
      <summary>Ottiene il tipo di questo albero dei comandi.</summary>
      <returns>Tipo di questo albero dei comandi.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbQueryCommandTree.Query">
      <summary>Ottiene un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che definisce la logica della query.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che definisce la logica della query.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbRefExpression">
      <summary>     Rappresenta un riferimento fortemente tipizzato a un'istanza specifica all'interno di un set di entità specificato. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbRefExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbRefExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbRefExpression.EntitySet">
      <summary>     Ottiene i metadati per il set di entità che contiene l'istanza. </summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbRefKeyExpression">
      <summary>     Rappresenta il recupero del valore della chiave del riferimento specificato come riga. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbRefKeyExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbRefKeyExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbRelationshipNavigationExpression">
      <summary>     Rappresenta la navigazione di una relazione (composizione o associazione) dato il ruolo 'from', il ruolo 'to' e un'istanza del ruolo from </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbRelationshipNavigationExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbRelationshipNavigationExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbRelationshipNavigationExpression.NavigateFrom">
      <summary>     Ottiene i metadati per l'entità finale della relazione da cui navigare </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbRelationshipNavigationExpression.NavigateTo">
      <summary>     Ottiene i metadati per l'entità finale della relazione a cui navigare </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbRelationshipNavigationExpression.NavigationSource">
      <summary>     Ottiene l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che specifica l'istanza dell'entità finale della relazione 'from' da cui deve essere eseguita la navigazione. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbRelationshipNavigationExpression.Relationship">
      <summary>     Ottiene i metadati per la relazione su cui si verifica la navigazione </summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbScanExpression">
      <summary>     Rappresenta un''analisi' di tutti gli elementi di un set di entità specificato. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbScanExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbScanExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbScanExpression.Target">
      <summary>     Ottiene i metadati per il set di entità o di relazioni con riferimenti. </summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbSetClause">
      <summary>     Specifica una clausola in un'operazione di modifica che imposta il valore di una proprietà. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbSetClause.Property">
      <summary>     Ottiene un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che specifica la proprietà che deve essere aggiornata. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbSetClause.Value">
      <summary>     Ottiene un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che specifica il nuovo valore con cui aggiornare la proprietà. </summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbSkipExpression">
      <summary>     Rappresenta un'operazione per ignorare il numero specificato di elementi del set di input dopo l'applicazione dell'ordinamento descritto nelle chiavi di ordinamento specificate. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbSkipExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbSkipExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbSkipExpression.Count">
      <summary>     Ottiene l'espressione che specifica il numero di elementi da ignorare dalla raccolta di input. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbSkipExpression.Input">
      <summary>     Ottiene l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding" /> che specifica il set di input. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbSkipExpression.SortOrder">
      <summary>     Ottiene un elenco <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbSortClause" /> che definisce l'ordinamento. </summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbSortClause">
      <summary>     Specifica una chiave di ordinamento che può essere utilizzata come parte dell'ordinamento in un oggetto DbSortExpression. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbSortClause.Ascending">
      <summary>     Ottiene un valore Boolean che indica se la chiave di ordinamento utilizza è crescente o meno. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbSortClause.Collation">
      <summary>     Ottiene un valore stringa che specifica le regole di confronto per la chiave di ordinamento. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbSortClause.Expression">
      <summary>     Ottiene l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che fornisce il valore per la chiave di ordinamento. </summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbSortExpression">
      <summary>     Rappresenta un'operazione di ordinamento applicata agli elementi del set di input specificato in base alle chiavi di ordinamento indicate. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbSortExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbSortExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbSortExpression.Input">
      <summary>     Ottiene l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding" /> che specifica il set di input. </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbSortExpression.SortOrder">
      <summary>     Ottiene un elenco <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbSortClause" /> che definisce l'ordinamento. </summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbTreatExpression">
      <summary>     Rappresenta la conversione del tipo di un singolo argomento nel tipo specificato. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbTreatExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbTreatExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbUnaryExpression">
      <summary>     Tipo di base astratto per le espressioni che accettano un singolo operando dell'espressione </summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbUnaryExpression.Argument">
      <summary>     Ottiene l'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che definisce l'argomento. </summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbUnionAllExpression">
      <summary>     Rappresenta l'operazione di unione di set, senza rimozione dei duplicati, tra gli operandi sinistro e destro. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbUnionAllExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbUnionAllExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbUpdateCommandTree">
      <summary>Rappresenta un'operazione di aggiornamento di una singola riga espressa come struttura ad albero dei comandi.La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbUpdateCommandTree.#ctor(System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace,System.Data.Entity.Core.Metadata.Edm.DataSpace,System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding,System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Entity.Core.Common.CommandTrees.DbModificationClause},System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbUpdateCommandTree" />.</summary>
      <param name="metadata">Modello su cui opera il comando.</param>
      <param name="dataSpace">Spazio dati.</param>
      <param name="target">Tabella di destinazione per l'operazione DML (Data Manipulation Language).</param>
      <param name="predicate">Predicato utilizzato per determinare i membri della raccolta di destinazione da aggiornare.</param>
      <param name="setClauses">Elenco di clausole SET di aggiornamento che definiscono l'operazione di aggiornamento.</param>
      <param name="returning">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che specifica una proiezione di risultati da restituire in base alle righe modificate.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbUpdateCommandTree.CommandTreeKind">
      <summary>Ottiene il tipo di questo albero dei comandi.</summary>
      <returns>Tipo di questo albero dei comandi.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbUpdateCommandTree.Predicate">
      <summary>Ottiene un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che specifica il predicato utilizzato per determinare i membri della raccolta di destinazione da aggiornare.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che specifica il predicato utilizzato per determinare i membri della raccolta di destinazione da aggiornare.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbUpdateCommandTree.Returning">
      <summary>Ottiene un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che specifica una proiezione di risultati da restituire, in base alle righe modificate.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che specifica una proiezione di risultati da restituire in base alle righe modificate.Null indica che questo comando non deve restituire alcun risultato.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbUpdateCommandTree.SetClauses">
      <summary>Ottiene l'elenco di clausole SET di aggiornamento che definiscono l'operazione di aggiornamento.</summary>
      <returns>Elenco di clausole SET di aggiornamento che definiscono l'operazione di aggiornamento.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression">
      <summary>     Rappresenta un riferimento a una variabile attualmente inclusa nell'ambito. </summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression.Accept(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor)">
      <summary>     Metodo del pattern per i visitor delle espressioni che non producono un valore di risultato. </summary>
      <param name="visitor"> Istanza di DbExpressionVisitor. </param>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression.Accept``1(System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>     Metodo del pattern per i visitor di espressioni che producono un valore di risultato di un tipo specifico. </summary>
      <param name="visitor"> Istanza di un oggetto DbExpressionVisitor tipizzato che produce un valore di risultato di tipo TResultType. </param>
      <typeparam name="TResultType">     Tipo del risultato prodotto da visitor</typeparam>
      <exception cref="T:System.ArgumentNullException">visitor</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression.VariableName">
      <summary>     Ottiene il nome della variabile a cui si fa riferimento. </summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor">
      <summary>Visita ogni elemento di un albero delle espressioni da un'espressione radice specificata.Se cambia uno qualsiasi degli elementi, l'albero viene ricompilato alla radice e viene restituita la nuova espressione radice. In caso contrario, viene restituita l'espressione radice originale.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.OnEnterScope(System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression})">
      <summary>Rappresenta un evento quando si accede all'ambito per il visitor dell'espressione con le variabili di ambito specificate.</summary>
      <param name="scopeVariables">Raccolta di variabili di ambito.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.OnExitScope">
      <summary>Esce dall'ambito per il visitor dell'espressione.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.OnExpressionReplaced(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Sostituisce un'espressione precedente con una nuova per il visitor dell'espressione.</summary>
      <param name="oldExpression">Espressione precedente.</param>
      <param name="newExpression">Nuova espressione.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.OnVariableRebound(System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression,System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression)">
      <summary>Rappresenta un evento quando viene riassociata la variabile per il visitor dell'espressione.</summary>
      <param name="fromVarRef">Percorso della variabile.</param>
      <param name="toVarRef">Riferimento della destinazione di riassociazione della variabile.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbAndExpression)">
      <summary>Implementa il pattern visitor per l'espressione AND logica.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbAndExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbApplyExpression)">
      <summary>Implementa il pattern visitor per la chiamata della funzione specificata per ogni elemento nel set di input specificato.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbApplyExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbArithmeticExpression)">
      <summary>Implementa il pattern visitor per l'operazione aritmetica applicata agli argomenti numerici.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbArithmeticExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbCaseExpression)">
      <summary>Implementa il pattern visitor per le clausole When, Then e Else.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbCaseExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbCastExpression)">
      <summary>Implementa il pattern visitor per la conversione del tipo di un singolo argomento nel tipo specificato.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbCastExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbComparisonExpression)">
      <summary>Implementa il pattern visitor per l'operazione di confronto applicata a due argomenti.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbComparisonExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbConstantExpression)">
      <summary>Implementa il pattern visitor per i diversi tipi di costanti.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbConstantExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbCrossJoinExpression)">
      <summary>Implementa il pattern visitor per l'operazione di join non condizionale tra gli argomenti della raccolta specificati.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbCrossJoinExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbDerefExpression)">
      <summary>Implementa il pattern visitor per l'espressione che recupera un'entità in base al riferimento specificato.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbDerefExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbDistinctExpression)">
      <summary>Implementa il pattern visitor per gli elementi duplicati rimossi dall'argomento set specificato.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbDistinctExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbElementExpression)">
      <summary>Implementa il pattern visitor per la conversione dell'argomento set specificato in un singleton.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbElementExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbEntityRefExpression)">
      <summary>Implementa il pattern visitor per l'espressione che estrae un riferimento dall'istanza dell'entità sottostante.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbEntityRefExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbExceptExpression)">
      <summary>Implementa il pattern visitor per l'operazione di sottrazione dei set tra gli operandi sinistro e destro.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbExceptExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Implementa il pattern visitor per le funzionalità di base richieste dai tipi di espressione.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbFilterExpression)">
      <summary>Implementa il pattern visitor per un predicato applicato per filtrare un set di input.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbFilterExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression)">
      <summary>Implementa il pattern visitor per una chiamata di una funzione.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbFunctionExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbGroupByExpression)">
      <summary>Implementa il pattern visitor per un'operazione group by.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbGroupByExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbInExpression)">
      <summary>Implementa il pattern visitor per DbInExpression.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbInExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIntersectExpression)">
      <summary>Implementa il pattern visitor per l'operazione di intersezione dei set tra gli operandi sinistro e destro.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbIntersectExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIsEmptyExpression)">
      <summary>Implementa il pattern visitor per la determinazione di un set vuoto applicata a un singolo argomento set.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbIsEmptyExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIsNullExpression)">
      <summary>Implementa il pattern visitor per la determinazione Null applicata a un singolo argomento.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbIsNullExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIsOfExpression)">
      <summary>Implementa il pattern visitor per il confronto del tipo di un singolo argomento rispetto al tipo specificato.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbIsOfExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbJoinExpression)">
      <summary>Implementa il pattern visitor per un'operazione inner, left outer o full outer join tra gli argomenti della raccolta specificati nella condizione di join specificata.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbJoinExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbLambdaExpression)">
      <summary>Implementa il pattern visitor per l'applicazione di una funzione lambda agli argomenti rappresentati da oggetti DbExpression.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbLambdaExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbLikeExpression)">
      <summary>Implementa il pattern visitor per un confronto di stringhe rispetto al pattern specificato con una stringa di escape facoltativa.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbLikeExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbLimitExpression)">
      <summary>Implementa il pattern visitor per la restrizione del numero di elementi nella raccolta di argomenti sul valore limite specificato.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbLimitExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbNewInstanceExpression)">
      <summary>Implementa il pattern visitor per la costruzione di una nuova istanza di un tipo specificato, inclusi i tipi di set e di record.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbNewInstanceExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbNotExpression)">
      <summary>Implementa il pattern visitor per il NOT logico di un singolo argomento booleano.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbNotExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbNullExpression)">
      <summary>Implementa il pattern visitor per un riferimento a un valore letterale Null tipizzato.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbNullExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbOfTypeExpression)">
      <summary>Implementa il pattern visitor per il recupero di elementi del tipo specificato dall'argomento set indicato.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbOfTypeExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbOrExpression)">
      <summary>Implementa il pattern visitor per l'OR logico di due argomenti booleani.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbOrExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbParameterReferenceExpression)">
      <summary>Implementa il pattern visitor per un riferimento a un parametro dichiarato nell'albero dei comandi che contiene l'espressione.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbParameterReferenceExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbProjectExpression)">
      <summary>Implementa il pattern visitor per la proiezione di un set di input specificato sull'espressione specificata.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbProjectExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbPropertyExpression)">
      <summary>Implementa il pattern visitor per il recupero della proprietà di un'istanza.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbPropertyExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbQuantifierExpression)">
      <summary>Implementa il pattern visitor per un'operazione del quantificatore del tipo specificato sugli elementi del set di input specificato.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbQuantifierExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbRefExpression)">
      <summary>Implementa il pattern visitor per un riferimento fortemente tipizzato a un'istanza specifica all'interno di un set di entità.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbRefExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbRefKeyExpression)">
      <summary>Implementa il pattern visitor per il recupero del valore chiave dal valore di riferimento sottostante.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbRefKeyExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbRelationshipNavigationExpression)">
      <summary>Implementa il pattern visitor per la navigazione di una relazione.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbRelationshipNavigationExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbScanExpression)">
      <summary>Implementa il pattern visitor per un'analisi su un set di entità o un set di relazioni, come indicato dalla proprietà Target.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbScanExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbSkipExpression)">
      <summary>Implementa il pattern visitor per l'espressione SKIP.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbSkipExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbSortExpression)">
      <summary>Implementa il pattern visitor per una chiave di ordinamento che può essere utilizzata come parte dell'ordinamento.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbSortExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbTreatExpression)">
      <summary>Implementa il pattern visitor per un'operazione di conversione del tipo applicata a un argomento polimorfico.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbTreatExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbUnionAllExpression)">
      <summary>Implementa il pattern visitor per l'operazione di unione dei set tra gli operandi sinistro e destro.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbUnionAllExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression)">
      <summary>Implementa il pattern visitor per un riferimento a una variabile attualmente inclusa nell'ambito.</summary>
      <returns>Visitor implementato.</returns>
      <param name="expression">DbVariableReferenceExpression oggetto della visita.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.VisitAggregate(System.Data.Entity.Core.Common.CommandTrees.DbAggregate)">
      <summary>Implementa il pattern visitor per l'aggregazione.</summary>
      <returns>Pattern visitor implementato.</returns>
      <param name="aggregate">Aggregazione da visitare.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.VisitEntitySet(System.Data.Entity.Core.Metadata.Edm.EntitySetBase)">
      <summary>Implementa il pattern visitor per il set di entità.</summary>
      <returns>Pattern visitor implementato.</returns>
      <param name="entitySet">Set di entità.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.VisitExpression(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Implementa il pattern visitor per l'espressione.</summary>
      <returns>Pattern visitor implementato.</returns>
      <param name="expression">Espressione.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionBinding(System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding)">
      <summary>Implementa il pattern visitor per l'associazione di espressioni.</summary>
      <returns>Pattern visitor implementato.</returns>
      <param name="binding">Associazione di espressioni.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionBindingList(System.Collections.Generic.IList{System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding})">
      <summary>Implementa il pattern visitor per l'elenco di associazioni di espressioni.</summary>
      <returns>Pattern visitor implementato.</returns>
      <param name="list">Elenco di associazioni di espressioni.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionList(System.Collections.Generic.IList{System.Data.Entity.Core.Common.CommandTrees.DbExpression})">
      <summary>Implementa il pattern visitor per l'elenco di espressioni.</summary>
      <returns>Pattern visitor implementato.</returns>
      <param name="list">Elenco di espressioni.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.VisitFunction(System.Data.Entity.Core.Metadata.Edm.EdmFunction)">
      <summary>Implementa il pattern visitor per la funzione.</summary>
      <returns>Pattern visitor implementato.</returns>
      <param name="functionMetadata">Metadati della funzione.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.VisitFunctionAggregate(System.Data.Entity.Core.Common.CommandTrees.DbFunctionAggregate)">
      <summary>Implementa il pattern visitor per l'aggregazione di funzioni.</summary>
      <returns>Pattern visitor implementato.</returns>
      <param name="aggregate">Aggregazione.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.VisitGroupAggregate(System.Data.Entity.Core.Common.CommandTrees.DbGroupAggregate)">
      <summary>Implementa il pattern visitor per l'aggregazione di gruppi.</summary>
      <returns>Pattern visitor implementato.</returns>
      <param name="aggregate">Aggregazione.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.VisitGroupExpressionBinding(System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding)">
      <summary>Implementa il pattern visitor per l'associazione di espressioni di gruppo.</summary>
      <returns>Pattern visitor implementato.</returns>
      <param name="binding">Associazione.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.VisitLambda(System.Data.Entity.Core.Common.CommandTrees.DbLambda)">
      <summary>Implementa il pattern visitor per la funzione Lambda.</summary>
      <returns>Pattern visitor implementato.</returns>
      <param name="lambda">Funzione lambda.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.VisitSortClause(System.Data.Entity.Core.Common.CommandTrees.DbSortClause)">
      <summary>Implementa il pattern visitor per la clausola di ordinamento.</summary>
      <returns>Pattern visitor implementato.</returns>
      <param name="clause">Clausola di ordinamento.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.VisitSortOrder(System.Collections.Generic.IList{System.Data.Entity.Core.Common.CommandTrees.DbSortClause})">
      <summary>Implementa il pattern visitor per l'ordinamento.</summary>
      <returns>Pattern visitor implementato.</returns>
      <param name="sortOrder">Ordinamento.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.VisitType(System.Data.Entity.Core.Metadata.Edm.EdmType)">
      <summary>Implementa il pattern visitor per il tipo.</summary>
      <returns>Pattern visitor implementato.</returns>
      <param name="type">Tipo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.DefaultExpressionVisitor.VisitTypeUsage(System.Data.Entity.Core.Metadata.Edm.TypeUsage)">
      <summary>Implementa il pattern visitor per l'utilizzo del tipo.</summary>
      <returns>Pattern visitor implementato.</returns>
      <param name="type">Tipo.</param>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
      <summary>Fornisce un'API per costruire oggetti <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> e rende l'API accessibile come metodi di estensione sul tipo di espressione stesso.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Entity.Core.Metadata.Edm.EdmFunction,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionAggregate" />.</summary>
      <returns>Nuova funzione Aggregate con un riferimento all'argomento e alla funzione specificati.La proprietà Distinct della funzione Aggregate presenterà il valore false.</returns>
      <param name="function">Funzione che definisce l'operazione di aggregazione.</param>
      <param name="argument">Argomento su cui calcolare la funzione di aggregazione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="function" /> o <paramref name="argument" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="function" /> non è una funzione aggregata o include più argomenti, oppure il tipo di risultato di <paramref name="argument" /> non è uguale o promuovibile al tipo di parametro di <paramref name="function" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Entity.Core.Metadata.Edm.EdmFunction,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionAggregate" /> che viene applicato in modo distinto.</summary>
      <returns>Nuova funzione Aggregate con un riferimento all'argomento e alla funzione specificati.La proprietà Distinct della funzione Aggregate presenterà il valore true.</returns>
      <param name="function">Funzione che definisce l'operazione di aggregazione.</param>
      <param name="argument">Argomento su cui calcolare la funzione di aggregazione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="function" /> o <paramref name="argument" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="function" /> non è una funzione aggregata o include più argomenti, oppure il tipo di risultato di <paramref name="argument" /> non è uguale o promuovibile al tipo di parametro di <paramref name="function" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression})">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbQuantifierExpression" /> che determina se il predicato specificato vale per tutti gli elementi del set di input.</summary>
      <returns>Nuovo elemento DbQuantifierExpression che rappresenta l'operazione All.</returns>
      <param name="source">Espressione che specifica il set di input.</param>
      <param name="predicate">Metodo che rappresenta un predicato da valutare per ogni membro del set di input.Questo metodo deve produrre un'espressione con un tipo di risultato booleano che fornisce la logica predicativa.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> or <paramref name="predicate" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">L'espressione generata da <paramref name="predicate" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> non dispone di un tipo di risultato della raccolta.</exception>
      <exception cref="T:System.ArgumentException">L'espressione generata da <paramref name="predicate" /> non dispone di un tipo di risultato booleano.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbQuantifierExpression" /> che determina se il predicato specificato vale per tutti gli elementi del set di input.</summary>
      <returns>Nuovo elemento DbQuantifierExpression che rappresenta l'operazione All.</returns>
      <param name="input">Associazione di espressione che specifica il set di input.</param>
      <param name="predicate">Espressione che rappresenta un predicato da valutare per ogni membro del set di input.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> or <paramref name="predicate" /> is null.</exception>
      <exception cref="T:System.ArgumentException">L'espressione generata da <paramref name="predicate" /> non dispone di un tipo di risultato booleano.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbAndExpression" /> che esegue l'operazione AND logica degli argomenti a sinistra e a destra.</summary>
      <returns>Nuovo elemento DbAndExpression con gli argomenti specificati.</returns>
      <param name="left">Espressione booleana che specifica l'argomento a sinistra.</param>
      <param name="right">Espressione booleana che specifica l'argomento a destra.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="left" /> o <paramref name="right" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="left" /> o <paramref name="right" /> non dispone di un tipo di risultato booleano.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che determina se l'argomento set specificato è non vuoto.</summary>
      <returns>Nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbNotExpression" /> applicato a un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbIsEmptyExpression" /> con l'argomento specificato.</returns>
      <param name="source">Espressione che specifica il set di input.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> non dispone di un tipo di risultato della raccolta.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression})">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbQuantifierExpression" /> che determina se il predicato specificato vale per qualsiasi elemento del set di input.</summary>
      <returns> Nuovo elemento DbQuantifierExpression che rappresenta l'operazione Any. </returns>
      <param name="source">Espressione che specifica il set di input.</param>
      <param name="predicate">Metodo che rappresenta il predicato da valutare per ogni membro del set di input.Questo metodo deve produrre un'espressione con un tipo di risultato booleano che fornisce la logica predicativa.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> or <paramref name="predicate" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">L'espressione generata da <paramref name="predicate" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> non dispone di un tipo di risultato della raccolta.</exception>
      <exception cref="T:System.ArgumentException">L'espressione generata da <paramref name="predicate" /> non dispone di un tipo di risultato booleano.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbQuantifierExpression" /> che determina se il predicato specificato vale per qualsiasi elemento del set di input.</summary>
      <returns>Nuovo elemento DbQuantifierExpression che rappresenta l'operazione Any.</returns>
      <param name="input">Associazione di espressione che specifica il set di input.</param>
      <param name="predicate">Espressione che rappresenta un predicato da valutare per ogni membro del set di input.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> or <paramref name="predicate" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="predicate" /> non dispone di un tipo di risultato booleano.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Entity.Core.Common.CommandTrees.DbAggregate,System.String)">
      <summary>Restituisce gli argomenti specificati come oggetto della coppia chiave/valore.</summary>
      <returns>Oggetto della coppia chiave/valore.</returns>
      <param name="value">Valore nella coppia chiave/valore.</param>
      <param name="alias">Chiave nella coppia chiave/valore.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.String)">
      <summary>Restituisce gli argomenti specificati come oggetto della coppia chiave/valore.</summary>
      <returns>Oggetto della coppia chiave/valore.</returns>
      <param name="value">Valore nella coppia chiave/valore.</param>
      <param name="alias">Chiave nella coppia chiave/valore.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding" /> che associa l'espressione specificata utilizzando un nome di variabile generato.</summary>
      <returns>Nuova associazione con l'espressione specificata e un nome di variabile generato.</returns>
      <param name="input">Espressione da associare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="input" /> non dispone di un tipo di risultato della raccolta.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.String)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding" /> che associa l'espressione specificata utilizzando il nome di variabile specificato.</summary>
      <returns>Nuova associazione con l'espressione specificata e un nome di variabile.</returns>
      <param name="input">Espressione da associare.</param>
      <param name="varName">Nome di variabile da utilizzare per l'associazione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> o <paramref name="varName" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="input" /> non dispone di un tipo di risultato della raccolta.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Common.CommandTrees.DbExpression},System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbCaseExpression" />.</summary>
      <returns>Nuovo elemento DbCaseExpression con i casi specificati e il risultato predefinito.</returns>
      <param name="whenExpressions">Elenco di espressioni che forniscono la logica FOR condizionale di ogni caso.</param>
      <param name="thenExpressions">Elenco di espressioni che forniscono il risultato di ogni caso.</param>
      <param name="elseExpression">Espressione che definisce il risultato in assenza di corrispondenza con i casi elencati.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="whenExpressions" /> o <paramref name="thenExpressions" /> è Null o contiene Null oppure <paramref name="elseExpression" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="whenExpressions" /> o <paramref name="thenExpressions" /> è vuoto o <paramref name="whenExpressions" /> contiene un'espressione con un tipo di risultato non booleano oppure non esiste alcun tipo di risultato comune per tutte le espressioni in <paramref name="thenExpressions" /> e <paramref name="elseExpression" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Metadata.Edm.TypeUsage)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbCastExpression" /> che applica un'operazione di cast a un argomento polimorfico.</summary>
      <returns>Nuovo elemento DbCastExpression con il tipo di destinazione e l'argomento specificati.</returns>
      <param name="argument">Argomento a cui applicare il cast.</param>
      <param name="toType">Metadati di tipo che specificano il tipo a cui eseguire il cast.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="argument" /> o <paramref name="toType" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Il cast specificato non è valido.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Entity.Core.Metadata.Edm.TypeUsage,System.Object)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbConstantExpression" /> del tipo primitivo specificato con il valore costante specificato.</summary>
      <returns>Nuovo elemento DbConstantExpression con il valore specificato e un tipo di risultato di <paramref name="constantType" />.</returns>
      <param name="constantType">Tipo del valore costante.</param>
      <param name="value">Valore costante da rappresentare.</param>
      <exception cref="T:System.ArgumentNullException">valueconstantType</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> non è un'istanza di un tipo di costante valido, <paramref name="constantType" /> non rappresenta un tipo primitivo o <paramref name="value" /> è di un tipo primitivo diverso da quello rappresentato da <paramref name="constantType" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbConstantExpression" /> con il valore costante specificato.</summary>
      <returns>Nuovo elemento DbConstantExpression con il valore specificato.</returns>
      <param name="value">Valore costante da rappresentare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> non è un'istanza di un tipo di costante valido.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Entity.Core.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Common.CommandTrees.DbExpression})">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbRefExpression" /> che codifica un riferimento a un'entità specifica in base a valori chiave.</summary>
      <returns>Nuovo elemento DbRefExpression che fa riferimento all'elemento con i valori chiave specificati nel set di entità specificato.</returns>
      <param name="entitySet">Set di entità in cui risiede l'elemento a cui viene fatto riferimento.</param>
      <param name="keyValues">Raccolta di oggetti <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che forniscono i valori chiave.Queste espressioni devono corrispondere (per numero, tipo e ordine) alle proprietà chiave del tipo di entità a cui si fa riferimento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="entitySet" /> è Null o <paramref name="keyValues" /> è Null o contiene Null.</exception>
      <exception cref="T:System.ArgumentException">Il conteggio di <paramref name="keyValues" /> non corrisponde al conteggio dei membri principali dichiarati dal tipo di elemento di <paramref name="entitySet" /> oppure in <paramref name="keyValues" /> è contenuta un'espressione con un tipo di risultato che non è compatibile con il tipo di membro principale corrispondente.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Entity.Core.Metadata.Edm.EntitySet,System.Data.Entity.Core.Common.CommandTrees.DbExpression[])">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbRefExpression" /> che codifica un riferimento a un'entità specifica in base a valori chiave.</summary>
      <returns>Nuovo elemento DbRefExpression che fa riferimento all'elemento con i valori chiave specificati nel set di entità specificato.</returns>
      <param name="entitySet">Set di entità in cui risiede l'elemento a cui viene fatto riferimento.</param>
      <param name="keyValues">Raccolta di oggetti <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che forniscono i valori chiave.Queste espressioni devono corrispondere (per numero, tipo e ordine) alle proprietà chiave del tipo di entità a cui si fa riferimento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="entitySet" /> è Null o <paramref name="keyValues" /> è Null o contiene Null.</exception>
      <exception cref="T:System.ArgumentException">Il conteggio di <paramref name="keyValues" /> non corrisponde al conteggio dei membri principali dichiarati dal tipo di elemento di <paramref name="entitySet" /> oppure in <paramref name="keyValues" /> è contenuta un'espressione con un tipo di risultato che non è compatibile con il tipo di membro principale corrispondente.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Entity.Core.Metadata.Edm.EntitySet,System.Data.Entity.Core.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Common.CommandTrees.DbExpression})">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbRefExpression" /> che codifica un riferimento a un'entità specifica di un tipo specificato in base a valori chiave.</summary>
      <returns>Nuovo elemento DbRefExpression che fa riferimento all'elemento con i valori chiave specificati nel set di entità specificato.</returns>
      <param name="entitySet">Set di entità in cui risiede l'elemento a cui viene fatto riferimento.</param>
      <param name="entityType">Tipo specifico dell'entità a cui si fa riferimento.Deve trattarsi di un tipo di entità dalla stessa gerarchia del tipo di elemento del set di entità.</param>
      <param name="keyValues">Raccolta di oggetti <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che forniscono i valori chiave.Queste espressioni devono corrispondere (per numero, tipo e ordine) alle proprietà chiave del tipo di entità a cui si fa riferimento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="entitySet" /> o <paramref name="entityType" /> è Null o <paramref name="keyValues" /> è Null o contiene Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="entityType" /> non proviene dalla stessa gerarchia di tipi (un sottotipo, un supertipo o lo stesso tipo) del tipo di elemento di <paramref name="entitySet" />.</exception>
      <exception cref="T:System.ArgumentException">Il conteggio di <paramref name="keyValues" /> non corrisponde al conteggio dei membri principali dichiarati dal tipo di elemento di <paramref name="entitySet" /> oppure in <paramref name="keyValues" /> è contenuta un'espressione con un tipo di risultato che non è compatibile con il tipo di membro principale corrispondente.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Entity.Core.Metadata.Edm.EntitySet,System.Data.Entity.Core.Metadata.Edm.EntityType,System.Data.Entity.Core.Common.CommandTrees.DbExpression[])">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbRefExpression" /> che codifica un riferimento a un'entità specifica di un tipo specificato in base a valori chiave.</summary>
      <returns>Nuovo elemento DbRefExpression che fa riferimento all'elemento con i valori chiave specificati nel set di entità specificato.</returns>
      <param name="entitySet">Set di entità in cui risiede l'elemento a cui viene fatto riferimento.</param>
      <param name="entityType">Tipo specifico dell'entità a cui si fa riferimento.Deve trattarsi di un tipo di entità dalla stessa gerarchia del tipo di elemento del set di entità.</param>
      <param name="keyValues">Raccolta di oggetti <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che forniscono i valori chiave.Queste espressioni devono corrispondere (per numero, tipo e ordine) alle proprietà chiave del tipo di entità a cui si fa riferimento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="entitySet" /> o <paramref name="entityType" /> è Null o <paramref name="keyValues" /> è Null o contiene Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="entityType" /> non proviene dalla stessa gerarchia di tipi (un sottotipo, un supertipo o lo stesso tipo) del tipo di elemento di <paramref name="entitySet" />.</exception>
      <exception cref="T:System.ArgumentException">Il conteggio di <paramref name="keyValues" /> non corrisponde al conteggio dei membri principali dichiarati dal tipo di elemento di <paramref name="entitySet" /> oppure in <paramref name="keyValues" /> è contenuta un'espressione con un tipo di risultato che non è compatibile con il tipo di membro principale corrispondente.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Entity.Core.Common.CommandTrees.DbExpression}})">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbApplyExpression" /> che valuta l'espressione <paramref name="apply" /> specificata una volta per ogni elemento di un set di input specificato, producendo una raccolta di righe con colonne input e apply corrispondenti.Le righe per cui <paramref name="apply" /> restituisce un set vuoto non vengono incluse.</summary>
      <returns>Nuovo elemento DbApplyExpression con le associazioni input e apply specificate e un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind" /> di CrossApply.</returns>
      <param name="source">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che specifica il set di input. </param>
      <param name="apply">Metodo che specifica la logica da valutare una volta per ogni membro del set di input.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="apply" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> non dispone di un tipo di risultato della raccolta.</exception>
      <exception cref="T:System.ArgumentNullException">Il risultato di <paramref name="apply" /> contiene un nome o un'espressione Null.</exception>
      <exception cref="T:System.ArgumentException">Il risultato di <paramref name="apply" /> contiene un nome o un'espressione non valida in un'associazione all'espressione.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding,System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbApplyExpression" /> che valuta l'espressione <paramref name="apply" /> specificata una volta per ogni elemento di un set di input specificato, producendo una raccolta di righe con colonne input e apply corrispondenti.Le righe per cui <paramref name="apply" /> restituisce un set vuoto non vengono incluse.</summary>
      <returns>Nuovo elemento DbApplyExpression con le associazioni input e apply specificate e un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind" /> di CrossApply.</returns>
      <param name="input">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding" /> che specifica il set di input.</param>
      <param name="apply">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding" /> che specifica la logica da valutare una volta per ogni membro del set di input.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> o <paramref name="apply" /> è null.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding})">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbCrossJoinExpression" /> che crea un join incondizionato dei set specificati dall'elenco di associazioni di espressioni di input.</summary>
      <returns>Nuovo elemento DbCrossJoinExpression, con un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind" /> di CrossJoin, che rappresenta il join non condizionale dei set di input.</returns>
      <param name="inputs">Elenco di associazioni di espressioni che specifica i set di input.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputs" /> è Null o contiene Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="inputs" /> contiene meno di due associazioni all'espressione.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbDerefExpression" /> che recupera un'Entità specifica in funzione di un'espressione di riferimento.</summary>
      <returns>Nuovo elemento DbDerefExpression che recupera l'Entità specificata.</returns>
      <param name="argument">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che fornisce il riferimento.Questa espressione deve presentare un tipo di riferimento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="argument" /> è Null</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="argument" /> non dispone di un tipo di risultato di riferimento.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbDistinctExpression" /> che rimuove i duplicati dall'argomento set specificato.</summary>
      <returns>Nuovo elemento DbDistinctExpression che rappresenta l'operazione di distinzione applicata all'argomento set specificato.</returns>
      <param name="argument">Espressione che definisce il set su cui eseguire l'operazione di distinzione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="argument" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="argument" /> non dispone di un tipo di risultato di riferimento.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbArithmeticExpression" /> che divide l'argomento a sinistra per l'argomento a destra.</summary>
      <returns>Nuovo elemento DbArithmeticExpression che rappresenta l'operazione di divisione.</returns>
      <param name="left">Espressione che specifica l'argomento a sinistra.</param>
      <param name="right">Espressione che specifica l'argomento a destra.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="left" /> o <paramref name="right" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Non esiste alcun tipo di risultato numerico comune tra <paramref name="left" /> e <paramref name="right" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbElementExpression" /> che converte un set in un singleton.</summary>
      <returns>Elemento DbElementExpression che rappresenta la conversione dell'argomento set in un singleton.</returns>
      <param name="argument">Espressione che specifica il set di input.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="argument" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="argument" /> non dispone di un tipo di risultato di riferimento.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbComparisonExpression" /> che verifica l'uguaglianza tra l'argomento a sinistra e l'argomento a destra.</summary>
      <returns>Nuovo elemento DbComparisonExpression che rappresenta il confronto di uguaglianza.</returns>
      <param name="left">Espressione che specifica l'argomento a sinistra.</param>
      <param name="right">Espressione che specifica l'argomento a destra.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="left" /> o <paramref name="right" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Non esiste alcun tipo di risultato numerico comune tra <paramref name="left" /> e <paramref name="right" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExceptExpression" /> che calcola la sottrazione dell'argomento set a destra dall'argomento set a sinistra.</summary>
      <returns>Nuovo elemento DbExceptExpression che rappresenta la differenza dell'argomento a sinistra dall'argomento a destra.</returns>
      <param name="left">Espressione che definisce l'argomento set a sinistra.</param>
      <param name="right">Espressione che definisce l'argomento set a destra.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="left" /> o <paramref name="right" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Non esiste alcun tipo di risultato numerico comune tra <paramref name="left" /> e <paramref name="right" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che determina se l'argomento set specificato è non vuoto.</summary>
      <returns>Nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbNotExpression" /> applicato a un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbIsEmptyExpression" /> con l'argomento specificato.</returns>
      <param name="argument">Espressione che specifica il set di input.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="argument" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="argument" /> non dispone di un tipo di risultato della raccolta.</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbConstantExpression" /> con il valore booleano false.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbConstantExpression" /> con il valore booleano false.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFilterExpression" /> che filtra gli elementi nel set di input specificato tramite il predicato specificato.</summary>
      <returns>Nuovo elemento DbFilterExpression che produce il set filtrato.</returns>
      <param name="input">Associazione di espressione che specifica il set di input.</param>
      <param name="predicate">Espressione che rappresenta un predicato da valutare per ogni membro del set di input.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> o <paramref name="predicate" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="predicate" /> non dispone di un tipo di risultato booleano.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression})">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbJoinExpression" /> che unisce in join i set specificati dalle espressioni a sinistra e a destra, in base alla condizione di join specificata, utilizzando FullOuterJoin come <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind" />.</summary>
      <returns>Nuovo elemento DbJoinExpression, con un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind" /> di FullOuterJoin, che rappresenta l'operazione di full outer join applicata ai set di input a sinistra e a destra in base alla condizione di join specificata. </returns>
      <param name="left">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che specifica l'argomento set a sinistra.</param>
      <param name="right">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che specifica l'argomento set a destra.</param>
      <param name="joinCondition">Metodo che rappresenta la condizione in base a cui creare il join.Questo metodo deve produrre un'espressione con un tipo di risultato booleano che fornisce la logica della condizione di join.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="left" />, <paramref name="right" /> o <paramref name="joinCondition" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="left" /> o <paramref name="right" /> non dispone di un tipo di risultato della raccolta.</exception>
      <exception cref="T:System.ArgumentNullException">L'espressione generata da <paramref name="joinCondition" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">L'espressione generata da <paramref name="joinCondition" /> non dispone di un tipo di risultato booleano.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding,System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbJoinExpression" /> che unisce in join i set specificati dalle associazione di espressioni a sinistra e a destra, in base alla condizione di join specificata, utilizzando FullOuterJoin come <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind" />.</summary>
      <returns>Nuovo elemento DbJoinExpression, con un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind" /> di FullOuterJoin, che rappresenta l'operazione di full outer join applicata ai set di input a sinistra e a destra in base alla condizione di join specificata.</returns>
      <param name="left">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding" /> che specifica l'argomento set a sinistra.</param>
      <param name="right">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding" /> che specifica l'argomento set a destra.</param>
      <param name="joinCondition">Espressione che specifica la condizione in base a cui creare il join.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="left" />, <paramref name="right" /> o <paramref name="joinCondition" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="joinCondition" /> non dispone di un tipo di risultato booleano.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbEntityRefExpression" /> che recupera il riferimento dell'entità specificata in forma strutturale.</summary>
      <returns>Nuovo elemento DbEntityRefExpression che recupera un riferimento all'entità specificata.</returns>
      <param name="argument">Espressione che fornisce l'entità.Questa espressione deve presentare un tipo di risultato di entità.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="argument" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="argument" /> non dispone di un tipo di risultato di entità.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbRefKeyExpression" /> che recupera i valori chiave del riferimento specificato in forma strutturale.</summary>
      <returns>Nuovo elemento DbRefKeyExpression che recupera i valori chiave del riferimento specificato.</returns>
      <param name="argument">Espressione che fornisce il riferimento.Questa espressione deve presentare un tipo di riferimento con un tipo di elemento di Entità.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="argument" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="argument" /> non dispone di un tipo di risultato di entità.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbComparisonExpression" /> che determina se l'argomento a sinistra è maggiore dell'argomento a destra.</summary>
      <returns>Nuovo elemento DbComparisonExpression che rappresenta il confronto di maggioranza.</returns>
      <param name="left">Espressione che specifica l'argomento a sinistra.</param>
      <param name="right">Espressione che specifica l'argomento a destra.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="left" /> o <paramref name="right" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Non esiste alcun tipo di risultato confrontabile in termini di ordinamento comune tra <paramref name="left" /> e <paramref name="right" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbComparisonExpression" /> che determina se l'argomento a sinistra è maggiore o uguale all'argomento a destra.</summary>
      <returns>Nuovo elemento DbComparisonExpression che rappresenta il confronto di maggioranza o uguaglianza.</returns>
      <param name="left">Espressione che specifica l'argomento a sinistra.</param>
      <param name="right">Espressione che specifica l'argomento a destra.</param>
      <exception cref="T:System.ArgumentNullException">left o right è Null.</exception>
      <exception cref="T:System.ArgumentException">Non esiste alcun tipo di risultato confrontabile in termini di ordinamento comune tra left e right.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupAggregate(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbGroupAggregate" /> sull'argomento specificato.</summary>
      <returns>Nuova aggregazione di gruppo che rappresenta gli elementi del gruppo a cui fa riferimento l'argomento specificato.</returns>
      <param name="argument">Argomento su cui eseguire l'operazione di annidamento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="argument" /> è null.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea una nuova associazione a un'espressione di gruppo che utilizza nomi di variabile e di variabile di gruppo generati per associare l'espressione specificata.</summary>
      <returns>Nuova associazione a un'espressione di gruppo con l'espressione specificata e un nome di variabile di gruppo e un nome di variabile generati.</returns>
      <param name="input">Espressione da associare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="input" /> non dispone di un tipo di risultato della raccolta.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.String,System.String)">
      <summary>Crea una nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding" /> che utilizza il nome di variabile e i nomi delle variabili di gruppo specificati per associare l'espressione specificata.</summary>
      <returns>Nuova associazione a un'espressione di gruppo con l'espressione specificata, un nome di variabile e un nome di variabile di gruppo.</returns>
      <param name="input">Espressione da associare.</param>
      <param name="varName">Nome di variabile da utilizzare per l'associazione.</param>
      <param name="groupVarName">Nome di variabile da utilizzare per fare riferimento al gruppo quando la nuova associazione a un'espressione di gruppo viene utilizzata in un'espressione di raggruppamento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />, <paramref name="varName" /> o <paramref name="groupVarName" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="input" /> non dispone di un tipo di risultato della raccolta.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Entity.Core.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Entity.Core.Common.CommandTrees.DbAggregate}})">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbGroupByExpression" /> che raggruppa gli elementi del set di input in base alle chiavi di gruppo specificate e applica le aggregazioni specificate.</summary>
      <returns>Nuovo elemento DbGroupByExpression con il set di input, le chiavi di raggruppamento e le aggregazioni specificati.</returns>
      <param name="input">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding" /> che specifica il set di input.</param>
      <param name="keys">Elenco di coppie stringa-espressione che definiscono le colonne di raggruppamento.</param>
      <param name="aggregates">Elenco di espressioni che specificano le aggregazioni da applicare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />, <paramref name="keys" /> o <paramref name="aggregates" /> è Null, <paramref name="keys" /> contiene un nome o un'espressione della colonna chiave Null oppure aggregates contiene un nome della colonna aggregata Null o <paramref name="aggregate" />.</exception>
      <exception cref="T:System.ArgumentException">Sia <paramref name="keys" /> sia <paramref name="aggregates" /> sono vuoti o è stato specificato un nome della colonna non valido o duplicato.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.In(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Collections.Generic.IList{System.Data.Entity.Core.Common.CommandTrees.DbConstantExpression})">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbInExpression" /> che corrisponde al risultato dell'espressione specificata con i risultati delle espressioni costanti nell'elenco specificato.</summary>
      <returns>Nuovo elemento DbInExpression con gli argomenti specificati se l'elenco DbConstantExpression non è vuoto, in caso contrario un'espressione costante false.</returns>
      <param name="expression">Elemento DbExpression di cui trovare la corrispondenza.</param>
      <param name="list">Elenco di oggetti DbConstantExpression da verificare per trovare una corrispondenza.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> o <paramref name="list" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Il tipo di risultato di <paramref name="expression" /> è diverso da quello di un'espressione di <paramref name="list" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression})">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbJoinExpression" /> che unisce in join i set specificati dalle espressioni a sinistra e a destra, in base alla condizione di join specificata, utilizzando InnerJoin come <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind" />.</summary>
      <returns>Nuovo elemento DbJoinExpression, con un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind" /> di InnerJoin, che rappresenta l'operazione di inner join applicata ai set di input a sinistra e a destra in base alla condizione di join specificata.</returns>
      <param name="left">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che specifica l'argomento set a sinistra.</param>
      <param name="right">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che specifica l'argomento set a destra.</param>
      <param name="joinCondition">Metodo che rappresenta la condizione in base a cui creare il join.Questo metodo deve produrre un'espressione con un tipo di risultato booleano che fornisce la logica della condizione di join.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="left" />, <paramref name="right" /> o <paramref name="joinCondition" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="left" /> o <paramref name="right" /> non dispone di un tipo di risultato della raccolta.</exception>
      <exception cref="T:System.ArgumentNullException">L'espressione generata da <paramref name="joinCondition" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">L'espressione generata da <paramref name="joinCondition" /> non dispone di un tipo di risultato booleano.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding,System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbJoinExpression" /> che unisce in join i set specificati dalle espressioni a sinistra e a destra, in base alla condizione di join specificata, utilizzando InnerJoin come <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind" />.</summary>
      <returns>Nuovo elemento DbJoinExpression, con un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind" /> di InnerJoin, che rappresenta l'operazione di inner join applicata ai set di input a sinistra e a destra in base alla condizione di join specificata.</returns>
      <param name="left">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding" /> che specifica l'argomento set a sinistra.</param>
      <param name="right">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding" /> che specifica l'argomento set a destra.</param>
      <param name="joinCondition">Espressione che specifica la condizione in base a cui creare il join.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="left" />, <paramref name="right" /> o <paramref name="joinCondition" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="joinCondition" /> non dispone di un tipo di risultato booleano.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbIntersectExpression" /> che calcola l'intersezione degli argomenti set a sinistra e a destra.</summary>
      <returns>Nuovo DbIntersectExpression che rappresenta l'intersezione degli argomenti a sinistra e a destra.</returns>
      <param name="left">Espressione che definisce l'argomento set a sinistra.</param>
      <param name="right">Espressione che definisce l'argomento set a destra.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="left" /> o right è <paramref name="null" />.</exception>
      <exception cref="T:System.ArgumentException">Non esiste alcun tipo di risultati della raccolta comune tra <paramref name="left" /> e <paramref name="right" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Entity.Core.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Common.CommandTrees.DbExpression})">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbLambdaExpression" /> che rappresenta l'applicazione della funzione Lambda specificata agli argomenti specificati.</summary>
      <returns>Nuovo elemento DbLambdaExpression che rappresenta l'applicazione della funzione Lambda.</returns>
      <param name="lambda">Istanza di <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbLambda" /> che rappresenta la funzione Lambda da applicare.</param>
      <param name="arguments">Elenco di espressioni che forniscono gli argomenti.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="lambda" /> è Null o <paramref name="arguments" /> è Null o contiene Null.</exception>
      <exception cref="T:System.ArgumentException">Il conteggio di <paramref name="arguments" /> non corrisponde al numero di variabili dichiarato da <paramref name="lambda" /> oppure <paramref name="arguments" /> contiene un'espressione con un tipo di risultato che non è uguale né promuovibile al tipo di variabile corrispondente.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Entity.Core.Common.CommandTrees.DbLambda,System.Data.Entity.Core.Common.CommandTrees.DbExpression[])">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbLambdaExpression" /> che rappresenta l'applicazione della funzione Lambda specificata agli argomenti specificati.</summary>
      <returns>Nuovo elemento DbLambdaExpression che rappresenta l'applicazione della funzione Lambda.</returns>
      <param name="lambda">Istanza di <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbLambda" /> che rappresenta la funzione Lambda da applicare.</param>
      <param name="arguments">Espressioni che forniscono gli argomenti.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="lambda" /> è Null o <paramref name="arguments" /> è Null o contiene Null.</exception>
      <exception cref="T:System.ArgumentException">Il conteggio di <paramref name="arguments" /> non corrisponde al numero di variabili dichiarato da <paramref name="lambda" /> oppure <paramref name="arguments" /> contiene un'espressione con un tipo di risultato che non è uguale né promuovibile al tipo di variabile corrispondente.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Entity.Core.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Common.CommandTrees.DbExpression})">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che rappresenta la chiamata della funzione specificata con gli argomenti specificati.</summary>
      <returns>Nuovo elemento DbFunctionExpression che rappresenta la chiamata della funzione.</returns>
      <param name="function">Metadati per la funzione da richiamare.</param>
      <param name="arguments">Elenco di espressioni che forniscono gli argomenti alla funzione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="function" /> è Null o <paramref name="arguments" /> è Null o contiene Null.</exception>
      <exception cref="T:System.ArgumentException">Il conteggio di <paramref name="arguments" /> non corrisponde al numero di variabili dichiarato da <paramref name="function" /> oppure <paramref name="arguments" /> contiene un'espressione con un tipo di risultato che non è uguale né promuovibile al tipo di variabile corrispondente.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Entity.Core.Metadata.Edm.EdmFunction,System.Data.Entity.Core.Common.CommandTrees.DbExpression[])">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che rappresenta la chiamata della funzione specificata con gli argomenti specificati.</summary>
      <returns>Nuovo elemento DbFunctionExpression che rappresenta la chiamata della funzione.</returns>
      <param name="function">Metadati per la funzione da richiamare.</param>
      <param name="arguments">Espressioni che forniscono gli argomenti alla funzione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="function" /> è Null o <paramref name="arguments" /> è Null o contiene Null.</exception>
      <exception cref="T:System.ArgumentException">Il conteggio di <paramref name="arguments" /> non corrisponde al numero di variabili dichiarato da <paramref name="function" /> oppure <paramref name="arguments" /> contiene un'espressione con un tipo di risultato che non è uguale né promuovibile al tipo di variabile corrispondente.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbIsEmptyExpression" /> che determina se l'argomento set specificato è un set vuoto.</summary>
      <returns>Nuovo elemento DbIsEmptyExpression con l'argomento specificato.</returns>
      <param name="argument">Espressione che specifica il set di input.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="argument" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="argument" /> non dispone di un tipo di risultato della raccolta.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbIsNullExpression" /> che determina se l'argomento set specificato è Null.</summary>
      <returns>Nuovo elemento DbIsNullExpression con l'argomento specificato.</returns>
      <param name="argument">Espressione che specifica l'argomento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="argument" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="argument" /> dispone di un tipo di risultati della raccolta.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Metadata.Edm.TypeUsage)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbIsOfExpression" /> che determina se l'argomento specificato è del tipo o del sottotipo specificato.</summary>
      <returns>Nuovo elemento DbIsOfExpression con il tipo e l'istanza specificati e DbExpressionKind IsOf.</returns>
      <param name="argument">Espressione che specifica l'istanza.</param>
      <param name="type">Metadati del tipo che specificano il tipo con cui deve essere confrontato il tipo di risultato dell'istanza.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="argument" /> o <paramref name="type" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> non si trova nella stessa gerarchia dei tipi del tipo di risultato di <paramref name="argument" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Metadata.Edm.TypeUsage)">
      <summary>Crea una nuova espressione <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbIsOfExpression" /> che determina se l'argomento specificato è del tipo specificato ed esclusivamente di tale tipo (non di un sottotipo).</summary>
      <returns>Nuovo elemento DbIsOfExpression con il tipo e l'istanza specificati e DbExpressionKind IsOfOnly.</returns>
      <param name="argument">Espressione che specifica l'istanza.</param>
      <param name="type">Metadati del tipo che specificano il tipo con cui deve essere confrontato il tipo di risultato dell'istanza.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="argument" /> o <paramref name="type" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> non si trova nella stessa gerarchia dei tipi del tipo di risultato di <paramref name="argument" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression},System.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression})">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbJoinExpression" /> che unisce in join i set specificati dalle espressioni esterne e interne in base a una condizione di uguaglianza tra le chiavi interne ed esterne specificate, utilizzando InnerJoin come <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind" />.</summary>
      <returns>Nuovo elemento DbJoinExpression, con un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind" /> di InnerJoin, che rappresenta l'operazione di inner join applicata ai set di input a sinistra e a destra in base a una condizione di join che confronta i valori delle chiavi esterne e interne ai fini dell'uguaglianza.</returns>
      <param name="outer">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che specifica l'argomento set esterno.</param>
      <param name="inner">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che specifica l'argomento set interno.</param>
      <param name="outerKey">Metodo che specifica come derivare il valore della chiave esterna da un elemento del set esterno.</param>
      <param name="innerKey">Metodo che specifica come derivare il valore della chiave interna da un elemento del set interno.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="outer" />, <paramref name="inner" />, <paramref name="outerKey" /> o <paramref name="innerKey" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="outerKey" /> o <paramref name="innerKey" /> non dispone di un tipo di risultato della raccolta.</exception>
      <exception cref="T:System.ArgumentNullException">L'espressione generata da <paramref name="outerKey" /> o <paramref name="innerKey" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">L'espressione generata da <paramref name="outerKey" /> o <paramref name="innerKey" /> non è confrontabile in termini di uguaglianza.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression},System.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression},System.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression,``0})">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbProjectExpression" /> che proietta il selettore specificato sui set specificati dalle espressioni esterne e interne, unite in join in base a una condizione di uguaglianza tra le chiavi interne ed esterne specificate, utilizzando InnerJoin come <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind" />.</summary>
      <returns>Nuovo elemento DbProjectExpression con il selettore specificato come relativa proiezione e un nuovo DbJoinExpression come relativo input.L'elemento DbJoinExpression di input viene creato con un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind" /> di InnerJoin, che rappresenta l'operazione di inner join applicata ai set di input a sinistra e a destra in base a una condizione di join che confronta i valori delle chiavi esterne e interne ai fini dell'uguaglianza.</returns>
      <param name="outer">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che specifica l'argomento set esterno.</param>
      <param name="inner">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che specifica l'argomento set interno.</param>
      <param name="outerKey">Metodo che specifica come derivare il valore della chiave esterna da un elemento del set esterno.</param>
      <param name="innerKey">Metodo che specifica come derivare il valore della chiave interna da un elemento del set interno.</param>
      <param name="selector">Metodo che specifica come derivare un elemento del set di risultati dagli elementi dei set interni ed esterni.Questo metodo deve produrre un'istanza di un tipo compatibile con Join che possa essere risolta in un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" />.Requisiti di compatibilità per <paramref name="TSelector" /> come descritto nelle osservazioni.</param>
      <typeparam name="TSelector">Tipo del selettore.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="outer" />, <paramref name="inner" />, <paramref name="outerKey" />, <paramref name="innerKey" /> o <paramref name="selector" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="outer" /> o <paramref name="inner" /> non dispone di un tipo di risultato della raccolta.</exception>
      <exception cref="T:System.ArgumentNullException">L'espressione generata da <paramref name="outerKey" /> o <paramref name="innerKey" /> è Null.</exception>
      <exception cref="T:System.ArgumentNullException">Il risultato di <paramref name="selector" /> è Null dopo la conversione all'oggetto DbExpression.</exception>
      <exception cref="T:System.ArgumentException">Le espressioni generate da <paramref name="outerKey" /> e <paramref name="innerKey" /> non sono compatibili in termini di uguaglianza.</exception>
      <exception cref="T:System.ArgumentException">Il risultato di <paramref name="selector" /> non è compatibile con SelectMany.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression})">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbLambda" /> con l'implementazione e i parametri formali della funzione Lambda inline specificata.</summary>
      <returns>Nuova funzione DbLambda che descrive una funzione Lambda inline con i parametri formali e il corpo specificati.</returns>
      <param name="body">Espressione che definisce la logica della funzione Lambda.</param>
      <param name="variables">Raccolta di <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression" /> che rappresenta i parametri formali della funzione Lambda.Queste variabili sono valide per l'utilizzo nell'espressione <paramref name="body" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="variables" /> è Null o contiene valori Null o <paramref name="body" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="variables" /> contiene più di un elemento con lo stesso nome di variabile.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression[])">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbLambda" /> con l'implementazione e i parametri formali della funzione Lambda inline specificata.</summary>
      <returns>Nuova funzione DbLambda che descrive una funzione Lambda inline con i parametri formali e il corpo specificati.</returns>
      <param name="body">Espressione che definisce la logica della funzione Lambda.</param>
      <param name="variables">Raccolta di <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression" /> che rappresenta i parametri formali della funzione Lambda.Queste variabili sono valide per l'utilizzo nell'espressione body.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="variables" /> è Null o contiene valori Null o <paramref name="body" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="variables" /> contiene più di un elemento con lo stesso nome di variabile.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression})">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbJoinExpression" /> che unisce in join i set specificati dalle espressioni a sinistra e a destra, in base alla condizione di join specificata, utilizzando LeftOuterJoin come <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind" />.</summary>
      <returns>Nuovo elemento DbJoinExpression, con un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind" /> di LeftOuterJoin, che rappresenta l'operazione di left outer join applicata ai set di input a sinistra e a destra in base alla condizione di join specificata.</returns>
      <param name="left">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che specifica l'argomento set a sinistra.</param>
      <param name="right">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che specifica l'argomento set a destra.</param>
      <param name="joinCondition">Metodo che rappresenta la condizione in base a cui creare il join.Questo metodo deve produrre un'espressione con un tipo di risultato booleano che fornisce la logica della condizione di join.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="left" />, <paramref name="right" /> o <paramref name="joinCondition" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="left" /> o <paramref name="right" /> non dispone di un tipo di risultato della raccolta.</exception>
      <exception cref="T:System.ArgumentNullException">L'espressione generata da <paramref name="joinCondition" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">L'espressione generata da <paramref name="joinCondition" /> non dispone di un tipo di risultato booleano.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding,System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbJoinExpression" /> che unisce in join i set specificati dalle associazioni di espressioni a sinistra e a destra, in base alla condizione di join specificata, utilizzando LeftOuterJoin come <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind" />.</summary>
      <returns>Nuovo elemento DbJoinExpression, con un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind" /> di LeftOuterJoin, che rappresenta l'operazione di left outer join applicata ai set di input a sinistra e a destra in base alla condizione di join specificata.</returns>
      <param name="left">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding" /> che specifica l'argomento set a sinistra.</param>
      <param name="right">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding" /> che specifica l'argomento set a destra.</param>
      <param name="joinCondition">Espressione che specifica la condizione in base a cui creare il join.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="left" />, <paramref name="right" /> o <paramref name="joinCondition" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="joinCondition" /> non dispone di un tipo di risultato booleano.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbComparisonExpression" /> che determina se l'argomento a sinistra è minore dell'argomento a destra.</summary>
      <returns>Nuovo elemento DbComparisonExpression che rappresenta il confronto di minoranza.</returns>
      <param name="left">Espressione che specifica l'argomento a sinistra.</param>
      <param name="right">Espressione che specifica l'argomento a destra.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="left" /> o <paramref name="right" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Non esiste alcun tipo di risultato confrontabile in termini di ordinamento comune tra <paramref name="left" /> e <paramref name="right" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbComparisonExpression" /> che determina se l'argomento a sinistra è minore o uguale all'argomento a destra.</summary>
      <returns>Nuovo elemento DbComparisonExpression che rappresenta il confronto di minoranza o uguaglianza.</returns>
      <param name="left">Espressione che specifica l'argomento a sinistra.</param>
      <param name="right">Espressione che specifica l'argomento a destra.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="left" /> o <paramref name="right" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Non esiste alcun tipo di risultato confrontabile in termini di ordinamento comune tra <paramref name="left" /> e <paramref name="right" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbLikeExpression" /> che confronta la stringa di input specificata con il modello specificato.</summary>
      <returns>Nuovo elemento DbLikeExpression con il modello, l'input e un escape Null specificati.</returns>
      <param name="argument">Espressione che specifica la stringa di input.</param>
      <param name="pattern">Espressione che specifica la stringa modello.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="argument" /> o <paramref name="pattern" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="argument" /> o <paramref name="pattern" /> non dispone di un tipo di risultato stringa.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbLikeExpression" /> che confronta la stringa di input specificata con il modello specificato utilizzando la stringa di escape facoltativa.</summary>
      <returns>Nuovo elemento DbLikeExpression con il modello, l'input e una stringa di escape specificati.</returns>
      <param name="argument">Espressione che specifica la stringa di input.</param>
      <param name="pattern">Espressione che specifica la stringa modello.</param>
      <param name="escape">Espressione facoltativa che specifica la stringa di escape.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="argument" />, <paramref name="pattern" /> o il carattere di escape è <paramref name="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="argument" />, <paramref name="pattern" /> o il carattere di escape non dispone di un tipo di risultato stringa.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbLimitExpression" /> che limita il numero di elementi nella raccolta Argument al valore Limit del conteggio specificato.I risultati correlati non sono inclusi nell'output.</summary>
      <returns>Nuovo elemento DbLimitExpression con i valori limite del conteggio e l'argomento specificati che non include i risultati correlati.</returns>
      <param name="argument">Espressione che specifica la raccolta di input.</param>
      <param name="count">Espressione che specifica il valore limite.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="argument" /> o <paramref name="count" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="argument" /> non dispone di un tipo di risultati della raccolta o <paramref name="count" /> non dispone di un tipo di risultato uguale o promuovibile a un tipo Integer a 64 bit.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbArithmeticExpression" /> che sottrae l'argomento a destra dall'argomento a sinistra.</summary>
      <returns>Nuovo elemento DbArithmeticExpression che rappresenta l'operazione di sottrazione.</returns>
      <param name="left">Espressione che specifica l'argomento a sinistra.</param>
      <param name="right">Espressione che specifica l'argomento a destra.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="left" /> o <paramref name="right" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Non esiste alcun tipo di risultato confrontabile in termini di ordinamento comune tra <paramref name="left" /> e <paramref name="right" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbArithmeticExpression" /> che calcola il resto ottenuto dividendo l'argomento a sinistra per l'argomento a destra.</summary>
      <returns>Nuovo elemento DbArithmeticExpression che rappresenta l'operazione di modulo.</returns>
      <param name="left">Espressione che specifica l'argomento a sinistra.</param>
      <param name="right">Espressione che specifica l'argomento a destra.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="left" /> o <paramref name="right" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Non esiste alcun tipo di risultato confrontabile in termini di ordinamento comune tra <paramref name="left" /> e <paramref name="right" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbArithmeticExpression" /> che moltiplica l'argomento a sinistra per l'argomento a destra.</summary>
      <returns>Nuovo elemento DbArithmeticExpression che rappresenta l'operazione di moltiplicazione.</returns>
      <param name="left">Espressione che specifica l'argomento a sinistra.</param>
      <param name="right">Espressione che specifica l'argomento a destra.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="left" /> o <paramref name="right" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Non esiste alcun tipo di risultato confrontabile in termini di ordinamento comune tra <paramref name="left" /> e <paramref name="right" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Metadata.Edm.RelationshipEndMember,System.Data.Entity.Core.Metadata.Edm.RelationshipEndMember)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbRelationshipNavigationExpression" /> che rappresenta la navigazione di una relazione di associazione o di composizione.</summary>
      <returns>Nuovo elemento DbRelationshipNavigationExpression che rappresenta la navigazione delle entità Da e A specificate del tipo di relazione specificato dall'istanza di origine della navigazione specificata.</returns>
      <param name="navigateFrom">Espressione che specifica l'istanza da cui eseguire la navigazione.</param>
      <param name="fromEnd">Metadati per la proprietà che rappresenta l'entità finale della relazione da cui si esegue la navigazione.</param>
      <param name="toEnd">Metadati per la proprietà che rappresenta l'entità finale della relazione fino a cui eseguire la navigazione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fromEnd" />, <paramref name="toEnd" /> o <paramref name="NavigateForm" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="fromEnd" /> e <paramref name="toEnd" /> non sono dichiarati dallo stesso tipo di relazione oppure <paramref name="navigateFrom" /> presenta un tipo di risultato che non è compatibile con il tipo di proprietà di <paramref name="fromEnd" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Entity.Core.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbRelationshipNavigationExpression" /> che rappresenta la navigazione di una relazione di associazione o di composizione.</summary>
      <returns>Nuovo elemento DbRelationshipNavigationExpression che rappresenta la navigazione delle entità Da e A specificate del tipo di relazione specificato dall'istanza di origine della navigazione specificata.</returns>
      <param name="type">Metadati per il tipo di relazione che rappresenta la relazione.</param>
      <param name="fromEndName">Nome della proprietà del tipo di relazione che rappresenta l'entità finale della relazione da cui eseguire la navigazione.</param>
      <param name="toEndName">Nome della proprietà del tipo di relazione che rappresenta l'entità finale della relazione fino a cui eseguire la navigazione.</param>
      <param name="navigateFrom">Espressione che specifica l'istanza da cui eseguire la navigazione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" />
        <paramref name="fromEndName" />, <paramref name="toEndName" /> o <paramref name="NavigateForm" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> non è associato all'area di lavoro dei metadati di questo albero dei comandi o <paramref name="navigateFrom" /> è associato a un albero dei comandi diverso o <paramref name="type" /> non dichiara una proprietà finale della relazione con nome <paramref name="toEndName" /> o <paramref name="fromEndName" /> oppure <paramref name="navigateFrom" /> dispone di un tipo di risultati che non è compatibile con <paramref name="fromEndName" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbArithmeticExpression" /> che nega il valore dell'argomento.</summary>
      <returns>Nuovo elemento DbArithmeticExpression che rappresenta l'operazione di negazione.</returns>
      <param name="argument">Espressione che specifica l'argomento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="argument" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Non esiste alcun tipo di risultato numerico per <paramref name="argument" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Entity.Core.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Common.CommandTrees.DbExpression})">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbNewInstanceExpression" />.Se l'argomento di tipo è un tipo di raccolta, gli argomenti specificano gli elementi della raccolta.In caso contrario, gli argomenti vengono utilizzati come valori di proprietà o di colonna nella nuova istanza.</summary>
      <returns>Nuovo elemento DbNewInstanceExpression con il tipo e gli argomenti specificati.</returns>
      <param name="instanceType">Tipo della nuova istanza.</param>
      <param name="arguments">Espressioni che specificano i valori delle nuove istanze, interpretati in base al tipo di istanza.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instanceType" /> o <paramref name="arguments" /> è Null oppure <paramref name="arguments" /> contiene Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="arguments" /> è vuoto o i tipi di risultato delle espressioni incluse non corrispondono ai requisiti di <paramref name="instanceType" />, come descritto nella sezione Note.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Entity.Core.Metadata.Edm.TypeUsage,System.Data.Entity.Core.Common.CommandTrees.DbExpression[])">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbNewInstanceExpression" />.Se l'argomento di tipo è un tipo di raccolta, gli argomenti specificano gli elementi della raccolta.In caso contrario, gli argomenti vengono utilizzati come valori di proprietà o di colonna nella nuova istanza.</summary>
      <returns>Nuovo elemento DbNewInstanceExpression con il tipo e gli argomenti specificati.</returns>
      <param name="instanceType">Tipo della nuova istanza.</param>
      <param name="arguments">Espressioni che specificano i valori delle nuove istanze, interpretati in base al tipo di istanza.</param>
      <exception cref="T:System.ArgumentNullException">instanceTypeargumentsarguments</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="instanceType" /> o <paramref name="arguments" /> è Null oppure <paramref name="arguments" /> contiene Null.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Common.CommandTrees.DbExpression})">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbNewInstanceExpression" /> che costruisce una raccolta contenente gli elementi specificati.Il tipo della raccolta è basato sul tipo comune degli elementi.Se non esiste alcun tipo di elemento comune viene generata un'eccezione.</summary>
      <returns>Nuovo elemento DbNewInstanceExpression con gli argomenti e il tipo di raccolta specificati.</returns>
      <param name="elements">Elenco di espressioni che forniscono gli elementi della raccolta.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> è Null o contiene Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elements" /> è vuoto o contiene espressioni per le quali non esiste alcun tipo di risultato comune.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Entity.Core.Common.CommandTrees.DbExpression[])">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbNewInstanceExpression" /> che costruisce una raccolta contenente gli elementi specificati.Il tipo della raccolta è basato sul tipo comune degli elementi.Se non esiste alcun tipo di elemento comune viene generata un'eccezione.</summary>
      <returns>Nuovo elemento DbNewInstanceExpression con gli argomenti e il tipo di raccolta specificati.</returns>
      <param name="elements">Elenco di espressioni che forniscono gli elementi della raccolta.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> è Null o contiene Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elements" /> è vuoto o contiene espressioni per le quali non esiste alcun tipo di risultato comune.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Entity.Core.Metadata.Edm.TypeUsage)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbNewInstanceExpression" /> che costruisce una raccolta vuota del tipo di raccolta specificato.</summary>
      <returns>Nuovo elemento DbNewInstanceExpression con il tipo di raccolta specificato e un elenco Arguments vuoto.</returns>
      <param name="collectionType">Metadati del tipo per la raccolta da creare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collectionType" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="collectionType" /> non è un tipo di raccolta.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Entity.Core.Common.CommandTrees.DbExpression}})">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbNewInstanceExpression" /> che produce una riga con le colonne denominate specificate e i valori indicati, specificati come espressioni.</summary>
      <returns>Nuovo elemento DbNewInstanceExpression che rappresenta la costruzione della riga.</returns>
      <param name="columnValues">Elenco di coppie chiave-valore string-DbExpression che definisce la struttura e i valori della riga.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="columnValues" /> è Null o contiene un elemento con un nome di colonna o un'espressione Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="columnValues" /> è vuoto o contiene un nome di colonna duplicato o non valido.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbNotExpression" /> che esegue la negazione logica dell'argomento specificato.</summary>
      <returns>Nuovo elemento DbNotExpression con l'argomento specificato.</returns>
      <param name="argument">Espressione booleana che specifica l'argomento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="argument" /> è null.</exception>
      <exception cref="T:System.ArgumentException">argument non dispone di un tipo di risultato booleano.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbComparisonExpression" /> che confronta l'argomento a sinistra con l'argomento a destra ai fini dell'ineguaglianza.</summary>
      <returns>Nuovo elemento DbComparisonExpression che rappresenta il confronto di ineguaglianza.</returns>
      <param name="left">Espressione che specifica l'argomento a sinistra.</param>
      <param name="right">Espressione che specifica l'argomento a destra.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="left" /> o <paramref name="right" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Non esiste alcun tipo di risultato confrontabile in termini di uguaglianza comune tra <paramref name="left" /> e <paramref name="right" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Entity.Core.Metadata.Edm.TypeUsage)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbNullExpression" />che rappresenta un valore Null tipizzato.</summary>
      <returns>Istanza di DbNullExpression.</returns>
      <param name="nullType">Tipo del valore Null.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="nullType" /> è null.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Metadata.Edm.TypeUsage)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbOfTypeExpression" /> che produce un set costituito dagli elementi del set di input specificato che sono del tipo specificato.</summary>
      <returns>Nuovo elemento DbOfTypeExpression con il tipo e l'argomento set specificati e un elemento ExpressionKind di <see cref="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.OfType" />.</returns>
      <param name="argument">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che specifica il set di input.</param>
      <param name="type">Metadati per il tipo che gli elementi del set di input devono presentare per essere inclusi nel set risultante.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="argument" /> o <paramref name="type" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="argument" /> non dispone di un tipo di risultati della raccolta o <paramref name="type" /> non è un tipo della stessa gerarchia di tipi del tipo di elemento del tipo di risultato raccolta di <paramref name="argument" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Metadata.Edm.TypeUsage)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbOfTypeExpression" /> che produce un set costituito dagli elementi del set di input specificato che sono esattamente del tipo specificato.</summary>
      <returns>Nuovo elemento DbOfTypeExpression con il tipo e l'argomento set specificati e un elemento ExpressionKind di <see cref="F:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind.OfTypeOnly" />.</returns>
      <param name="argument">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che specifica il set di input.</param>
      <param name="type">Metadati per il tipo a cui gli elementi del set di input devono corrispondere esattamente per essere inclusi nel set risultante.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="argument" /> o <paramref name="type" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="argument" /> non dispone di un tipo di risultati della raccolta o <paramref name="type" /> non è un tipo della stessa gerarchia di tipi del tipo di elemento del tipo di risultato raccolta di <paramref name="argument" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbOrExpression" /> che esegue l'operazione OR logica degli argomenti a sinistra e a destra. </summary>
      <returns> Nuovo elemento DbOrExpression con gli argomenti specificati. </returns>
      <param name="left"> Espressione booleana che specifica l'argomento a sinistra. </param>
      <param name="right"> Espressione booleana che specifica l'argomento a destra. </param>
      <exception cref="T:System.ArgumentNullException">leftright</exception>
      <exception cref="T:System.ArgumentException">leftright</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression})">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbSortExpression" /> che ordina il set di input specificato in base alla chiave di ordinamento specificata, in ordine crescente e con le regole di confronto predefinite.</summary>
      <returns>Nuovo elemento DbSortExpression che rappresenta l'operazione order-by.</returns>
      <param name="source">Espressione che specifica il set di input.</param>
      <param name="sortKey">Metodo che specifica come derivare l'espressione della chiave di ordinamento dato un membro del set di input.Questo metodo deve produrre un'espressione con un tipo di risultato confrontabile in termini di ordinamento che fornisce la definizione della chiave di ordinamento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="sortKey" /> è null.</exception>
      <exception cref="T:System.ArgumentNullException">L'espressione generata da <paramref name="sortKey" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> non dispone di un tipo di risultato della raccolta.</exception>
      <exception cref="T:System.ArgumentException">L'espressione generata da <paramref name="sortKey" /> non dispone di un tipo di risultato confrontabile in termini di ordinamento.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression},System.String)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbSortExpression" /> che ordina il set di input specificato in base alla chiave di ordinamento specificata, in ordine crescente e con le regole di confronto specificate.</summary>
      <returns>Nuovo elemento DbSortExpression che rappresenta l'operazione order-by.</returns>
      <param name="source">Espressione che specifica il set di input.</param>
      <param name="sortKey">Metodo che specifica come derivare l'espressione della chiave di ordinamento dato un membro del set di input.Questo metodo deve produrre un'espressione con un tipo di risultato confrontabile in termini di ordinamento che fornisce la definizione della chiave di ordinamento.</param>
      <param name="collation">Regole di confronto da utilizzare per l'ordinamento</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />, <paramref name="sortKey" /> o <paramref name="collation" /> è Null.</exception>
      <exception cref="T:System.ArgumentNullException">L'espressione generata da <paramref name="sortKey" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> non dispone di un tipo di risultato della raccolta.</exception>
      <exception cref="T:System.ArgumentException">L'espressione generata da <paramref name="sortKey" /> non dispone di un tipo di risultato String confrontabile in termini di ordinamento.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="collation" /> è vuoto o contiene solo spazi.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression})">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbSortExpression" /> che ordina il set di input specificato in base alla chiave di ordinamento specificata, in ordine decrescente e con le regole di confronto predefinite.</summary>
      <returns>Nuovo elemento DbSortExpression che rappresenta l'operazione order-by.</returns>
      <param name="source">Espressione che specifica il set di input.</param>
      <param name="sortKey">Metodo che specifica come derivare l'espressione della chiave di ordinamento dato un membro del set di input.Questo metodo deve produrre un'espressione con un tipo di risultato confrontabile in termini di ordinamento che fornisce la definizione della chiave di ordinamento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="sortKey" /> è null.</exception>
      <exception cref="T:System.ArgumentNullException">L'espressione generata da <paramref name="sortKey" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> non dispone di un tipo di risultato della raccolta.</exception>
      <exception cref="T:System.ArgumentException">L'espressione generata da <paramref name="sortKey" /> non dispone di un tipo di risultato String confrontabile in termini di ordinamento.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression},System.String)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbSortExpression" /> che ordina il set di input specificato in base alla chiave di ordinamento specificata, in ordine decrescente e con le regole di confronto predefinite.</summary>
      <returns>Nuovo elemento DbSortExpression che rappresenta l'operazione order-by.</returns>
      <param name="source">Espressione che specifica il set di input.</param>
      <param name="sortKey">Metodo che specifica come derivare l'espressione della chiave di ordinamento dato un membro del set di input.Questo metodo deve produrre un'espressione con un tipo di risultato confrontabile in termini di ordinamento che fornisce la definizione della chiave di ordinamento.</param>
      <param name="collation">Regole di confronto da utilizzare per l'ordinamento</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />, <paramref name="sortKey" /> o <paramref name="collation" /> è Null.</exception>
      <exception cref="T:System.ArgumentNullException">L'espressione generata da <paramref name="sortKey" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> non dispone di un tipo di risultato della raccolta.</exception>
      <exception cref="T:System.ArgumentException">L'espressione generata da <paramref name="sortKey" /> non dispone di un tipo di risultato String confrontabile in termini di ordinamento.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="collation" /> è vuoto o contiene solo spazi.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Entity.Core.Common.CommandTrees.DbExpression}})">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbApplyExpression" /> che valuta l'espressione <paramref name="apply" /> specificata una volta per ogni elemento di un set di input specificato, producendo una raccolta di righe con colonne input e apply corrispondenti.Le righe per le quali <paramref name="apply" /> restituisce un set vuoto presentano una colonna apply con valore null.</summary>
      <returns>Nuovo elemento DbApplyExpression con le associazioni input e apply specificate e un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind" /> di OuterApply.</returns>
      <param name="source">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che specifica il set di input.</param>
      <param name="apply">Metodo che specifica la logica da valutare una volta per ogni membro del set di input.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="apply" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> non dispone di un tipo di risultato della raccolta.</exception>
      <exception cref="T:System.ArgumentNullException">Il risultato di apply contiene un nome o un'espressione Null.</exception>
      <exception cref="T:System.ArgumentException">Il risultato di apply contiene un nome o un'espressione non valida in un'associazione all'espressione.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding,System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbApplyExpression" /> che valuta l'espressione <paramref name="apply" /> specificata una volta per ogni elemento di un set di input specificato, producendo una raccolta di righe con colonne input e apply corrispondenti.Le righe per le quali <paramref name="apply" /> restituisce un set vuoto presentano una colonna apply con valore null.</summary>
      <returns>Nuovo elemento DbApplyExpression con le associazioni input e apply specificate e un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind" /> di OuterApply.</returns>
      <param name="input">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding" /> che specifica il set di input.</param>
      <param name="apply">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding" /> che specifica la logica da valutare una volta per ogni membro del set di input.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> o <paramref name="apply" /> è null.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Entity.Core.Metadata.Edm.TypeUsage,System.String)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbParameterReferenceExpression" /> che fa riferimento a un parametro con il nome e il tipo specificati.</summary>
      <returns>Elemento DbParameterReferenceExpression che rappresenta un riferimento a un parametro con il nome e il tipo specificati; il tipo di risultato dell'espressione sarà uguale a <paramref name="type" />.</returns>
      <param name="type">Tipo del parametro a cui si fa riferimento.</param>
      <param name="name">Nome del parametro a cui si fa riferimento.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbArithmeticExpression" /> che aggiunge l'argomento a sinistra all'argomento a destra.</summary>
      <returns>Nuovo elemento DbArithmeticExpression che rappresenta l'operazione di addizione.</returns>
      <param name="left">Espressione che specifica l'argomento a sinistra.</param>
      <param name="right">Espressione che specifica l'argomento a destra.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="left" /> o <paramref name="right" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Non esiste alcun tipo di risultato numerico comune tra left e right.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbProjectExpression" /> che proietta l'espressione indicata sul set di input specificato.</summary>
      <returns>Nuovo elemento DbProjectExpression che rappresenta l'operazione di proiezione.</returns>
      <param name="input">Associazione di espressione che specifica il set di input.</param>
      <param name="projection">Espressione da proiettare sul set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> o <paramref name="projection" /> è null.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Metadata.Edm.EdmProperty)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbPropertyExpression" /> che rappresenta il recupero della proprietà specificata.</summary>
      <returns>Nuovo elemento DbPropertyExpression che rappresenta il recupero della proprietà.</returns>
      <param name="instance">Istanza da cui recuperare la proprietà.Potrebbe essere Null se la proprietà è statica.</param>
      <param name="propertyMetadata">Metadati per la proprietà da recuperare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="propertyMetadata" /> è Null o <paramref name="instance" /> è Null e la proprietà non è statica.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Metadata.Edm.NavigationProperty)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbPropertyExpression" /> che rappresenta il recupero della proprietà di navigazione specificata.</summary>
      <returns>Nuovo elemento DbPropertyExpression che rappresenta il recupero della proprietà di navigazione.</returns>
      <param name="instance">Istanza da cui recuperare la proprietà di navigazione.</param>
      <param name="navigationProperty">Metadati per la proprietà di navigazione da recuperare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="navigationProperty" /> è Null o <paramref name="instance" /> è Null.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Metadata.Edm.RelationshipEndMember)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbPropertyExpression" /> che rappresenta il recupero del membro finale della relazione specificato.</summary>
      <returns>Nuovo elemento DbPropertyExpression che rappresenta il recupero del membro finale della relazione.</returns>
      <param name="instance">Istanza da cui recuperare il membro finale della relazione.</param>
      <param name="relationshipEnd">Metadati del membro finale della relazione da recuperare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relationshipEnd" /> è Null o <paramref name="instance" /> è Null e la proprietà non è statica.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.String)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbPropertyExpression" /> che rappresenta il recupero della proprietà di istanza con il nome specificato dall'istanza specificata.</summary>
      <returns>Nuovo elemento DbPropertyExpression che rappresenta il recupero della proprietà.</returns>
      <param name="instance">Istanza da cui recuperare la proprietà.</param>
      <param name="propertyName">Nome della proprietà da recuperare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="propertyName" /> è Null o <paramref name="instance" /> è Null e la proprietà non è statica.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Nessuna proprietà con il nome specificato viene dichiarata dal tipo di <paramref name="instance" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Entity.Core.Metadata.Edm.EntitySet,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbRefExpression" /> che codifica un riferimento a un'Entità specifica in base a valori chiave.</summary>
      <returns>Nuovo elemento DbRefExpression che fa riferimento all'elemento con i valori chiave specificati nel set di entità specificato.</returns>
      <param name="entitySet">Set di entità in cui risiede l'elemento a cui viene fatto riferimento.</param>
      <param name="keyRow">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che costruisce un record con colonne che corrispondono, per numero, tipo e ordinamento, alle proprietà chiave del tipo di entità di riferimento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="entitySet" /> o <paramref name="keyRow" /> è null.</exception>
      <exception cref="T:System.ArgumentException">keyRow</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Entity.Core.Metadata.Edm.EntitySet,System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Metadata.Edm.EntityType)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbRefExpression" /> che codifica un riferimento a un'Entità specifica in base a valori chiave.</summary>
      <returns>Nuovo elemento DbRefExpression che fa riferimento all'elemento con i valori chiave specificati nel set di entità specificato.</returns>
      <param name="entitySet">Set di entità in cui risiede l'elemento a cui viene fatto riferimento.</param>
      <param name="keyRow">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che costruisce un record con colonne che corrispondono, per numero, tipo e ordinamento, alle proprietà chiave del tipo di entità di riferimento.</param>
      <param name="entityType">Tipo dell'entità a cui si fa riferimento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="entitySet" />, <paramref name="keyRow" /> o <paramref name="entityType" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="entityType" /> non si trova nella stessa gerarchia dei tipi del tipo di entità del set di entità o <paramref name="keyRow" /> non dispone di un tipo di risultato record corrispondente alle proprietà chiave del tipo di entità del set di entità di riferimento.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Entity.Core.Metadata.Edm.EntitySetBase)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbScanExpression" /> che fa riferimento al set di entità o di relazioni specificato.</summary>
      <returns>Nuovo elemento DbScanExpression basato sul set di entità o di relazioni specificato.</returns>
      <param name="targetSet">Metadati per il set di entità o di relazioni a cui fare riferimento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetSet" /> è null.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpression,``0})">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbProjectExpression" /> che seleziona l'espressione indicata sul set di input specificato.</summary>
      <returns> Nuovo elemento DbProjectExpression che rappresenta l'operazione di selezione. </returns>
      <param name="source">Espressione che specifica il set di input.</param>
      <param name="projection">Metodo che specifica come derivare l'espressione proiettata dato un membro del set di input.Questo metodo deve produrre un'istanza di un tipo compatibile con Select che possa essere risolta in un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" />.Requisiti di compatibilità per <paramref name="TProjection" /> come descritto nelle osservazioni.</param>
      <typeparam name="TProjection">Tipo di risultato del metodo di <paramref name="projection" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="projection" /> è Null.</exception>
      <exception cref="T:System.ArgumentNullException">Il risultato di <paramref name="projection" /> è Null.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression})">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbApplyExpression" /> che valuta l'espressione <paramref name="apply" /> specificata una volta per ogni elemento di un set di input specificato, producendo una raccolta di righe con colonne input e apply corrispondenti.Le righe per cui <paramref name="apply" /> restituisce un set vuoto non vengono incluse.Verrà quindi creato un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbProjectExpression" /> per la selezione dell'oggetto <paramref name="selector" /> specificato su ogni riga, producendo la raccolta complessiva di risultati.</summary>
      <returns>Nuovo elemento DbProjectExpression che seleziona la colonna apply da un nuovo oggetto DbApplyExpression con le associazioni input e apply specificate e un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind" /> di CrossApply.</returns>
      <param name="source">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che specifica il set di input.</param>
      <param name="apply">Metodo che rappresenta la logica da valutare una volta per ogni membro del set di input.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="apply" /> è null.</exception>
      <exception cref="T:System.ArgumentNullException">L'espressione generata da <paramref name="apply" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> non dispone di un tipo di risultato della raccolta.</exception>
      <exception cref="T:System.ArgumentException">L'espressione generata da <paramref name="apply" /> non dispone di un tipo di raccolta.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression},System.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression,``0})">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbApplyExpression" /> che valuta l'espressione <paramref name="apply" /> specificata una volta per ogni elemento di un set di input specificato, producendo una raccolta di righe con colonne input e apply corrispondenti.Le righe per cui <paramref name="apply" /> restituisce un set vuoto non vengono incluse.Verrà quindi creato un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbProjectExpression" /> per la selezione dell'oggetto <paramref name="selector" /> specificato su ogni riga, producendo la raccolta complessiva di risultati.</summary>
      <returns>Nuovo elemento DbProjectExpression che seleziona il risultato del selettore specificato da un nuovo oggetto DbApplyExpression con le associazioni input e apply specificate e un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionKind" /> di CrossApply.</returns>
      <param name="source">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che specifica il set di input.</param>
      <param name="apply">Metodo che rappresenta la logica da valutare una volta per ogni membro del set di input.</param>
      <param name="selector">Metodo che specifica come derivare un elemento del set di risultati dato un elemento dei set di input e apply.Questo metodo deve produrre un'istanza di un tipo compatibile con SelectMany che possa essere risolta in un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" />.Requisiti di compatibilità per <paramref name="TSelector" /> come descritto nelle osservazioni.</param>
      <typeparam name="TSelector">Tipo di risultato del metodo di <paramref name="selector" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />, <paramref name="apply" /> o <paramref name="selector" /> è Null.</exception>
      <exception cref="T:System.ArgumentNullException">L'espressione generata da <paramref name="apply" /> è Null.</exception>
      <exception cref="T:System.ArgumentNullException">Il risultato di <paramref name="selector" /> è Null nella conversione all'oggetto DbExpression.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> non dispone di un tipo di risultato della raccolta.</exception>
      <exception cref="T:System.ArgumentException">L'espressione generata da <paramref name="apply" /> non dispone di un tipo di raccolta.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SetClause(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbSetClause" /> che rappresenta l'impostazione di una proprietà su un valore.</summary>
      <returns>Clausola set appena creata.</returns>
      <param name="property">Proprietà da impostare.</param>
      <param name="value">Valore su cui impostare la proprietà.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Common.CommandTrees.DbSortClause},System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbSkipExpression" /> che ordina il set di input indicato in base alle specifiche di ordinamento prima di ignorare il numero specificato di elementi.</summary>
      <returns>Nuovo elemento DbSkipExpression che rappresenta l'operazione per ignorare gli elementi.</returns>
      <param name="input">Associazione di espressione che specifica il set di input.</param>
      <param name="sortOrder">Elenco di specifiche di ordinamento che determinano come ordinare gli elementi del set di input.</param>
      <param name="count">Espressione che specifica il numero di elementi del set ordinato da ignorare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />, <paramref name="sortOrder" /> o <paramref name="count" /> è Null oppure <paramref name="sortOrder" /> contiene Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sortOrder" /> è vuoto o <paramref name="count" /> non è <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbConstantExpression" /> né <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbParameterReferenceExpression" /> oppure dispone di un tipo di risultato che non è uguale né promuovibile a un tipo Integer a 64 bit.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Entity.Core.Common.CommandTrees.DbSortExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbSkipExpression" /> che ignora il numero specificato di elementi dal set di input ordinato specificato.</summary>
      <returns>Nuovo elemento DbSkipExpression che rappresenta l'operazione per ignorare gli elementi.</returns>
      <param name="argument">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbSortExpression" /> che specifica il set di input ordinato.</param>
      <param name="count">Espressione che specifica il numero di elementi del set ordinato da ignorare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="argument" /> o <paramref name="count" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Count" /> non è <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbConstantExpression" /> né <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbParameterReferenceExpression" /> oppure dispone di un tipo di risultato che non è uguale né promuovibile a un tipo Integer a 64 bit.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Common.CommandTrees.DbSortClause})">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbSortExpression" /> che ordina il set di input specificato in base alle specifiche di ordinamento.</summary>
      <returns>Nuovo elemento DbSortExpression che rappresenta l'operazione di ordinamento.</returns>
      <param name="input">Associazione di espressione che specifica il set di input.</param>
      <param name="sortOrder">Elenco di specifiche di ordinamento che determinano come ordinare gli elementi del set di input.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> o <paramref name="sortOrder" /> è Null oppure <paramref name="sortOrder" /> contiene Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sortOrder" /> è vuoto.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbLimitExpression" /> che limita il numero di elementi nella raccolta Argument al valore Limit del conteggio specificato.I risultati correlati non sono inclusi nell'output.</summary>
      <returns>Nuovo elemento DbLimitExpression con i valori limite del conteggio e l'argomento specificati che non include i risultati correlati.</returns>
      <param name="argument">Espressione che specifica la raccolta di input.</param>
      <param name="count">Espressione che specifica il valore limite.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="argument" /> o <paramref name="count" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="argument" /> non dispone di un tipo di risultati della raccolta o <paramref name="count" /> non dispone di un tipo di risultato uguale o promuovibile a un tipo Integer a 64 bit.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Entity.Core.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression})">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbSortExpression" /> con un ordinamento che include l'ordinamento del set di input di ordinamento specificato oltre alla chiave di ordinamento specificata in ordine crescente e con le regole di confronto predefinite.</summary>
      <returns>Nuovo elemento DbSortExpression che rappresenta la nuova operazione order-by complessiva.</returns>
      <param name="source">Elemento DbSortExpression che specifica il set di input ordinato.</param>
      <param name="sortKey">Metodo che specifica come derivare l'espressione della chiave di ordinamento aggiuntiva dato un membro del set di input.Questo metodo deve produrre un'espressione con un tipo di risultato confrontabile in termini di ordinamento che fornisce la definizione della chiave di ordinamento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="sortKey" /> è null.</exception>
      <exception cref="T:System.ArgumentNullException">L'espressione generata da <paramref name="sortKey" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> non dispone di un tipo di risultato della raccolta.</exception>
      <exception cref="T:System.ArgumentException">L'espressione generata da <paramref name="sortKey" /> non dispone di un tipo di risultato confrontabile in termini di ordinamento.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Entity.Core.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression},System.String)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbSortExpression" /> con un ordinamento che include l'ordinamento del set di input di ordinamento specificato oltre alla chiave di ordinamento specificata in ordine crescente e con le regole di confronto specificate.</summary>
      <returns>Nuovo elemento DbSortExpression che rappresenta la nuova operazione order-by complessiva.</returns>
      <param name="source">Elemento DbSortExpression che specifica il set di input ordinato.</param>
      <param name="sortKey">Metodo che specifica come derivare l'espressione della chiave di ordinamento aggiuntiva dato un membro del set di input.Questo metodo deve produrre un'espressione con un tipo di risultato confrontabile in termini di ordinamento che fornisce la definizione della chiave di ordinamento.</param>
      <param name="collation">Regole di confronto da utilizzare per l'ordinamento</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />, <paramref name="sortKey" /> o <paramref name="collation" /> è null.</exception>
      <exception cref="T:System.ArgumentNullException">L'espressione generata da <paramref name="sortKey" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> non dispone di un tipo di risultato della raccolta.</exception>
      <exception cref="T:System.ArgumentException">L'espressione generata da <paramref name="sortKey" /> non dispone di un tipo di risultato String confrontabile in termini di ordinamento.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="collation" /> è vuoto o contiene solo spazi.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Entity.Core.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression})">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbSortExpression" /> con un ordinamento che include l'ordinamento del set di input di ordinamento specificato oltre alla chiave di ordinamento specificata in ordine decrescente e con le regole di confronto predefinite.</summary>
      <returns>Nuovo elemento DbSortExpression che rappresenta la nuova operazione order-by complessiva.</returns>
      <param name="source">Elemento DbSortExpression che specifica il set di input ordinato.</param>
      <param name="sortKey">Metodo che specifica come derivare l'espressione della chiave di ordinamento aggiuntiva dato un membro del set di input.Questo metodo deve produrre un'espressione con un tipo di risultato confrontabile in termini di ordinamento che fornisce la definizione della chiave di ordinamento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="sortKey" /> è null.</exception>
      <exception cref="T:System.ArgumentNullException">L'espressione generata da <paramref name="sortKey" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> non dispone di un tipo di risultato della raccolta.</exception>
      <exception cref="T:System.ArgumentException">L'espressione generata da <paramref name="sortKey" /> non dispone di un tipo di risultato confrontabile in termini di ordinamento.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Entity.Core.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression},System.String)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbSortExpression" /> con un ordinamento che include l'ordinamento del set di input di ordinamento specificato oltre alla chiave di ordinamento specificata in ordine decrescente e con le regole di confronto specificate.</summary>
      <returns>Nuovo elemento DbSortExpression che rappresenta la nuova operazione order-by complessiva.</returns>
      <param name="source">Elemento DbSortExpression che specifica il set di input ordinato.</param>
      <param name="sortKey">Metodo che specifica come derivare l'espressione della chiave di ordinamento aggiuntiva dato un membro del set di input.Questo metodo deve produrre un'espressione con un tipo di risultato confrontabile in termini di ordinamento che fornisce la definizione della chiave di ordinamento.</param>
      <param name="collation">Regole di confronto da usare per l'ordinamento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" />, <paramref name="sortKey" /> o <paramref name="collation" /> è Null.</exception>
      <exception cref="T:System.ArgumentNullException">L'espressione generata da <paramref name="sortKey" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> non dispone di un tipo di risultato della raccolta.</exception>
      <exception cref="T:System.ArgumentException">L'espressione generata da <paramref name="sortKey" /> non dispone di un tipo di risultato String confrontabile in termini di ordinamento.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="collation" /> è vuoto o contiene solo spazi.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbSortClause" /> con un ordinamento crescente e con le regole di confronto predefinite.</summary>
      <returns>Nuova clausola di ordinamento con ordinamento crescente e la chiave di ordinamento specificata.</returns>
      <param name="key">Espressione che definisce la chiave di ordinamento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> non dispone di un tipo di risultato confrontabile in termini di ordinamento.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.String)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbSortClause" /> con un ordinamento crescente e con le regole di confronto specificate.</summary>
      <returns>Nuova clausola di ordinamento con la chiave di ordinamento e le regole di confronto specificate e con ordinamento crescente.</returns>
      <param name="key">Espressione che definisce la chiave di ordinamento.</param>
      <param name="collation">Regole di confronto da usare per l'ordinamento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="collation" /> è vuoto o contiene solo spazi.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> non dispone di un tipo di risultato confrontabile in termini di ordinamento.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbSortClause" /> con un ordinamento decrescente e con le regole di confronto predefinite.</summary>
      <returns>Nuova clausola di ordinamento con ordinamento decrescente e la chiave di ordinamento specificata.</returns>
      <param name="key">Espressione che definisce la chiave di ordinamento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> non dispone di un tipo di risultato confrontabile in termini di ordinamento.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.String)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbSortClause" /> con un ordinamento decrescente e con le regole di confronto specificate.</summary>
      <returns>Nuova clausola di ordinamento con la chiave di ordinamento e le regole di confronto specificate e con ordinamento decrescente.</returns>
      <param name="key">Espressione che definisce la chiave di ordinamento.</param>
      <param name="collation">Regole di confronto da usare per l'ordinamento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="collation" /> è vuoto o contiene solo spazi.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> non dispone di un tipo di risultato confrontabile in termini di ordinamento.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Metadata.Edm.TypeUsage)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbTreatExpression" />.</summary>
      <returns>Nuovo elemento DbTreatExpression con il tipo e l'argomento specificati.</returns>
      <param name="argument">Espressione che specifica l'istanza.</param>
      <param name="treatType">Metadati del tipo da utilizzare come modello di trattamento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="argument" /> o <paramref name="treatType" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="treatType" /> non si trova nella stessa gerarchia dei tipi del tipo di risultato di <paramref name="argument" />.</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbConstantExpression" /> con il valore booleano true.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbConstantExpression" /> con il valore booleano true.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbArithmeticExpression" /> che nega il valore dell'argomento.</summary>
      <returns>Nuovo elemento DbArithmeticExpression che rappresenta l'operazione di negazione.</returns>
      <param name="argument">Espressione che specifica l'argomento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="argument" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Non esiste alcun tipo di risultato numerico per <paramref name="argument" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che calcola l'unione degli argomenti set a sinistra e a destra rimuovendone i duplicati.</summary>
      <returns>Nuovo oggetto DbExpression che calcola l'unione, senza duplicati, degli argomenti a sinistra e a destra.</returns>
      <param name="left">Espressione che definisce l'argomento set a sinistra.</param>
      <param name="right">Espressione che definisce l'argomento set a destra.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="left" /> o <paramref name="right" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Non esiste alcun tipo di risultati della raccolta comune con un tipo di elemento confrontabile in termini di uguaglianza tra <paramref name="left" /> e <paramref name="right" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbUnionAllExpression" /> che calcola l'unione degli argomenti set a sinistra e a destra senza rimuoverne i duplicati.</summary>
      <returns>Nuovo oggetto DbUnionAllExpression che calcola l'unione, includendone i duplicati, degli argomenti a sinistra e a destra.</returns>
      <param name="left">Espressione che definisce l'argomento set a sinistra.</param>
      <param name="right">Espressione che definisce l'argomento set a destra.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="left" /> o <paramref name="right" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Non esiste alcun tipo di risultati della raccolta comune tra <paramref name="left" /> e <paramref name="right" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Entity.Core.Metadata.Edm.TypeUsage,System.String)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression" /> che fa riferimento a una variabile con il nome e il tipo specificati.</summary>
      <returns>Elemento DbVariableReferenceExpression che rappresenta un riferimento a una variabile con il nome e il tipo specificati; il tipo di risultato dell'espressione sarà uguale a <paramref name="type" />.</returns>
      <param name="type">Tipo della variabile a cui si fa riferimento.</param>
      <param name="name">Nome della variabile a cui si fa riferimento.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Func{System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression})">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFilterExpression" /> che filtra gli elementi nel set di input specificato tramite il predicato specificato.</summary>
      <returns>Nuovo elemento DbQuantifierExpression che rappresenta l'operazione Any.</returns>
      <param name="source">Espressione che specifica il set di input.</param>
      <param name="predicate">Metodo che rappresenta il predicato da valutare per ogni membro del set di input.Questo metodo deve produrre un'espressione con un tipo di risultato booleano che fornisce la logica predicativa.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> o <paramref name="predicate" /> è null.</exception>
      <exception cref="T:System.ArgumentNullException">L'espressione generata da <paramref name="predicate" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">L'espressione generata da <paramref name="predicate" /> non dispone di un tipo di risultato booleano.</exception>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions">
      <summary>Fornisce un'API per costruire oggetti <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che richiamano funzioni EDM canoniche e rende accessibile tale API come i metodi di estensione sul tipo di espressione stesso.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Abs' canonica con l'argomento specificato, che deve presentare un tipo di risultato numerico.Il tipo di risultato dell'espressione equivale a quello di <paramref name="value" />.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il valore assoluto di <paramref name="value" />.</returns>
      <param name="value">Espressione che specifica il valore numerico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'Abs' canonica accetta un argomento con il tipo di risultato <paramref name="value" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'AddDays' canonica con gli argomenti specificati, che devono presentare i tipi di risultato Integer e DateTime o DateTimeOffset.Il tipo di risultato dell'espressione equivale a quello di <paramref name="dateValue" />.</summary>
      <returns>Nuovo elemento DbFunctionExpression che aggiunge il numero di giorni specificato da <paramref name="addValue" /> al valore specificato da <paramref name="dateValue" />.</returns>
      <param name="dateValue">Espressione che specifica il valore a cui deve essere aggiunto <paramref name="addValue" />.</param>
      <param name="addValue">Espressione che specifica il numero di giorni da aggiungere a <paramref name="dateValue" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dateValue" /> o <paramref name="addValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'AddDays' canonica accetta argomenti con i tipi di risultato di <paramref name="dateValue" /> e <paramref name="addValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'AddHours' canonica con gli argomenti specificati, che devono presentare i tipi di risultato Integer e DateTime, DateTimeOffset o Time.Il tipo di risultato dell'espressione equivale a quello di <paramref name="timeValue" />.</summary>
      <returns>Nuovo elemento DbFunctionExpression che aggiunge il numero di ore specificato da <paramref name="addValue" /> al valore specificato da <paramref name="timeValue" />.</returns>
      <param name="timeValue">Espressione che specifica il valore a cui deve essere aggiunto <paramref name="addValue" />.</param>
      <param name="addValue">Espressione che specifica il numero di ore da aggiungere a <paramref name="timeValue" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="timeValue" /> o <paramref name="addValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'AddHours' canonica accetta argomenti con i tipi di risultato di <paramref name="timeValue" /> e <paramref name="addValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'AddMicroseconds' canonica con gli argomenti specificati, che devono presentare i tipi di risultato Integer DateTime, DateTimeOffset o Time.Il tipo di risultato dell'espressione equivale a quello di <paramref name="timeValue" />.</summary>
      <returns>Nuovo elemento DbFunctionExpression che aggiunge il numero di microsecondi specificato da <paramref name="addValue" /> al valore specificato da <paramref name="timeValue" />.</returns>
      <param name="timeValue">Espressione che specifica il valore a cui deve essere aggiunto <paramref name="addValue" />.</param>
      <param name="addValue">Espressione che specifica il numero di microsecondi da aggiungere a <paramref name="timeValue" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="timeValue" /> o <paramref name="addValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'AddMicroseconds' accetta argomenti con i tipi di risultato di <paramref name="timeValue" /> e <paramref name="addValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'AddMilliseconds' canonica con gli argomenti specificati, che devono presentare i tipi di risultato Integer, DateTime, DateTimeOffset o Time.Il tipo di risultato dell'espressione equivale a quello di <paramref name="timeValue" />.</summary>
      <returns>Nuovo elemento DbFunctionExpression che aggiunge il numero di millisecondi specificato da <paramref name="addValue" /> al valore specificato da <paramref name="timeValue" />.</returns>
      <param name="timeValue">Espressione che specifica il valore a cui deve essere aggiunto <paramref name="addValue" />.</param>
      <param name="addValue">Espressione che specifica il numero di millisecondi da aggiungere a <paramref name="timeValue" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="timeValue" /> o <paramref name="addValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'AddMilliseconds' accetta argomenti con i tipi di risultato di <paramref name="timeValue" /> e <paramref name="addValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'AddMinutes' canonica con gli argomenti specificati, che devono presentare i tipi di risultato Integer e DateTime, DateTimeOffset o Time.Il tipo di risultato dell'espressione equivale a quello di <paramref name="timeValue" />.</summary>
      <returns>Nuovo elemento DbFunctionExpression che aggiunge il numero di minuti specificato da <paramref name="addValue" /> al valore specificato da <paramref name="timeValue" />.</returns>
      <param name="timeValue">Espressione che specifica il valore a cui deve essere aggiunto <paramref name="addValue" />.</param>
      <param name="addValue">Espressione che specifica il numero di minuti da aggiungere a <paramref name="timeValue" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="timeValue" /> o <paramref name="addValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'AddMinutes' canonica accetta argomenti con i tipi di risultato di <paramref name="timeValue" /> e <paramref name="addValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'AddMonths' canonica con gli argomenti specificati, che devono presentare i tipi di risultato Integer e DateTime o DateTimeOffset.Il tipo di risultato dell'espressione equivale a quello di <paramref name="dateValue" />.</summary>
      <returns>Nuovo elemento DbFunctionExpression che aggiunge il numero di mesi specificato da <paramref name="addValue" /> al valore specificato da <paramref name="dateValue" />.</returns>
      <param name="dateValue">Espressione che specifica il valore a cui deve essere aggiunto <paramref name="addValue" />.</param>
      <param name="addValue">Espressione che specifica il numero di mesi da aggiungere a <paramref name="dateValue" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dateValue" /> o <paramref name="addValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'AddMonths' canonica accetta argomenti con i tipi di risultato di <paramref name="dateValue" /> e <paramref name="addValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'AddNanoseconds' canonica con gli argomenti specificati, che devono presentare i tipi di risultato Integer e DateTime, DateTimeOffset o Time.Il tipo di risultato dell'espressione equivale a quello di <paramref name="timeValue" />.</summary>
      <returns>Nuovo elemento DbFunctionExpression che aggiunge il numero di nanosecondi specificato da <paramref name="addValue" /> al valore specificato da <paramref name="timeValue" />.</returns>
      <param name="timeValue">Espressione che specifica il valore a cui deve essere aggiunto <paramref name="addValue" />.</param>
      <param name="addValue">Espressione che specifica il numero di nanosecondi da aggiungere a <paramref name="timeValue" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="timeValue" /> o <paramref name="addValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'AddNanoseconds' accetta argomenti con i tipi di risultato di <paramref name="timeValue" /> e <paramref name="addValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'AddSeconds' canonica con gli argomenti specificati, che devono presentare i tipi di risultato Integer e DateTime, DateTimeOffset o Time.Il tipo di risultato dell'espressione equivale a quello di <paramref name="timeValue" />.</summary>
      <returns>Nuovo elemento DbFunctionExpression che aggiunge il numero di secondi specificato da <paramref name="addValue" /> al valore specificato da <paramref name="timeValue" />.</returns>
      <param name="timeValue">Espressione che specifica il valore a cui deve essere aggiunto <paramref name="addValue" />.</param>
      <param name="addValue">Espressione che specifica il numero di secondi da aggiungere a <paramref name="timeValue" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="timeValue" /> o <paramref name="addValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'AddSeconds' canonica accetta argomenti con i tipi di risultato di <paramref name="timeValue" /> e <paramref name="addValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'AddYears' canonica con gli argomenti specificati, che devono presentare i tipi di risultato Integer e DateTime o DateTimeOffset.Il tipo di risultato dell'espressione equivale a quello di <paramref name="dateValue" />.</summary>
      <returns>Nuovo elemento DbFunctionExpression che aggiunge il numero di anni specificato da <paramref name="addValue" /> al valore specificato da <paramref name="dateValue" />.</returns>
      <param name="dateValue">Espressione che specifica il valore a cui deve essere aggiunto <paramref name="addValue" />.</param>
      <param name="addValue">Espressione che specifica il numero di anni da aggiungere a <paramref name="dateValue" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dateValue" /> o <paramref name="addValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'AddYears' canonica accetta argomenti con i tipi di risultato di <paramref name="dateValue" /> e <paramref name="addValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Avg' canonica sulla raccolta specificata.Il tipo di risultato dell'espressione è uguale al tipo di elemento della raccolta.</summary>
      <returns>Nuovo elemento DbFunctionExpression che produce il valore medio.</returns>
      <param name="collection">Espressione che specifica la raccolta da cui calcolare il valore medio.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'Avg' canonica accetta un argomento con il tipo di risultato <paramref name="collection" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'BitwiseAnd' canonica con gli argomenti specificati, che devono presentare lo stesso tipo di risultato Integer numerico.Il tipo di risultato dell'espressione è uguale a questo stesso tipo.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il valore prodotto eseguendo l'operazione AND bit per bit di <paramref name="value1" /> e <paramref name="value2" />.</returns>
      <param name="value1">Espressione che specifica il primo operando.</param>
      <param name="value2">Espressione che specifica il secondo operando.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value1" /> o <paramref name="value2" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'BitwiseAnd' canonica accetta argomenti con i tipi di risultato di <paramref name="value1" /> e <paramref name="value2" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'BitwiseNot' canonica con l'argomento specificato, che deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è uguale a questo stesso tipo.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il valore prodotto eseguendo l'operazione NOT bit per bit di <paramref name="value" />.</returns>
      <param name="value">Espressione che specifica il primo operando.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'BitwiseNot' canonica accetta argomenti con i tipi di risultato di <paramref name="value" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'BitwiseOr' canonica con gli argomenti specificati, che devono presentare lo stesso tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è uguale a questo stesso tipo.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il valore prodotto eseguendo l'operazione OR bit per bit di <paramref name="value1" /> e <paramref name="value2" />.</returns>
      <param name="value1">Espressione che specifica il primo operando.</param>
      <param name="value2">Espressione che specifica il secondo operando.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value1" /> o <paramref name="value2" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'BitwiseOr' canonica accetta argomenti con i tipi di risultato di <paramref name="value1" /> e <paramref name="value2" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'BitwiseXor' canonica con gli argomenti specificati, che devono presentare lo stesso tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è uguale a questo stesso tipo.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il valore prodotto eseguendo l'operazione XOR (operatore OR esclusivo) bit per bit di <paramref name="value1" /> e <paramref name="value2" />.</returns>
      <param name="value1">Espressione che specifica il primo operando.</param>
      <param name="value2">Espressione che specifica il secondo operando.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value1" /> o <paramref name="value2" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'BitwiseXor' canonica accetta argomenti con i tipi di risultato di <paramref name="value1" /> e <paramref name="value2" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Ceiling' canonica con gli argomenti specificati, che devono presentare un tipo di risultato Single, Double o Decimal.Il tipo di risultato dell'espressione equivale a quello di <paramref name="value" />.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il valore intero più piccolo non minore di <paramref name="value" />.</returns>
      <param name="value">Espressione che specifica il valore numerico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'Ceiling' canonica accetta un argomento con il tipo di risultato <paramref name="value" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Concat' canonica con gli argomenti specificati, che devono presentare un tipo di risultato String.Il tipo di risultato dell'espressione è String.</summary>
      <returns>Nuovo elemento DbFunctionExpression che produce la stringa concatenata.</returns>
      <param name="string1">Espressione che specifica la stringa da includere come primo elemento nella stringa restituita concatenata.</param>
      <param name="string2">Espressione che specifica la stringa da includere come secondo elemento nella stringa restituita concatenata.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="string1" /> o <paramref name="string2" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'Concat' canonica accetta argomenti con i tipi di risultato di <paramref name="string1" /> e <paramref name="string2" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Contains' canonica con gli argomenti specificati, che devono presentare un tipo di risultato String.Il tipo di risultato dell'espressione è Boolean.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un valore booleano che indica se <paramref name="searchedForString" /> si trova o meno all'interno di <paramref name="searchedString" />.</returns>
      <param name="searchedString">Espressione che specifica la stringa in cui cercare le occorrenze di <paramref name="searchedForString" />.</param>
      <param name="searchedForString">Espressione che specifica la stringa da cercare in <paramref name="searchedString" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchedString" /> o <paramref name="searchedForString" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'Contains' canonica accetta argomenti con i tipi di risultato di <paramref name="searchedString" /> e <paramref name="searchedForString" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Count' canonica sulla raccolta specificata.Il tipo di risultato dell'espressione è Edm.Int32.</summary>
      <returns>Nuovo elemento DbFunctionExpression che produce il valore del conteggio.</returns>
      <param name="collection">Espressione che specifica la raccolta su cui calcolare il valore del conteggio.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'Count' canonica accetta un argomento con il tipo di risultato <paramref name="collection" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'CreateDateTime' canonica con gli argomenti specificati.Il tipo di risultato di <paramref name="second" /> deve essere Edm.Double, mentre tutti gli altri argomenti devono presentare un tipo di risultato Edm.Int32.Il tipo di risultato dell'espressione è Edm.DateTime.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo elemento DateTime basato sui valori specificati.</returns>
      <param name="year">Espressione che fornisce il valore anno per la nuova istanza di DateTime.</param>
      <param name="month">Espressione che fornisce il valore mese per la nuova istanza di DateTime.</param>
      <param name="day">Espressione che fornisce il valore giorno per la nuova istanza di DateTime.</param>
      <param name="hour">Espressione che fornisce il valore ora per la nuova istanza di DateTime.</param>
      <param name="minute">Espressione che fornisce il valore minuto per la nuova istanza di DateTime.</param>
      <param name="second">Espressione che fornisce il valore second per la nuova istanza di DateTime.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="year" />, <paramref name="month" />, <paramref name="day" />, <paramref name="hour" />, <paramref name="minute" />, <paramref name="second" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'CreateDateTime' canonica accetta argomenti con i tipi di risultato di <paramref name="year" />, <paramref name="month" />, <paramref name="day" />, <paramref name="hour" />, <paramref name="minute" /> e <paramref name="second" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'CreateDateTimeOffset' canonica con gli argomenti specificati.Il tipo di risultato di <paramref name="second" /> deve essere Edm.Double, mentre tutti gli altri argomenti devono presentare un tipo di risultato Edm.Int32.Il tipo di risultato dell'espressione è Edm.DateTimeOffset.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore DateTimeOffset basato sui valori specificati.</returns>
      <param name="year">Espressione che fornisce il valore anno per la nuova istanza di DateTimeOffset.</param>
      <param name="month">Espressione che fornisce il valore mese per la nuova istanza di DateTimeOffset.</param>
      <param name="day">Espressione che fornisce il valore giorno per la nuova istanza di DateTimeOffset.</param>
      <param name="hour">Espressione che fornisce il valore ora per la nuova istanza di DateTimeOffset.</param>
      <param name="minute">Espressione che fornisce il valore minuto per la nuova istanza di DateTimeOffset.</param>
      <param name="second">Espressione che fornisce il valore secondo per la nuova istanza di DateTimeOffset.</param>
      <param name="timeZoneOffset">Espressione che fornisce il numero di minuti nel valore di offset del fuso orario per la nuova istanza di DateTimeOffset.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="year" />, <paramref name="month" />, <paramref name="day" />, <paramref name="hour" />, <paramref name="minute" />, <paramref name="second" /> o <paramref name="timeZoneOffset" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'CreateDateTimeOffset' canonica accetta argomenti con i tipi di risultato di <paramref name="year" />, <paramref name="month" />, <paramref name="day" />, <paramref name="hour" />, <paramref name="minute" />, <paramref name="second" /> e <paramref name="timeZoneOffset" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'CreateTime' canonica con gli argomenti specificati.Il tipo di risultato di <paramref name="second" /> deve essere Edm.Double, mentre tutti gli altri argomenti devono presentare un tipo di risultato Edm.Int32.Il tipo di risultato dell'espressione è Edm.Time.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo elemento Time basato sui valori specificati.</returns>
      <param name="hour">Espressione che fornisce il valore ora per la nuova istanza di DateTime.</param>
      <param name="minute">Espressione che fornisce il valore minuto per la nuova istanza di DateTime.</param>
      <param name="second">Espressione che fornisce il valore second per la nuova istanza di DateTime.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hour" />, <paramref name="minute" /> o <paramref name="second" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'CreateTime' canonica accetta argomenti con i tipi di risultato di <paramref name="hour" />, <paramref name="minute" /> e <paramref name="second" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'CurrentDateTime' canonica.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce la data e l'ora correnti come un'istanza di Edm.DateTime.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'CurrentDateTimeOffset' canonica.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce la data e l'ora correnti come un'istanza di Edm.DateTimeOffset.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'CurrentUtcDateTime' canonica.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce la data e l'ora UTC come un'istanza di Edm.DateTime.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Day' canonica con l'argomento specificato, che deve presentare un tipo di risultato DateTime o DateTimeOffset.Il tipo di risultato dell'espressione è Edm.Int32.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il valore giorno Integer da <paramref name="dateValue" />.</returns>
      <param name="dateValue">Espressione che specifica il valore da cui recuperare il giorno.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dateValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'Day' canonica accetta argomenti con il tipo di risultato <paramref name="dateValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'DayOfYear' canonica con l'argomento specificato, che deve presentare un tipo di risultato DateTime o DateTimeOffset.Il tipo di risultato dell'espressione è Edm.Int32.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il valore giorno dell'anno Integer da <paramref name="dateValue" />.</returns>
      <param name="dateValue">Espressione che specifica il valore da cui recuperare il giorno dell'anno.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dateValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'DayOfYear' canonica accetta argomenti con il tipo di risultato <paramref name="dateValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'DiffDays' canonica con gli argomenti specificati, che devono presentare un tipo di risultato DateTime o DateTimeOffset.Il tipo di risultato di <paramref name="dateValue1" /> deve corrispondere al tipo di risultato di <paramref name="dateValue2" />.Il tipo di risultato dell'espressione è Edm.Int32.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce la differenza di giorni tra <paramref name="dateValue1" /> e <paramref name="dateValue2" />.</returns>
      <param name="dateValue1">Espressione che specifica il primo valore DateTime o DateTimeOffset.</param>
      <param name="dateValue2">Espressione che specifica il valore DateTime o DateTimeOffset per cui deve essere calcolata la differenza di giorni rispetto a <paramref name="dateValue1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dateValue1" /> o <paramref name="dateValue2" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'DiffDays' canonica accetta argomenti con i tipi di risultato di <paramref name="dateValue1" /> e <paramref name="dateValue2" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'DiffHours' canonica con gli argomenti specificati, che devono presentare un tipo di risultato DateTime, DateTimeOffset o Time.Il tipo di risultato di <paramref name="timeValue1" /> deve corrispondere al tipo di risultato di <paramref name="timeValue2" />.Il tipo di risultato dell'espressione è Edm.Int32.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce la differenza di ore tra <paramref name="timeValue1" /> e <paramref name="timeValue2" />.</returns>
      <param name="timeValue1">Espressione che specifica il primo valore DateTime, DateTimeOffset o Time.</param>
      <param name="timeValue2">Espressione che specifica il valore DateTime, DateTimeOffset o Time per cui deve essere calcolata la differenza di ore rispetto a <paramref name="timeValue1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="timeValue1" /> o <paramref name="timeValue2" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'DiffHours' canonica accetta argomenti con i tipi di risultato di <paramref name="timeValue1" /> e <paramref name="timeValue2" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'DiffMicroseconds' canonica con gli argomenti specificati, che devono presentare un tipo di risultato DateTime, DateTimeOffset o Time.Il tipo di risultato di <paramref name="timeValue1" /> deve corrispondere al tipo di risultato di <paramref name="timeValue2" />.Il tipo di risultato dell'espressione è Edm.Int32.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce la differenza di microsecondi tra <paramref name="timeValue1" /> e <paramref name="timeValue2" />.</returns>
      <param name="timeValue1">Espressione che specifica il primo valore DateTime, DateTimeOffset o Time.</param>
      <param name="timeValue2">Espressione che specifica il valore DateTime, DateTimeOffset o Time per cui deve essere calcolata la differenza di microsecondi rispetto a <paramref name="timeValue1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="timeValue1" /> o <paramref name="timeValue2" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'DiffMicroseconds' accetta argomenti con i tipi di risultato di <paramref name="timeValue1" /> e <paramref name="timeValue2" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'DiffMilliseconds' canonica con gli argomenti specificati, che devono presentare un tipo di risultato DateTime, DateTimeOffset o Time.Il tipo di risultato di <paramref name="timeValue1" /> deve corrispondere al tipo di risultato di <paramref name="timeValue2" />.Il tipo di risultato dell'espressione è Edm.Int32.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce la differenza di millisecondi tra <paramref name="timeValue1" /> e <paramref name="timeValue2" />.</returns>
      <param name="timeValue1">Espressione che specifica il primo valore DateTime, DateTimeOffset o Time.</param>
      <param name="timeValue2">Espressione che specifica il valore DateTime, DateTimeOffset o Time per cui deve essere calcolata la differenza di millisecondi rispetto a <paramref name="timeValue1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="timeValue1" /> o <paramref name="timeValue2" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'DiffMilliseconds' accetta argomenti con i tipi di risultato di <paramref name="timeValue1" /> e <paramref name="timeValue2" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'DiffMinutes' canonica con gli argomenti specificati, che devono presentare un tipo di risultato DateTime, DateTimeOffset o Time.Il tipo di risultato di <paramref name="timeValue1" /> deve corrispondere al tipo di risultato di <paramref name="timeValue2" />.Il tipo di risultato dell'espressione è Edm.Int32.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce la differenza di minuti tra <paramref name="timeValue1" /> e <paramref name="timeValue2" />.</returns>
      <param name="timeValue1">Espressione che specifica il primo valore DateTime, DateTimeOffset o Time.</param>
      <param name="timeValue2">Espressione che specifica il valore DateTime, DateTimeOffset o Time per cui deve essere calcolata la differenza di minuti rispetto a <paramref name="timeValue1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="timeValue1" /> o <paramref name="timeValue2" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'DiffMinutes' accetta argomenti con i tipi di risultato di <paramref name="timeValue1" /> e <paramref name="timeValue2" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'DiffMonths' canonica con gli argomenti specificati, che devono presentare un tipo di risultato DateTime o DateTimeOffset.Il tipo di risultato di <paramref name="dateValue1" /> deve corrispondere al tipo di risultato di <paramref name="dateValue2" />.Il tipo di risultato dell'espressione è Edm.Int32.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce la differenza di mesi tra <paramref name="dateValue1" /> e <paramref name="dateValue2" />.</returns>
      <param name="dateValue1">Espressione che specifica il primo valore DateTime o DateTimeOffset.</param>
      <param name="dateValue2">Espressione che specifica il valore DateTime o DateTimeOffset per cui deve essere calcolata la differenza di mesi rispetto a <paramref name="dateValue1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dateValue1" /> o <paramref name="dateValue2" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'DiffMonths' canonica accetta argomenti con i tipi di risultato di <paramref name="dateValue1" /> e <paramref name="dateValue2" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'DiffNanoseconds' canonica con gli argomenti specificati, che devono presentare un tipo di risultato DateTime, DateTimeOffset o Time.Il tipo di risultato di <paramref name="timeValue1" /> deve corrispondere al tipo di risultato di <paramref name="timeValue2" />.Il tipo di risultato dell'espressione è Edm.Int32.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce la differenza di nanosecondi tra <paramref name="timeValue1" /> e <paramref name="timeValue2" />.</returns>
      <param name="timeValue1">Espressione che specifica il primo valore DateTime, DateTimeOffset o Time.</param>
      <param name="timeValue2">Espressione che specifica il valore DateTime, DateTimeOffset o Time per cui deve essere calcolata la differenza di nanosecondi rispetto a <paramref name="timeValue1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="timeValue1" /> o <paramref name="timeValue2" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'DiffNanoseconds' accetta argomenti con i tipi di risultato di <paramref name="timeValue1" /> e <paramref name="timeValue2" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'DiffSeconds' canonica con gli argomenti specificati, che devono presentare un tipo di risultato DateTime, DateTimeOffset o Time.Il tipo di risultato di <paramref name="timeValue1" /> deve corrispondere al tipo di risultato di <paramref name="timeValue2" />.Il tipo di risultato dell'espressione è Edm.Int32.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce la differenza di secondi tra <paramref name="timeValue1" /> e <paramref name="timeValue2" />.</returns>
      <param name="timeValue1">Espressione che specifica il primo valore DateTime, DateTimeOffset o Time.</param>
      <param name="timeValue2">Espressione che specifica il valore DateTime, DateTimeOffset o Time per cui deve essere calcolata la differenza di secondi rispetto a <paramref name="timeValue1" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="timeValue1" /> o <paramref name="timeValue2" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'DiffSeconds' canonica accetta argomenti con i tipi di risultato di <paramref name="timeValue1" /> e <paramref name="timeValue2" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'DiffYears' canonica con gli argomenti specificati, che devono presentare un tipo di risultato DateTime o DateTimeOffset.Il tipo di risultato di <paramref name="dateValue1" /> deve corrispondere al tipo di risultato di <paramref name="dateValue2" />.Il tipo di risultato dell'espressione è Edm.Int32.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce la differenza di anni tra <paramref name="dateValue1" /> e <paramref name="dateValue2" />.</returns>
      <param name="dateValue1">Espressione che specifica il primo valore DateTime o DateTimeOffset.</param>
      <param name="dateValue2">Espressione che specifica il valore DateTime o DateTimeOffset per cui deve essere calcolata la differenza di anni rispetto a <paramref name="dateValue1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dateValue1" /> o <paramref name="dateValue2" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'DiffYears' canonica accetta argomenti con i tipi di risultato di <paramref name="dateValue1" /> e <paramref name="dateValue2" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'EndsWith' canonica con gli argomenti specificati, che devono presentare un tipo di risultato String.Il tipo di risultato dell'espressione è Boolean.</summary>
      <returns>Nuovo elemento DbFunctionExpression che indica se <paramref name="stringArgument" /> termina con <paramref name="suffix" />.</returns>
      <param name="stringArgument">Espressione che specifica la stringa in cui verificare la presenza dell'elemento <paramref name="suffix" /> specificato.</param>
      <param name="suffix">Espressione che specifica il suffisso per cui verificare la presenza di <paramref name="stringArgument" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stringArgument" /> o <paramref name="suffix" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'EndsWith' canonica accetta argomenti con i tipi di risultato di <paramref name="stringArgument" /> e <paramref name="suffix" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Floor' canonica con gli argomenti specificati, che devono presentare un tipo di risultato Single, Double o Decimal.Il tipo di risultato dell'espressione equivale a quello di <paramref name="value" />.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il valore intero più elevato non maggiore di <paramref name="value" />.</returns>
      <param name="value">Espressione che specifica il valore numerico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'Floor' canonica accetta un argomento con il tipo di risultato <paramref name="value" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GetTotalOffsetMinutes' canonica con l'argomento specificato, che deve presentare un tipo di risultato DateTimeOffset.Il tipo di risultato dell'espressione è Edm.Int32.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il numero di minuti di offset di <paramref name="dateTimeOffsetArgument" /> rispetto al fuso orario GMT.</returns>
      <param name="dateTimeOffsetArgument">Espressione che specifica il valore DateTimeOffset da cui recuperare l'offset in minuti rispetto al fuso orario GMT.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dateTimeOffsetArgument" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'GetTotalOffsetMinutes' canonica accetta un argomento con il tipo di risultato <paramref name="dateTimeOffsetArgument" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Hour' canonica con l'argomento specificato, che deve presentare un tipo di risultato DateTime, DateTimeOffset o Time.Il tipo di risultato dell'espressione è Edm.Int32.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il valore ora Integer da <paramref name="timeValue" />.</returns>
      <param name="timeValue">Espressione che specifica il valore da cui recuperare l'ora.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="timeValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'Hours' canonica accetta argomenti con i tipi di risultato di <paramref name="timeValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'IndexOf' canonica con gli argomenti specificati, che devono presentare un tipo di risultato String.Il tipo di risultato dell'espressione è Edm.Int32.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il primo indice di <paramref name="stringToFind" /> in <paramref name="searchString" />.</returns>
      <param name="searchString">Espressione che specifica la stringa in cui cercare <paramref name="stringToFind" />.</param>
      <param name="stringToFind">Espressione che specifica la stringa da cercare in <paramref name="searchString" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchString" /> o <paramref name="stringToFind" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'IndexOf' canonica accetta argomenti con i tipi di risultato di <paramref name="searchString" /> e <paramref name="stringToFind" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Left' canonica con gli argomenti specificati, che devono presentare un tipo di risultato numerico String e Integer.Il tipo di risultato dell'espressione è String.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce la sottostringa più a sinistra di lunghezza <paramref name="length" /> da <paramref name="stringArgument" />.</returns>
      <param name="stringArgument">Espressione che specifica la stringa da cui estrarre la sottostringa più a sinistra.</param>
      <param name="length">Espressione che specifica la lunghezza della sottostringa più a sinistra da estrarre da <paramref name="stringArgument" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stringArgument" /> o <paramref name="length" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'Left' canonica accetta argomenti con i tipi di risultato di <paramref name="stringArgument" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Length' canonica con l'argomento specificato, che deve presentare un tipo di risultato String.Il tipo di risultato dell'espressione è anche String.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce la lunghezza di <paramref name="stringArgument" />.</returns>
      <param name="stringArgument">Espressione che specifica la stringa di cui calcolare la lunghezza.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stringArgument" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'Length' canonica accetta un argomento con il tipo di risultato <paramref name="stringArgument" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'BigCount' canonica sulla raccolta specificata.Il tipo di risultato dell'espressione è Edm.Int64.</summary>
      <returns>Nuovo elemento DbFunctionExpression che produce il valore del conteggio.</returns>
      <param name="collection">Espressione che specifica la raccolta su cui calcolare il valore del conteggio.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'BigCount' canonica accetta argomenti con i tipi di risultato di <paramref name="collection" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Max' canonica sulla raccolta specificata.Il tipo di risultato dell'espressione è uguale al tipo di elemento della raccolta.</summary>
      <returns>Nuovo elemento DbFunctionExpression che produce il valore massimo.</returns>
      <param name="collection">Espressione che specifica la raccolta da cui recuperare il valore massimo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'Max' canonica accetta un argomento con il tipo di risultato <paramref name="collection" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Millisecond' canonica con l'argomento specificato, che deve presentare un tipo di risultato DateTime, DateTimeOffset o Time.Il tipo di risultato dell'espressione è Edm.Int32.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il valore millisecondo Integer da <paramref name="timeValue" />.</returns>
      <param name="timeValue">Espressione che specifica il valore da cui recuperare il millisecondo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="timeValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'Millisecond' canonica accetta un argomento con il tipo di risultato <paramref name="timeValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Min' canonica sulla raccolta specificata.Il tipo di risultato dell'espressione è uguale al tipo di elemento della raccolta.</summary>
      <returns>Nuovo elemento DbFunctionExpression che produce il valore minimo.</returns>
      <param name="collection">Espressione che specifica la raccolta da cui recuperare il valore minimo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'Min' canonica accetta un argomento con il tipo di risultato <paramref name="collection" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Minute' canonica con l'argomento specificato, che deve presentare un tipo di risultato DateTime, DateTimeOffset o Time.Il tipo di risultato dell'espressione è Edm.Int32.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il valore minuto Integer da <paramref name="timeValue" />.</returns>
      <param name="timeValue">Espressione che specifica il valore da cui recuperare il minuto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="timeValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'Minute' canonica accetta un argomento con il tipo di risultato <paramref name="timeValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Month' canonica con l'argomento specificato, che deve presentare un tipo di risultato DateTime o DateTimeOffset.Il tipo di risultato dell'espressione è Edm.Int32.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il valore mese Integer da <paramref name="dateValue" />.</returns>
      <param name="dateValue">Espressione che specifica il valore da cui recuperare il mese.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dateValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'Month' canonica accetta un argomento con il tipo di risultato <paramref name="dateValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'NewGuid' canonica.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore GUID.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Power' canonica con gli argomenti specificati, che devono presentare tipi di risultato numerici.Il tipo di risultato dell'espressione equivale a quello di <paramref name="baseArgument" />.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il valore di <paramref name="baseArgument" /> alla potenza specificata da <paramref name="exponent" />.</returns>
      <param name="baseArgument">Espressione che specifica il valore numerico da elevare alla potenza data.</param>
      <param name="exponent">Espressione che specifica la potenza a cui elevare <paramref name="baseArgument" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseArgument" /> o <paramref name="exponent" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'Power' canonica accetta argomenti con i tipi di risultato di <paramref name="baseArgument" /> e <paramref name="exponent" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Replace' canonica con gli argomenti specificati, che devono presentare un tipo di risultato String.Il tipo di risultato dell'espressione è anche String.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce una nuova stringa in base a <paramref name="stringArgument" /> dove ogni occorrenza di <paramref name="toReplace" /> viene sostituita da <paramref name="replacement" />.</returns>
      <param name="stringArgument">Espressione che specifica la stringa in cui eseguire l'operazione di sostituzione.</param>
      <param name="toReplace">Espressione che specifica la stringa da sostituire.</param>
      <param name="replacement">Espressione che specifica la stringa sostitutiva.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stringArgument" />, <paramref name="toReplace" /> o <paramref name="replacement" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'Replace' canonica accetta argomenti con i tipi di risultato di <paramref name="stringArgument" />, <paramref name="toReplace" /> e <paramref name="replacement" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Reverse' canonica con l'argomento specificato, che deve presentare un tipo di risultato String.Il tipo di risultato dell'espressione è anche String.</summary>
      <returns>Nuovo elemento DbFunctionExpression che produce il valore invertito di <paramref name="stringArgument" />.</returns>
      <param name="stringArgument">Espressione che specifica la stringa da invertire.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stringArgument" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'Reverse' canonica accetta un argomento con il tipo di risultato <paramref name="stringArgument" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Right' canonica con gli argomenti specificati, che devono presentare un tipo di risultato numerico String e Integer.Il tipo di risultato dell'espressione è String.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce la sottostringa più a destra di lunghezza <paramref name="length" /> da <paramref name="stringArgument" />.</returns>
      <param name="stringArgument">Espressione che specifica la stringa da cui estrarre la sottostringa più a destra.</param>
      <param name="length">Espressione che specifica la lunghezza della sottostringa più a destra da estrarre da <paramref name="stringArgument" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stringArgument" /> o <paramref name="length" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'Right' canonica accetta un argomento con il tipo di risultato <paramref name="stringArgument" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Round' canonica con gli argomenti specificati, che devono presentare un tipo di risultato Single, Double o Decimal.Il tipo di risultato dell'espressione equivale a quello di <paramref name="value" />.</summary>
      <returns>Nuovo elemento DbFunctionExpression che arrotonda l'argomento specificato al valore Integer più vicino.</returns>
      <param name="value">Espressione che specifica il valore numerico da arrotondare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'Round' canonica accetta un argomento con il tipo di risultato <paramref name="value" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Round' canonica con gli argomenti specificati, che devono presentare tipi di risultato Integer e Single, Double o Decimal.Il tipo di risultato dell'espressione equivale a quello di <paramref name="value" />.</summary>
      <returns>Nuovo elemento DbFunctionExpression che arrotonda l'argomento specificato al valore intero più vicino, con la precisione specificata da <paramref name="digits" />.</returns>
      <param name="value">Espressione che specifica il valore numerico da arrotondare.</param>
      <param name="digits">Espressione che specifica il numero di cifre di precisione da utilizzare per l'arrotondamento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> o <paramref name="digits" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'Round' canonica accetta argomenti con i tipi di risultato di <paramref name="value" /> e <paramref name="digits" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Second' canonica con l'argomento specificato, che deve presentare un tipo di risultato DateTime, DateTimeOffset o Time.Il tipo di risultato dell'espressione è Edm.Int32.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il valore secondo Integer da <paramref name="timeValue" />.</returns>
      <param name="timeValue">Espressione che specifica il valore da cui recuperare il secondo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="timeValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'Second' canonica accetta un argomento con il tipo di risultato <paramref name="timeValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'StartsWith' canonica con gli argomenti specificati, che devono presentare un tipo di risultato String.Il tipo di risultato dell'espressione è Boolean.</summary>
      <returns>Nuovo elemento DbFunctionExpression che indica se <paramref name="stringArgument" /> inizia con <paramref name="prefix" />.</returns>
      <param name="stringArgument">Espressione che specifica la stringa in cui verificare la presenza dell'elemento <paramref name="prefix" /> specificato.</param>
      <param name="prefix">Espressione che specifica il prefisso per cui verificare la presenza di <paramref name="stringArgument" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stringArgument" /> o <paramref name="prefix" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'StartsWith' canonica accetta argomenti con i tipi di risultato di <paramref name="stringArgument" /> e <paramref name="prefix" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'StDev' sui membri non Null della raccolta specificata.Il tipo di risultato dell'espressione è Edm.Double.</summary>
      <returns>Nuovo elemento DbFunctionExpression che produce il valore di deviazione standard su membri non Null della raccolta.</returns>
      <param name="collection">Espressione che specifica la raccolta per cui calcolare la deviazione standard.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'StDev' canonica accetta un argomento con il tipo di risultato <paramref name="collection" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'StDevP' canonica sulla popolazione della raccolta specificata.Il tipo di risultato dell'espressione è Edm.Double.</summary>
      <returns>Nuovo elemento DbFunctionExpression che produce il valore di deviazione standard.</returns>
      <param name="collection">Espressione che specifica la raccolta per cui calcolare la deviazione standard.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'StDevP' canonica accetta un argomento con il tipo di risultato <paramref name="collection" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Substring' canonica con gli argomenti specificati, che devono presentare tipi di risultato numerici String e Integer.Il tipo di risultato dell'espressione è String.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce la sottostringa di lunghezza <paramref name="length" /> da <paramref name="stringArgument" /> a partire da <paramref name="start" />.</returns>
      <param name="stringArgument">Espressione che specifica la stringa da cui estrarre la sottostringa.</param>
      <param name="start">Espressione che specifica l'indice iniziale da cui derivare la sottostringa.</param>
      <param name="length">Espressione che specifica la lunghezza della sottostringa.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stringArgument" />, <paramref name="start" /> o <paramref name="length" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'Substring' canonica accetta argomenti con i tipi di risultato di <paramref name="stringArgument" />, <paramref name="start" /> e <paramref name="length" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Sum' canonica sulla raccolta specificata.Il tipo di risultato dell'espressione è uguale al tipo di elemento della raccolta.</summary>
      <returns>Nuovo elemento DbFunctionExpression che produce la somma.</returns>
      <param name="collection">Espressione che specifica la raccolta da cui calcolare la somma.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'Sum' canonica accetta un argomento con il tipo di risultato <paramref name="collection" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'ToLower' canonica con l'argomento specificato, che deve presentare un tipo di risultato String.Il tipo di risultato dell'espressione è anche String.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il valore di <paramref name="stringArgument" /> convertito in caratteri minuscoli.</returns>
      <param name="stringArgument">Espressione che specifica la stringa di cui eseguire la conversione in caratteri minuscoli.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stringArgument" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'ToLower' canonica accetta un argomento con il tipo di risultato <paramref name="stringArgument" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'ToUpper' canonica con l'argomento specificato, che deve presentare un tipo di risultato String.Il tipo di risultato dell'espressione è anche String.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il valore di <paramref name="stringArgument" /> convertito in caratteri maiuscoli.</returns>
      <param name="stringArgument">Espressione che specifica la stringa di cui eseguire la conversione in caratteri maiuscoli.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stringArgument" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'ToUpper' canonica accetta un argomento con il tipo di risultato <paramref name="stringArgument" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Trim' canonica con l'argomento specificato, che deve presentare un tipo di risultato String.Il tipo di risultato dell'espressione è anche String.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il valore di <paramref name="stringArgument" /> con gli spazi iniziali e finali rimossi.</returns>
      <param name="stringArgument">Espressione che specifica la stringa da cui rimuovere gli spazi iniziali e finali.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stringArgument" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'Trim' canonica accetta un argomento con il tipo di risultato <paramref name="stringArgument" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'RTrim' canonica con l'argomento specificato, che deve presentare un tipo di risultato String.Il tipo di risultato dell'espressione è anche String.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il valore di <paramref name="stringArgument" /> con gli spazi finali rimossi.</returns>
      <param name="stringArgument">Espressione che specifica la stringa da cui rimuovere gli spazi finali.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stringArgument" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'RTrim' canonica accetta un argomento con il tipo di risultato <paramref name="stringArgument" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'LTrim' canonica con l'argomento specificato, che deve presentare un tipo di risultato String.Il tipo di risultato dell'espressione è anche String.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il valore di <paramref name="stringArgument" /> con gli spazi iniziali rimossi.</returns>
      <param name="stringArgument">Espressione che specifica la stringa da cui rimuovere gli spazi iniziali.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stringArgument" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'LTrim' canonica accetta un argomento con il tipo di risultato <paramref name="stringArgument" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Truncate' canonica con gli argomenti specificati, che devono presentare tipi di risultato Integer e Single, Double o Decimal.Il tipo di risultato dell'espressione equivale a quello di <paramref name="value" />.</summary>
      <returns>Nuovo elemento DbFunctionExpression che tronca l'argomento specificato al valore intero più vicino, con la precisione specificata da <paramref name="digits" />.</returns>
      <param name="value">Espressione che specifica il valore numerico da troncare.</param>
      <param name="digits">Espressione che specifica il numero di cifre di precisione da utilizzare per il troncamento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> o <paramref name="digits" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'Truncate' accetta argomenti con i tipi di risultato di <paramref name="value" /> e <paramref name="digits" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'TruncateTime' canonica con l'argomento specificato, che deve presentare un tipo di risultato DateTime o DateTimeOffset.Il tipo di risultato dell'espressione equivale a quello di <paramref name="dateValue" />.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il valore di <paramref name="dateValue" /> con l'ora impostata su zero.</returns>
      <param name="dateValue">Espressione che specifica il valore per cui troncare la porzione ora.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dateValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'TruncateTime' canonica accetta un argomento con il tipo di risultato <paramref name="dateValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Var' sui membri non Null della raccolta specificata.Il tipo di risultato dell'espressione è Edm.Double.</summary>
      <returns>Nuovo elemento DbFunctionExpression che produce il valore di varianza statistica per i membri non Null della raccolta.</returns>
      <param name="collection">Espressione che specifica la raccolta da utilizzare per cui calcolare la varianza statistica.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'Var' canonica accetta un argomento con il tipo di risultato <paramref name="collection" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'VarP' canonica sulla popolazione della raccolta specificata.Il tipo di risultato dell'espressione è Edm.Double.</summary>
      <returns>Nuovo elemento DbFunctionExpression che produce il valore di varianza statistica.</returns>
      <param name="collection">Espressione che specifica la raccolta da utilizzare per cui calcolare la varianza statistica.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'VarP' canonica accetta un argomento con il tipo di risultato <paramref name="collection" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Year' canonica con l'argomento specificato, che deve presentare un tipo di risultato DateTime o DateTimeOffset.Il tipo di risultato dell'espressione è Edm.Int32.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il valore anno Integer da<paramref name=" dateValue" />.</returns>
      <param name="dateValue">Espressione che specifica il valore da cui recuperare l'anno.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dateValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">Nessun overload della funzione 'Year' canonica accetta un argomento con il tipo di risultato <paramref name="dateValue" />.</exception>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Row">
      <summary>Rappresenta la classe Row che ha lo scopo di fornire un modo analogo al costruttore per chiamare &lt;see cref="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Entity.Core.Common.CommandTrees.DbExpression}})" /&gt;</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Row.#ctor(System.Collections.Generic.KeyValuePair{System.String,System.Data.Entity.Core.Common.CommandTrees.DbExpression},System.Collections.Generic.KeyValuePair{System.String,System.Data.Entity.Core.Common.CommandTrees.DbExpression}[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Row" /> utilizzando il valore della prima colonna e i valori delle colonne successive facoltative specificati. </summary>
      <param name="columnValue">Coppia chiave-valore che fornisce la prima colonna dell'istanza della nuova riga (obbligatorio).</param>
      <param name="columnValues">Coppie chiave-valore che forniscono eventuali colonne successive dell'istanza della nuova riga (facoltativo).</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Row.op_Implicit(System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Row)~System.Data.Entity.Core.Common.CommandTrees.DbExpression">
      <summary>Converte un oggetto Row nell'oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che rappresenta l'oggetto Row convertito.</returns>
      <param name="row">Oggetto Row.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Row.ToExpression">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbNewInstanceExpression" /> che costruisce una nuova riga in base alle colonne contenute in questa istanza di Row.</summary>
      <returns>Nuovo elemento DbNewInstanceExpression che costruisce una riga con gli stessi nomi di colonna e gli stessi valori DbExpression di questa istanza di Row.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions">
      <summary>Fornisce un'API per costruire oggetti <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che richiamano funzioni EDM canoniche correlate spaziali e, ove appropriato, rende accessibile tale API come i metodi di estensione sul tipo di espressione stesso.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Area(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Area' canonica con l'argomento specificato, che deve presentare un tipo di risultato Edm.Geography o Edm.Geometry.Il tipo di risultato dell'espressione è Edm.Double.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce l'area di spatialValue o Null se spatialValue non è una superficie.</returns>
      <param name="spatialValue">Espressione che specifica il valore della superficie spaziale per cui è necessario calcolare l'area.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'AsBinary' canonica con l'argomento specificato, che deve presentare un tipo di risultato Edm.Geography o Edm.Geometry.Il tipo di risultato dell'espressione è Edm.Binary.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce la rappresentazione binaria nota di spatialValue.</returns>
      <param name="spatialValue">Espressione che specifica il valore spaziale da cui deve essere prodotta la rappresentazione binaria nota.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsGml(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'AsGml' canonica con l'argomento specificato, che deve presentare un tipo di risultato Edm.Geography o Edm.Geometry.Il tipo di risultato dell'espressione è Edm.String.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce la rappresentazione GML (Geography Markup Language) di spatialValue.</returns>
      <param name="spatialValue">Espressione che specifica il valore spaziale da cui deve essere prodotta la rappresentazione GML (Geography Markup Language).</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsText(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'AsText' canonica con l'argomento specificato, che deve presentare un tipo di risultato Edm.Geography o Edm.Geometry.Il tipo di risultato dell'espressione è Edm.String.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce la rappresentazione di testo nota di spatialValue.</returns>
      <param name="spatialValue">Espressione che specifica il valore spaziale da cui deve essere prodotta la rappresentazione di testo nota.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Centroid(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Centroid' canonica con l'argomento specificato, che deve presentare un tipo di risultato Edm.Geometry.Il tipo di risultato dell'espressione è Edm.Geometry.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il punto centroide di geometryValue (che potrebbe non trovarsi sulla superficie stessa) o Null se geometryValue non è una superficie.</returns>
      <param name="geometryValue">Espressione che specifica il valore della superficie geometrico da cui deve essere recuperato il centroide.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.CoordinateSystemId(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'CoordinateSystemId' canonica con l'argomento specificato, che deve presentare un tipo di risultato Edm.Geography o Edm.Geometry.Il tipo di risultato dell'espressione è Edm.Int32.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il valore SRID Integer da spatialValue.</returns>
      <param name="spatialValue">Espressione che specifica il valore da cui deve essere recuperato l'ID del sistema di coordinate (SRID).</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Distance(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Distance' canonica con gli argomenti specificati, che devono presentare un tipo di risultato Edm.Geography o Edm.Geometry.Il tipo di risultato di spatialValue1 deve corrispondere al tipo di risultato di spatialValue2.Il tipo di risultato dell'espressione è Edm.Double.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce la distanza tra i punti più vicini in spatialValue1 e spatialValue1.</returns>
      <param name="spatialValue1">Espressione che specifica il primo valore spaziale.</param>
      <param name="spatialValue2">Espressione che specifica il valore spaziale da cui deve essere misurata la distanza da spatialValue1.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Elevation(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Elevation' canonica con l'argomento specificato, che deve presentare un tipo di risultato Edm.Geography o Edm.Geometry.Il tipo di risultato dell'espressione è Edm.Double.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il valore di elevazione di spatialValue o Null se spatialValue non è un punto.</returns>
      <param name="spatialValue">Espressione che specifica il valore del punto spaziale da cui deve essere recuperato il valore (coordinata Z) di elevazione.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.EndPoint(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'EndPoint' canonica con l'argomento specificato, che deve presentare un tipo di risultato Edm.Geography o Edm.Geometry.Il tipo di risultato equivale a quello di spatialValue.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il punto finale di spatialValue o Null se spatialValue non è una curva.</returns>
      <param name="spatialValue">Espressione che specifica il valore della curva spaziale da cui deve essere recuperato il punto finale.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.ExteriorRing(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'ExteriorRing' canonica con l'argomento specificato, che deve presentare un tipo di risultato Edm.Geometry.Il tipo di risultato dell'espressione è Edm.Geometry.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce l'anello esterno del poligono geometryValue o Null se geometryValue non è un poligono.</returns>
      <param name="geometryValue">Valore geometrico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyCollectionFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeographyCollectionFromBinary' canonica con gli argomenti specificati.geographyCollectionWellKnownBinaryValue deve presentare un tipo di risultato binario, mentre coordinateSystemId deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è Edm.Geography.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore della raccolta di geografie basato sui valori specificati.</returns>
      <param name="geographyCollectionWellKnownBinaryValue">Espressione che fornisce la rappresentazione binaria nota del valore della raccolta di geografie.</param>
      <param name="coordinateSystemId">Espressione che fornisce l'ID del sistema di coordinate (SRID) del valore della raccolta di geografie.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyCollectionFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeographyCollectionFromText' canonica con gli argomenti specificati.geographyCollectionWellKnownText deve presentare un tipo di risultato String, mentre coordinateSystemId deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è Edm.Geography.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore della raccolta di geografie basato sui valori specificati.</returns>
      <param name="geographyCollectionWellKnownText">Espressione che fornisce la rappresentazione di testo nota del valore della raccolta di geografie.</param>
      <param name="coordinateSystemId">Espressione che fornisce l'ID del sistema di coordinate (SRID) del valore della raccolta di geografie.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeographyFromBinary' canonica con l'argomento specificato, che deve presentare un tipo di risultato binario.Il tipo di risultato dell'espressione è Edm.Geography.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore geografico basato sul valore binario specificato.</returns>
      <param name="wellKnownBinaryValue">Espressione che fornisce la rappresentazione binaria nota del valore geografico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeographyFromBinary' canonica con gli argomenti specificati.wellKnownBinaryValue deve presentare un tipo di risultato binario, mentre coordinateSystemId deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è Edm.Geography.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore geografico basato sui valori specificati.</returns>
      <param name="wellKnownBinaryValue">Espressione che fornisce la rappresentazione binaria nota del valore geografico.</param>
      <param name="coordinateSystemId">Espressione che fornisce l'ID del sistema di coordinate (SRID) del valore geografico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyFromGml(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeographyFromGml' canonica con l'argomento specificato, che deve presentare un tipo di risultato String.Il tipo di risultato dell'espressione è Edm.Geography.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore geografico basato sul valore specificato con l'ID del sistema di coordinate (SRID) predefinito del provider sottostante.</returns>
      <param name="geographyMarkup">Espressione che fornisce la rappresentazione GML (Geography Markup Language) del valore geografico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyFromGml(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeographyFromGml' canonica con gli argomenti specificati.geographyMarkup deve presentare un tipo di risultato String, mentre coordinateSystemId deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è Edm.Geography.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore geografico basato sui valori specificati.</returns>
      <param name="geographyMarkup">Espressione che fornisce la rappresentazione GML (Geography Markup Language) del valore geografico.</param>
      <param name="coordinateSystemId">Espressione che fornisce l'ID del sistema di coordinate (SRID) del valore geografico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeographyFromText' canonica con l'argomento specificato, che deve presentare un tipo di risultato String.Il tipo di risultato dell'espressione è Edm.Geography.Il relativo valore presenta l'ID del sistema di coordinate (SRID) predefinito del provider sottostante.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore geografico basato sul valore specificato.</returns>
      <param name="wellKnownText">Espressione che fornisce la rappresentazione di testo nota del valore geografico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeographyFromText' canonica con gli argomenti specificati.wellKnownText deve presentare un tipo di risultato String, mentre coordinateSystemId deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è Edm.Geography.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore geografico basato sui valori specificati.</returns>
      <param name="wellKnownText">Espressione che fornisce la rappresentazione di testo nota del valore geografico.</param>
      <param name="coordinateSystemId">Espressione che fornisce l'ID del sistema di coordinate (SRID) del valore geografico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyLineFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeographyLineFromBinary' canonica con gli argomenti specificati.lineWellKnownBinaryValue deve presentare un tipo di risultato binario, mentre coordinateSystemId deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è Edm.Geography.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore della linea geografico basato sui valori specificati.</returns>
      <param name="lineWellKnownBinaryValue">Espressione che fornisce la rappresentazione binaria nota del valore della linea geografica.</param>
      <param name="coordinateSystemId">Espressione che fornisce l'ID del sistema di coordinate (SRID) del valore della linea geografico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyLineFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeographyLineFromText' canonica con gli argomenti specificati.lineWellKnownText deve presentare un tipo di risultato String, mentre coordinateSystemId deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è Edm.Geography.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore della linea geografico basato sui valori specificati.</returns>
      <param name="lineWellKnownText">Espressione che fornisce la rappresentazione di testo nota del valore della linea geografico.</param>
      <param name="coordinateSystemId">Espressione che fornisce l'ID del sistema di coordinate (SRID) del valore della linea geografico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyMultiLineFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeographyMultiLineFromBinary' canonica con gli argomenti specificati.multiLineWellKnownBinaryValue deve presentare un tipo di risultato binario, mentre coordinateSystemId deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è Edm.Geography.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore della multilinea geografico basato sui valori specificati.</returns>
      <param name="multiLineWellKnownBinaryValue">Espressione che fornisce la rappresentazione binaria nota del valore della multilinea geografico.</param>
      <param name="coordinateSystemId">Espressione che fornisce l'ID del sistema di coordinate (SRID) del valore della multilinea geografico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyMultiLineFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeographyMultiLineFromText' canonica con gli argomenti specificati.multiLineWellKnownText deve presentare un tipo di risultato String, mentre coordinateSystemId deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è Edm.Geography.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore della multilinea geografico basato sui valori specificati.</returns>
      <param name="multiLineWellKnownText">Espressione che fornisce la rappresentazione di testo nota del valore della multilinea geografico.</param>
      <param name="coordinateSystemId">Espressione che fornisce l'ID del sistema di coordinate (SRID) del valore della multilinea geografico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyMultiPointFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeographyMultiPointFromBinary' canonica con gli argomenti specificati.multiPointWellKnownBinaryValue deve presentare un tipo di risultato binario, mentre coordinateSystemId deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è Edm.Geography.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore del multipunto geografico basato sui valori specificati.</returns>
      <param name="multiPointWellKnownBinaryValue">Espressione che fornisce la rappresentazione binaria nota del valore del multipunto geografico.</param>
      <param name="coordinateSystemId">Espressione che fornisce l'ID del sistema di coordinate (SRID) del valore del multipunto geografico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyMultiPointFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeographyMultiPointFromText' canonica con gli argomenti specificati.multiPointWellKnownText deve presentare un tipo di risultato String, mentre coordinateSystemId deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è Edm.Geography.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore del multipunto geografico basato sui valori specificati.</returns>
      <param name="multiPointWellKnownText">Espressione che fornisce la rappresentazione di testo nota del valore del multipunto geografico.</param>
      <param name="coordinateSystemId">Espressione che fornisce l'ID del sistema di coordinate (SRID) del valore del multipunto geografico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyMultiPolygonFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeographyMultiPolygonFromBinary' canonica con gli argomenti specificati.multiPolygonWellKnownBinaryValue deve presentare un tipo di risultato binario, mentre coordinateSystemId deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è Edm.Geography.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore del multipoligono geografico basato sui valori specificati.</returns>
      <param name="multiPolygonWellKnownBinaryValue">Espressione che fornisce la rappresentazione binaria nota del valore del multipoligono geografico.</param>
      <param name="coordinateSystemId">Espressione che fornisce l'ID del sistema di coordinate (SRID) del valore del multipoligono geografico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyMultiPolygonFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeographyMultiPolygonFromText' canonica con gli argomenti specificati.multiPolygonWellKnownText deve presentare un tipo di risultato String, mentre coordinateSystemId deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è Edm.Geography.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore del multipoligono geografico basato sui valori specificati.</returns>
      <param name="multiPolygonWellKnownText">Espressione che fornisce la rappresentazione di testo nota del valore del multipoligono geografico.</param>
      <param name="coordinateSystemId">Espressione che fornisce l'ID del sistema di coordinate (SRID) del valore del multipoligono geografico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyPointFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeographyPointFromBinary' canonica con gli argomenti specificati.pointWellKnownBinaryValue deve presentare un tipo di risultato binario, mentre coordinateSystemId deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è Edm.Geography.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore del punto geografico basato sui valori specificati.</returns>
      <param name="pointWellKnownBinaryValue">Espressione che fornisce la rappresentazione binaria nota del valore del punto geografico.</param>
      <param name="coordinateSystemId">Espressione che fornisce l'ID del sistema di coordinate (SRID) del valore del punto geografico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyPointFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeographyPointFromText' canonica con gli argomenti specificati.</summary>
      <returns>Funzione 'GeographyPointFromText' canonica.</returns>
      <param name="pointWellKnownText">Espressione che fornisce la rappresentazione di testo nota del valore del punto geografico.</param>
      <param name="coordinateSystemId">Espressione che fornisce l'ID del sistema di coordinate (SRID) del valore del punto geografico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyPolygonFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeographyPolygonFromBinary' canonica con gli argomenti specificati.polygonWellKnownBinaryValue deve presentare un tipo di risultato binario, mentre coordinateSystemId deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è Edm.Geography.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore del poligono geografico basato sui valori specificati.</returns>
      <param name="polygonWellKnownBinaryValue">Espressione che fornisce la rappresentazione binaria nota del valore del poligono geografico.</param>
      <param name="coordinateSystemId">Espressione che fornisce l'ID del sistema di coordinate (SRID) del valore del poligono geografico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyPolygonFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeographyPolygonFromText' canonica con gli argomenti specificati.polygonWellKnownText deve presentare un tipo di risultato String, mentre coordinateSystemId deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è Edm.Geography.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore del poligono geografico basato sui valori specificati.</returns>
      <param name="polygonWellKnownText">Espressione che fornisce la rappresentazione di testo nota del valore del poligono geografico.</param>
      <param name="coordinateSystemId">Espressione che fornisce l'ID del sistema di coordinate (SRID) del valore del poligono geografico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryCollectionFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeometryCollectionFromBinary' canonica con gli argomenti specificati.geometryCollectionWellKnownBinaryValue deve presentare un tipo di risultato binario, mentre coordinateSystemId deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è Edm.Geometry.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore della raccolta di geometrie basato sui valori specificati.</returns>
      <param name="geometryCollectionWellKnownBinaryValue">Espressione che fornisce la rappresentazione binaria nota del valore della raccolta di geometrie.</param>
      <param name="coordinateSystemId">Espressione che fornisce l'ID del sistema di coordinate (SRID) del valore della raccolta di geometrie.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryCollectionFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeometryCollectionFromText' canonica con gli argomenti specificati.geometryCollectionWellKnownText deve presentare un tipo di risultato String, mentre coordinateSystemId deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è Edm.Geometry.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore della raccolta di geometrie basato sui valori specificati.</returns>
      <param name="geometryCollectionWellKnownText">Espressione che fornisce la rappresentazione di testo nota del valore della raccolta di geometrie.</param>
      <param name="coordinateSystemId">Espressione che fornisce l'ID del sistema di coordinate (SRID) del valore della raccolta di geometrie.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeometryFromBinary' canonica con l'argomento specificato, che deve presentare un tipo di risultato binario.Il tipo di risultato dell'espressione è Edm.Geometry.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore geometrico basato sul valore binario specificato.</returns>
      <param name="wellKnownBinaryValue">Espressione che fornisce la rappresentazione binaria nota del valore geometrico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeometryFromBinary' canonica con gli argomenti specificati.wellKnownBinaryValue deve presentare un tipo di risultato binario, mentre coordinateSystemId deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è Edm.Geometry.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore geometrico basato sui valori specificati.</returns>
      <param name="wellKnownBinaryValue">Espressione che fornisce la rappresentazione binaria nota del valore geometrico.</param>
      <param name="coordinateSystemId">Espressione che fornisce l'ID del sistema di coordinate (SRID) del valore geometrico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryFromGml(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeometryFromGml' canonica con l'argomento specificato, che deve presentare un tipo di risultato String.Il tipo di risultato dell'espressione è Edm.Geometry.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore geometrico basato sul valore specificato con l'ID del sistema di coordinate (SRID) predefinito del provider sottostante.</returns>
      <param name="geometryMarkup">Espressione che fornisce la rappresentazione GML (Geography Markup Language) del valore geometrico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryFromGml(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeometryFromGml' canonica con gli argomenti specificati.geometryMarkup deve presentare un tipo di risultato String, mentre coordinateSystemId deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è Edm.Geometry.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore geometrico basato sui valori specificati.</returns>
      <param name="geometryMarkup">Espressione che fornisce la rappresentazione GML (Geography Markup Language) del valore geometrico.</param>
      <param name="coordinateSystemId">Espressione che fornisce l'ID del sistema di coordinate (SRID) del valore geometrico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeometryFromText' canonica con l'argomento specificato, che deve presentare un tipo di risultato String.Il tipo di risultato dell'espressione è Edm.Geometry.Il relativo valore presenta l'ID del sistema di coordinate (SRID) predefinito del provider sottostante.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore geometrico basato sul valore specificato.</returns>
      <param name="wellKnownText">Espressione che fornisce la rappresentazione di testo nota del valore geometrico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeometryFromText' canonica con gli argomenti specificati.wellKnownText deve presentare un tipo di risultato String, mentre coordinateSystemId deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è Edm.Geometry.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore geometrico basato sui valori specificati.</returns>
      <param name="wellKnownText">Espressione che fornisce la rappresentazione di testo nota del valore geometrico.</param>
      <param name="coordinateSystemId">Espressione che fornisce l'ID del sistema di coordinate (SRID) del valore geometrico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryLineFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeometryLineFromBinary' canonica con gli argomenti specificati.lineWellKnownBinaryValue deve presentare un tipo di risultato binario, mentre coordinateSystemId deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è Edm.Geometry.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore della linea geometrico basato sui valori specificati.</returns>
      <param name="lineWellKnownBinaryValue">Espressione che fornisce la rappresentazione binaria nota del valore della linea geometrico.</param>
      <param name="coordinateSystemId">Espressione che fornisce l'ID del sistema di coordinate (SRID) del valore della linea geometrico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryLineFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeometryLineFromText' canonica con gli argomenti specificati.lineWellKnownText deve presentare un tipo di risultato String, mentre coordinateSystemId deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è Edm.Geometry.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore della linea geometrico basato sui valori specificati.</returns>
      <param name="lineWellKnownText">Espressione che fornisce la rappresentazione di testo nota del valore della linea geometrico.</param>
      <param name="coordinateSystemId">Espressione che fornisce l'ID del sistema di coordinate (SRID) del valore della linea geometrico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryMultiLineFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeometryMultiLineFromBinary' canonica con gli argomenti specificati.multiLineWellKnownBinaryValue deve presentare un tipo di risultato binario, mentre coordinateSystemId deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è Edm.Geometry.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore della multilinea geometrico in base ai valori specificati.</returns>
      <param name="multiLineWellKnownBinaryValue">Espressione che fornisce la rappresentazione binaria nota del valore della multilinea geometrico.</param>
      <param name="coordinateSystemId">Espressione che fornisce l'ID del sistema di coordinate (SRID) del valore della multilinea geometrico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryMultiLineFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeometryMultiLineFromText' canonica con gli argomenti specificati.multiLineWellKnownText deve presentare un tipo di risultato String, mentre coordinateSystemId deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è Edm.Geometry.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore della multilinea geometrico in base ai valori specificati.</returns>
      <param name="multiLineWellKnownText">Espressione che fornisce la rappresentazione di testo nota del valore della multilinea geometrico.</param>
      <param name="coordinateSystemId">Espressione che fornisce l'ID del sistema di coordinate (SRID) del valore della multilinea geometrico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryMultiPointFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeometryMultiPointFromBinary' canonica con gli argomenti specificati.multiPointWellKnownBinaryValue deve presentare un tipo di risultato binario, mentre coordinateSystemId deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è Edm.Geometry.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore del multipunto geometrico basato sui valori specificati.</returns>
      <param name="multiPointWellKnownBinaryValue">Espressione che fornisce la rappresentazione binaria nota del valore del multipunto geometrico.</param>
      <param name="coordinateSystemId">Espressione che fornisce l'ID del sistema di coordinate (SRID) del valore del multipunto geometrico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryMultiPointFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeometryMultiPointFromText' canonica con gli argomenti specificati.multiPointWellKnownText deve presentare un tipo di risultato String, mentre coordinateSystemId deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è Edm.Geometry.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore del multipunto geometrico basato sui valori specificati.</returns>
      <param name="multiPointWellKnownText">Espressione che fornisce la rappresentazione di testo nota del valore del multipunto geometrico.</param>
      <param name="coordinateSystemId">Espressione che fornisce l'ID del sistema di coordinate (SRID) del valore del multipunto geometrico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryMultiPolygonFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeometryMultiPolygonFromBinary' canonica con gli argomenti specificati.multiPolygonWellKnownBinaryValue deve presentare un tipo di risultato binario, mentre coordinateSystemId deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è Edm.Geometry.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore del multipoligono geometrico basato sui valori specificati.</returns>
      <param name="multiPolygonWellKnownBinaryValue">Espressione che fornisce la rappresentazione binaria nota del valore del multipoligono geometrico.</param>
      <param name="coordinateSystemId">Espressione che fornisce l'ID del sistema di coordinate (SRID) del valore del multipoligono geometrico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryMultiPolygonFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeometryMultiPolygonFromText' canonica con gli argomenti specificati.multiPolygonWellKnownText deve presentare un tipo di risultato String, mentre coordinateSystemId deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è Edm.Geometry.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore del multipoligono geometrico basato sui valori specificati.</returns>
      <param name="multiPolygonWellKnownText">Espressione che fornisce la rappresentazione di testo nota del valore del multipoligono geometrico.</param>
      <param name="coordinateSystemId">Espressione che fornisce l'ID del sistema di coordinate (SRID) del valore del multipoligono geometrico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryPointFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeometryPointFromBinary' canonica con gli argomenti specificati.pointWellKnownBinaryValue deve presentare un tipo di risultato binario, mentre coordinateSystemId deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è Edm.Geometry.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore del punto geometrico basato sui valori specificati.</returns>
      <param name="pointWellKnownBinaryValue">Espressione che fornisce la rappresentazione binaria nota del valore del punto geometrico.</param>
      <param name="coordinateSystemId">Espressione che fornisce l'ID del sistema di coordinate (SRID) del valore del punto geometrico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryPointFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeometryPointFromText' canonica con gli argomenti specificati.pointWellKnownText deve presentare un tipo di risultato String, mentre coordinateSystemId deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è Edm.Geometry.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore del punto geometrico basato sui valori specificati.</returns>
      <param name="pointWellKnownText">Espressione che fornisce la rappresentazione di testo nota del valore del punto geometrico.</param>
      <param name="coordinateSystemId">Espressione che fornisce l'ID del sistema di coordinate (SRID) del valore del punto geometrico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryPolygonFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeometryPolygonFromBinary' canonica con gli argomenti specificati.polygonWellKnownBinaryValue deve presentare un tipo di risultato binario, mentre coordinateSystemId deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è Edm.Geometry.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore del poligono geometrico basato sui valori specificati.</returns>
      <param name="polygonWellKnownBinaryValue">Espressione che fornisce la rappresentazione binaria nota del valore del poligono geometrico.</param>
      <param name="coordinateSystemId">Espressione che fornisce l'ID del sistema di coordinate (SRID) del valore del poligono geometrico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryPolygonFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'GeometryPolygonFromText' canonica con gli argomenti specificati.polygonWellKnownText deve presentare un tipo di risultato String, mentre coordinateSystemId deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è Edm.Geometry.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un nuovo valore del poligono geometrico basato sui valori specificati.</returns>
      <param name="polygonWellKnownText">Espressione che fornisce la rappresentazione di testo nota del valore del poligono geometrico.</param>
      <param name="coordinateSystemId">Espressione che fornisce l'ID del sistema di coordinate (SRID) del valore del poligono geometrico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.InteriorRingAt(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'InteriorRingAt' canonica con gli argomenti specificati.Il primo argomento deve presentare un tipo di risultato Edm.Geometry.Il secondo deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione è Edm.Geometry.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce l'anello interno alla posizione indexValue in geometryValue o Null se geometryValue non è un poligono.</returns>
      <param name="geometryValue">Valore geometrico.</param>
      <param name="indexValue">Espressione che specifica la posizione dell'anello interno da recuperare dall'interno del poligono.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.InteriorRingCount(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'InteriorRingCount' canonica con l'argomento specificato, che deve presentare un tipo di risultato Edm.Geometry.Il tipo di risultato dell'espressione è Edm.Int32.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il numero di anelli interni nel poligono geometryValue o Null se geometryValue non è un poligono.</returns>
      <param name="geometryValue">Valore geometrico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsClosedSpatial(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'IsClosedSpatial' canonica con l'argomento specificato, che deve presentare un tipo di risultato Edm.Geography o Edm.Geometry.Il tipo di risultato è Edm.Boolean.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un valore booleano che indica se spatialValue è chiuso o Null se spatialValue non è una curva.</returns>
      <param name="spatialValue">Espressione che specifica il valore della curva spaziale da cui deve essere recuperato il valore IsClosedSpatial.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsEmptySpatial(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'IsEmptySpatial' canonica con l'argomento specificato, che deve presentare un tipo di risultato Edm.Geography o Edm.Geometry.Il tipo di risultato dell'espressione è Edm.Boolean.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un valore booleano che indica se spatialValue è vuoto.</returns>
      <param name="spatialValue">Espressione che specifica il valore spaziale da cui deve essere recuperato il valore IsEmptySpatial.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsRing(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'IsRing' canonica con l'argomento specificato, che deve presentare un tipo di risultato Edm.Geometry.Il tipo di risultato è Edm.Boolean.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un valore booleano che indica se geometryValue è un anello (chiuso e semplice) o Null se geometryValue non è una curva.</returns>
      <param name="geometryValue">Espressione che specifica il valore della curva geometrico da cui deve essere recuperato il valore IsRing.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsSimpleGeometry(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'IsSimpleGeometry' canonica con l'argomento specificato, che deve presentare un tipo di risultato Edm.Geometry.Il tipo di risultato dell'espressione è Edm.Boolean.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un valore booleano che indica se geometryValue è una geometria semplice.</returns>
      <param name="geometryValue">Valore geometrico.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsValidGeometry(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'IsValidGeometry' canonica con l'argomento specificato, che deve presentare un tipo di risultato Edm.Geometry.Il tipo di risultato dell'espressione è Edm.Boolean.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un valore booleano che indica se geometryValue è valido.</returns>
      <param name="geometryValue">Espressione che specifica il valore geometrico che deve essere testato per la validità spaziale.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Latitude(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Latitude' canonica con l'argomento specificato, che deve presentare un tipo di risultato Edm.Geography.Il tipo di risultato dell'espressione è Edm.Double.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il valore Latitude di geographyValue o Null se geographyValue non è un punto.</returns>
      <param name="geographyValue">Espressione che specifica il valore del punto geografico da cui deve essere recuperato il valore Latitude.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Longitude(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Longitude' canonica con l'argomento specificato, che deve presentare un tipo di risultato Edm.Geography.Il tipo di risultato dell'espressione è Edm.Double.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il valore Longitude di geographyValue o Null se geographyValue non è un punto.</returns>
      <param name="geographyValue">Espressione che specifica il valore del punto geografico da cui deve essere recuperato il valore Longitude.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Measure(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Measure' canonica con l'argomento specificato, che deve presentare un tipo di risultato Edm.Geography o Edm.Geometry.Il tipo di risultato dell'espressione è Edm.Double.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce la misura di spatialValue o Null se spatialValue non è un punto.</returns>
      <param name="spatialValue">Espressione che specifica il valore del punto spaziale da cui deve essere recuperato il valore della coordinata M (Misura).</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointAt(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'PointAt' canonica con gli argomenti specificati.Il primo argomento deve presentare un tipo di risultato Edm.Geography o Edm.Geometry.Il secondo deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione equivale a quello di spatialValue.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il punto alla posizione indexValue in spatialValue o Null se spatialValue non è una linea spezzata.</returns>
      <param name="spatialValue">Espressione che specifica il valore String della linea spezzata spaziale.</param>
      <param name="indexValue">Espressione che specifica la posizione del punto da recuperare dall'interno della linea spezzata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointCount(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'PointCount' canonica con l'argomento specificato, che deve presentare un tipo di risultato Edm.Geography o Edm.Geometry.Il tipo di risultato dell'espressione è Edm.Int32.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il numero di punti in spatialValue o Null se spatialValue non è una linea spezzata.</returns>
      <param name="spatialValue">Espressione che specifica il valore della linea spezzata spaziale da cui deve essere recuperato il numero di punti.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointOnSurface(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'PointOnSurface' canonica con l'argomento specificato, che deve presentare un tipo di risultato Edm.Geometry.Il tipo di risultato dell'espressione è Edm.Geometry.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un punto la cui presenza sulla superficie geometryValue è garantita o Null se geometryValue non è una superficie.</returns>
      <param name="geometryValue">Espressione che specifica il valore della superficie geometrico da cui deve essere recuperato il punto.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialBoundary(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'SpatialBoundary' canonica con l'argomento specificato, che deve presentare un tipo di risultato Edm.Geometry.Il tipo di risultato dell'espressione è Edm.Geometry.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il limite per geometryValue.</returns>
      <param name="geometryValue">Espressione che specifica il valore geometrico da cui deve essere recuperato il valore SpatialBoundary.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialBuffer(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'SpatialBuffer' canonica con gli argomenti specificati, che devono presentare un tipo di risultato Edm.Geography, Edm.Geometry o Edm.Double.Il tipo di risultato dell'espressione è Edm.Geometry.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un valore geometrico che rappresenta tutti i punti minori o uguali alla distanza da spatialValue.</returns>
      <param name="spatialValue">Espressione che specifica il valore spaziale.</param>
      <param name="distance">Espressione che specifica la distanza buffer.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialContains(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'SpatialContains' canonica con gli argomenti specificati, che devono presentare un tipo di risultato Edm.Geometry.Il tipo di risultato dell'espressione è Edm.Boolean.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un valore booleano che indica se geometryValue1 contiene spazialmente geometryValue2.</returns>
      <param name="geometryValue1">Espressione che specifica il primo valore geometrico.</param>
      <param name="geometryValue2">Espressione che specifica il valore geometrico che deve essere confrontato con geometryValue1.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialConvexHull(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'SpatialConvexHull' canonica con l'argomento specificato, che deve presentare un tipo di risultato Edm.Geometry.Il tipo di risultato dell'espressione è Edm.Geometry.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce la struttura convessa per geometryValue.</returns>
      <param name="geometryValue">Espressione che specifica il valore geometrico da cui deve essere recuperato il valore della struttura convessa.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialCrosses(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'SpatialCrosses' canonica con gli argomenti specificati, che devono presentare un tipo di risultato Edm.Geometry.Il tipo di risultato dell'espressione è Edm.Boolean.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un valore booleano che indica se geometryValue1 attraversa l'intersezione geometryValue2.</returns>
      <param name="geometryValue1">Espressione che specifica il primo valore geometrico.</param>
      <param name="geometryValue2">Espressione che specifica il valore geometrico che deve essere confrontato con geometryValue1.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDifference(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'SpatialDifference' canonica con gli argomenti specificati, che devono presentare un tipo di risultato Edm.Geography o Edm.Geometry.Il tipo di risultato di spatialValue1 deve corrispondere al tipo di risultato di spatialValue2.Il tipo di risultato dell'espressione equivale a quello di spatialValue1 e spatialValue2.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il valore geometrico che rappresenta la differenza tra spatialValue2 e spatialValue1.</returns>
      <param name="spatialValue1">Espressione che specifica il primo valore spaziale.</param>
      <param name="spatialValue2">Espressione che specifica il valore spaziale per cui deve essere calcolata la differenza con spatialValue1.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDimension(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'SpatialDimension' canonica con l'argomento specificato, che deve presentare un tipo di risultato Edm.Geography o Edm.Geometry.Il tipo di risultato dell'espressione è Edm.Int32.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il valore Dimension da spatialValue.</returns>
      <param name="spatialValue">Espressione che specifica il valore da cui deve essere recuperato il valore Dimension.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDisjoint(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'SpatialDisjoint' canonica con gli argomenti specificati, che devono presentare un tipo di risultato Edm.Geography o Edm.Geometry.Il tipo di risultato di spatialValue1 deve corrispondere al tipo di risultato di spatialValue2.Il tipo di risultato dell'espressione è Edm.Boolean.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un valore booleano che indica se spatialValue1 e spatialValue2 sono spazialmente disgiunti.</returns>
      <param name="spatialValue1">Espressione che specifica il primo valore spaziale.</param>
      <param name="spatialValue2">Espressione che specifica il valore spaziale che deve essere confrontato con spatialValue1 ai fini della disgiunzione.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialElementAt(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'SpatialElementAt' canonica con gli argomenti specificati.Il primo argomento deve presentare un tipo di risultato Edm.Geography o Edm.Geometry.Il secondo deve presentare un tipo di risultato numerico Integer.Il tipo di risultato dell'espressione equivale a quello di spatialValue.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce l'elemento della raccolta alla posizione indexValue in spatialValue o Null se spatialValue non è una raccolta.</returns>
      <param name="spatialValue">Espressione che specifica il valore della raccolta di geografie o geometrie.</param>
      <param name="indexValue">Espressione che specifica la posizione dell'elemento da recuperare dalla raccolta di geografie o geometrie.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialElementCount(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'SpatialElementCount' canonica con l'argomento specificato, che deve presentare un tipo di risultato Edm.Geography o Edm.Geometry.Il tipo di risultato dell'espressione è Edm.Int32.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il numero di elementi in spatialValue o Null se spatialValue non è una raccolta.</returns>
      <param name="spatialValue">Espressione che specifica il valore della raccolta di geografie o geometrie da cui deve essere recuperato il numero di elementi.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialEnvelope(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'SpatialEnvelope' canonica con l'argomento specificato, che deve presentare un tipo di risultato Edm.Geometry.Il tipo di risultato dell'espressione è Edm.Geometry.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il rettangolo di selezione minimo per geometryValue.</returns>
      <param name="geometryValue">Espressione che specifica il valore da cui deve essere recuperato il valore Envelope.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialEquals(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'SpatialEquals' canonica con gli argomenti specificati, che devono presentare un tipo di risultato Edm.Geography o Edm.Geometry.Il tipo di risultato di spatialValue1 deve corrispondere al tipo di risultato di spatialValue2.Il tipo di risultato dell'espressione è Edm.Boolean.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un valore booleano che indica se spatialValue1 e spatialValue2 sono uguali.</returns>
      <param name="spatialValue1">Espressione che specifica il primo valore spaziale.</param>
      <param name="spatialValue2">Espressione che specifica il valore spaziale che deve essere confrontato con spatialValue1 ai fini dell'uguaglianza.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialIntersection(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'SpatialIntersection' canonica con gli argomenti specificati, che devono presentare un tipo di risultato Edm.Geography o Edm.Geometry.Il tipo di risultato di spatialValue1 deve corrispondere al tipo di risultato di spatialValue2.Il tipo di risultato dell'espressione equivale a quello di spatialValue1 e spatialValue2.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il valore spaziale che rappresenta l'intersezione di spatialValue1 e spatialValue2.</returns>
      <param name="spatialValue1">Espressione che specifica il primo valore spaziale.</param>
      <param name="spatialValue2">Espressione che specifica il valore spaziale per cui deve essere calcolata l'intersezione con spatialValue1.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialIntersects(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'SpatialIntersects' canonica con gli argomenti specificati, che devono presentare un tipo di risultato Edm.Geography o Edm.Geometry.Il tipo di risultato di spatialValue1 deve corrispondere al tipo di risultato di spatialValue2.Il tipo di risultato dell'espressione è Edm.Boolean.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un valore booleano che indica se spatialValue1 e spatialValue2 si intersecano.</returns>
      <param name="spatialValue1">Espressione che specifica il primo valore spaziale.</param>
      <param name="spatialValue2">Espressione che specifica il valore spaziale che deve essere confrontato con spatialValue1 ai fini dell'intersezione.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialLength(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'SpatialLength' canonica con l'argomento specificato, che deve presentare un tipo di risultato Edm.Geography o Edm.Geometry.Il tipo di risultato dell'espressione è Edm.Double.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce la lunghezza di spatialValue o Null se spatialValue non è una curva.</returns>
      <param name="spatialValue">Espressione che specifica il valore della curva spaziale da cui deve essere recuperata la lunghezza.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialOverlaps(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'SpatialOverlaps' canonica con gli argomenti specificati, che devono presentare un tipo di risultato Edm.Geometry.Il tipo di risultato dell'espressione è Edm.Boolean.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un valore booleano che indica se geometryValue1 si sovrappone spazialmente a geometryValue2.</returns>
      <param name="geometryValue1">Espressione che specifica il primo valore geometrico.</param>
      <param name="geometryValue2">Espressione che specifica il valore geometrico che deve essere confrontato con geometryValue1.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialRelate(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'SpatialRelate' canonica con gli argomenti specificati, che devono presentare i tipi di risultato Edm.Geometry e String.Il tipo di risultato dell'espressione è Edm.Boolean.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un valore booleano che indica se geometryValue1 è correlato spazialmente a geometryValue2 in base alla relazione spaziale definita da intersectionPatternMatrix.</returns>
      <param name="geometryValue1">Espressione che specifica il primo valore geometrico.</param>
      <param name="geometryValue2">Espressione che specifica il valore geometrico che deve essere confrontato con geometryValue1.</param>
      <param name="intersectionPatternMatrix">Espressione che specifica la rappresentazione di testo del modello di intersezione DE-9IM (Dimensionally Extended Nine-Intersection Model) utilizzato per confrontare geometryValue1 e geometryValue2.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialSymmetricDifference(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'SpatialSymmetricDifference' canonica con gli argomenti specificati, che devono presentare un tipo di risultato Edm.Geography o Edm.Geometry.Il tipo di risultato di spatialValue1 deve corrispondere al tipo di risultato di spatialValue2.Il tipo di risultato dell'espressione equivale a quello di spatialValue1 e spatialValue2.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il valore geometrico che rappresenta la differenza simmetrica di spatialValue2 con spatialValue1.</returns>
      <param name="spatialValue1">Espressione che specifica il primo valore spaziale.</param>
      <param name="spatialValue2">Espressione che specifica il valore spaziale per cui deve essere calcolata la differenza simmetrica con spatialValue1.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialTouches(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'SpatialTouches' canonica con gli argomenti specificati, che devono presentare un tipo di risultato Edm.Geometry.Il tipo di risultato dell'espressione è Edm.Boolean.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un valore booleano che indica se geometryValue1 tocca geometryValue2.</returns>
      <param name="geometryValue1">Espressione che specifica il primo valore geometrico.</param>
      <param name="geometryValue2">Espressione che specifica il valore geometrico che deve essere confrontato con geometryValue1.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialTypeName(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'SpatialTypeName' canonica con l'argomento specificato, che deve presentare un tipo di risultato Edm.Geography o Edm.Geometry.Il tipo di risultato dell'espressione è Edm.String.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il nome del tipo di geometria della stringa da spatialValue.</returns>
      <param name="spatialValue">Espressione che specifica il valore da cui deve essere recuperato il nome del tipo di geometria.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialUnion(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'SpatialUnion' canonica con gli argomenti specificati, che devono presentare un tipo di risultato Edm.Geography o Edm.Geometry.Il tipo di risultato di spatialValue1 deve corrispondere al tipo di risultato di spatialValue2.Il tipo di risultato dell'espressione equivale a quello di spatialValue1 e spatialValue2.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il valore spaziale che rappresenta l'unione di spatialValue1 e spatialValue2.</returns>
      <param name="spatialValue1">Espressione che specifica il primo valore spaziale.</param>
      <param name="spatialValue2">Espressione che specifica il valore spaziale per cui deve essere calcolata l'unione con spatialValue1.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialWithin(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'SpatialWithin' canonica con gli argomenti specificati, che devono presentare un tipo di risultato Edm.Geometry.Il tipo di risultato dell'espressione è Edm.Boolean.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce un valore booleano che indica se geometryValue1 si trova spazialmente all'interno di geometryValue2.</returns>
      <param name="geometryValue1">Espressione che specifica il primo valore geometrico.</param>
      <param name="geometryValue2">Espressione che specifica il valore geometrico che deve essere confrontato con geometryValue1.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.StartPoint(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'StartPoint' canonica con l'argomento specificato, che deve presentare un tipo di risultato Edm.Geography o Edm.Geometry.Il tipo di risultato equivale a quello di spatialValue.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il punto iniziale di spatialValue o Null se spatialValue non è una curva.</returns>
      <param name="spatialValue">Espressione che specifica il valore della curva spaziale da cui deve essere recuperato il punto iniziale.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.XCoordinate(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'XCoordinate' canonica con l'argomento specificato, che deve presentare un tipo di risultato Edm.Geometry.Il tipo di risultato dell'espressione è Edm.Double.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il valore della coordinata X di geometryValue o Null se geometryValue non è un punto.</returns>
      <param name="geometryValue">Espressione che specifica il valore del punto geometrico da cui deve essere recuperato il valore della coordinata X.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.YCoordinate(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'YCoordinate' canonica con l'argomento specificato, che deve presentare un tipo di risultato Edm.Geometry.Il tipo di risultato dell'espressione è Edm.Double.</summary>
      <returns>Nuovo elemento DbFunctionExpression che restituisce il valore della coordinata Y di geometryValue o Null se geometryValue non è un punto.</returns>
      <param name="geometryValue">Espressione che specifica il valore del punto geometrico da cui deve essere recuperato il valore della coordinata Y.</param>
    </member>
    <member name="T:System.Data.Entity.Core.Common.EntitySql.EntitySqlParser">
      <summary>Classe pubblica del parser Entity SQL.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Common.EntitySql.EntitySqlParser.Parse(System.String,System.Data.Entity.Core.Common.CommandTrees.DbParameterReferenceExpression[])">
      <summary>Analizza la query specificata con i parametri specificati.</summary>
      <returns>
        <see cref="T:System.Data.Entity.Core.Common.EntitySql.ParseResult" /> contenente <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbCommandTree" /> e informazioni che descrivono le eventuali definizioni di funzioni inline.</returns>
      <param name="query">Query EntitySQL da analizzare.</param>
      <param name="parameters">Parametri di query facoltativi.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Common.EntitySql.EntitySqlParser.ParseLambda(System.String,System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression[])">
      <summary>Analizza una query specifica con le variabili di un set specifico e produce <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbLambda" />.</summary>
      <returns>
        <see cref="T:System.Data.Entity.Core.Common.EntitySql.ParseResult" /> contenente <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbCommandTree" /> e informazioni che descrivono le eventuali definizioni di funzioni inline.</returns>
      <param name="query">Query da analizzare.</param>
      <param name="variables">Variabili di query facoltative.</param>
    </member>
    <member name="T:System.Data.Entity.Core.Common.EntitySql.FunctionDefinition">
      <summary>Definizione di funzione inline della query Entity SQL, restituita come parte di <see cref="T:System.Data.Entity.Core.Common.EntitySql.ParseResult" />.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.EntitySql.FunctionDefinition.EndPosition">
      <summary>Posizione finale della definizione di funzione nel testo della query eSQL.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.EntitySql.FunctionDefinition.Lambda">
      <summary>Parametri e corpo della funzione.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.EntitySql.FunctionDefinition.Name">
      <summary>Nome funzione.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.EntitySql.FunctionDefinition.StartPosition">
      <summary>Posizione iniziale della definizione di funzione nel testo della query eSQL.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Common.EntitySql.ParseResult">
      <summary>Informazioni sui risultati del parser Entity SQL.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.EntitySql.ParseResult.CommandTree">
      <summary>Albero dei comandi prodotto durante l'analisi.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Common.EntitySql.ParseResult.FunctionDefinitions">
      <summary>Elenco di oggetti <see cref="T:System.Data.Entity.Core.Common.EntitySql.FunctionDefinition" /> che descrive le definizioni di funzione inline della query.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.EntityClient.EntityCommand">
      <summary>Classe che rappresenta un comando per il livello concettuale</summary>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityCommand.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.EntityClient.EntityCommand" /> utilizzando i valori specificati.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityCommand.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.EntityClient.EntityCommand" /> con l'istruzione specificata.</summary>
      <param name="statement">Testo del comando.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityCommand.#ctor(System.String,System.Data.Entity.Core.EntityClient.EntityConnection)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.EntityClient.EntityCommand" /> con l'istruzione e la connessione specificate.</summary>
      <param name="statement">Testo del comando.</param>
      <param name="connection">Connessione all'origine dati.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityCommand.#ctor(System.String,System.Data.Entity.Core.EntityClient.EntityConnection,System.Data.Entity.Core.EntityClient.EntityTransaction)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.EntityClient.EntityCommand" /> con l'istruzione, la connessione e la transazione specificate.</summary>
      <param name="statement">Testo del comando.</param>
      <param name="connection">Connessione all'origine dati.</param>
      <param name="transaction">Transazione in cui viene eseguito il comando.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityCommand.#ctor(System.String,System.Data.Entity.Core.EntityClient.EntityConnection,System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver)">
      <summary>Costruisce l'oggetto EntityCommand con l'istruzione eSQL specificata e l'oggetto connessione da utilizzare</summary>
      <param name="statement">Testo del comando eSQL da eseguire</param>
      <param name="connection">Oggetto connessione</param>
      <param name="resolver">Sistema di risoluzione utilizzato per risolvere DbProviderServices</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityCommand.Cancel">
      <summary>Annulla l'esecuzione di <see cref="T:System.Data.Entity.Core.EntityClient.EntityCommand" />.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityCommand.CommandText">
      <summary>Ottiene o imposta un'istruzione Entity SQL che specifica un comando o una stored procedure da eseguire.</summary>
      <returns>Istruzione Entity SQL che specifica un comando o una stored procedure da eseguire.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityCommand.CommandTimeout">
      <summary>Ottiene o imposta il tempo di attesa prima del timeout.</summary>
      <returns>Tempo di attesa in secondi per l'esecuzione del comando.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityCommand.CommandTree">
      <summary>Ottiene o imposta l'albero dei comandi da eseguire. È possibile impostare solo un albero dei comandi o il testo del comando, non entrambi.</summary>
      <returns>Albero dei comandi da eseguire.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityCommand.CommandType">
      <summary>Ottiene o imposta un valore che indica come viene interpretata la proprietà <see cref="P:System.Data.Entity.Core.EntityClient.EntityCommand.CommandText" />.</summary>
      <returns>Uno dei valori dell'enumerazione <see cref="T:System.Data.CommandType" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityCommand.Connection">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" /> utilizzato da <see cref="T:System.Data.Entity.Core.EntityClient.EntityCommand" />.</summary>
      <returns>Connessione utilizzata dal comando dell'entità.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityCommand.CreateDbParameter">
      <summary>Crea e restituisce un nuovo oggetto parametro che rappresenta un parametro nell'istruzione eSQL</summary>
      <returns>Oggetto parametro.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityCommand.CreateParameter">
      <summary>Crea una nuova istanza di un oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" />.</summary>
      <returns>Nuova istanza di un oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityCommand.DbConnection">
      <summary>Oggetto connessione utilizzato per l'esecuzione del comando</summary>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityCommand.DbParameterCollection">
      <summary>Raccolta di parametri per questo comando</summary>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityCommand.DbTransaction">
      <summary>Transazione in cui viene eseguito il comando</summary>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityCommand.DesignTimeVisible">
      <summary>Ottiene o imposta un valore che indica se l'oggetto comando deve essere visibile in un controllo Progettazione Windows Form.</summary>
      <returns>true se l'oggetto comando deve essere visibile in un controllo di Progettazione Windows Form; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityCommand.EnablePlanCaching">
      <summary>Ottiene o imposta un valore che indica se la memorizzazione nella cache dei piani di query è abilitata.</summary>
      <returns>true la memorizzazione nella cache dei piani di query è abilitata; in caso contrario, false.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityCommand.ExecuteDbDataReader(System.Data.CommandBehavior)">
      <summary>Esegue il comando e restituisce un lettore dati per la lettura dei risultati</summary>
      <returns>Oggetto DbDataReader</returns>
      <param name="behavior">Comportamento da utilizzare quando viene eseguito il comando</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
      <summary>Esegue in modo asincrono il comando e restituisce un lettore dati per la lettura dei risultati</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene un oggetto DbDataReader.</returns>
      <param name="behavior">Comportamento da utilizzare quando viene eseguito il comando</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityCommand.ExecuteNonQuery">
      <summary>Esegue il comando corrente.</summary>
      <returns>Numero di righe interessate.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
      <summary>Esegue in modo asincrono il comando ed elimina i risultati restituiti dal comando</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il numero di righe interessate.</returns>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityCommand.ExecuteReader">
      <summary>Esegue il comando e restituisce un lettore di dati.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityDataReader" /> che contiene i risultati.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary>Compila l'oggetto <see cref="P:System.Data.Entity.Core.EntityClient.EntityCommand.CommandText" /> in un albero dei comandi e lo passa al provider dell'archivio sottostante per l'esecuzione, quindi compila un oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityDataReader" /> dal set di risultati prodotto utilizzando l'oggetto <see cref="T:System.Data.CommandBehavior" /> specificato.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityDataReader" /> che contiene i risultati.</returns>
      <param name="behavior">Uno dei valori di <see cref="T:System.Data.CommandBehavior" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityCommand.ExecuteReaderAsync">
      <summary>Esegue in modo asincrono il comando e restituisce un lettore dati per la lettura dei risultati.Può essere chiamato solo su CommandType.CommandText (in caso contrario, utilizzare i metodi Execute* standard)</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene un oggetto EntityDataReader.</returns>
      <exception cref="T:System.InvalidOperationException">Per i comandi delle stored procedure, se chiamato per qualsiasi elemento, ad eccezione del risultato della raccolta di entità</exception>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
      <summary>Esegue in modo asincrono il comando e restituisce un lettore dati per la lettura dei risultati.Può essere chiamato solo su CommandType.CommandText (in caso contrario, utilizzare i metodi Execute* standard)</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene un oggetto EntityDataReader.</returns>
      <param name="behavior">Comportamento da utilizzare quando viene eseguito il comando</param>
      <exception cref="T:System.InvalidOperationException">Per i comandi delle stored procedure, se chiamato per qualsiasi elemento, ad eccezione del risultato della raccolta di entità</exception>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
      <summary>Esegue in modo asincrono il comando e restituisce un lettore dati per la lettura dei risultati.Può essere chiamato solo su CommandType.CommandText (in caso contrario, utilizzare i metodi Execute* standard)</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene un oggetto EntityDataReader.</returns>
      <param name="behavior">Comportamento da utilizzare quando viene eseguito il comando</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.InvalidOperationException">Per i comandi delle stored procedure, se chiamato per qualsiasi elemento, ad eccezione del risultato della raccolta di entità</exception>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
      <summary>Esegue in modo asincrono il comando e restituisce un lettore dati per la lettura dei risultati.Può essere chiamato solo su CommandType.CommandText (in caso contrario, utilizzare i metodi Execute* standard)</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene un oggetto EntityDataReader.</returns>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.InvalidOperationException">Per i comandi delle stored procedure, se chiamato per qualsiasi elemento, ad eccezione del risultato della raccolta di entità</exception>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityCommand.ExecuteScalar">
      <summary>Esegue il comando e restituisce la prima colonna della prima riga nel gruppo di risultati.Le colonne o le righe aggiuntive vengono ignorate.</summary>
      <returns>Prima colonna della prima riga del gruppo di risultati oppure riferimento Null (Nothing in Visual Basic) se il gruppo di risultati è vuoto.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityCommand.Parameters">
      <summary>Ottiene i parametri della stored procedure o dell'istruzione Entity SQL.</summary>
      <returns>Parametri dell'istruzione Entity SQL o della stored procedure.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityCommand.Prepare">
      <summary>Compila il comando a livello di entità e crea una versione preparata del comando.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityCommand.ToTraceString">
      <summary>Compila il comando a livello di entità e restituisce il testo del comando di archiviazione.</summary>
      <returns>Testo del comando per l'archivio.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityCommand.Transaction">
      <summary>Ottiene o imposta la transazione in cui viene eseguito l'oggetto <see cref="T:System.Data.SqlClient.SqlCommand" />.</summary>
      <returns>Transazione in cui viene eseguito l'oggetto <see cref="T:System.Data.SqlClient.SqlCommand" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityCommand.UpdatedRowSource">
      <summary>Ottiene o imposta la modalità di applicazione dei risultati del comando alle righe in fase di aggiornamento.</summary>
      <returns>Uno dei valori di <see cref="T:System.Data.UpdateRowSource" />.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.EntityClient.EntityConnection">
      <summary>Classe che rappresenta una connessione per il livello concettuale.Una connessione entità può essere inizializzata una sola volta (aprendo la connessione).Di conseguenza, non è possibile modificare la stringa di connessione, collegare una nuova connessione all'archivio o modificare la stringa di connessione dell'archivio.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityConnection.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityConnection.#ctor(System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" /> con gli oggetti <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace" /> e <see cref="T:System.Data.Common.DbConnection" /> specificati.</summary>
      <param name="workspace">Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace" /> da associare all'oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" />.</param>
      <param name="connection">Connessione all'origine dati sottostante per l'oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" />.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro workspace o connection è Null.</exception>
      <exception cref="T:System.ArgumentException">Nell'area di lavoro manca il modello concettuale. -oppure- Nell'area di lavoro manca il file di mapping. -oppure- Nell'area di lavoro manca il modello di archiviazione. -oppure- Lo stato della connessione non è chiuso.</exception>
      <exception cref="T:System.Data.Entity.Core.ProviderIncompatibleException">Il parametro connection non proviene da un provider compatibile con ADO.NET Entity Framework.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityConnection.#ctor(System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection,System.Boolean)">
      <summary>Costruisce l'elemento EntityConnection dai metadati caricati in memoria</summary>
      <param name="workspace">Area di lavoro contenente informazioni sui metadati.</param>
      <param name="connection">Connessione all'archivio.</param>
      <param name="entityConnectionOwnsStoreConnection">Se impostato su true, la connessione all'archivio viene eliminata quando viene eliminata la connessione entità. In caso contrario, il chiamante deve eliminare la connessione all'archivio.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityConnection.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" /> in base alla stringa di connessione.</summary>
      <param name="connectionString">Stringa di connessione specifica del provider.</param>
      <exception cref="T:System.ArgumentException">È stata specificata una parola chiave per la stringa di connessione non valida oppure non è stata specificata una parola chiave per la stringa di connessione obbligatoria.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityConnection.BeginDbTransaction(System.Data.IsolationLevel)">
      <summary>Avvia una transazione di database</summary>
      <returns>Oggetto che rappresenta la nuova transazione</returns>
      <param name="isolationLevel">Livello di isolamento della transazione</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityConnection.BeginTransaction">
      <summary>Inizia una transazione usando il provider sottostante.</summary>
      <returns>Nuovo oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityTransaction" />.L'istanza di <see cref="T:System.Data.Entity.Core.EntityClient.EntityTransaction" /> restituita può essere in seguito associata all'oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityCommand" /> per consentire l'esecuzione del comando in tale transazione.</returns>
      <exception cref="T:System.InvalidOperationException">Il provider sottostante non è noto. -oppure- La chiamata a <see cref="M:System.Data.Entity.Core.EntityClient.EntityConnection.BeginTransaction" /> è stata eseguita su un oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" /> a cui è già associata una transazione corrente. -oppure- Lo stato di <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" /> non è <see cref="F:System.Data.ConnectionState.Open" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>Inizia una transazione con il livello di isolamento specificato usando il provider sottostante.</summary>
      <returns>Nuovo oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityTransaction" />.L'istanza di <see cref="T:System.Data.Entity.Core.EntityClient.EntityTransaction" /> restituita può essere in seguito associata all'oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityCommand" /> per consentire l'esecuzione del comando in tale transazione.</returns>
      <param name="isolationLevel">Livello di isolamento della transazione.</param>
      <exception cref="T:System.InvalidOperationException">Il provider sottostante non è noto. -oppure- La chiamata a <see cref="M:System.Data.Entity.Core.EntityClient.EntityConnection.BeginTransaction" /> è stata eseguita su un oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" /> a cui è già associata una transazione corrente. -oppure- Lo stato di <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" /> non è <see cref="F:System.Data.ConnectionState.Open" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityConnection.ChangeDatabase(System.String)">
      <summary>Non supportato.</summary>
      <param name="databaseName">Non supportato.</param>
      <exception cref="T:System.NotSupportedException">Quando viene chiamato il metodo.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityConnection.Close">
      <summary>Chiude la connessione al database.</summary>
      <exception cref="T:System.InvalidOperationException">Si è verificato un errore durante la chiusura della connessione.</exception>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityConnection.ConnectionString">
      <summary>Ottiene o imposta la stringa di connessione <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" />.</summary>
      <returns>Stringa di connessione necessaria per stabilire la connessione iniziale a un'origine dati.Il valore predefinito è una stringa vuota.In una connessione chiusa viene restituito il valore attualmente impostato.Se non è stato impostato alcun valore, viene restituita una stringa vuota.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityConnection.ConnectionTimeout">
      <summary>Ottiene il numero di secondi di attesa durante il tentativo di stabilire una connessione prima che il tentativo termini e venga generato un errore.</summary>
      <returns>Tempo di attesa in secondi per l'apertura di una connessione.Il valore predefinito corrisponde al timeout predefinito del provider di dati sottostante.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityConnection.CreateCommand">
      <summary>Crea una nuova istanza di <see cref="T:System.Data.Entity.Core.EntityClient.EntityCommand" />, con la proprietà <see cref="P:System.Data.Entity.Core.EntityClient.EntityCommand.Connection" /> impostata su <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityCommand" />.</returns>
      <exception cref="T:System.InvalidOperationException">Il nome del provider di dati sottostante non è noto.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityConnection.CreateDbCommand">
      <summary>Creare un nuovo oggetto comando che usa l'oggetto connessione</summary>
      <returns>Oggetto comando.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityConnection.CurrentTransaction">
      <summary>Ottiene la transazione corrente in cui è integrata la connessione.Può essere Null.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityConnection.Database">
      <summary>Ottiene il nome del database corrente o del database che verrà usato in seguito all'apertura di una connessione.</summary>
      <returns>Valore della proprietà Database del provider di dati sottostante.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityConnection.DataSource">
      <summary>Ottiene il nome o l'indirizzo di rete dell'origine dati a cui connettersi.</summary>
      <returns>Nome dell'origine dati.Il valore predefinito è una stringa vuota.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityConnection.DbProviderFactory">
      <summary>Ottiene la factory del provider associata a EntityConnection</summary>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityConnection.Dispose(System.Boolean)">
      <summary>Elimina l'oggetto connessione</summary>
      <param name="disposing">true per rilasciare sia le risorse gestite sia quelle non gestite; false per rilasciare solo le risorse non gestite</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityConnection.EnlistTransaction(System.Transactions.Transaction)">
      <summary>Inserisce <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" /> nella transazione specificata.</summary>
      <param name="transaction">L'oggetto transazione in cui inserire l'oggetto.</param>
      <exception cref="T:System.InvalidOperationException">Lo stato di <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" /> non è <see cref="F:System.Data.ConnectionState.Open" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityConnection.GetMetadataWorkspace">
      <summary>Restituisce l'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace" /> associato a <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace" /> associato a questo oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" />.</returns>
      <exception cref="T:System.Data.Entity.Core.MetadataException">La stringa di connessione inline contiene un valore di parola chiave Metadata non valido.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityConnection.Open">
      <summary>Stabilisce una connessione all'origine dati chiamando il metodo Open del provider di dati sottostante.</summary>
      <exception cref="T:System.InvalidOperationException">Quando si apre la connessione o il nome del provider di dati sottostante non è noto, si verifica un errore.</exception>
      <exception cref="T:System.Data.Entity.Core.MetadataException">La stringa di connessione inline contiene un valore di parola chiave Metadata non valido.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityConnection.OpenAsync(System.Threading.CancellationToken)">
      <summary>Stabilisce in modo asincrono una connessione all'archivio dati chiamando il metodo Open sul provider di dati sottostante</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityConnection.ServerVersion">
      <summary>Ottiene una stringa che contiene la versione dell'origine dati a cui è connesso il client.</summary>
      <returns>Versione dell'origine dati contenuta nella stringa di connessione del provider.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityConnection.State">
      <summary>Ottiene lo stato dell'oggetto EntityConnection, che è impostato per rilevare lo stato della connessione di database sottostante di cui viene eseguito il wrapping tramite questo oggetto EntityConnection.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityConnection.StoreConnection">
      <summary>Fornisce l'accesso alla connessione all'origine dati sottostante usata dall'oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Common.DbConnection" /> per la connessione all'origine dati sottostante.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.EntityClient.EntityConnectionStringBuilder">
      <summary>Classe che rappresenta un generatore di stringhe di connessione per il provider client dell'entità</summary>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityConnectionStringBuilder.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnectionStringBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityConnectionStringBuilder.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnectionStringBuilder" /> utilizzando la stringa di connessione fornita.</summary>
      <param name="connectionString">Stringa di connessione all'origine dati sottostante specifica del provider.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityConnectionStringBuilder.Clear">
      <summary>Cancella il contenuto dell'istanza di <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnectionStringBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityConnectionStringBuilder.ContainsKey(System.String)">
      <summary>Determina se l'oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnectionStringBuilder" /> contiene una chiave specifica.</summary>
      <returns>Restituisce true se <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnectionStringBuilder" /> contiene un elemento con la chiave specificata; in caso contrario, restituisce false.</returns>
      <param name="keyword">Chiave da individuare in <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnectionStringBuilder" />.</param>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityConnectionStringBuilder.IsFixedSize">
      <summary>Ottiene un valore che indica se <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnectionStringBuilder" /> ha dimensioni fisse.</summary>
      <returns>Restituisce true in ogni caso, perché <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnectionStringBuilder" /> fornisce una raccolta di coppie parola chiave/valore di dimensioni fisse.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityConnectionStringBuilder.Item(System.String)">
      <summary>Ottiene o imposta il valore associato alla chiave specificata.In C# questa proprietà è l'indicizzatore.</summary>
      <returns>Valore associato alla chiave specificata.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityConnectionStringBuilder.Keys">
      <summary>Ottiene un oggetto <see cref="T:System.Collections.ICollection" /> contenente le chiavi presenti in <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnectionStringBuilder" />.</summary>
      <returns>Oggetto <see cref="T:System.Collections.ICollection" /> contenente le chiavi presenti in <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnectionStringBuilder" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityConnectionStringBuilder.Metadata">
      <summary>Ottiene o imposta i percorsi dei metadati nella stringa di connessione.</summary>
      <returns>Ottiene o imposta i percorsi dei metadati nella stringa di connessione.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityConnectionStringBuilder.Name">
      <summary>Ottiene o imposta il nome di una sezione come definito in un file di configurazione.</summary>
      <returns>Nome di una sezione in un file di configurazione.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityConnectionStringBuilder.Provider">
      <summary>Ottiene o imposta il nome del provider di dati .NET Framework sottostante nella stringa di connessione.</summary>
      <returns>Nome invariante del provider di dati .NET Framework sottostante.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString">
      <summary>Ottiene o imposta la stringa di connessione interna specifica del provider.</summary>
      <returns>Stringa di connessione interna specifica del provider.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityConnectionStringBuilder.Remove(System.String)">
      <summary>Rimuove la voce con la chiave specificata dall'istanza di <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnectionStringBuilder" />.</summary>
      <returns>Restituisce true se la chiave era presente nella stringa di connessione ed è stata rimossa; false se la chiave non esiste.</returns>
      <param name="keyword">Chiave della coppia parola chiave/valore da rimuovere dalla stringa di connessione in <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnectionStringBuilder" />.</param>
      <exception cref="T:System.ArgumentNullException">keyword è Null (Nothing in Visual Basic)</exception>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary>Recupera un valore che corrisponde alla chiave fornita da <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnectionStringBuilder" />.</summary>
      <returns>Restituisce true se l'oggetto keyword è stato trovato nella stringa di connessione; in caso contrario, false.</returns>
      <param name="keyword">Chiave dell'elemento da recuperare.</param>
      <param name="value">Valore corrispondente a keyword.</param>
      <exception cref="T:System.ArgumentNullException">keyword contiene un valore null (Nothing in Visual Basic).</exception>
    </member>
    <member name="T:System.Data.Entity.Core.EntityClient.EntityDataReader">
      <summary>Classe del lettore dati per il provider client dell'entità</summary>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityDataReader.Close">
      <summary>Chiude l'oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityDataReader" />.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityDataReader.DataRecordInfo">
      <summary>Ottiene <see cref="T:System.Data.Entity.Core.Common.DataRecordInfo" /> per <see cref="T:System.Data.Entity.Core.IExtendedDataRecord" />.</summary>
      <returns>Informazioni di un record di dati.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityDataReader.Depth">
      <summary>Ottiene un valore che indica il livello di annidamento della riga corrente.</summary>
      <returns>Livello di annidamento della riga corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityDataReader.Dispose(System.Boolean)">
      <summary>Rilascia le risorse utilizzate da <see cref="T:System.Data.Entity.Core.EntityClient.EntityDataReader" /> e chiama <see cref="M:System.Data.Entity.Core.EntityClient.EntityDataReader.Close" />.</summary>
      <param name="disposing">true per rilasciare sia le risorse gestite sia quelle non gestite, false per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityDataReader.FieldCount">
      <summary>Ottiene il numero di colonne nella riga corrente.</summary>
      <returns>Numero di colonne nella riga corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityDataReader.GetBoolean(System.Int32)">
      <summary>Ottiene il valore della colonna specificata come valore Boolean.</summary>
      <returns>Valore della colonna specificata.</returns>
      <param name="ordinal">Ordinale di colonna in base zero.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityDataReader.GetByte(System.Int32)">
      <summary>Ottiene il valore della colonna specificata come byte.</summary>
      <returns>Valore della colonna specificata.</returns>
      <param name="ordinal">Ordinale di colonna in base zero.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Legge un flusso di byte dalla colonna specificata, a partire dalla posizione indicata da dataIndex, e nel buffer, a partire dalla posizione indicata da bufferIndex.</summary>
      <returns>Numero effettivo di byte letti.</returns>
      <param name="ordinal">Ordinale di colonna in base zero.</param>
      <param name="dataOffset">Indice all'interno della riga da cui avviare l'operazione di lettura.</param>
      <param name="buffer">Buffer in cui copiare i dati.</param>
      <param name="bufferOffset">Indice con il buffer in cui verranno copiati i dati.</param>
      <param name="length">Numero massimo di caratteri da leggere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityDataReader.GetChar(System.Int32)">
      <summary>Ottiene il valore della colonna specificata come singolo carattere.</summary>
      <returns>Valore della colonna specificata.</returns>
      <param name="ordinal">Ordinale di colonna in base zero.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Legge un flusso di caratteri dalla colonna specificata, a partire dalla posizione indicata da dataIndex, e nel buffer, a partire dalla posizione indicata da bufferIndex.</summary>
      <returns>Numero effettivo di caratteri letti.</returns>
      <param name="ordinal">Ordinale di colonna in base zero.</param>
      <param name="dataOffset">Indice all'interno della riga da cui avviare l'operazione di lettura.</param>
      <param name="buffer">Buffer in cui copiare i dati.</param>
      <param name="bufferOffset">Indice con il buffer in cui verranno copiati i dati.</param>
      <param name="length">Numero massimo di caratteri da leggere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityDataReader.GetDataReader(System.Int32)">
      <summary>Restituisce lettori annidati come oggetti <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns>Lettori annidati come oggetti <see cref="T:System.Data.Common.DbDataReader" />.</returns>
      <param name="i">Ordinale della colonna.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityDataReader.GetDataRecord(System.Int32)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Common.DbDataRecord" /> annidato.</summary>
      <returns>Record di dati annidati.</returns>
      <param name="i">Numero di DbDataRecord da restituire.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityDataReader.GetDataTypeName(System.Int32)">
      <summary>Ottiene il nome del tipo di dati della colonna specificata.</summary>
      <returns>Nome del tipo di dati.</returns>
      <param name="ordinal">Ordinale di colonna in base zero.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityDataReader.GetDateTime(System.Int32)">
      <summary>Ottiene il valore della colonna specificata come oggetto <see cref="T:System.DateTime" />.</summary>
      <returns>Valore della colonna specificata.</returns>
      <param name="ordinal">Ordinale di colonna in base zero.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityDataReader.GetDbDataReader(System.Int32)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Common.DbDataReader" /> per l'ordinale di colonna richiesto, di cui è possibile eseguire l'override tramite un'implementazione specifica del provider.</summary>
      <returns>Lettore di dati.</returns>
      <param name="ordinal">Ordinale di colonna in base zero.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityDataReader.GetDecimal(System.Int32)">
      <summary>Ottiene il valore della colonna specificata come oggetto <see cref="T:System.Decimal" />.</summary>
      <returns>Valore della colonna specificata.</returns>
      <param name="ordinal">Ordinale di colonna in base zero.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityDataReader.GetDouble(System.Int32)">
      <summary>Ottiene il valore della colonna specificata come numero a virgola mobile con precisione doppia.</summary>
      <returns>Valore della colonna specificata.</returns>
      <param name="ordinal">Ordinale di colonna in base zero.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityDataReader.GetEnumerator">
      <summary>Restituisce un oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere utilizzato per scorrere le righe nel lettore di dati.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere utilizzato per scorrere le righe nel lettore di dati.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityDataReader.GetFieldType(System.Int32)">
      <summary>Ottiene il tipo di dati della colonna specificata.</summary>
      <returns>Tipo di dati della colonna specificata.</returns>
      <param name="ordinal">Ordinale di colonna in base zero.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityDataReader.GetFloat(System.Int32)">
      <summary>Ottiene il valore della colonna specificata come numero a virgola mobile con precisione singola.</summary>
      <returns>Valore della colonna specificata.</returns>
      <param name="ordinal">Ordinale di colonna in base zero.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityDataReader.GetGuid(System.Int32)">
      <summary>Ottiene il valore della colonna specificata come identificatore univoco globale (GUID).</summary>
      <returns>Valore della colonna specificata.</returns>
      <param name="ordinal">Ordinale di colonna in base zero.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityDataReader.GetInt16(System.Int32)">
      <summary>Ottiene il valore della colonna specificata come integer con segno a 16 bit.</summary>
      <returns>Valore della colonna specificata.</returns>
      <param name="ordinal">Ordinale di colonna in base zero.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityDataReader.GetInt32(System.Int32)">
      <summary>Ottiene il valore della colonna specificata come integer con segno a 32 bit.</summary>
      <returns>Valore della colonna specificata.</returns>
      <param name="ordinal">Ordinale di colonna in base zero.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityDataReader.GetInt64(System.Int32)">
      <summary>Ottiene il valore della colonna specificata come integer con segno a 64 bit.</summary>
      <returns>Valore della colonna specificata.</returns>
      <param name="ordinal">Ordinale di colonna in base zero.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityDataReader.GetName(System.Int32)">
      <summary>Ottiene il nome della colonna quando viene specificato l'ordinale di colonna in base zero.</summary>
      <returns>Nome della colonna specificata.</returns>
      <param name="ordinal">Ordinale di colonna in base zero.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityDataReader.GetOrdinal(System.String)">
      <summary>Ottiene l'ordinale di colonna, dato il nome della colonna.</summary>
      <returns>Ordinale di colonna in base zero.</returns>
      <param name="name">Nome della colonna.</param>
      <exception cref="T:System.IndexOutOfRangeException">Il nome specificato non è un nome di colonna valido.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityDataReader.GetProviderSpecificFieldType(System.Int32)">
      <summary>Restituisce il tipo di campo specifico del provider per la colonna indicata.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che descrive il tipo di dati della colonna specificata.</returns>
      <param name="ordinal">Ordinale di colonna in base zero.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityDataReader.GetProviderSpecificValue(System.Int32)">
      <summary>Ottiene il valore della colonna specificata come istanza di <see cref="T:System.Object" />.</summary>
      <returns>Valore della colonna specificata.</returns>
      <param name="ordinal">Ordinale di colonna in base zero.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityDataReader.GetProviderSpecificValues(System.Object[])">
      <summary>Ottiene tutte le colonne attributo specifiche del provider nella raccolta per la riga corrente.</summary>
      <returns>Numero di istanze di <see cref="T:System.Object" /> nella matrice.</returns>
      <param name="values">Matrice di <see cref="T:System.Object" /> in cui copiare le colonne attributo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityDataReader.GetSchemaTable">
      <summary>Restituisce un oggetto <see cref="T:System.Data.DataTable" /> che descrive i metadati della colonna di <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.DataTable" /> che descrive i metadati della colonna.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityDataReader.GetString(System.Int32)">
      <summary>Ottiene il valore della colonna specificata come istanza di <see cref="T:System.String" />.</summary>
      <returns>Valore della colonna specificata.</returns>
      <param name="ordinal">Ordinale di colonna in base zero.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityDataReader.GetValue(System.Int32)">
      <summary>Ottiene il valore della colonna specificata come istanza di <see cref="T:System.Object" />.</summary>
      <returns>Valore della colonna specificata.</returns>
      <param name="ordinal">Ordinale di colonna in base zero.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityDataReader.GetValues(System.Object[])">
      <summary>Popola una matrice di oggetti con i valori della colonna della riga corrente.</summary>
      <returns>Numero di istanze di <see cref="T:System.Object" /> nella matrice.</returns>
      <param name="values">Matrice di <see cref="T:System.Object" /> in cui copiare le colonne attributo.</param>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityDataReader.HasRows">
      <summary>Ottiene un valore che indica se <see cref="T:System.Data.Entity.Core.EntityClient.EntityDataReader" /> contiene una o più righe.</summary>
      <returns>true se <see cref="T:System.Data.Entity.Core.EntityClient.EntityDataReader" /> contiene una o più righe; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityDataReader.IsClosed">
      <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityDataReader" /> è chiuso.</summary>
      <returns>true se l'oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityDataReader" /> è chiuso; in caso contrario, false.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityDataReader.IsDBNull(System.Int32)">
      <summary>Ottiene un valore che indica se la colonna contiene valori non esistenti o mancanti.</summary>
      <returns>true se la colonna specificata è equivalente a <see cref="T:System.DBNull" />; in caso contrario, false.</returns>
      <param name="ordinal">Ordinale di colonna in base zero.</param>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityDataReader.Item(System.Int32)">
      <summary>Ottiene il valore della colonna specificata come istanza di <see cref="T:System.Object" />.</summary>
      <returns>Valore della colonna specificata.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityDataReader.Item(System.String)">
      <summary>Ottiene il valore della colonna specificata come istanza di <see cref="T:System.Object" />.</summary>
      <returns>Valore della colonna specificata.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityDataReader.NextResult">
      <summary>Sposta il lettore al risultato successivo durante la lettura dei risultati di un batch di istruzioni.</summary>
      <returns>true se sono presenti più set di risultati; in caso contrario, false.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityDataReader.NextResultAsync(System.Threading.CancellationToken)">
      <summary>Sposta in modo asincrono il lettore al set di risultati successivo durante la lettura di un batch di istruzioni</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene true in presenza di più set di risultati, false in caso contrario.</returns>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityDataReader.Read">
      <summary>Sposta il lettore al record successivo in un gruppo di risultati.</summary>
      <returns>true se sono presenti più righe; in caso contrario, false.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityDataReader.ReadAsync(System.Threading.CancellationToken)">
      <summary>Sposta in modo asincrono il lettore alla riga successiva del set di risultati corrente</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene true se sono presenti più righe; in caso contrario, false.</returns>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityDataReader.RecordsAffected">
      <summary>Ottiene il numero di righe modificate, inserite o eliminate dall'esecuzione dell'istruzione SQL.</summary>
      <returns>Numero di righe modificate, inserite o eliminate.Restituisce -1 per le istruzioni SELECT oppure 0 se nessuna riga è interessata o se l'istruzione non riesce.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityDataReader.VisibleFieldCount">
      <summary>Ottiene il numero di campi non nascosti in <see cref="T:System.Data.Entity.Core.EntityClient.EntityDataReader" />.</summary>
      <returns>Numero di campi non nascosti.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.EntityClient.EntityParameter">
      <summary>Classe che rappresenta un parametro utilizzato in EntityCommand</summary>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityParameter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" /> utilizzando i valori predefiniti.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityParameter.#ctor(System.String,System.Data.DbType)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" /> utilizzando il nome di parametro e il tipo di dati specificati.</summary>
      <param name="parameterName">Nome del parametro.</param>
      <param name="dbType">Uno dei valori di <see cref="T:System.Data.DbType" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityParameter.#ctor(System.String,System.Data.DbType,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" /> utilizzando il nome di parametro, il tipo di dati e le dimensioni specificati.</summary>
      <param name="parameterName">Nome del parametro.</param>
      <param name="dbType">Uno dei valori di <see cref="T:System.Data.DbType" />.</param>
      <param name="size">Dimensione del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityParameter.#ctor(System.String,System.Data.DbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" /> utilizzando le proprietà specificate.</summary>
      <param name="parameterName">Nome del parametro.</param>
      <param name="dbType">Uno dei valori di <see cref="T:System.Data.DbType" />.</param>
      <param name="size">Dimensione del parametro.</param>
      <param name="direction">Uno dei valori di <see cref="T:System.Data.ParameterDirection" />.</param>
      <param name="isNullable">true per indicare che il parametro accetta i valori Null; in caso contrario, false.</param>
      <param name="precision">Numero di cifre utilizzate per rappresentare il valore.</param>
      <param name="scale">Numero di posizioni decimali in cui viene risolto il valore.</param>
      <param name="sourceColumn">Nome della colonna di origine.</param>
      <param name="sourceVersion">Uno dei valori di <see cref="T:System.Data.DataRowVersion" />.</param>
      <param name="value">Valore del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityParameter.#ctor(System.String,System.Data.DbType,System.Int32,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" /> utilizzando le proprietà specificate.</summary>
      <param name="parameterName">Nome del parametro.</param>
      <param name="dbType">Uno dei valori di <see cref="T:System.Data.DbType" />.</param>
      <param name="size">Dimensione del parametro.</param>
      <param name="sourceColumn">Nome della colonna di origine.</param>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityParameter.DbType">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.Data.DbType" /> del parametro.</summary>
      <returns>Uno dei valori di <see cref="T:System.Data.DbType" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityParameter.Direction">
      <summary>Ottiene o imposta la direzione del parametro.</summary>
      <returns>Uno dei valori di <see cref="T:System.Data.ParameterDirection" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityParameter.EdmType">
      <summary>Ottiene o imposta il tipo del parametro, espresso come EdmType.</summary>
      <returns>Tipo del parametro, espresso come EdmType.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityParameter.IsNullable">
      <summary>Ottiene o imposta un valore che indica se il parametro ammette valori Null.</summary>
      <returns>true se sono accettati valori Null; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityParameter.ParameterName">
      <summary>Ottiene o imposta il nome del parametro entity.</summary>
      <returns>Nome del parametro entity.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityParameter.Precision">
      <summary>Ottiene o imposta il numero di cifre utilizzate per rappresentare la proprietà <see cref="P:System.Data.Entity.Core.EntityClient.EntityParameter.Value" />.</summary>
      <returns>Numero di cifre utilizzate per rappresentare il valore.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityParameter.ResetDbType">
      <summary>Reimposta il tipo associato a <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" />.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityParameter.Scale">
      <summary>Ottiene o imposta il numero di posizioni decimali in cui viene risolto <see cref="P:System.Data.Entity.Core.EntityClient.EntityParameter.Value" />.</summary>
      <returns>Numero di posizioni decimali in cui viene risolto il valore.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityParameter.Size">
      <summary>Ottiene o imposta le dimensioni massime dei dati all'interno della colonna.</summary>
      <returns>Dimensioni massime dei dati all'interno della colonna.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityParameter.SourceColumn">
      <summary>Ottiene o imposta il nome della colonna di origine di cui è stato eseguito il mapping a <see cref="T:System.Data.DataSet" /> e utilizzata per caricare o restituire <see cref="P:System.Data.Entity.Core.EntityClient.EntityParameter.Value" />.</summary>
      <returns>Nome della colonna di origine di cui è stato eseguito il mapping al set di dati e utilizzata per il caricamento o la restituzione del valore.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityParameter.SourceColumnNullMapping">
      <summary>Ottiene o imposta un valore che indica se la colonna di origine ammette i valori Null.</summary>
      <returns>true se la colonna di origine ammette i valori Null; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityParameter.SourceVersion">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.Data.DataRowVersion" /> da utilizzare per il caricamento del valore.</summary>
      <returns>Uno dei valori di <see cref="T:System.Data.DataRowVersion" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityParameter.ToString">
      <summary>Restituisce una rappresentazione di stringa del parametro.</summary>
      <returns>Rappresentazione di stringa del parametro.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityParameter.Value">
      <summary>Ottiene o imposta il valore del parametro.</summary>
      <returns>Valore del parametro.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection">
      <summary>Classe che rappresenta una raccolta di parametri utilizzata in EntityCommand</summary>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityParameterCollection.Add(System.Data.Entity.Core.EntityClient.EntityParameter)">
      <summary>Aggiunge l'oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" /> specificato a <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" />.</summary>
      <returns>Nuovo oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" />.</returns>
      <param name="value">Oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" /> da aggiungere alla raccolta.</param>
      <exception cref="T:System.ArgumentException">L'oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" /> specificato nel parametro del valore è già stato aggiunto a questo o a un altro oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" />.</exception>
      <exception cref="T:System.InvalidCastException">Il parametro passato non è un oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" />.</exception>
      <exception cref="T:System.ArgumentNullException">Il parametro value è Null.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityParameterCollection.Add(System.Object)">
      <summary>Aggiunge l'oggetto specificato a <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" />.</summary>
      <returns>Indice del nuovo oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" />.</returns>
      <param name="value">Oggetto <see cref="T:System.Object" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityParameterCollection.Add(System.String,System.Data.DbType)">
      <summary>Aggiunge un oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" /> a <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" /> quando vengono specificati il nome di parametro e il tipo di dati.</summary>
      <returns>Nuovo oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" />.</returns>
      <param name="parameterName">Nome del parametro.</param>
      <param name="dbType">Uno dei valori di <see cref="T:System.Data.DbType" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityParameterCollection.Add(System.String,System.Data.DbType,System.Int32)">
      <summary>Aggiunge un oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" /> a <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" /> con il nome di parametro, il tipo di dati e la lunghezza di colonna.</summary>
      <returns>Nuovo oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" />.</returns>
      <param name="parameterName">Nome del parametro.</param>
      <param name="dbType">Uno dei valori di <see cref="T:System.Data.DbType" />.</param>
      <param name="size">Lunghezza di colonna.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityParameterCollection.AddRange(System.Array)">
      <summary>Aggiunge una matrice di valori alla fine di <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" />.</summary>
      <param name="values">Valori <see cref="T:System.Array" /> da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityParameterCollection.AddRange(System.Data.Entity.Core.EntityClient.EntityParameter[])">
      <summary>Aggiunge una matrice di valori <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" /> alla fine di <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" />.</summary>
      <param name="values">Valori <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" /> da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityParameterCollection.AddWithValue(System.String,System.Object)">
      <summary>Aggiunge un valore alla fine di <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" />.</returns>
      <param name="parameterName">Nome del parametro.</param>
      <param name="value">Valore da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityParameterCollection.Clear">
      <summary>Rimuove tutti gli oggetti <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" /> da <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityParameterCollection.Contains(System.Object)">
      <summary>Determina se l'oggetto <see cref="T:System.Object" /> specificato è contenuto in <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" />.</summary>
      <returns>true se <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" /> contiene il valore; in caso contrario, false.</returns>
      <param name="value">Valore <see cref="T:System.Object" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityParameterCollection.Contains(System.String)">
      <summary>Determina se l'oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" /> specificato è contenuto in <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" />.</summary>
      <returns>true se <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" /> contiene il valore; in caso contrario, false.</returns>
      <param name="parameterName">Valore <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copia tutti gli elementi dell'oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" /> corrente nell'oggetto <see cref="T:System.Array" /> unidimensionale specificato a partire dall'indice di destinazione <see cref="T:System.Array" /> indicato.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale che costituisce la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" /> corrente.</param>
      <param name="index">Integer a 32 bit che rappresenta l'indice in <see cref="T:System.Array" /> in corrispondenza del quale viene avviata la copia.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityParameterCollection.CopyTo(System.Data.Entity.Core.EntityClient.EntityParameter[],System.Int32)">
      <summary>Copia tutti gli elementi dell'oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" /> corrente nell'oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" /> specificato, a partire dall'indice di destinazione indicato.</summary>
      <param name="array">Oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" /> che costituisce la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" /> corrente.</param>
      <param name="index">Integer a 32 bit che rappresenta l'indice in <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" /> in corrispondenza del quale viene avviata la copia.</param>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityParameterCollection.Count">
      <summary>Ottiene un Integer contenente il numero di elementi in <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" />.</summary>
      <returns>Numero di elementi presenti in <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" />, espresso come integer.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityParameterCollection.GetEnumerator">
      <summary>Restituisce un enumeratore che scorre <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" />.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> per <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityParameterCollection.IndexOf(System.Data.Entity.Core.EntityClient.EntityParameter)">
      <summary>Ottiene la posizione dell'oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" /> specificato nella raccolta.</summary>
      <returns>Posizione in base zero dell'oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" /> specificato che rappresenta un oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" /> nella raccolta.Restituisce -1 se l'oggetto non è presente in <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" />.</returns>
      <param name="value">Oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" /> da trovare.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityParameterCollection.IndexOf(System.Object)">
      <summary>Ottiene la posizione dell'oggetto <see cref="T:System.Object" /> specificato nella raccolta.</summary>
      <returns>Posizione in base zero dell'oggetto <see cref="T:System.Object" /> specificato che rappresenta un oggetto <see cref="T:System.Object" /> nella raccolta.Restituisce -1 se l'oggetto non è presente in <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" />.</returns>
      <param name="value">Oggetto <see cref="T:System.Object" /> da trovare.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityParameterCollection.IndexOf(System.String)">
      <summary>Ottiene la posizione dell'oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" /> specificato con il nome indicato.</summary>
      <returns>Posizione in base zero dell'oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" /> specificato con il nome, con distinzione tra maiuscole e minuscole, indicato.Restituisce -1 se l'oggetto non è presente in <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" />.</returns>
      <param name="parameterName">Nome dell'oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" /> da cercare, con distinzione tra maiuscole e minuscole.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityParameterCollection.Insert(System.Int32,System.Data.Entity.Core.EntityClient.EntityParameter)">
      <summary>Inserisce un oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" /> in <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" /> in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero in corrispondenza del quale deve essere inserito il valore.</param>
      <param name="value">Oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" /> da inserire in <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityParameterCollection.Insert(System.Int32,System.Object)">
      <summary>Inserisce un elemento <see cref="T:System.Object" /> nella classe <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" /> in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero in corrispondenza del quale deve essere inserito il valore.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da inserire in <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" />.</param>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityParameterCollection.IsFixedSize">
      <summary>Ottiene un valore che indica se <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" /> ha dimensioni fisse.</summary>
      <returns>Restituisce true se <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" /> ha dimensioni fisse; in caso contrario, restituisce false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityParameterCollection.IsReadOnly">
      <summary>Ottiene un valore che indica se <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" /> è di sola lettura.</summary>
      <returns>Restituisce true se <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" /> è di sola lettura; in caso contrario, restituisce false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityParameterCollection.IsSynchronized">
      <summary>Ottiene un valore che indica se <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" /> è sincronizzato.</summary>
      <returns>Restituisce true se l'oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" /> è sincronizzato; in caso contrario, restituisce false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityParameterCollection.Item(System.Int32)">
      <summary>Ottiene <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" /> in corrispondenza dell'indice specificato.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" /> in corrispondenza dell'indice specificato.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityParameterCollection.Item(System.String)">
      <summary>Ottiene <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" /> con il nome specificato.</summary>
      <returns>
        <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" /> con il nome specificato.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityParameterCollection.Remove(System.Data.Entity.Core.EntityClient.EntityParameter)">
      <summary>Rimuove l'oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" /> specificato dalla raccolta.</summary>
      <param name="value">Oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" /> da rimuovere dalla raccolta.</param>
      <exception cref="T:System.InvalidCastException">Il parametro non è un oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" />.</exception>
      <exception cref="T:System.SystemException">Il parametro non è presente nella raccolta.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityParameterCollection.Remove(System.Object)">
      <summary>Rimuove il parametro specificato dalla raccolta.</summary>
      <param name="value">Oggetto <see cref="T:System.Object" /> da rimuovere dalla raccolta.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityParameterCollection.RemoveAt(System.Int32)">
      <summary>Rimuove l'oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" /> da <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" /> in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero dell'oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" /> da rimuovere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityParameterCollection.RemoveAt(System.String)">
      <summary>Rimuove l'oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" /> da <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" /> in corrispondenza del nome di parametro specificato.</summary>
      <param name="parameterName">Nome dell'oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" /> da rimuovere.</param>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityParameterCollection.SyncRoot">
      <summary>Ottiene un oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" />.</summary>
      <returns>Oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameterCollection" />.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.EntityClient.EntityProviderFactory">
      <summary>Classe che rappresenta una factory provider per il provider client di entità.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityProviderFactory.CreateCommand">
      <summary>Restituisce una nuova istanza della classe del provider che implementa la classe <see cref="T:System.Data.Entity.Core.EntityClient.EntityCommand" />.</summary>
      <returns>Nuova istanza di <see cref="T:System.Data.Entity.Core.EntityClient.EntityCommand" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityProviderFactory.CreateCommandBuilder">
      <summary>Genera un oggetto <see cref="T:System.NotSupportedException" />.Questo metodo non è attualmente supportato.</summary>
      <returns>Questo metodo non è attualmente supportato.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityProviderFactory.CreateConnection">
      <summary>Restituisce una nuova istanza della classe del provider che implementa la classe <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" />.</summary>
      <returns>Nuova istanza di <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityProviderFactory.CreateConnectionStringBuilder">
      <summary>Restituisce una nuova istanza della classe del provider che implementa la classe <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnectionStringBuilder" />.</summary>
      <returns>Nuova istanza di <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnectionStringBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityProviderFactory.CreateDataAdapter">
      <summary>Genera un oggetto <see cref="T:System.NotSupportedException" />.Questo metodo non è attualmente supportato.</summary>
      <returns>Questo metodo non è attualmente supportato.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityProviderFactory.CreateParameter">
      <summary>Restituisce una nuova istanza della classe del provider che implementa la classe <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" />.</summary>
      <returns>Nuova istanza di <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityProviderFactory.CreatePermission(System.Security.Permissions.PermissionState)">
      <summary>Genera un oggetto <see cref="T:System.NotSupportedException" />.Questo metodo non è attualmente supportato.</summary>
      <returns>Questo metodo non è attualmente supportato.</returns>
      <param name="state">Questo metodo non è attualmente supportato.</param>
    </member>
    <member name="F:System.Data.Entity.Core.EntityClient.EntityProviderFactory.Instance">
      <summary>Oggetto Singleton per l'oggetto factory del provider client dell'entità.Questo campo rimane pubblico (nessuna proprietà) perché per DbProviderFactory è previsto un campo.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityProviderFactory.System#IServiceProvider#GetService(System.Type)">
      <summary>Restituisce la classe <see cref="T:System.IServiceProvider" /> richiesta.</summary>
      <returns>Nuova istanza di <see cref="T:System.IServiceProvider" />.I tipi supportati sono <see cref="T:System.Data.Entity.Core.Common.DbProviderServices" /> , <see cref="T:System.Data.Entity.Core.Common.DbCommandDefinitionBuilder" /> e <see cref="T:System.Data.IEntityAdapter" />.Restituisce Null (o Nothing in Visual Basic) per ogni altro tipo.</returns>
      <param name="serviceType">Oggetto <see cref="T:System.Type" /> da restituire.</param>
    </member>
    <member name="T:System.Data.Entity.Core.EntityClient.EntityTransaction">
      <summary>Classe che rappresenta una transazione per il livello concettuale</summary>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityTransaction.Commit">
      <summary>Esegue il commit della transazione sottostante.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityTransaction.Connection">
      <summary>Ottiene <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" /> per <see cref="T:System.Data.Entity.Core.EntityClient.EntityTransaction" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" /> per la connessione all'origine dati sottostante.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityTransaction.DbConnection">
      <summary>Oggetto connessione proprietario di questo oggetto transazione</summary>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityTransaction.Dispose(System.Boolean)">
      <summary>Pulisce l'oggetto transazione</summary>
      <param name="disposing">true per rilasciare sia le risorse gestite sia quelle non gestite; false per rilasciare solo le risorse non gestite</param>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityTransaction.IsolationLevel">
      <summary>Ottiene il livello di isolamento di <see cref="T:System.Data.Entity.Core.EntityClient.EntityTransaction" />.</summary>
      <returns>Valore dell'enumerazione <see cref="T:System.Data.IsolationLevel" /> che rappresenta il livello di isolamento della transazione sottostante.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.EntityClient.EntityTransaction.Rollback">
      <summary>Esegue il rollback della transazione sottostante.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.EntityClient.EntityTransaction.StoreTransaction">
      <summary>Ottiene DbTransaction per la transazione del provider sottostante.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.AssociationSetMapping">
      <summary>Rappresenta i metadati di mapping per un elemento AssociationSet nello spazio CS.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.AssociationSetMapping.#ctor(System.Data.Entity.Core.Metadata.Edm.AssociationSet,System.Data.Entity.Core.Metadata.Edm.EntitySet,System.Data.Entity.Core.Mapping.EntityContainerMapping)">
      <summary>Inizializza una nuova istanza di AssociationSetMapping.</summary>
      <param name="associationSet">Set di associazioni di cui eseguire il mapping.</param>
      <param name="storeEntitySet">Set di entità dell'archivio di cui eseguire il mapping.</param>
      <param name="containerMapping">Mapping del contenitore padre.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.AssociationSetMapping.AddCondition(System.Data.Entity.Core.Mapping.ConditionPropertyMapping)">
      <summary>Aggiunge la condizione del mapping di proprietà.</summary>
      <param name="condition">Condizione da aggiungere.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.AssociationSetMapping.AssociationSet">
      <summary>Ottiene il set di associazioni di cui viene eseguito il mapping.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.AssociationSetMapping.AssociationTypeMapping">
      <summary>Ottiene il mapping del tipo di associazione contenuto.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.AssociationSetMapping.Conditions">
      <summary>Ottiene le condizioni del mapping di proprietà.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.AssociationSetMapping.ModificationFunctionMapping">
      <summary>Ottiene o imposta il mapping della funzione corrispondente.Può essere null.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.AssociationSetMapping.RemoveCondition(System.Data.Entity.Core.Mapping.ConditionPropertyMapping)">
      <summary>Rimuove la condizione del mapping di proprietà.</summary>
      <param name="condition">Condizione di mapping di proprietà da rimuovere.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.AssociationSetMapping.SourceEndMapping">
      <summary>Ottiene o imposta il mapping della proprietà End di origine.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.AssociationSetMapping.StoreEntitySet">
      <summary>Ottiene il set di entità dell'archivio su cui è stato eseguito il mapping.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.AssociationSetMapping.TargetEndMapping">
      <summary>Ottiene o imposta il mapping della proprietà End di destinazione.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.AssociationSetModificationFunctionMapping">
      <summary>Descrive i mapping di funzione di modifica per un set di associazioni.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.AssociationSetModificationFunctionMapping.#ctor(System.Data.Entity.Core.Metadata.Edm.AssociationSet,System.Data.Entity.Core.Mapping.ModificationFunctionMapping,System.Data.Entity.Core.Mapping.ModificationFunctionMapping)">
      <summary>Inizializza una nuova istanza di <see cref="T:System.Data.Entity.Core.Mapping.AssociationSetModificationFunctionMapping" />.</summary>
      <param name="associationSet">Set di associazioni.</param>
      <param name="deleteFunctionMapping">Mapping di funzione di eliminazione.</param>
      <param name="insertFunctionMapping">Mapping di funzione di inserimento.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.AssociationSetModificationFunctionMapping.AssociationSet">
      <summary>Ottiene il set di associazioni.</summary>
      <returns>Set di associazioni.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.AssociationSetModificationFunctionMapping.DeleteFunctionMapping">
      <summary>Ottiene il mapping di funzione di eliminazione.</summary>
      <returns>Mapping di funzione di eliminazione.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.AssociationSetModificationFunctionMapping.InsertFunctionMapping">
      <summary>Ottiene il mapping di funzione di inserimento.</summary>
      <returns>Mapping di funzione di inserimento.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.AssociationSetModificationFunctionMapping.ToString">
      <summary>Converte il valore di questa istanza nella rappresentazione di stringa equivalente.</summary>
      <returns>Rappresentazione di stringa del valore di questa istanza.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.AssociationTypeMapping">
      <summary>Rappresenta i metadati di mapping per una mappa del tipo di associazione nello spazio CS.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.AssociationTypeMapping.#ctor(System.Data.Entity.Core.Mapping.AssociationSetMapping)">
      <summary>Crea un'istanza di AssociationTypeMapping.</summary>
      <param name="associationSetMapping">Oggetto AssociationSetMapping che contiene questo oggetto AssociationTypeMapping.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.AssociationTypeMapping.AssociationSetMapping">
      <summary>Ottiene l'oggetto AssociationSetMapping che contiene questo oggetto AssociationTypeMapping.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.AssociationTypeMapping.AssociationType">
      <summary>Ottiene il tipo di associazione di cui viene eseguito il mapping.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.AssociationTypeMapping.MappingFragment">
      <summary>Ottiene il singolo frammento di mapping.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.ComplexPropertyMapping">
      <summary>Metadati di mapping per le proprietà complesse.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.ComplexPropertyMapping.#ctor(System.Data.Entity.Core.Metadata.Edm.EdmProperty)">
      <summary>Costruisce un nuovo oggetto di mapping delle proprietà complesse</summary>
      <param name="property">Oggetto MemberMetadata che rappresenta il membro complesso</param>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.ComplexPropertyMapping.AddTypeMapping(System.Data.Entity.Core.Mapping.ComplexTypeMapping)">
      <summary>Aggiunge un mapping di tipo che corrisponde a un tipo complesso annidato.</summary>
      <param name="typeMapping">Mapping del tipo complesso da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.ComplexPropertyMapping.RemoveTypeMapping(System.Data.Entity.Core.Mapping.ComplexTypeMapping)">
      <summary>Rimuove un mapping di tipo che corrisponde a un tipo complesso annidato.</summary>
      <param name="typeMapping">Mapping del tipo complesso da rimuovere.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.ComplexPropertyMapping.TypeMappings">
      <summary>Ottiene le raccolte di sola lettura di mapping di tipo che corrispondono ai tipi complessi annidati.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.ComplexTypeMapping">
      <summary>Metadati di mapping per tipi complessi.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.ComplexTypeMapping.#ctor(System.Data.Entity.Core.Metadata.Edm.ComplexType)">
      <summary>Crea un'istanza di ComplexTypeMapping.</summary>
      <param name="complexType">Oggetto ComplexType di cui viene eseguito il mapping.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.ComplexTypeMapping.AddCondition(System.Data.Entity.Core.Mapping.ConditionPropertyMapping)">
      <summary>Aggiunge la condizione del mapping di proprietà.</summary>
      <param name="condition">Condizione di mapping di proprietà da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.ComplexTypeMapping.AddPropertyMapping(System.Data.Entity.Core.Mapping.PropertyMapping)">
      <summary>Aggiunge un mapping di proprietà.</summary>
      <param name="propertyMapping">Mapping di proprietà da aggiungere.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.ComplexTypeMapping.ComplexType">
      <summary>Ottiene l'oggetto ComplexType di cui viene eseguito il mapping.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.ComplexTypeMapping.Conditions">
      <summary>Ottiene una raccolta di sola lettura delle condizioni di mapping di proprietà.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.ComplexTypeMapping.PropertyMappings">
      <summary>Ottiene una raccolta di sola lettura dei mapping di proprietà.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.ComplexTypeMapping.RemoveCondition(System.Data.Entity.Core.Mapping.ConditionPropertyMapping)">
      <summary>Rimuove la condizione del mapping di proprietà.</summary>
      <param name="condition">Condizione di mapping di proprietà da rimuovere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.ComplexTypeMapping.RemovePropertyMapping(System.Data.Entity.Core.Mapping.PropertyMapping)">
      <summary>Rimuove un mapping di proprietà.</summary>
      <param name="propertyMapping">Mapping di proprietà da rimuovere.</param>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.ConditionPropertyMapping">
      <summary>Metadati di mapping per il mapping delle proprietà condizionali su un tipo.Il mapping delle proprietà condizionali specifica una condizione sulla proprietà del lato C o del lato S.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.ConditionPropertyMapping.Column">
      <summary>Ottiene un oggetto EdmProperty che specifica la colonna di cui è stato eseguito il mapping.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.ConditionPropertyMapping.Property">
      <summary>Ottiene un oggetto EdmProperty che specifica la proprietà di cui è stato eseguito il mapping.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.EndPropertyMapping">
      <summary>Metadati di mapping per la proprietà End di un'associazione.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.EndPropertyMapping.#ctor(System.Data.Entity.Core.Metadata.Edm.AssociationEndMember)">
      <summary>Crea un mapping di proprietà End dell'associazione.</summary>
      <param name="associationEnd">AssociationEndMember che specifica la fine dell'associazione di cui eseguire il mapping.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.EndPropertyMapping.AddPropertyMapping(System.Data.Entity.Core.Mapping.ScalarPropertyMapping)">
      <summary>Aggiunge il mapping di proprietà-colonna figlio.</summary>
      <param name="propertyMapping">ScalarPropertyMapping che specifica il mapping di proprietà-colonna da aggiungere.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.EndPropertyMapping.AssociationEnd">
      <summary>Ottiene un oggetto AssociationEndMember che specifica la fine dell'associazione di cui è stato eseguito il mapping.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.EndPropertyMapping.PropertyMappings">
      <summary>Ottiene un oggetto ReadOnlyCollection di ScalarPropertyMapping che specifica gli elementi figlio di questo mapping di proprietà End dell'associazione.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.EndPropertyMapping.RemovePropertyMapping(System.Data.Entity.Core.Mapping.ScalarPropertyMapping)">
      <summary>Rimuove il mapping di proprietà-colonna figlio.</summary>
      <param name="propertyMapping">ScalarPropertyMapping che specifica il mapping di proprietà-colonna da rimuovere.</param>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.EntityContainerMapping">
      <summary>Rappresenta i metadati di mapping per una mappa EntityContainer nello spazio CS.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.EntityContainerMapping.#ctor(System.Data.Entity.Core.Metadata.Edm.EntityContainer,System.Data.Entity.Core.Metadata.Edm.EntityContainer,System.Data.Entity.Core.Mapping.StorageMappingItemCollection,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Mapping.EntityContainerMapping" />.</summary>
      <param name="conceptualEntityContainer">Il contenitore di entità concettuale di cui eseguire il mapping.</param>
      <param name="storeEntityContainer">Contenitore di entità dell'archivio di cui eseguire il mapping.</param>
      <param name="mappingItemCollection">Raccolta di elementi mapping padre.</param>
      <param name="generateUpdateViews">Flag che indica se generare visualizzazioni di aggiornamento.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.EntityContainerMapping.AddFunctionImportMapping(System.Data.Entity.Core.Mapping.FunctionImportMapping)">
      <summary>Aggiunge un mapping di importazione di funzione.</summary>
      <param name="functionImportMapping">Mapping di importazione di funzione da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.EntityContainerMapping.AddSetMapping(System.Data.Entity.Core.Mapping.AssociationSetMapping)">
      <summary>Aggiunge un mapping di set di associazioni.</summary>
      <param name="setMapping">Mapping di set di associazioni da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.EntityContainerMapping.AddSetMapping(System.Data.Entity.Core.Mapping.EntitySetMapping)">
      <summary>Aggiunge un mapping di set di entità.</summary>
      <param name="setMapping">Mapping di set di entità da aggiungere.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.EntityContainerMapping.AssociationSetMappings">
      <summary>Ottiene i mapping di set di associazioni.</summary>
      <returns>Mapping di set di associazioni.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.EntityContainerMapping.BuiltInTypeKind">
      <summary>Ottiene il tipo di questo elemento.</summary>
      <returns>Tipo di questo elemento.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.EntityContainerMapping.ConceptualEntityContainer">
      <summary>Ottiene il contenitore di entità concettuale.</summary>
      <returns>Contenitore di entità concettuale.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.EntityContainerMapping.EntitySetMappings">
      <summary>Ottiene i mapping del set di entità.</summary>
      <returns>Mapping del set di entità.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.EntityContainerMapping.FunctionImportMappings">
      <summary>Ottiene i mapping di importazione di funzione.</summary>
      <returns>Mapping di importazione di funzione.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.EntityContainerMapping.GenerateUpdateViews">
      <summary>Ottiene un flag che indica se generare le visualizzazioni di aggiornamento.</summary>
      <returns>true per generare le visualizzazioni di aggiornamento. In caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.EntityContainerMapping.MappingItemCollection">
      <summary>Ottiene la raccolta di elementi mapping padre.</summary>
      <returns>Raccolta di elementi mapping padre.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.EntityContainerMapping.RemoveFunctionImportMapping(System.Data.Entity.Core.Mapping.FunctionImportMapping)">
      <summary>Rimuove un mapping di importazione di funzione.</summary>
      <param name="functionImportMapping">Mapping di importazione di funzione da rimuovere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.EntityContainerMapping.RemoveSetMapping(System.Data.Entity.Core.Mapping.AssociationSetMapping)">
      <summary>Rimuove un mapping di set di associazioni.</summary>
      <param name="setMapping">Mapping di set di associazioni da rimuovere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.EntityContainerMapping.RemoveSetMapping(System.Data.Entity.Core.Mapping.EntitySetMapping)">
      <summary>Rimuove un mapping di set di associazioni.</summary>
      <param name="setMapping">Mapping di set di associazioni da rimuovere.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.EntityContainerMapping.StoreEntityContainer">
      <summary>Ottiene il contenitore di entità dell'archivio.</summary>
      <returns>Contenitore di entità dell'archivio.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.EntitySetBaseMapping">
      <summary>Rappresenta i metadati di mapping per un Extent nello spazio CS.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.EntitySetBaseMapping.ContainerMapping">
      <summary>Ottiene il mapping del contenitore padre.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.EntitySetBaseMapping.QueryView">
      <summary>Ottiene o imposta la visualizzazione di query associata al mapping.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.EntitySetMapping">
      <summary>Rappresenta i metadati di mapping per un EnitytSet nello spazio CS.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.EntitySetMapping.#ctor(System.Data.Entity.Core.Metadata.Edm.EntitySet,System.Data.Entity.Core.Mapping.EntityContainerMapping)">
      <summary>Inizializza una nuova istanza di EntitySetMapping.</summary>
      <param name="entitySet">Set di entità di cui eseguire il mapping.</param>
      <param name="containerMapping">Mapping del contenitore padre.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.EntitySetMapping.AddModificationFunctionMapping(System.Data.Entity.Core.Mapping.EntityTypeModificationFunctionMapping)">
      <summary>Aggiunge un mapping di funzione.</summary>
      <param name="modificationFunctionMapping">Mapping di funzione da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.EntitySetMapping.AddTypeMapping(System.Data.Entity.Core.Mapping.EntityTypeMapping)">
      <summary>Aggiunge un mapping di tipo.</summary>
      <param name="typeMapping">Mapping di tipi da aggiungere.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.EntitySetMapping.EntitySet">
      <summary>Ottiene il set di entità su cui è stato eseguito il mapping.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.EntitySetMapping.EntityTypeMappings">
      <summary>Ottiene i mapping dei tipi di entità contenuti.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.EntitySetMapping.ModificationFunctionMappings">
      <summary>Ottiene i mapping di funzione corrispondenti.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.EntitySetMapping.RemoveModificationFunctionMapping(System.Data.Entity.Core.Mapping.EntityTypeModificationFunctionMapping)">
      <summary>Rimuove un mapping di funzione.</summary>
      <param name="modificationFunctionMapping">Mapping di funzione da rimuovere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.EntitySetMapping.RemoveTypeMapping(System.Data.Entity.Core.Mapping.EntityTypeMapping)">
      <summary>Rimuove un mapping di tipo.</summary>
      <param name="typeMapping">Mapping di tipo da rimuovere.</param>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.EntityTypeMapping">
      <summary>Metadati di mapping per il tipo di entità.Se un EntitySet rappresenta entità di più tipi, saranno disponibili più EntityTypeMapping per un EntitySet. Ad esempio, se PersonSet Entity extent rappresenta entità di tipo Person e Customer, saranno disponibili due EntityTypeMapping nel mapping per PersonSet.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.EntityTypeMapping.#ctor(System.Data.Entity.Core.Mapping.EntitySetMapping)">
      <summary>Crea un'istanza di EntityTypeMapping.</summary>
      <param name="entitySetMapping">Oggetto EntitySetMapping contenente questo EntityTypeMapping.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.EntityTypeMapping.AddFragment(System.Data.Entity.Core.Mapping.MappingFragment)">
      <summary>Aggiunge un frammento di mapping.</summary>
      <param name="fragment">Frammento di mapping da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.EntityTypeMapping.AddIsOfType(System.Data.Entity.Core.Metadata.Edm.EntityType)">
      <summary>Aggiunge una gerarchia del tipo di entità al mapping.La gerarchia è rappresentata dal tipo di entità radice specificato.</summary>
      <param name="type">Oggetto EntityType radice della gerarchia da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.EntityTypeMapping.AddType(System.Data.Entity.Core.Metadata.Edm.EntityType)">
      <summary>Aggiunge un tipo di entità al mapping.</summary>
      <param name="type">Oggetto EntityType da aggiungere.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.EntityTypeMapping.EntitySetMapping">
      <summary>Ottiene l'oggetto EntitySetMapping contenente questo EntityTypeMapping.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.EntityTypeMapping.EntityType">
      <summary>Ottiene il singolo oggetto EntityType su cui viene eseguito il mapping.Genera un'eccezione in caso di mapping del tipo di gerarchia.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.EntityTypeMapping.EntityTypes">
      <summary>Ottiene i tipi di entità su è stato eseguito il mapping.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.EntityTypeMapping.Fragments">
      <summary>Ottiene una raccolta di sola lettura di frammenti di mapping.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.EntityTypeMapping.IsHierarchyMapping">
      <summary>Ottiene un flag che indica se si tratta di un mapping di gerarchia di tipo.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.EntityTypeMapping.IsOfEntityTypes">
      <summary>Ottiene i tipi di base su cui è stato eseguito il mapping per un mapping della gerarchia.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.EntityTypeMapping.RemoveFragment(System.Data.Entity.Core.Mapping.MappingFragment)">
      <summary>Rimuove un frammento di mapping.</summary>
      <param name="fragment">Frammento di mapping da rimuovere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.EntityTypeMapping.RemoveIsOfType(System.Data.Entity.Core.Metadata.Edm.EntityType)">
      <summary>Rimuove una gerarchia del tipo di entità dal mapping.La gerarchia è rappresentata dal tipo di entità radice specificato.</summary>
      <param name="type">Oggetto EntityType radice della gerarchia da rimuovere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.EntityTypeMapping.RemoveType(System.Data.Entity.Core.Metadata.Edm.EntityType)">
      <summary>Rimuove un tipo di entità dal mapping.</summary>
      <param name="type">Oggetto EntityType da rimuovere.</param>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.EntityTypeModificationFunctionMapping">
      <summary>Descrive i mapping della funzione di modifica per un tipo di entità in un set di entità.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.EntityTypeModificationFunctionMapping.#ctor(System.Data.Entity.Core.Metadata.Edm.EntityType,System.Data.Entity.Core.Mapping.ModificationFunctionMapping,System.Data.Entity.Core.Mapping.ModificationFunctionMapping,System.Data.Entity.Core.Mapping.ModificationFunctionMapping)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Mapping.EntityTypeModificationFunctionMapping" />.</summary>
      <param name="entityType">Tipo di entità EDM.</param>
      <param name="deleteFunctionMapping">Mapping per l'eliminazione di una funzione.</param>
      <param name="insertFunctionMapping">Mapping per l'inserimento di una funzione.</param>
      <param name="updateFunctionMapping">Mapping per l'aggiornamento di una funzione.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.EntityTypeModificationFunctionMapping.DeleteFunctionMapping">
      <summary>Ottiene il mapping per l'eliminazione di una funzione.</summary>
      <returns>Mapping per l'eliminazione di una funzione.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.EntityTypeModificationFunctionMapping.EntityType">
      <summary>Ottiene il tipo di entità EDM.</summary>
      <returns>Tipo di entità EDM.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.EntityTypeModificationFunctionMapping.InsertFunctionMapping">
      <summary>Ottiene il mapping per l'inserimento di una funzione.</summary>
      <returns>Mapping per l'inserimento di una funzione.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.EntityTypeModificationFunctionMapping.ToString">
      <summary>Restituisce una rappresentazione in forma di stringa dell'oggetto <see cref="T:System.Data.Entity.Core.Mapping.EntityTypeModificationFunctionMapping" />.</summary>
      <returns>Rappresentazione in forma di stringa dell'oggetto <see cref="T:System.Data.Entity.Core.Mapping.EntityTypeModificationFunctionMapping" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.EntityTypeModificationFunctionMapping.UpdateFunctionMapping">
      <summary>Ottiene il mapping per l'aggiornamento di una funzione.</summary>
      <returns>Mapping per l'aggiornamento di una funzione.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.EntityViewContainer">
      <summary>Classe di base per il tipo creato in fase di progettazione per archiviare le viste generate.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.EntityViewContainer.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Mapping.EntityViewContainer" />.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.EntityViewContainer.EdmEntityContainerName">
      <summary>Ottiene o imposta il nome dell'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityContainer" />.</summary>
      <returns>Nome del contenitore.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.EntityViewContainer.GetViewAt(System.Int32)">
      <summary>Restituisce la coppia chiave/valore in corrispondenza dell'indice specificato contenente la vista e la relativa chiave.</summary>
      <returns>Coppia chiave-valore in corrispondenza dell'indice contenente la vista e la relativa chiave.</returns>
      <param name="index">Indice della vista.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.EntityViewContainer.HashOverAllExtentViews">
      <summary>Valore hash delle viste.</summary>
      <returns>Valore hash.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.EntityViewContainer.HashOverMappingClosure">
      <summary>Valore hash.</summary>
      <returns>Valore hash.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.EntityViewContainer.StoreEntityContainerName">
      <summary>Ottiene o imposta <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityContainer" /> nello schema di archiviazione.</summary>
      <returns>Nome del contenitore.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.EntityViewContainer.ViewCount">
      <summary>Ottiene o imposta il conteggio delle viste.</summary>
      <returns>Conteggio delle viste.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.EntityViewGenerationAttribute">
      <summary>Attributo per contrassegnare gli assembly che contengono il tipo delle viste generate.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.EntityViewGenerationAttribute.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Mapping.EntityViewGenerationAttribute" />.</summary>
      <param name="viewGenerationType">Tipo di vista.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.EntityViewGenerationAttribute.ViewGenerationType">
      <summary>Ottiene l'oggetto T:System.Type della vista.</summary>
      <returns>Oggetto T:System.Type della vista.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.FunctionImportComplexTypeMapping">
      <summary>Rappresenta un mapping del tipo complesso per il risultato di un'importazione di funzione.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.FunctionImportComplexTypeMapping.#ctor(System.Data.Entity.Core.Metadata.Edm.ComplexType,System.Collections.ObjectModel.Collection{System.Data.Entity.Core.Mapping.FunctionImportReturnTypePropertyMapping})">
      <summary>Inizializza una nuova istanza di FunctionImportComplexTypeMapping</summary>
      <param name="returnType">Tipo restituito.</param>
      <param name="properties">Mapping della proprietà per il tipo di risultato di un'importazione di funzione.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.FunctionImportComplexTypeMapping.ReturnType">
      <summary>Ottiene il tipo restituito.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.FunctionImportEntityTypeMapping">
      <summary>Rappresenta un mapping del tipo di entità di importazione di funzione.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.FunctionImportEntityTypeMapping.#ctor(System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.EntityType},System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.EntityType},System.Collections.ObjectModel.Collection{System.Data.Entity.Core.Mapping.FunctionImportReturnTypePropertyMapping},System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Mapping.FunctionImportEntityTypeMappingCondition})">
      <summary>Inizializza una nuova istanza di FunctionImportEntityTypeMapping.</summary>
      <param name="isOfTypeEntityTypes">Tipi di entità alla base delle gerarchie del tipo di cui eseguire il mapping.</param>
      <param name="entityTypes">Tipi di entità di cui eseguire il mapping.</param>
      <param name="properties">Mapping della proprietà per i tipi di risultato di un'importazione di funzione.</param>
      <param name="conditions">Condizioni di mapping.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.FunctionImportEntityTypeMapping.Conditions">
      <summary>Ottiene le condizioni di mapping.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.FunctionImportEntityTypeMapping.EntityTypes">
      <summary>Ottiene i tipi di entità su viene eseguito il mapping.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.FunctionImportEntityTypeMapping.IsOfTypeEntityTypes">
      <summary>Ottiene i tipi di entità alla base delle gerarchie di cui viene eseguito il mapping.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.FunctionImportEntityTypeMappingCondition">
      <summary>Rappresenta una condizione di mapping per un risultato dell'importazione di funzione.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.FunctionImportEntityTypeMappingCondition.ColumnName">
      <summary>Ottiene il nome della colonna utilizzata per calcolare la condizione.</summary>
      <returns>Nome della colonna utilizzata per calcolare la condizione.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.FunctionImportEntityTypeMappingCondition.ToString">
      <summary>Converte il valore dell'istanza corrente nella rappresentazione di stringa equivalente.</summary>
      <returns>Rappresentazione di stringa dell'istanza corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.FunctionImportEntityTypeMappingConditionIsNull">
      <summary>Rappresenta una condizione di mapping tra il risultato dell'importazione di funzione, valutato controllando null o non null.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.FunctionImportEntityTypeMappingConditionIsNull.#ctor(System.String,System.Boolean)">
      <summary>Inizializza una nuova istanza di FunctionImportEntityTypeMappingConditionIsNull.</summary>
      <param name="columnName">Nome della colonna utilizzata per calcolare la condizione.</param>
      <param name="isNull">Flag che indica se viene eseguito un controllo null o non null.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.FunctionImportEntityTypeMappingConditionIsNull.IsNull">
      <summary>Ottiene un flag che indica se viene eseguito un controllo null o non null.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.FunctionImportEntityTypeMappingConditionValue">
      <summary>Rappresenta una condizione di mapping tra il risultato dell'importazione di funzione, valutato in confronto a un valore specificato.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.FunctionImportEntityTypeMappingConditionValue.#ctor(System.String,System.Object)">
      <summary>Inizializza una nuova istanza di FunctionImportEntityTypeMappingConditionValue.</summary>
      <param name="columnName">Nome della colonna utilizzata per calcolare la condizione.</param>
      <param name="value">Valore da confrontare.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.FunctionImportEntityTypeMappingConditionValue.Value">
      <summary>Ottiene il valore utilizzato nel confronto.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.FunctionImportMapping">
      <summary>Rappresenta un mapping dall'importazione di funzioni in un modello a una funzione componibile o non componibile dell'archivio.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.FunctionImportMapping.FunctionImport">
      <summary>Ottiene la funzione del modello (o origine del mapping)</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.FunctionImportMapping.TargetFunction">
      <summary>Ottiene la funzione dell'archivio (o destinazione del mapping)</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.FunctionImportMappingComposable">
      <summary>Rappresenta un mapping dall'importazione di funzioni in un modello a una funzione componibile dell'archivio.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.FunctionImportMappingComposable.#ctor(System.Data.Entity.Core.Metadata.Edm.EdmFunction,System.Data.Entity.Core.Metadata.Edm.EdmFunction,System.Data.Entity.Core.Mapping.FunctionImportResultMapping,System.Data.Entity.Core.Mapping.EntityContainerMapping)">
      <summary>Inizializza una nuova istanza di FunctionImportMappingComposable.</summary>
      <param name="functionImport">Importazione della funzione di modello.</param>
      <param name="targetFunction">Funzione componibile dell'archivio.</param>
      <param name="resultMapping">Mapping dei risultati per l'importazione di funzione.</param>
      <param name="containerMapping">Mapping del contenitore padre.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.FunctionImportMappingComposable.ResultMapping">
      <summary>Ottiene il mapping dei risultati per l'importazione di funzione.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.FunctionImportMappingNonComposable">
      <summary>Rappresenta un mapping dall'importazione di funzione di un modello a una funzione non componibile dell'archivio.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.FunctionImportMappingNonComposable.#ctor(System.Data.Entity.Core.Metadata.Edm.EdmFunction,System.Data.Entity.Core.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Mapping.FunctionImportResultMapping},System.Data.Entity.Core.Mapping.EntityContainerMapping)">
      <summary>Inizializza una nuova istanza di FunctionImportMappingNonComposable.</summary>
      <param name="functionImport">Importazione della funzione di modello.</param>
      <param name="targetFunction">Funzione non componibile dell'archivio.</param>
      <param name="resultMappings">Mapping dei risultati dell'importazione di funzione.</param>
      <param name="containerMapping">Mapping del contenitore padre.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.FunctionImportMappingNonComposable.ResultMappings">
      <summary>Ottiene i mapping dei risultati dell'importazione di funzione.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.FunctionImportResultMapping">
      <summary>Rappresenta un mapping del risultato per un'importazione di funzione.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.FunctionImportResultMapping.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Mapping.FunctionImportResultMapping" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.FunctionImportResultMapping.AddTypeMapping(System.Data.Entity.Core.Mapping.FunctionImportStructuralTypeMapping)">
      <summary>Aggiunge un mapping di tipo.</summary>
      <param name="typeMapping">Mapping di tipi da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.FunctionImportResultMapping.RemoveTypeMapping(System.Data.Entity.Core.Mapping.FunctionImportStructuralTypeMapping)">
      <summary>Rimuove un mapping di tipo.</summary>
      <param name="typeMapping">Mapping di tipo da rimuovere.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.FunctionImportResultMapping.TypeMappings">
      <summary>Ottiene i mapping del tipo.</summary>
      <returns>Mapping del tipo.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.FunctionImportReturnTypePropertyMapping">
      <summary>Classe di base per eseguire il mapping di una proprietà di un tipo restituito di importazione di funzione.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.FunctionImportReturnTypeScalarPropertyMapping">
      <summary>Esegue il mapping di una proprietà del tipo restituito di importazione di funzione a una colonna di tabella.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.FunctionImportReturnTypeScalarPropertyMapping.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza di FunctionImportReturnTypeScalarPropertyMapping.</summary>
      <param name="propertyName">Nome della proprietà di cui è stato eseguito il mapping.</param>
      <param name="columnName">Nome della colonna di cui è stato eseguito il mapping.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.FunctionImportReturnTypeScalarPropertyMapping.ColumnName">
      <summary>Ottiene il nome della colonna di cui è stato eseguito il mapping.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.FunctionImportReturnTypeScalarPropertyMapping.PropertyName">
      <summary>Ottiene il nome della proprietà di cui è stato eseguito il mapping.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.FunctionImportStructuralTypeMapping">
      <summary>Specifica un mapping del tipo strutturale dell'importazione di funzione.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.FunctionImportStructuralTypeMapping.PropertyMappings">
      <summary>Ottiene il mapping della proprietà per il tipo di risultato di un'importazione di funzione.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.IsNullConditionMapping">
      <summary>Specifica una condizione di mapping valutata controllando se il valore di una proprietà/colonna è null o non null.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.IsNullConditionMapping.#ctor(System.Data.Entity.Core.Metadata.Edm.EdmProperty,System.Boolean)">
      <summary>Crea un'istanza di IsNullConditionMapping.</summary>
      <param name="propertyOrColumn">Oggetto EdmProperty che specifica una proprietà o una colonna.</param>
      <param name="isNull">Valore booleano che indica se eseguire un controllo null o non null.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.IsNullConditionMapping.IsNull">
      <summary>Ottiene un valore booleano che specifica se la condizione viene valutata eseguendo un controllo null o non null.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.MappingBase">
      <summary>Rappresenta la classe dell'elemento di base per tutti i metadati di mapping</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.MappingFragment">
      <summary>Rappresenta i metadati per il frammento di mapping.Un set di frammenti di mapping compone i mapping di set (EntitySet, AssociationSet o CompositionSet ). Ogni MappingFragment fornisce il mapping per queste proprietà di un tipo con mapping a una singola tabella.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.MappingFragment.#ctor(System.Data.Entity.Core.Metadata.Edm.EntitySet,System.Data.Entity.Core.Mapping.TypeMapping,System.Boolean)">
      <summary>Crea un'istanza di MappingFragment.</summary>
      <param name="storeEntitySet">Oggetto EntitySet corrispondente alla tabella della visualizzazione di cui viene eseguito il mapping.</param>
      <param name="typeMapping">Oggetto TypeMapping che contiene l'oggetto MappingFragment.</param>
      <param name="makeColumnsDistinct">Flag che indica se includere "DISTINCT" quando viene eseguita una query.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.MappingFragment.AddCondition(System.Data.Entity.Core.Mapping.ConditionPropertyMapping)">
      <summary>Aggiunge la condizione del mapping di proprietà.</summary>
      <param name="condition">Condizione di mapping di proprietà da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.MappingFragment.AddPropertyMapping(System.Data.Entity.Core.Mapping.PropertyMapping)">
      <summary>Aggiunge un mapping di proprietà.</summary>
      <param name="propertyMapping">Mapping di proprietà da aggiungere.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.MappingFragment.Conditions">
      <summary>Ottiene una raccolta di sola lettura delle condizioni di mapping di proprietà.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.MappingFragment.MakeColumnsDistinct">
      <summary>Ottiene un flag che indica se includere "DISTINCT" quando viene eseguita una query.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.MappingFragment.PropertyMappings">
      <summary>Ottiene una raccolta di sola lettura dei mapping di proprietà.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.MappingFragment.RemoveCondition(System.Data.Entity.Core.Mapping.ConditionPropertyMapping)">
      <summary>Rimuove la condizione del mapping di proprietà.</summary>
      <param name="condition">Condizione di mapping di proprietà da rimuovere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.MappingFragment.RemovePropertyMapping(System.Data.Entity.Core.Mapping.PropertyMapping)">
      <summary>Rimuove un mapping di proprietà.</summary>
      <param name="propertyMapping">Mapping di proprietà da rimuovere.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.MappingFragment.StoreEntitySet">
      <summary>Ottiene l'oggetto EntitySet corrispondente alla tabella o della visualizzazione di cui viene eseguito il mapping.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.MappingFragment.TypeMapping">
      <summary>Ottiene l'oggetto TypeMapping che contiene l'oggetto MappingFragment.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.MappingItem">
      <summary>Rappresenta una classe di base per gli elementi nello spazio mapping (DataSpace.CSSpace).</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.MappingItem.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Mapping.MappingItem" />.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.MappingItemCollection">
      <summary>Classe per la rappresentazione di una raccolta di elementi di mapping nello spazio Edm.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.ModificationFunctionMapping">
      <summary>Descrive l'associazione di funzione di modifica per l'elaborazione delle modifiche di entità o associazioni.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.ModificationFunctionMapping.#ctor(System.Data.Entity.Core.Metadata.Edm.EntitySetBase,System.Data.Entity.Core.Metadata.Edm.EntityTypeBase,System.Data.Entity.Core.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Mapping.ModificationFunctionParameterBinding},System.Data.Entity.Core.Metadata.Edm.FunctionParameter,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Mapping.ModificationFunctionResultBinding})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Mapping.ModificationFunctionMapping" />.</summary>
      <param name="entitySet">Set di entità o associazioni.</param>
      <param name="entityType">Tipo di entità o associazione.</param>
      <param name="function">Metadati della funzione a cui eseguire l'associazione.</param>
      <param name="parameterBindings">Associazioni per i parametri della funzione.</param>
      <param name="rowsAffectedParameter">Parametro di output che produce il numero di righe interessate.</param>
      <param name="resultBindings">Associazioni per i risultati della valutazione della funzione</param>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.ModificationFunctionMapping.Function">
      <summary>Ottiene i metadati della funzione a cui eseguire l'associazione.</summary>
      <returns>Metadati della funzione a cui eseguire l'associazione.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.ModificationFunctionMapping.ParameterBindings">
      <summary>Ottiene le associazioni per i parametri della funzione.</summary>
      <returns>Associazioni per i parametri della funzione.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.ModificationFunctionMapping.ResultBindings">
      <summary>Ottiene le associazioni per i risultati della valutazione della funzione.</summary>
      <returns>Associazioni per i risultati della valutazione della funzione.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.ModificationFunctionMapping.RowsAffectedParameter">
      <summary>Ottiene il parametro di output che produce il numero di righe interessate.Può essere null.</summary>
      <returns>Parametro di output che produce il numero di righe interessate.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.ModificationFunctionMapping.ToString">
      <summary>Converte il valore di questa istanza nella rappresentazione di stringa equivalente.</summary>
      <returns>Rappresentazione di stringa di questa istanza.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.ModificationFunctionMemberPath">
      <summary>Descrive la posizione di un membro in una struttura di tipi di associazione o di entità.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.ModificationFunctionMemberPath.#ctor(System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.EdmMember},System.Data.Entity.Core.Metadata.Edm.AssociationSet)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Mapping.ModificationFunctionMemberPath" />.</summary>
      <param name="members">Membri nel percorso dalla foglia (il membro associato) alla radice della struttura.</param>
      <param name="associationSet">Set di associazioni a cui si sta passando tramite questo membro.Se il valore è null, non si tratta di un percorso di navigazione di membro.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.ModificationFunctionMemberPath.AssociationSetEnd">
      <summary>Ottiene il set di associazioni a cui si sta passando tramite questo membro.Se il valore è null, non si tratta di un percorso di navigazione di membro.</summary>
      <returns>Set di associazioni a cui si sta passando tramite questo membro.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.ModificationFunctionMemberPath.Members">
      <summary>Ottiene i membri nel percorso dalla foglia (il membro associato) alla radice della struttura.</summary>
      <returns>Membri nel percorso dalla foglia (il membro associato) alla radice della struttura.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.ModificationFunctionMemberPath.ToString">
      <summary>Converte il valore di questa istanza nella rappresentazione di stringa equivalente.</summary>
      <returns>Rappresentazione di stringa del valore di questa istanza.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.ModificationFunctionParameterBinding">
      <summary>Rappresenta l'associazione di un parametro della funzione di modifica a un membro dell'entità o dell'associazione modificata.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.ModificationFunctionParameterBinding.#ctor(System.Data.Entity.Core.Metadata.Edm.FunctionParameter,System.Data.Entity.Core.Mapping.ModificationFunctionMemberPath,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Mapping.ModificationFunctionParameterBinding" />.</summary>
      <param name="parameter">Parametro che accetta il valore.</param>
      <param name="memberPath">Percorso del membro dell'entità o dell'associazione che definisce il valore.</param>
      <param name="isCurrent">true per associare il valore del membro originale o corrente. In caso contrario, false.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.ModificationFunctionParameterBinding.IsCurrent">
      <summary>Ottiene un flag che indica se il valore del membro originale o corrente viene associato.</summary>
      <returns>true se si associa il valore del membro originale o corrente. In caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.ModificationFunctionParameterBinding.MemberPath">
      <summary>Ottiene il percorso del membro dell'entità o dell'associazione che definisce il valore.</summary>
      <returns>Percorso del membro dell'entità o dell'associazione che definisce il valore.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.ModificationFunctionParameterBinding.Parameter">
      <summary>Ottiene il parametro che accetta il valore.</summary>
      <returns>Parametro che accetta il valore.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.ModificationFunctionParameterBinding.ToString">
      <summary>Converte il valore di questa istanza nella rappresentazione di stringa equivalente usando il formato specificato.</summary>
      <returns>Rappresentazione di stringa del valore di questa istanza come specificato dal formato.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.ModificationFunctionResultBinding">
      <summary>Definisce un'associazione da una colonna denominata del set di risultati a un membro che accetta il valore.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.ModificationFunctionResultBinding.#ctor(System.String,System.Data.Entity.Core.Metadata.Edm.EdmProperty)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Mapping.ModificationFunctionResultBinding" />.</summary>
      <param name="columnName">Nome della colonna da associare dal set di risultati della funzione.</param>
      <param name="property">Proprietà da impostare nell'entità.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.ModificationFunctionResultBinding.ColumnName">
      <summary>Ottiene il nome della colonna da associare dal set di risultati della funzione.</summary>
      <returns>Nome della colonna da associare dal set di risultati della funzione.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.ModificationFunctionResultBinding.Property">
      <summary>Ottiene la proprietà da impostare nell'entità.</summary>
      <returns>Proprietà da impostare nell'entità.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.ModificationFunctionResultBinding.ToString">
      <summary>Converte il valore di questa istanza nella rappresentazione di stringa equivalente.</summary>
      <returns>Rappresentazione di stringa del valore di questa istanza.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.PropertyMapping">
      <summary>Metadati di mapping per tutti i tipi di mapping di proprietà.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.PropertyMapping.Property">
      <summary>Ottiene un oggetto EdmProperty che specifica la proprietà di cui è stato eseguito il mapping.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.ScalarPropertyMapping">
      <summary>Metadati di mapping per le proprietà scalari.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.ScalarPropertyMapping.#ctor(System.Data.Entity.Core.Metadata.Edm.EdmProperty,System.Data.Entity.Core.Metadata.Edm.EdmProperty)">
      <summary>Crea un mapping tra una proprietà semplice e una colonna.</summary>
      <param name="property">Proprietà di cui eseguire il mapping.</param>
      <param name="column">Colonna di cui eseguire il mapping.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.ScalarPropertyMapping.Column">
      <summary>Ottiene un oggetto EdmProperty che specifica la colonna di cui è stato eseguito il mapping.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.StorageMappingItemCollection">
      <summary>Rappresenta una raccolta di elementi nello spazio mapping di archiviazioni (mapping CS).</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.StorageMappingItemCollection.#ctor(System.Data.Entity.Core.Metadata.Edm.EdmItemCollection,System.Data.Entity.Core.Metadata.Edm.StoreItemCollection,System.Collections.Generic.IEnumerable{System.Xml.XmlReader})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Mapping.StorageMappingItemCollection" /> utilizzando gli oggetti <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmItemCollection" />, <see cref="T:System.Data.Entity.Core.Metadata.Edm.StoreItemCollection" /> e i lettori XML specificati.</summary>
      <param name="edmCollection">Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmItemCollection" /> che deve essere utilizzato dal mapping.</param>
      <param name="storeCollection">Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.StoreItemCollection" /> che deve essere utilizzato dal mapping.</param>
      <param name="xmlReaders">Lettori XML che devono essere utilizzati dal mapping.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.StorageMappingItemCollection.#ctor(System.Data.Entity.Core.Metadata.Edm.EdmItemCollection,System.Data.Entity.Core.Metadata.Edm.StoreItemCollection,System.String[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Mapping.StorageMappingItemCollection" /> utilizzando gli oggetti <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmItemCollection" /> e <see cref="T:System.Data.Entity.Core.Metadata.Edm.StoreItemCollection" /> specificati e una raccolta di stringhe indicanti i percorsi dei file di metadati.</summary>
      <param name="edmCollection">Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmItemCollection" /> che deve essere utilizzato dal mapping.</param>
      <param name="storeCollection">Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.StoreItemCollection" /> che deve essere utilizzato dal mapping.</param>
      <param name="filePaths">Percorsi di file che devono essere utilizzati dal mapping.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.StorageMappingItemCollection.ComputeMappingHashValue">
      <summary>Calcola un valore hash per il mapping del contenitore singolo nella raccolta.</summary>
      <returns>Stringa che specifica il valore hash calcolato.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.StorageMappingItemCollection.ComputeMappingHashValue(System.String,System.String)">
      <summary>Calcola un valore hash per il mapping dei contenitori specificato dai nomi dei contenitori di cui è stato eseguito il mapping.</summary>
      <returns>Stringa che specifica il valore hash calcolato.</returns>
      <param name="conceptualModelContainerName">Nome di un contenitore nel modello concettuale.</param>
      <param name="storeModelContainerName">Nome di un contenitore nel modello di archivio.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.StorageMappingItemCollection.Create(System.Data.Entity.Core.Metadata.Edm.EdmItemCollection,System.Data.Entity.Core.Metadata.Edm.StoreItemCollection,System.Collections.Generic.IEnumerable{System.Xml.XmlReader},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.Data.Entity.Core.Metadata.Edm.EdmSchemaError}@)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Mapping.StorageMappingItemCollection" />.</summary>
      <returns>Istanza di <see cref="P:System.Data.Entity.Core.Mapping.StorageMappingItemCollection.EdmItemCollection" /> se non vengono rilevati errori.In caso contrario, null.</returns>
      <param name="edmItemCollection">Raccolta di metadati EDM di cui eseguire il mapping.Non deve essere null.</param>
      <param name="storeItemCollection">Raccolta di metadati dell'archivio di cui eseguire il mapping.Non deve essere null.</param>
      <param name="xmlReaders">Elementi MSL da caricare.Non deve essere null.</param>
      <param name="filePaths">Percorsi degli elementi MSL.Utilizzato nei messaggi di errore.Può essere null, nel qual caso l'URI di base di XmlReader verrà utilizzato come percorso.</param>
      <param name="errors">Raccolta di errori rilevati durante il caricamento.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.StorageMappingItemCollection.GenerateViews(System.Collections.Generic.IList{System.Data.Entity.Core.Metadata.Edm.EdmSchemaError})">
      <summary>Crea un dizionario di (extent, vista generata) per il mapping del contenitore singolo nella raccolta.</summary>
      <returns>Dizionario di ( <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySetBase" />, <see cref="T:System.Data.Entity.Infrastructure.MappingViews.DbMappingView" /> ) che specifica le viste generate.</returns>
      <param name="errors">Elenco che accumula gli errori potenziali.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.StorageMappingItemCollection.GenerateViews(System.String,System.String,System.Collections.Generic.IList{System.Data.Entity.Core.Metadata.Edm.EdmSchemaError})">
      <summary>Crea un dizionario di (extent, vista generata) per un mapping di contenitori specificato dai nomi dei contenitori di cui è stato eseguito il mapping.</summary>
      <returns>Dizionario di ( <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySetBase" />, <see cref="T:System.Data.Entity.Infrastructure.MappingViews.DbMappingView" /> ) che specifica le viste generate.</returns>
      <param name="conceptualModelContainerName">Nome di un contenitore nel modello concettuale.</param>
      <param name="storeModelContainerName">Nome di un contenitore nel modello di archivio.</param>
      <param name="errors">Elenco che accumula gli errori potenziali.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.StorageMappingItemCollection.MappingVersion">
      <summary>Ottiene la versione di questo oggetto <see cref="T:System.Data.Entity.Core.Mapping.StorageMappingItemCollection" />.</summary>
      <returns>Versione di questo oggetto <see cref="T:System.Data.Entity.Core.Mapping.StorageMappingItemCollection" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.StorageMappingItemCollection.MappingViewCacheFactory">
      <summary>Ottiene o imposta un oggetto <see cref="T:System.Data.Entity.Infrastructure.MappingViews.DbMappingViewCacheFactory" /> per la creazione di istanze di <see cref="T:System.Data.Entity.Infrastructure.MappingViews.DbMappingViewCache" /> utilizzate per recuperare le viste di mapping pregenerate.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Infrastructure.MappingViews.DbMappingViewCacheFactory" /> per la creazione di istanze di <see cref="T:System.Data.Entity.Infrastructure.MappingViews.DbMappingViewCache" /> usate per recuperare le viste di mapping pregenerate.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.StructuralTypeMapping">
      <summary>Specifica un mapping di tipo strutturale.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.StructuralTypeMapping.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Mapping.StructuralTypeMapping" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.StructuralTypeMapping.AddCondition(System.Data.Entity.Core.Mapping.ConditionPropertyMapping)">
      <summary>Aggiunge la condizione del mapping di proprietà.</summary>
      <param name="condition">Condizione di mapping di proprietà da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.StructuralTypeMapping.AddPropertyMapping(System.Data.Entity.Core.Mapping.PropertyMapping)">
      <summary>Aggiunge un mapping di proprietà.</summary>
      <param name="propertyMapping">Mapping di proprietà da aggiungere.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.StructuralTypeMapping.Conditions">
      <summary>Ottiene una raccolta di sola lettura delle condizioni di mapping di proprietà.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.StructuralTypeMapping.PropertyMappings">
      <summary>Ottiene una raccolta di sola lettura dei mapping di proprietà.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.StructuralTypeMapping.RemoveCondition(System.Data.Entity.Core.Mapping.ConditionPropertyMapping)">
      <summary>Rimuove la condizione del mapping di proprietà.</summary>
      <param name="condition">Condizione di mapping di proprietà da rimuovere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.StructuralTypeMapping.RemovePropertyMapping(System.Data.Entity.Core.Mapping.PropertyMapping)">
      <summary>Rimuove un mapping di proprietà.</summary>
      <param name="propertyMapping">Mapping di proprietà da rimuovere.</param>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.TypeMapping">
      <summary>Rappresenta i metadati di mapping per una mappa del tipo nello spazio CS.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Mapping.ValueConditionMapping">
      <summary>Specifica una condizione di mapping valutata confrontando il valore di una proprietà o di una colonna con un valore specificato.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Mapping.ValueConditionMapping.#ctor(System.Data.Entity.Core.Metadata.Edm.EdmProperty,System.Object)">
      <summary>Crea un'istanza di ValueConditionMapping.</summary>
      <param name="propertyOrColumn">Oggetto EdmProperty che specifica una proprietà o una colonna.</param>
      <param name="value">Oggetto che specifica il valore da confrontare.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Mapping.ValueConditionMapping.Value">
      <summary>Ottiene un oggetto che specifica il valore da confrontare.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.AssociationEndMember">
      <summary>Rappresenta un'entità finale di un tipo di associazione</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.AssociationEndMember.BuiltInTypeKind">
      <summary>Ottiene il tipo del tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.AssociationEndMember" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind" /> che rappresenta il tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.AssociationEndMember" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.AssociationEndMember.Create(System.String,System.Data.Entity.Core.Metadata.Edm.RefType,System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity,System.Data.Entity.Core.Metadata.Edm.OperationAction,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.MetadataProperty})">
      <summary>Crea un'istanza di AssociationEndMember di sola lettura.</summary>
      <returns>Istanza di AssociationEndMember appena creata.</returns>
      <param name="name">Nome del membro dell'entità finale dell'associazione.</param>
      <param name="endRefType">Tipo di riferimento per l'entità finale.</param>
      <param name="multiplicity">Molteplicità dell'entità finale.</param>
      <param name="deleteAction">Flag che indica il comportamento di eliminazione dell'entità finale.</param>
      <param name="metadataProperties">Proprietà dei metadati da associare all'istanza.</param>
      <exception cref="T:System.ArgumentException">Il nome specificato è Null o vuoto.</exception>
      <exception cref="T:System.ArgumentNullException">Il tipo di riferimento specificato è Null.</exception>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.AssociationSet">
      <summary>Classe per la rappresentazione di un set di associazioni</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.AssociationSet.AssociationSetEnds">
      <summary>Ottiene le entità finali di <see cref="T:System.Data.Entity.Core.Metadata.Edm.AssociationSet" />.</summary>
      <returns>Raccolta di tipo <see cref="T:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1" /> che contiene le entità finali di <see cref="T:System.Data.Entity.Core.Metadata.Edm.AssociationSet" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.AssociationSet.BuiltInTypeKind">
      <summary>Ottiene il tipo del tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.AssociationSet" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind" /> che rappresenta il tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.AssociationSet" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.AssociationSet.Create(System.String,System.Data.Entity.Core.Metadata.Edm.AssociationType,System.Data.Entity.Core.Metadata.Edm.EntitySet,System.Data.Entity.Core.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.MetadataProperty})">
      <summary>Crea un'istanza di AssociationSet di sola lettura dai parametri specificati.</summary>
      <returns>Istanza di AssociationSet appena creata.</returns>
      <param name="name">Nome del set di associazioni.</param>
      <param name="type">Tipo di associazione degli elementi nel set di associazioni.</param>
      <param name="sourceSet">Set di entità per l'entità finale del set di associazioni di origine.</param>
      <param name="targetSet">Set di entità per l'entità finale del set di associazioni di destinazione.</param>
      <param name="metadataProperties">Proprietà dei metadati da associare all'istanza.</param>
      <exception cref="T:System.ArgumentException">Il nome specificato è Null o vuoto.</exception>
      <exception cref="T:System.ArgumentNullException">Il tipo di associazione specificato è Null.</exception>
      <exception cref="T:System.ArgumentException">Il tipo di una delle entità finali del tipo di associazione specificato non corrisponde al tipo di entità finale del set di entità corrispondente.</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.AssociationSet.ElementType">
      <summary>Ottiene l'associazione correlata a <see cref="T:System.Data.Entity.Core.Metadata.Edm.AssociationSet" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.AssociationType" /> che rappresenta l'associazione correlata a <see cref="T:System.Data.Entity.Core.Metadata.Edm.AssociationSet" />.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.AssociationSetEnd">
      <summary>Classe che rappresenta l'entità finale di AssociationSet</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.AssociationSetEnd.BuiltInTypeKind">
      <summary>Ottiene il tipo del tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.AssociationSetEnd" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind" /> che rappresenta il tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.AssociationSetEnd" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.AssociationSetEnd.CorrespondingAssociationEndMember">
      <summary>Ottiene il membro End a cui corrisponde questo oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.AssociationSetEnd" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.AssociationEndMember" /> che rappresenta il membro End a cui corrisponde questo oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.AssociationSetEnd" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.AssociationSetEnd.EntitySet">
      <summary>Ottiene il set di entità a cui fa riferimento il ruolo End.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySet" /> che rappresenta il set di entità a cui fa riferimento questo ruolo End.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.AssociationSetEnd.Name">
      <summary>Ottiene il nome dell'entità finale per <see cref="T:System.Data.Entity.Core.Metadata.Edm.AssociationSetEnd" />.</summary>
      <returns>Nome dell'entità finale per <see cref="T:System.Data.Entity.Core.Metadata.Edm.AssociationSetEnd" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.AssociationSetEnd.ParentAssociationSet">
      <summary>Ottiene il set di associazioni padre di <see cref="T:System.Data.Entity.Core.Metadata.Edm.AssociationSetEnd" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.AssociationSet" /> che rappresenta il set di associazioni padre di <see cref="T:System.Data.Entity.Core.Metadata.Edm.AssociationSetEnd" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.AssociationSetEnd.Role">
      <summary>Ottiene il nome del ruolo End per <see cref="T:System.Data.Entity.Core.Metadata.Edm.AssociationSetEnd" />.</summary>
      <returns>Nome del ruolo End per <see cref="T:System.Data.Entity.Core.Metadata.Edm.AssociationSetEnd" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.AssociationSetEnd.ToString">
      <summary>Restituisce il nome del ruolo End per <see cref="T:System.Data.Entity.Core.Metadata.Edm.AssociationSetEnd" />.</summary>
      <returns>Nome del ruolo End per <see cref="T:System.Data.Entity.Core.Metadata.Edm.AssociationSetEnd" />.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.AssociationType">
      <summary>Descrive un'associazione/relazione tra due entità nel modello concettuale o una relazione di chiave esterna tra due tabelle nel modello di archivio.Nel modello concettuale la classe dipendente può definire o meno una proprietà di chiave esterna.Se la chiave esterna viene definita, la proprietà <see cref="P:System.Data.Entity.Core.Metadata.Edm.AssociationType.IsForeignKey" /> sarà true e la proprietà <see cref="P:System.Data.Entity.Core.Metadata.Edm.AssociationType.Constraint" /> conterrà i dettagli delle chiavi esterne</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.AssociationType.AssociationEndMembers">
      <summary>Ottiene l'elenco di entità finali per <see cref="T:System.Data.Entity.Core.Metadata.Edm.AssociationType" />.</summary>
      <returns>Raccolta di tipo <see cref="T:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1" /> che contiene l'elenco di entità finali per <see cref="T:System.Data.Entity.Core.Metadata.Edm.AssociationType" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.AssociationType.BuiltInTypeKind">
      <summary>Ottiene il tipo del tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.AssociationType" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind" /> che rappresenta il tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.AssociationType" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.AssociationType.Constraint">
      <summary>Ottiene o imposta il vincolo referenziale.</summary>
      <returns>Vincolo referenziale.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.AssociationType.Create(System.String,System.String,System.Boolean,System.Data.Entity.Core.Metadata.Edm.DataSpace,System.Data.Entity.Core.Metadata.Edm.AssociationEndMember,System.Data.Entity.Core.Metadata.Edm.AssociationEndMember,System.Data.Entity.Core.Metadata.Edm.ReferentialConstraint,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.MetadataProperty})">
      <summary>Crea un'istanza di AssociationType di sola lettura dai parametri specificati.</summary>
      <returns>Istanza di AssociationType appena creata.</returns>
      <param name="name">Nome del tipo del set di associazioni.</param>
      <param name="namespaceName">Spazio dei nomi del tipo di associazione.</param>
      <param name="foreignKey">Flag che indica una relazione di chiave esterna (FK, foreign key).</param>
      <param name="dataSpace">Spazio dati del tipo di associazione.</param>
      <param name="sourceEnd">Membro dell'entità finale dell'associazione di origine.</param>
      <param name="targetEnd">Membro dell'entità finale dell'associazione di destinazione.</param>
      <param name="constraint">Vincolo referenziale.</param>
      <param name="metadataProperties">Proprietà dei metadati da associare all'istanza.</param>
      <exception cref="T:System.ArgumentException">Il nome specificato è Null o vuoto.</exception>
      <exception cref="T:System.ArgumentException">Lo spazio dei nomi specificato è Null o vuoto.</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.AssociationType.IsForeignKey">
      <summary>Ottiene il valore della proprietà booleana che specifica se la colonna è una chiave esterna.</summary>
      <returns>Valore booleano che specifica se la colonna è una chiave esterna.Se true, la colonna è una chiave esterna.Se false (impostazione predefinita), la colonna non è una chiave esterna.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.AssociationType.ReferentialConstraints">
      <summary>Ottiene l'elenco di vincoli per <see cref="T:System.Data.Entity.Core.Metadata.Edm.AssociationType" />.</summary>
      <returns>Raccolta di tipo <see cref="T:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1" /> che contiene l'elenco di vincoli per <see cref="T:System.Data.Entity.Core.Metadata.Edm.AssociationType" />.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind">
      <summary>Elenco di tutti i tipi predefiniti</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.AssociationEndMember">
      <summary>Tipo di associazione</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.AssociationSet">
      <summary>Tipo di AssociationSet</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.AssociationSetEnd">
      <summary>Tipo di AssociationSetEnd</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.AssociationType">
      <summary>Tipo di associazione</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.CollectionKind">
      <summary>Tipo di raccolta</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.CollectionType">
      <summary>Tipo di raccolta</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.ComplexType">
      <summary>Tipo complesso</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.Documentation">
      <summary>Tipo di documentazione</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.EdmFunction">
      <summary>Tipo di EdmFunction</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.EdmMember">
      <summary>Tipo di EdmMember</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.EdmProperty">
      <summary>Tipo di EdmProperty</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.EdmType">
      <summary>Tipo Edm</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.EntityContainer">
      <summary>Tipo di contenitore di entità</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.EntitySet">
      <summary>Tipo di set di entità</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.EntitySetBase">
      <summary>Tipo di EntitySetBase</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.EntityType">
      <summary>Tipo di entità</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.EntityTypeBase">
      <summary>Tipo di base del tipo di entità</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.EnumMember">
      <summary>Tipo di membro enum</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.EnumType">
      <summary>Tipo di enumerazione</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.Facet">
      <summary>Tipo di facet</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.FunctionParameter">
      <summary>Tipo di parametro di funzione</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.GlobalItem">
      <summary>Tipo di elemento globale</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.MetadataItem">
      <summary>Tipo di elemento dei metadati</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.MetadataProperty">
      <summary>Tipo di proprietà di metadati</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.NavigationProperty">
      <summary>Tipo di proprietà di navigazione</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.OperationAction">
      <summary>Tipo di DeleteAction</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.ParameterMode">
      <summary>Tipo di modalità parametro</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.PrimitiveType">
      <summary>Tipo primitivo</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.PrimitiveTypeKind">
      <summary>Tipo primitivo</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.ProviderManifest">
      <summary>Tipo di ProviderManifest</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.ReferentialConstraint">
      <summary>Tipo di vincolo referenziale</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.RefType">
      <summary>Tipo di riferimento</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.RelationshipEndMember">
      <summary>Tipo di RelationshipEnd</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.RelationshipMultiplicity">
      <summary>Tipo di molteplicità della relazione</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.RelationshipSet">
      <summary>Tipo di set di relazioni</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.RelationshipType">
      <summary>Tipo di relazioni</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.RowType">
      <summary>Tipo di riga</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.SimpleType">
      <summary>Tipo semplice</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.StructuralType">
      <summary>Tipo strutturale</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind.TypeUsage">
      <summary>Tipo di informazioni</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.CollectionKind">
      <summary>Tipo di raccolta (applicato a Proprietà)</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.CollectionKind.Bag">
      <summary>La raccolta utilizza la semantica dei contenitori (senza ordine e con ammissione dei duplicati)</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.CollectionKind.List">
      <summary>La raccolta utilizza la semantica degli elenchi (ordine deterministico e ammissione dei duplicati)</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.CollectionKind.None">
      <summary>La proprietà non è una raccolta</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.CollectionType">
      <summary>Rappresenta il tipo di raccolta Edm</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.CollectionType.BuiltInTypeKind">
      <summary>Ottiene il tipo del tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.CollectionType" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind" /> che rappresenta il tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.CollectionType" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.CollectionType.TypeUsage">
      <summary>Ottiene l'istanza della classe <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" /> che contiene il tipo dell'elemento incluso nell'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.CollectionType" /> corrente e i facet per il tipo.</summary>
      <returns>Istanza della classe <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" /> che contiene il tipo dell'elemento incluso nell'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.CollectionType" /> corrente e i facet per il tipo.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.ComplexType">
      <summary>Rappresenta il tipo complesso Edm.Può essere utilizzato per configurare i tipi complessi da una convenzione basata su modello di spazio concettuale.I tipi complessi non sono supportati nel modello di archivio.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.ComplexType.BuiltInTypeKind">
      <summary>Ottiene il tipo del tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.ComplexType" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind" /> che rappresenta il tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.ComplexType" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ComplexType.Create(System.String,System.String,System.Data.Entity.Core.Metadata.Edm.DataSpace,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.EdmMember},System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.MetadataProperty})">
      <summary>Crea una nuova istanza del tipo <see cref="T:System.Data.Entity.Core.Metadata.Edm.ComplexType" />.</summary>
      <returns>Nuova istanza del tipo <see cref="T:System.Data.Entity.Core.Metadata.Edm.ComplexType" />.</returns>
      <param name="name">Nome del tipo complesso.</param>
      <param name="namespaceName">Spazio dei nomi del tipo complesso.</param>
      <param name="dataSpace">Spazio dati a cui appartiene il tipo complesso.</param>
      <param name="members">Membri del tipo complesso.</param>
      <param name="metadataProperties">Proprietà dei metadati da associare all'istanza.</param>
      <exception cref="T:System.ArgumentNullException">Generata se l'argomento nome, spazio dei nomi o membri è Null.</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.ComplexType.Properties">
      <summary>Ottiene l'elenco di proprietà per <see cref="T:System.Data.Entity.Core.Metadata.Edm.ComplexType" />.</summary>
      <returns>Raccolta di tipo <see cref="T:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1" /> che contiene l'elenco di proprietà per <see cref="T:System.Data.Entity.Core.Metadata.Edm.ComplexType" />.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.ConcurrencyMode">
      <summary>Modalità concorrenza per le proprietà.</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.ConcurrencyMode.Fixed">
      <summary>Modalità concorrenza fissa: la proprietà viene sempre convalidata in fase di scrittura</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.ConcurrencyMode.None">
      <summary>Modalità concorrenza predefinita: la proprietà non viene mai convalidata in fase di scrittura</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.CsdlSerializer">
      <summary>Serializza un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmModel" /> conforme alle restrizioni di un singolo file dello schema CSDL in un writer XML.Il modello da serializzare deve contenere un singolo oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityContainer" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.CsdlSerializer.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Metadata.Edm.CsdlSerializer" />.</summary>
    </member>
    <member name="E:System.Data.Entity.Core.Metadata.Edm.CsdlSerializer.OnError">
      <summary>Si verifica quando viene individuato un errore durante la serializzazione del modello.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.CsdlSerializer.Serialize(System.Data.Entity.Core.Metadata.Edm.EdmModel,System.Xml.XmlWriter,System.String)">
      <summary>Serializza l'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmModel" /> in XmlWriter.</summary>
      <returns>true se il modello è valido. In caso contrario, false.</returns>
      <param name="model">EdmModel da serializzare.</param>
      <param name="xmlWriter">XmlWriter in cui serializzare.</param>
      <param name="modelNamespace">Spazio dei nomi serializzato del modello.</param>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.DataModelErrorEventArgs">
      <summary>Rappresenta informazioni su un errore che si è verificato durante l'elaborazione di un modello Entity Framework.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.DataModelErrorEventArgs.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Metadata.Edm.DataModelErrorEventArgs" />.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.DataModelErrorEventArgs.ErrorMessage">
      <summary>Ottiene un messaggio descrittivo facoltativo che descrive l'errore generato.</summary>
      <returns>Messaggio descrittivo facoltativo che descrive l'errore generato.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.DataModelErrorEventArgs.Item">
      <summary>Ottiene un valore che indica l'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataItem" /> che ha causato la generazione dell'evento.</summary>
      <returns>true se l'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataItem" /> ha causato la generazione dell'evento. In caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.DataModelErrorEventArgs.PropertyName">
      <summary>Ottiene un valore facoltativo che indica la proprietà dell'elemento di origine che ha causato la generazione dell'evento.</summary>
      <returns>Valore facoltativo che indica la proprietà dell'elemento di origine che ha causato la generazione dell'evento.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.DataSpace">
      <summary>DataSpace</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.DataSpace.CSpace">
      <summary>CSpace indica l'elemento nello spazio CS - tipi primitivi edm + tipi definiti in CSDL</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.DataSpace.CSSpace">
      <summary>Mapping tra spazio C e spazio S</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.DataSpace.OCSpace">
      <summary>Mapping tra spazio O e spazio C</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.DataSpace.OSpace">
      <summary>OSpace indica l'elemento nello spazio CLR</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.DataSpace.SSpace">
      <summary>SSpace indica l'elemento nello spazio S</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.DbModelExtensions">
      <summary>Metodi di estensione per <see cref="T:System.Data.Entity.Infrastructure.DbModel" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.DbModelExtensions.GetConceptualModel(System.Data.Entity.Core.Metadata.Edm.IEdmModelAdapter)">
      <summary>Ottiene il modello concettuale dal DbModel specificato.</summary>
      <returns>Istanza di EdmModel che rappresenta il modello concettuale.</returns>
      <param name="model">Istanza di una classe che implementa IEdmModelAdapter (precedentementeDbModel).</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.DbModelExtensions.GetStoreModel(System.Data.Entity.Core.Metadata.Edm.IEdmModelAdapter)">
      <summary>Ottiene il modello di archivio dal DbModel specificato.</summary>
      <returns>Istanza di EdmModel che rappresenta il modello di archivio.</returns>
      <param name="model">Istanza di una classe che implementa IEdmModelAdapter (precedentementeDbModel).</param>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.Documentation">
      <summary>Classe che rappresenta l'elemento Documentation associato a un elemento</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.Documentation.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della documentazione.</summary>
      <param name="summary">Stringa di riepilogo.</param>
      <param name="longDescription">Stringa di descrizione lunga.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.Documentation.BuiltInTypeKind">
      <summary>Ottiene il tipo del tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.Documentation" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind" /> che rappresenta il tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.Documentation" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.Documentation.IsEmpty">
      <summary>Ottiene un valore che indica se questo oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.Documentation" /> contiene solo un valore Null o un oggetto <see cref="P:System.Data.Entity.Core.Metadata.Edm.Documentation.Summary" /> vuoto e un oggetto <see cref="P:System.Data.Entity.Core.Metadata.Edm.Documentation.Longdescription" />.</summary>
      <returns>True se questo oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.Documentation" /> contiene solo un valore Null o un oggetto <see cref="P:System.Data.Entity.Core.Metadata.Edm.Documentation.Summary" /> vuoto e un oggetto <see cref="P:System.Data.Entity.Core.Metadata.Edm.Documentation.LongDescription" />; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.Documentation.LongDescription">
      <summary>Ottiene la descrizione lunga per <see cref="T:System.Data.Entity.Core.Metadata.Edm.Documentation" />.</summary>
      <returns>Descrizione lunga per <see cref="T:System.Data.Entity.Core.Metadata.Edm.Documentation" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.Documentation.Summary">
      <summary>Ottiene il riepilogo per <see cref="T:System.Data.Entity.Core.Metadata.Edm.Documentation" />.</summary>
      <returns>Riepilogo per <see cref="T:System.Data.Entity.Core.Metadata.Edm.Documentation" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.Documentation.ToString">
      <summary>Restituisce il riepilogo per <see cref="T:System.Data.Entity.Core.Metadata.Edm.Documentation" />.</summary>
      <returns>Riepilogo per <see cref="T:System.Data.Entity.Core.Metadata.Edm.Documentation" />.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.EdmError">
      <summary>Questa classe incapsula le informazioni per un errore EDM generico.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmError.Message">
      <summary>Ottiene il messaggio di errore.</summary>
      <returns>Messaggio di errore.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.EdmFunction">
      <summary>Classe per la rappresentazione di una funzione</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EdmFunction.AddParameter(System.Data.Entity.Core.Metadata.Edm.FunctionParameter)">
      <summary>Aggiunge un parametro alla funzione.</summary>
      <param name="functionParameter">Parametro da aggiungere.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmFunction.AggregateAttribute">
      <summary>Ottiene l'attributo di aggregazione di questa funzione.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmFunction.BuiltInAttribute">
      <summary>Ottiene un valore che indica se l'attributo predefinito è presente in questa funzione.</summary>
      <returns>true se l’attributo è presente; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmFunction.BuiltInTypeKind">
      <summary>Ottiene il tipo del tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmFunction" />.</summary>
      <returns>Uno dei valori dell'enumerazione <see cref="T:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmFunction.CommandTextAttribute">
      <summary>Ottiene una query nel linguaggio utilizzato dal sistema di gestione di database o dal modello di archiviazione.</summary>
      <returns>Valore stringa nella sintassi utilizzata dal sistema di gestione di database o dal modello di archiviazione che contiene la query o l'istruzione di aggiornamento di <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmFunction" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EdmFunction.Create(System.String,System.String,System.Data.Entity.Core.Metadata.Edm.DataSpace,System.Data.Entity.Core.Metadata.Edm.EdmFunctionPayload,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.MetadataProperty})">
      <summary>Metodo factory per la costruzione dell'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmFunction" />.</summary>
      <returns>Nuova istanza di sola lettura del tipo <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmFunction" />.</returns>
      <param name="name">Nome della funzione.</param>
      <param name="namespaceName">Spazio dei nomi della funzione.</param>
      <param name="dataSpace">Spazio dei nomi a cui appartiene la funzione.</param>
      <param name="payload">Proprietà e attributi aggiuntivi della funzione.</param>
      <param name="metadataProperties">Proprietà dei metadati che verranno aggiunti alla funzione.Può essere null.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmFunction.FullName">
      <summary>Restituisce il nome completo del tipo, ovvero spazio dei nomi e nome.</summary>
      <returns>Nome completo del tipo.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmFunction.IsComposableAttribute">
      <summary>Ottiene un valore che indica se il mapping di questa istanza è stato eseguito a una funzione o a una stored procedure.</summary>
      <returns>true se il mapping di questa istanza è stato eseguito a una funzione; false se il mapping di questa istanza è stato eseguito a una stored procedure.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmFunction.IsFromProviderManifest">
      <summary>Ottiene un valore che indica se questa istanza proviene dal manifesto del provider.</summary>
      <returns>true se questa istanza proviene dal manifesto del provider; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmFunction.NiladicFunctionAttribute">
      <summary>Ottiene un valore che indica se si tratta di una funzione senza parametri (funzione che non accetta argomenti).</summary>
      <returns>true se la funzione è senza parametri; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmFunction.Parameters">
      <summary>Ottiene i parametri di <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmFunction" />.</summary>
      <returns>Raccolta di tipo <see cref="T:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1" /> che contiene i parametri di <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmFunction" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmFunction.ParameterTypeSemanticsAttribute">
      <summary>Ottiene l'attributo di semantica del tipo di parametro di questa funzione.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmFunction.ReturnParameter">
      <summary>Ottiene il parametro restituito di <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmFunction" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.FunctionParameter" /> che rappresenta il parametro restituito di <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmFunction" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmFunction.ReturnParameters">
      <summary>Ottiene i parametri restituiti di <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmFunction" />.</summary>
      <returns>Raccolta di tipo <see cref="T:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1" /> che rappresenta i parametri restituiti di <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmFunction" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmFunction.Schema">
      <summary>Ottiene o imposta lo schema associato alla funzione.</summary>
      <returns>Schema associato alla funzione.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmFunction.StoreFunctionNameAttribute">
      <summary>Ottiene l'attributo del nome di funzione di archivio per questa funzione.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.EdmFunctionPayload">
      <summary>Contiene proprietà e attributi aggiuntivi dell'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmFunction" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EdmFunctionPayload.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmFunctionPayload" />.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmFunctionPayload.CommandText">
      <summary>Ottiene o imposta il testo del comando associato alla funzione.</summary>
      <returns>Testo del comando associato alla funzione.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmFunctionPayload.EntitySets">
      <summary>Ottiene o imposta i set di entità della funzione.</summary>
      <returns>Set di entità della funzione.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmFunctionPayload.IsAggregate">
      <summary>Ottiene un valore che indica se si tratta di una funzione di aggregazione.</summary>
      <returns>true se si tratta di una funzione di aggregazione; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmFunctionPayload.IsBuiltIn">
      <summary>Ottiene o imposta un valore che indica se questa funzione è una funzione predefinita.</summary>
      <returns>true se questa funzione è una funzione predefinita; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmFunctionPayload.IsCachedStoreFunction">
      <summary>Ottiene o imposta un valore che indica se questa funzione è una funzione di archivio memorizzata nella cache.</summary>
      <returns>true se questa funzione è una funzione di archivio memorizzata nella cache; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmFunctionPayload.IsComposable">
      <summary>Ottiene o imposta un valore che indica se questa funzione può essere composta.</summary>
      <returns>true se questa funzione può essere composta; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmFunctionPayload.IsFromProviderManifest">
      <summary>Ottiene o imposta un valore che indica se questa funzione proviene da un manifesto del provider.</summary>
      <returns>true se questa funzione proviene da un manifesto del provider; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmFunctionPayload.IsFunctionImport">
      <summary>Ottiene o imposta un valore che indica se questa funzione è un'importazione di funzione.</summary>
      <returns>true se questa funzione è un'importazione di funzione; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmFunctionPayload.IsNiladic">
      <summary>Ottiene o imposta un valore che indica se la funzione non contiene argomenti.</summary>
      <returns>true se la funzione non contiene argomenti; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmFunctionPayload.Parameters">
      <summary>Ottiene o imposta i parametri di funzione.</summary>
      <returns>Parametri di funzione.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmFunctionPayload.ParameterTypeSemantics">
      <summary>Ottiene o imposta la semantica del tipo di parametro.</summary>
      <returns>Semantica del tipo di parametro.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmFunctionPayload.ReturnParameters">
      <summary>Ottiene o imposta i parametri restituiti.</summary>
      <returns>Parametri restituiti.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmFunctionPayload.Schema">
      <summary>Ottiene o imposta lo schema della funzione.</summary>
      <returns>Schema della funzione.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmFunctionPayload.StoreFunctionName">
      <summary>Ottiene o imposta il nome funzione di archivio.</summary>
      <returns>Nome funzione di archivio.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.EdmItemCollection">
      <summary>Classe per la rappresentazione di una raccolta di elementi nello spazio Edm.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EdmItemCollection.#ctor(System.Collections.Generic.IEnumerable{System.Xml.XmlReader})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmItemCollection" /> utilizzando la raccolta degli oggetti XMLReader in cui sono presenti i file Conceptual Schema Definition Language (CSDL).</summary>
      <param name="xmlReaders">Raccolta degli oggetti XMLReader in cui sono presenti i file Conceptual Schema Definition Language (CSDL).</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EdmItemCollection.#ctor(System.Data.Entity.Core.Metadata.Edm.EdmModel)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmItemCollection" />.</summary>
      <param name="model">Entity Data Model.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EdmItemCollection.#ctor(System.String[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmItemCollection" /> utilizzando i percorsi in cui sono presenti i file Conceptual Schema Definition Language (CSDL).</summary>
      <param name="filePaths">Percorsi in cui sono presenti i file Conceptual Schema Definition Language (CSDL).</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EdmItemCollection.Create(System.Collections.Generic.IEnumerable{System.Xml.XmlReader},System.Collections.ObjectModel.ReadOnlyCollection{System.String},System.Collections.Generic.IList{System.Data.Entity.Core.Metadata.Edm.EdmSchemaError}@)">
      <summary>Metodo factory che crea un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmItemCollection" />.</summary>
      <returns>Istanza di <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmItemCollection" /> se non vengono rilevati errori.In caso contrario, null.</returns>
      <param name="xmlReaders">Elementi CSDL da caricare.Non deve essere null.</param>
      <param name="filePaths">Percorsi degli elementi CSDL.Utilizzato nei messaggi di errore.Può essere null, nel qual caso l'URI di base di XmlReader verrà utilizzato come percorso.</param>
      <param name="errors">Raccolta di errori rilevati durante il caricamento.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmItemCollection.EdmVersion">
      <summary>Ottiene la versione del modello concettuale per questa raccolta.</summary>
      <returns>Versione del modello concettuale per questa raccolta.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EdmItemCollection.GetPrimitiveTypes">
      <summary>Restituisce una raccolta degli oggetti <see cref="T:System.Data.Entity.Core.Metadata.Edm.PrimitiveType" />.</summary>
      <returns>Oggetto ReadOnlyCollection che rappresenta una raccolta degli oggetti <see cref="T:System.Data.Entity.Core.Metadata.Edm.PrimitiveType" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EdmItemCollection.GetPrimitiveTypes(System.Double)">
      <summary>Restituisce una raccolta degli oggetti <see cref="T:System.Data.Entity.Core.Metadata.Edm.PrimitiveType" /> con la versione del modello concettuale specificata.</summary>
      <returns>Oggetto ReadOnlyCollection che rappresenta una raccolta degli oggetti <see cref="T:System.Data.Entity.Core.Metadata.Edm.PrimitiveType" />.</returns>
      <param name="edmVersion">Versione del modello concettuale.</param>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.EdmMember">
      <summary>Rappresenta la classe di membri edm</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmMember.DeclaringType">
      <summary>Ottiene il tipo in cui è dichiarato il membro.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.StructuralType" /> che rappresenta il tipo in cui è dichiarato il membro.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmMember.IsStoreGeneratedComputed">
      <summary>Indica se il modello contrassegnato come membro calcolato nella definizione EDM</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmMember.IsStoreGeneratedIdentity">
      <summary>Indica se il modello generato dall'archivio del membro è contrassegnato come Identity nella definizione EDM</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmMember.Name">
      <summary>Ottiene o imposta il nome della proprietà.L'impostazione di questo oggetto da una convenzione modello di spazio di archivio modifica il nome della colonna del database per questa proprietà.Nel modello concettuale deve allinearsi con la proprietà corrispondente dalla classe di entità e non deve essere modificato.</summary>
      <returns>Nome del membro.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EdmMember.ToString">
      <summary>Restituisce il nome del membro.</summary>
      <returns>Nome del membro.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmMember.TypeUsage">
      <summary>Ottiene l'istanza della classe <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" /> che contiene il tipo del membro e i facet per il tipo.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" /> che contiene il tipo del membro e i facet per il tipo.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.EdmModel">
      <summary>Rappresenta un modello concettuale o di archivio.Questa classe può essere utilizzata per accedere alle informazioni sulla struttura del modello e sulla relativa modalità di configurazione.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EdmModel.AddItem(System.Data.Entity.Core.Metadata.Edm.AssociationType)">
      <summary>Aggiunge un tipo di associazione al modello.</summary>
      <param name="item">Istanza di AssociationType da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EdmModel.AddItem(System.Data.Entity.Core.Metadata.Edm.ComplexType)">
      <summary>Aggiunge un tipo complesso al modello.</summary>
      <param name="item">Istanza di ComplexType da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EdmModel.AddItem(System.Data.Entity.Core.Metadata.Edm.EdmFunction)">
      <summary>Aggiunge una funzione al modello.</summary>
      <param name="item">Istanza di EdmFunction da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EdmModel.AddItem(System.Data.Entity.Core.Metadata.Edm.EntityType)">
      <summary>Aggiunge un tipo di entità al modello.</summary>
      <param name="item">Istanza di EntityType da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EdmModel.AddItem(System.Data.Entity.Core.Metadata.Edm.EnumType)">
      <summary>Aggiunge un tipo di enumerazione al modello.</summary>
      <param name="item">Istanza di EnumType da aggiungere.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmModel.AssociationTypes">
      <summary>Ottiene i tipi di associazione del modello.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmModel.BuiltInTypeKind">
      <summary>Ottiene il tipo del tipo incorporato per il tipo.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind" /> che rappresenta il tipo del tipo incorporato per il tipo.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmModel.ComplexTypes">
      <summary>Ottiene i tipi complessi del modello.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmModel.Container">
      <summary>Ottiene il contenitore che archivia i set di entità e di associazioni e le importazioni di funzioni.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmModel.DataSpace">
      <summary>Ottiene lo spazio dati associato al modello, che indica se si tratta di un modello concettuale (DataSpace.CSpace) o di un modello di archivio (DataSpace.SSpace).</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmModel.EntityTypes">
      <summary>Ottiene i tipi di entità del modello.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmModel.EnumTypes">
      <summary>Ottiene i tipi enum del modello.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmModel.Functions">
      <summary>Ottiene le funzioni del modello.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmModel.GlobalItems">
      <summary>Ottiene gli elementi globali associati al modello.</summary>
      <returns>Elementi globali associati al modello.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EdmModel.RemoveItem(System.Data.Entity.Core.Metadata.Edm.AssociationType)">
      <summary>Rimuove un tipo di associazione dal modello.</summary>
      <param name="item">Istanza di AssociationType da rimuovere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EdmModel.RemoveItem(System.Data.Entity.Core.Metadata.Edm.ComplexType)">
      <summary>Rimuove un tipo complesso dal modello.</summary>
      <param name="item">Istanza di ComplexType da rimuovere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EdmModel.RemoveItem(System.Data.Entity.Core.Metadata.Edm.EdmFunction)">
      <summary>Rimuove una funzione dal modello.</summary>
      <param name="item">Istanza di EdmFunction da rimuovere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EdmModel.RemoveItem(System.Data.Entity.Core.Metadata.Edm.EntityType)">
      <summary>Rimuove un tipo di entità dal modello.</summary>
      <param name="item">Istanza di EntityType da rimuovere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EdmModel.RemoveItem(System.Data.Entity.Core.Metadata.Edm.EnumType)">
      <summary>Rimuove un tipo di enumerazione dal modello.</summary>
      <param name="item">Istanza di EnumType da rimuovere.</param>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.EdmProperty">
      <summary>In uno spazio concettuale EdmProperty rappresenta una proprietà in un elemento Entity.In uno spazio di archivio EdmProperty rappresenta una colonna in una tabella.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.BuiltInTypeKind">
      <summary>Ottiene il tipo del tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmProperty" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind" /> che rappresenta il tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmProperty" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.CollectionKind">
      <summary>Ottiene o imposta il tipo di raccolta per questo modello.</summary>
      <returns>Tipo di raccolta per questo modello.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.ComplexType">
      <summary>Ottiene le informazioni sul tipo complesso per questa proprietà.</summary>
      <returns>Informazioni sul tipo complesso per questa proprietà.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.ConcurrencyMode">
      <summary>Ottiene o imposta la modalità di concorrenza per la proprietà.</summary>
      <returns>Modalità di concorrenza per la proprietà.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EdmProperty.Create(System.String,System.Data.Entity.Core.Metadata.Edm.TypeUsage)">
      <summary>Crea una nuova istanza di un tipo EdmProperty.</summary>
      <returns>Nuova istanza di un tipo EdmProperty</returns>
      <param name="name">Nome della proprietà.</param>
      <param name="typeUsage">Proprietà <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" /></param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EdmProperty.CreateComplex(System.String,System.Data.Entity.Core.Metadata.Edm.ComplexType)">
      <summary>Crea una nuova proprietà complessa.</summary>
      <returns>Proprietà appena creata.</returns>
      <param name="name">Nome della proprietà.</param>
      <param name="complexType">Tipo della proprietà.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EdmProperty.CreateEnum(System.String,System.Data.Entity.Core.Metadata.Edm.EnumType)">
      <summary>Crea una nuova proprietà enum.</summary>
      <returns>Proprietà appena creata.</returns>
      <param name="name">Nome della proprietà.</param>
      <param name="enumType">Tipo della proprietà.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EdmProperty.CreatePrimitive(System.String,System.Data.Entity.Core.Metadata.Edm.PrimitiveType)">
      <summary>Crea una nuova proprietà primitiva.</summary>
      <returns>Proprietà appena creata.</returns>
      <param name="name">Nome della proprietà.</param>
      <param name="primitiveType">Tipo della proprietà.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.DefaultValue">
      <summary>Ottiene il valore predefinito per <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmProperty" />.</summary>
      <returns>Valore predefinito per <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmProperty" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.EnumType">
      <summary>Ottiene le informazioni sul tipo di enumerazione per questa proprietà.</summary>
      <returns>Informazioni sul tipo di enumerazione per questa proprietà.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsCollectionType">
      <summary>Ottiene un valore che indica se la proprietà è una proprietà di tipo raccolta.</summary>
      <returns>true se la proprietà è una proprietà di tipo raccolta; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsComplexType">
      <summary>Ottiene un valore che indica se la proprietà è una proprietà di tipo complesso.</summary>
      <returns>true se la proprietà è una proprietà di tipo complesso; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsEnumType">
      <summary>Ottiene un valore che indica se la proprietà è una proprietà di tipo enumerazione.</summary>
      <returns>true se la proprietà è una proprietà di tipo enumerazione; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsFixedLength">
      <summary>Ottiene o imposta un valore che indica se la lunghezza della proprietà è fissa.</summary>
      <returns>true se la lunghezza della proprietà è fissa; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsFixedLengthConstant">
      <summary>Ottiene un valore che indica se il facet FixedLength è costante per il provider di database.</summary>
      <returns>True se il facet è costante; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsMaxLength">
      <summary>Ottiene o imposta un valore che indica se questa proprietà utilizza la lunghezza massima supportata dal provider.</summary>
      <returns>True se questa proprietà utilizza la lunghezza massima supportata dal provider; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsMaxLengthConstant">
      <summary>Ottiene un valore che indica se il facet di lunghezza massima è costante per il provider di database.</summary>
      <returns>True se il facet è costante; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsPrecisionConstant">
      <summary>Ottiene un valore che indica se il facet Precision è costante per il provider di database.</summary>
      <returns>True se il facet è costante; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsPrimitiveType">
      <summary>Ottiene un valore che indica se la proprietà è un tipo primitivo.</summary>
      <returns>true se la proprietà è un tipo primitivo; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsScaleConstant">
      <summary>Ottiene un valore che indica se il facet Scale è costante per il provider di database.</summary>
      <returns>True se il facet è costante; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsUnderlyingPrimitiveType">
      <summary>Ottiene un valore che indica se la proprietà è un tipo primitivo sottostante.</summary>
      <returns>true se la proprietà è un tipo primitivo sottostante; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsUnicode">
      <summary>Ottiene o imposta un valore che indica se la proprietà è una proprietà Unicode.</summary>
      <returns>true se la proprietà è una proprietà Unicode; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsUnicodeConstant">
      <summary>Ottiene un valore che indica se il facet Unicode è costante per il provider di database.</summary>
      <returns>True se il facet è costante; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.MaxLength">
      <summary>Ottiene o imposta la lunghezza massima della proprietà.</summary>
      <returns>Lunghezza massima della proprietà.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.Nullable">
      <summary>Ottiene un valore che indica se <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmProperty" /> può avere un valore Null.</summary>
      <returns>True se <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmProperty" /> può avere valore Null; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.Precision">
      <summary>Ottiene o imposta la precisione di questa proprietà.</summary>
      <returns>Precisione della proprietà.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.PrimitiveType">
      <summary>Ottiene le informazioni sul tipo primitivo per questa proprietà.</summary>
      <returns>Informazioni sul tipo primitivo per questa proprietà.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.Scale">
      <summary>Ottiene o imposta la scala di questa proprietà.</summary>
      <returns>Scala della proprietà.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EdmProperty.SetMetadataProperties(System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.MetadataProperty})">
      <summary>Imposta le proprietà dei metadati.</summary>
      <param name="metadataProperties">Proprietà dei metadati da impostare.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.StoreGeneratedPattern">
      <summary>Ottiene o imposta il metodo di generazione database per la colonna di database associata a tale proprietà</summary>
      <returns>Modello generato dall'archivio per la proprietà.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.TypeName">
      <summary>Ottiene il nome del tipo della proprietà.</summary>
      <returns>Nome del tipo della proprietà.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.UnderlyingPrimitiveType">
      <summary>Ottiene le informazioni sul tipo primitivo sottostante per questa proprietà.</summary>
      <returns>Informazioni sul tipo primitivo sottostante per questa proprietà.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.EdmSchemaError">
      <summary>Questa classe incapsula le informazioni relative a un errore dello schema che si è verificato.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EdmSchemaError.#ctor(System.String,System.Int32,System.Data.Entity.Core.Metadata.Edm.EdmSchemaErrorSeverity)">
      <summary>Costruisce un oggetto EdmSchemaError.</summary>
      <param name="message">Spiegazione dell'errore.</param>
      <param name="errorCode">Codice associato all'errore.</param>
      <param name="severity">Gravità dell'errore.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmSchemaError.Column">
      <summary>Ottiene la colonna in cui si è verificato l'errore.</summary>
      <returns>Colonna in cui si è verificato l'errore.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmSchemaError.ErrorCode">
      <summary>Ottiene il codice di errore.</summary>
      <returns>Codice di errore.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmSchemaError.Line">
      <summary>Ottiene il numero di riga in cui si è verificato l'errore.</summary>
      <returns>Numero di riga in cui si è verificato l'errore.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmSchemaError.SchemaLocation">
      <summary>Ottiene la posizione dello schema che contiene l'errore.Questa stringa include anche il nome dello schema alla fine.</summary>
      <returns>Posizione dello schema che contiene l'errore.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmSchemaError.SchemaName">
      <summary>Ottiene il nome dello schema che contiene l'errore.</summary>
      <returns>Nome dello schema che contiene l'errore.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmSchemaError.Severity">
      <summary>Ottiene il livello di gravità dell'errore.</summary>
      <returns>Uno dei valori di <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmSchemaErrorSeverity" />.Il valore predefinito è <see cref="F:System.Data.Entity.Core.Metadata.Edm.EdmSchemaErrorSeverity.Warning" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmSchemaError.StackTrace">
      <summary>Ottiene una rappresentazione di stringa della traccia dello stack al verificarsi dell'errore.</summary>
      <returns>Rappresentazione di stringa della traccia dello stack al verificarsi dell'errore.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EdmSchemaError.ToString">
      <summary>Restituisce il messaggio di errore.</summary>
      <returns>Messaggio di errore.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.EdmSchemaErrorSeverity">
      <summary>Definisce i diversi livelli di gravità degli errori che possono verificarsi durante la convalida di un modello di Entity Framework.</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.EdmSchemaErrorSeverity.Error">
      <summary>Errore che impedisce l'utilizzo del modello.</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.EdmSchemaErrorSeverity.Warning">
      <summary>Avviso che non impedisce l'utilizzo del modello.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.EdmType">
      <summary>Classe EdmType di base per tutti i tipi di modello</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmType.Abstract">
      <summary>Ottiene un valore che indica se il tipo è o non è astratto.</summary>
      <returns>true se il tipo è astratto; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmType.BaseType">
      <summary>Ottiene il tipo di base del tipo.</summary>
      <returns>Tipo di base del tipo.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmType.FullName">
      <summary>Ottiene il nome completo del tipo.</summary>
      <returns>Nome completo del tipo.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EdmType.GetCollectionType">
      <summary>Restituisce un'istanza di <see cref="T:System.Data.Entity.Core.Metadata.Edm.CollectionType" /> il cui tipo di elemento è il tipo corrente.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.CollectionType" /> il cui tipo di elemento è il tipo corrente.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmType.Name">
      <summary>Ottiene il nome del tipo.</summary>
      <returns>Nome del tipo.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EdmType.NamespaceName">
      <summary>Ottiene lo spazio dei nomi del tipo.</summary>
      <returns>Spazio dei nomi del tipo.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EdmType.ToString">
      <summary>Restituisce il nome completo del tipo.</summary>
      <returns>Nome completo del tipo.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.EntityContainer">
      <summary>Classe per la rappresentazione di un contenitore di entità</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EntityContainer.#ctor(System.String,System.Data.Entity.Core.Metadata.Edm.DataSpace)">
      <summary>Crea un contenitore di entità con il nome e lo spazio dati specificati.</summary>
      <param name="name">Nome del contenitore di entità.</param>
      <param name="dataSpace">Spazio dati del contenitore di entità.</param>
      <exception cref="T:System.ArgumentNullException">Generata se il nome dell'argomento è Null.</exception>
      <exception cref="T:System.ArgumentException">Generata se l'argomento nome è una stringa vuota.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EntityContainer.AddEntitySetBase(System.Data.Entity.Core.Metadata.Edm.EntitySetBase)">
      <summary>Aggiunge il set di entità specificato al contenitore.</summary>
      <param name="entitySetBase">Set di entità da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EntityContainer.AddFunctionImport(System.Data.Entity.Core.Metadata.Edm.EdmFunction)">
      <summary>Aggiunge un'importazione di funzione al contenitore.</summary>
      <param name="function">Importazione di funzione da aggiungere.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EntityContainer.AssociationSets">
      <summary>Ottiene i set di associazione per questo contenitore di entità.</summary>
      <returns>Set di associazione per questo contenitore di entità.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EntityContainer.BaseEntitySets">
      <summary>Ottiene un elenco di set di entità e di set di associazioni inclusi in <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityContainer" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1" /> che contiene un elenco di set di entità e di set di associazioni inclusi in <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityContainer" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EntityContainer.BuiltInTypeKind">
      <summary>Ottiene il tipo del tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityContainer" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind" /> che rappresenta il tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityContainer" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EntityContainer.Create(System.String,System.Data.Entity.Core.Metadata.Edm.DataSpace,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.EntitySetBase},System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.EdmFunction},System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.MetadataProperty})">
      <summary>Metodo factory per la costruzione dell'oggetto EntityContainer.</summary>
      <returns>Oggetto EntityContainer.</returns>
      <param name="name">Nome del contenitore di entità da creare.</param>
      <param name="dataSpace">DataSpace a cui appartiene il contenitore di entità.</param>
      <param name="entitySets">Set di entità che verranno inclusi nel nuovo contenitore.Può essere Null.</param>
      <param name="functionImports">Funzioni che verranno incluse nel nuovo contenitore.Può essere Null.</param>
      <param name="metadataProperties">Proprietà dei metadati da associare all'istanza.</param>
      <exception cref="T:System.ArgumentException">Generata se l'argomento nome è Null o una stringa vuota.</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EntityContainer.EntitySets">
      <summary>Ottiene i set di entità per questo contenitore di entità.</summary>
      <returns>Set di entità per questo contenitore di entità.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EntityContainer.FunctionImports">
      <summary>Specifica una raccolta di elementi <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmFunction" />.Ogni funzione contiene i dettagli di una stored procedure esistente nel database o di un oggetto CommandText equivalente di cui è stato eseguito il mapping a un'entità e alle relative proprietà.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1" /> contenente elementi di <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmFunction" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EntityContainer.GetEntitySetByName(System.String,System.Boolean)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySet" /> usando il nome specificato per il set di entità.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySet" /> che rappresenta il set di entità con il nome specificato.</returns>
      <param name="name">Nome del set di entità di cui viene eseguita la ricerca.</param>
      <param name="ignoreCase">true per eseguire la ricerca senza distinzione tra maiuscole e minuscole; in caso contrario, false.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EntityContainer.GetRelationshipSetByName(System.String,System.Boolean)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.RelationshipSet" /> usando il nome specificato per il set di relazioni.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.RelationshipSet" /> che rappresenta il set di relazioni con il nome specificato.</returns>
      <param name="name">Nome del set di relazioni di cui viene eseguita la ricerca.</param>
      <param name="ignoreCase">true per eseguire la ricerca senza distinzione tra maiuscole e minuscole; in caso contrario, false.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EntityContainer.Name">
      <summary>Ottiene il nome di <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityContainer" />.</summary>
      <returns>Nome di <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityContainer" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EntityContainer.RemoveEntitySetBase(System.Data.Entity.Core.Metadata.Edm.EntitySetBase)">
      <summary>Rimuove un set di entità specifico dal contenitore.</summary>
      <param name="entitySetBase">Set di entità da rimuovere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EntityContainer.ToString">
      <summary>Restituisce il nome di <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityContainer" />.</summary>
      <returns>Nome di <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityContainer" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EntityContainer.TryGetEntitySetByName(System.String,System.Boolean,System.Data.Entity.Core.Metadata.Edm.EntitySet@)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySet" /> usando il nome specificato per il set di entità.</summary>
      <returns>true se è presente un set di entità che corrisponde ai criteri di ricerca; in caso contrario, false.</returns>
      <param name="name">Nome del set di entità di cui viene eseguita la ricerca.</param>
      <param name="ignoreCase">true per eseguire la ricerca senza distinzione tra maiuscole e minuscole; in caso contrario, false.</param>
      <param name="entitySet">Quando termina, questo metodo contiene un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySet" />.Se non è presente alcun set di entità, questo parametro di output contiene Null.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EntityContainer.TryGetRelationshipSetByName(System.String,System.Boolean,System.Data.Entity.Core.Metadata.Edm.RelationshipSet@)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.RelationshipSet" /> usando il nome specificato per il set di relazioni.</summary>
      <returns>true se è presente un set di relazioni che corrisponde ai criteri di ricerca; in caso contrario, false.</returns>
      <param name="name">Nome del set di relazioni di cui viene eseguita la ricerca.</param>
      <param name="ignoreCase">true per eseguire la ricerca senza distinzione tra maiuscole e minuscole; in caso contrario, false.</param>
      <param name="relationshipSet">Quando termina, questo metodo contiene un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.RelationshipSet" />.</param>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.EntitySet">
      <summary>Rappresenta un particolare utilizzo di una struttura definita in EntityType.Nel modello concettuale rappresenta un set che può eseguire query e rendere persistenti le entità.Nel modello di archivio rappresenta una tabella.Da una convenzione modello di spazio di archivio può essere utilizzato per configurare un nome della tabella con la proprietà <see cref="P:System.Data.Entity.Core.Metadata.Edm.EntitySetBase.Table" /> e lo schema della tabella con la proprietà <see cref="P:System.Data.Entity.Core.Metadata.Edm.EntitySetBase.Schema" />.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EntitySet.BuiltInTypeKind">
      <summary>Ottiene il tipo del tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySet" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind" /> che rappresenta il tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySet" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EntitySet.Create(System.String,System.String,System.String,System.String,System.Data.Entity.Core.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.MetadataProperty})">
      <summary>Metodo factory per la costruzione dell'oggetto EntitySet.</summary>
      <returns>Oggetto EntitySet.</returns>
      <param name="name">Nome dell'oggetto EntitySet.</param>
      <param name="schema">Schema db.Può essere null.</param>
      <param name="table">Tabella db.Può essere null.</param>
      <param name="definingQuery">Query specifica del provider da utilizzare per recuperare i dati per questo oggetto EntitySet.Può essere null.</param>
      <param name="entityType">Tipo delle entità che questo tipo di set di entità contiene.</param>
      <param name="metadataProperties">Proprietà dei metadati che verranno aggiunte all'oggetto EntitySet appena creato.Può essere null.</param>
      <exception cref="T:System.ArgumentException">Generata se l'argomento nome è Null o una stringa vuota.</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EntitySet.ElementType">
      <summary>Ottiene il tipo di entità per <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySet" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityType" /> che rappresenta il tipo di entità di <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySet" />.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.EntitySetBase">
      <summary>Classe per la rappresentazione di un set di entità</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EntitySetBase.BuiltInTypeKind">
      <summary>Ottiene il tipo del tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySetBase" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind" /> che rappresenta il tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySetBase" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EntitySetBase.DefiningQuery">
      <summary>Ottiene l'elemento SQL specifico del provider con escape che descrive il set di entità.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EntitySetBase.ElementType">
      <summary>Ottiene il tipo di entità per <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityTypeBase" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityTypeBase" /> che rappresenta il tipo di entità di <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityTypeBase" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EntitySetBase.EntityContainer">
      <summary>Ottiene il contenitore di entità del set di entità o del set di relazioni corrente.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityContainer" /> che rappresenta il contenitore di entità del set di entità o del set di relazioni corrente.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EntitySetBase.Name">
      <summary>Ottiene o imposta il nome del set di entità o del set di relazioni corrente.Se tale proprietà viene modificata nello spazio di archivio, è necessario aggiornare anche il livello di mapping in modo da riflettere il nuovo nome.Per modificare il nome tabella di un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySet" /> in uno spazio di archivio, utilizzare la proprietà Table.</summary>
      <returns>Nome del set di entità o del set di relazioni corrente.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EntitySetBase.Schema">
      <summary>Ottiene o imposta lo schema di database per il set di entità.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EntitySetBase.Table">
      <summary>Ottiene o imposta il nome della tabella di database per il set di entità.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EntitySetBase.ToString">
      <summary>Restituisce il nome del set di entità o del set di relazioni corrente.</summary>
      <returns>Nome del set di entità o del set di relazioni corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.EntityType">
      <summary>Rappresenta la struttura di un <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySet" />.Nel modello concettuale rappresenta la forma e la struttura di un'entità.Nel modello di archivio rappresenta la struttura di una tabella.Per modificare lo schema e il nome della tabella, usare EntitySet.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EntityType.AddNavigationProperty(System.Data.Entity.Core.Metadata.Edm.NavigationProperty)">
      <summary>Aggiunge una proprietà di navigazione specificata ai membri di questo tipo.La proprietà di navigazione viene aggiunta indipendentemente dal flag di sola lettura.</summary>
      <param name="property">Proprietà di navigazione da aggiungere.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EntityType.BuiltInTypeKind">
      <summary>Ottiene il tipo del tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityType" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind" /> che rappresenta il tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityType" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EntityType.Create(System.String,System.String,System.Data.Entity.Core.Metadata.Edm.DataSpace,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.EdmMember},System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.MetadataProperty})">
      <summary>Metodo factory per la costruzione dell'oggetto EntityType.</summary>
      <returns>Oggetto EntityType.</returns>
      <param name="name">Nome del tipo di entità.</param>
      <param name="namespaceName">Spazio dei nomi del tipo di entità.</param>
      <param name="dataSpace">Spazio dei dati a cui appartiene EntityType.</param>
      <param name="keyMemberNames">Nome dei membri chiave per il tipo.</param>
      <param name="members">Membri del tipo di entità (proprietà primitive e di navigazione).</param>
      <param name="metadataProperties">Proprietà dei metadati da associare all'istanza.</param>
      <exception cref="T:System.ArgumentException">Generata se l'argomento nome o spazio dei nomi è Null.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EntityType.Create(System.String,System.String,System.Data.Entity.Core.Metadata.Edm.DataSpace,System.Data.Entity.Core.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.EdmMember},System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.MetadataProperty})">
      <summary>Metodo factory per la costruzione dell'oggetto EntityType.</summary>
      <returns>Oggetto EntityType.</returns>
      <param name="name">Nome del tipo di entità.</param>
      <param name="namespaceName">Spazio dei nomi del tipo di entità.</param>
      <param name="dataSpace">Spazio dei dati a cui appartiene EntityType.</param>
      <param name="baseType">Tipo di base.</param>
      <param name="keyMemberNames">Nome dei membri chiave per il tipo.</param>
      <param name="members">Membri del tipo di entità (proprietà primitive e di navigazione).</param>
      <param name="metadataProperties">Proprietà dei metadati da associare all'istanza.</param>
      <exception cref="T:System.ArgumentException">Generata se l'argomento nome o spazio dei nomi è Null.</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EntityType.DeclaredMembers">
      <summary>Ottiene la raccolta di membri dichiarati per il tipo di entità.</summary>
      <returns>Raccolta di membri dichiarati per il tipo di entità.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EntityType.DeclaredNavigationProperties">
      <summary>Ottiene le proprietà di navigazione dichiarate associate al tipo di entità.</summary>
      <returns>Proprietà di navigazione dichiarate associate al tipo di entità.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EntityType.DeclaredProperties">
      <summary>Ottiene l'elenco delle proprietà dichiarate per il tipo di entità.</summary>
      <returns>Proprietà dichiarate per il tipo di entità.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EntityType.GetReferenceType">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.RefType" /> che fa riferimento a <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityType" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.RefType" /> che fa riferimento a <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityType" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EntityType.NavigationProperties">
      <summary>Ottiene le proprietà di navigazione per <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityType" />.</summary>
      <returns>Raccolta di tipo <see cref="T:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1" /> che contiene l'elenco delle proprietà di navigazione in <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityType" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EntityType.Properties">
      <summary>Ottiene l'elenco di proprietà per <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityType" />.</summary>
      <returns>Raccolta di tipo <see cref="T:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1" /> che contiene l'elenco di proprietà per <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityType" />.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.EntityTypeBase">
      <summary>Rappresenta il tipo di entità</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EntityTypeBase.AddKeyMember(System.Data.Entity.Core.Metadata.Edm.EdmMember)">
      <summary>Aggiunge la proprietà specificata all'elenco di chiavi per l'entità corrente.</summary>
      <param name="member">Proprietà da aggiungere.</param>
      <exception cref="T:System.ArgumentNullException">se l'argomento membro è Null</exception>
      <exception cref="T:System.InvalidOperationException">Generata se EntityType presenta un tipo di base di un altro EntityTypeBase.In questo caso KeyMembers deve essere aggiunto al tipo di base</exception>
      <exception cref="T:System.InvalidOperationException">Se l'istanza di EntityType è di sola lettura</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EntityTypeBase.KeyMembers">
      <summary>Ottiene l'elenco di tutti i membri della chiave per il tipo di entità o di relazione corrente.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1" /> che rappresenta l'elenco dei membri della chiave per il tipo di entità o di relazione corrente.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EntityTypeBase.KeyProperties">
      <summary>Ottiene l'elenco di tutte le proprietà chiave di questo tipo di entità.</summary>
      <returns>Elenco di tutte le proprietà chiave di questo tipo di entità.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EntityTypeBase.RemoveMember(System.Data.Entity.Core.Metadata.Edm.EdmMember)">
      <summary>Rimuove il membro chiave specificato dalla raccolta.</summary>
      <param name="member">Membro chiave da rimuovere.</param>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.EnumMember">
      <summary>Rappresenta un membro di enumerazione.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EnumMember.BuiltInTypeKind">
      <summary>Ottiene il genere del tipo.</summary>
      <returns>Genere del tipo.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EnumMember.Create(System.String,System.Byte,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.MetadataProperty})">
      <summary>Crea un'istanza di EnumMember di sola lettura.</summary>
      <returns>Istanza di EnumMember appena creata.</returns>
      <param name="name">Nome del membro di enumerazione.</param>
      <param name="value">Valore del membro di enumerazione.</param>
      <param name="metadataProperties">Proprietà dei metadati da associare al membro di enumerazione.</param>
      <exception cref="T:System.ArgumentException">name è Null o vuoto.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EnumMember.Create(System.String,System.Int16,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.MetadataProperty})">
      <summary>Crea un'istanza di EnumMember di sola lettura.</summary>
      <returns>Istanza di EnumMember appena creata.</returns>
      <param name="name">Nome del membro di enumerazione.</param>
      <param name="value">Valore del membro di enumerazione.</param>
      <param name="metadataProperties">Proprietà dei metadati da associare al membro di enumerazione.</param>
      <exception cref="T:System.ArgumentException">name è Null o vuoto.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EnumMember.Create(System.String,System.Int32,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.MetadataProperty})">
      <summary>Crea un'istanza di EnumMember di sola lettura.</summary>
      <returns>Istanza di EnumMember appena creata.</returns>
      <param name="name">Nome del membro di enumerazione.</param>
      <param name="value">Valore del membro di enumerazione.</param>
      <param name="metadataProperties">Proprietà dei metadati da associare al membro di enumerazione.</param>
      <exception cref="T:System.ArgumentException">name è Null o vuoto.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EnumMember.Create(System.String,System.Int64,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.MetadataProperty})">
      <summary>Crea un'istanza di EnumMember di sola lettura.</summary>
      <returns>Istanza di EnumMember appena creata.</returns>
      <param name="name">Nome del membro di enumerazione.</param>
      <param name="value">Valore del membro di enumerazione.</param>
      <param name="metadataProperties">Proprietà dei metadati da associare al membro di enumerazione.</param>
      <exception cref="T:System.ArgumentException">name è Null o vuoto.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EnumMember.Create(System.String,System.SByte,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.MetadataProperty})">
      <summary>Crea un'istanza di EnumMember di sola lettura.</summary>
      <returns>Istanza di EnumMember appena creata.</returns>
      <param name="name">Nome del membro di enumerazione.</param>
      <param name="value">Valore del membro di enumerazione.</param>
      <param name="metadataProperties">Proprietà dei metadati da associare al membro di enumerazione.</param>
      <exception cref="T:System.ArgumentException">name è Null o vuoto.</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EnumMember.Name">
      <summary>Ottiene il nome di questo membro di enumerazione.</summary>
      <returns>Nome di questo membro di enumerazione.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EnumMember.ToString">
      <summary>Override di System.Object.ToString per fornire una rappresentazione in forma di stringa migliore per questo tipo.</summary>
      <returns>Nome di questo membro di enumerazione.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EnumMember.Value">
      <summary>Ottiene il valore di questo membro di enumerazione.</summary>
      <returns>Valore di questo membro di enumerazione.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.EnumType">
      <summary>Rappresenta un tipo di enumerazione.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EnumType.BuiltInTypeKind">
      <summary>Restituisce il tipo del tipo</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.EnumType.Create(System.String,System.String,System.Data.Entity.Core.Metadata.Edm.PrimitiveType,System.Boolean,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.EnumMember},System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.MetadataProperty})">
      <summary>Crea un'istanza di EnumType di sola lettura.</summary>
      <returns>Istanza di EnumType appena creata.</returns>
      <param name="name">Nome del tipo di enumerazione.</param>
      <param name="namespaceName">Spazio dei nomi del tipo di enumerazione.</param>
      <param name="underlyingType">Tipo sottostante del tipo di enumerazione.</param>
      <param name="isFlags">Indica se il tipo di enumerazione può essere considerato come un campo di bit, ovvero un insieme di contrassegni.</param>
      <param name="members">Membri del tipo di enumerazione.</param>
      <param name="metadataProperties">Proprietà dei metadati da associare al tipo di enumerazione.</param>
      <exception cref="T:System.ArgumentNullException">underlyingType è Null.</exception>
      <exception cref="T:System.ArgumentException">name è Null o vuoto.oppure namespaceName è Null o vuoto.oppure underlyingType non è un tipo sottostante supportato.oppure i nomi dei membri specificati non sono univoci.oppure il valore di un membro specificato non è compreso nell'intervallo del tipo sottostante.</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EnumType.IsFlags">
      <summary>Ottiene un valore che indica se il tipo enum è definito come flag (ad esempiopuò essere considerato come campo di bit)</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EnumType.Members">
      <summary>Ottiene una raccolta di membri di enumerazione per questo tipo di enumerazione.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.EnumType.UnderlyingType">
      <summary>Ottiene il tipo sottostante di questo tipo di enumerazione.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.Facet">
      <summary>Classe per la rappresentazione di un oggetto Facet. Questo oggetto non è modificabile (non solo impostato su sola lettura) e alcune parti del sistema dipendono da questo comportamento</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.Facet.BuiltInTypeKind">
      <summary>Ottiene il tipo del tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.Facet" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind" /> che rappresenta il tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.Facet" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.Facet.Description">
      <summary>Ottiene la descrizione di <see cref="T:System.Data.Entity.Core.Metadata.Edm.Facet" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.FacetDescription" /> che rappresenta la descrizione di <see cref="T:System.Data.Entity.Core.Metadata.Edm.Facet" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.Facet.FacetType">
      <summary>Ottiene il tipo di <see cref="T:System.Data.Entity.Core.Metadata.Edm.Facet" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" /> che rappresenta il tipo di <see cref="T:System.Data.Entity.Core.Metadata.Edm.Facet" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.Facet.IsUnbounded">
      <summary>Ottiene un valore che indica se il valore del facet è non associato.</summary>
      <returns>true se il valore del facet è non associato; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.Facet.Name">
      <summary>Ottiene il nome di <see cref="T:System.Data.Entity.Core.Metadata.Edm.Facet" />.</summary>
      <returns>Nome di <see cref="T:System.Data.Entity.Core.Metadata.Edm.Facet" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.Facet.ToString">
      <summary>Restituisce il nome di <see cref="T:System.Data.Entity.Core.Metadata.Edm.Facet" />.</summary>
      <returns>Nome di <see cref="T:System.Data.Entity.Core.Metadata.Edm.Facet" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.Facet.Value">
      <summary>Ottiene il valore di <see cref="T:System.Data.Entity.Core.Metadata.Edm.Facet" />.</summary>
      <returns>Valore di <see cref="T:System.Data.Entity.Core.Metadata.Edm.Facet" />.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.FacetDescription">
      <summary>Classe per la rappresentazione di un oggetto FacetDescription</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.FacetDescription.DefaultValue">
      <summary>Ottiene il valore predefinito di un facet con questa descrizione del facet.</summary>
      <returns>Valore predefinito di un facet con questa descrizione del facet.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.FacetDescription.FacetName">
      <summary>Ottiene il nome del facet.</summary>
      <returns>Nome del facet.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.FacetDescription.FacetType">
      <summary>Ottiene il tipo del facet.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" /> che rappresenta il tipo del facet.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.FacetDescription.IsConstant">
      <summary>Ottiene un valore che indica se il valore del facet è una costante.</summary>
      <returns>true se il facet è una costante; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.FacetDescription.IsRequired">
      <summary>Ottiene un valore che indica se il facet è un facet obbligatorio.</summary>
      <returns>true se si tratta di un facet obbligatorio; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.FacetDescription.MaxValue">
      <summary>Ottiene il valore massimo per il facet.</summary>
      <returns>Valore massimo per il facet.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.FacetDescription.MinValue">
      <summary>Ottiene il valore minimo per il facet.</summary>
      <returns>Valore minimo per il facet.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.FacetDescription.ToString">
      <summary>Restituisce il nome del facet.</summary>
      <returns>Nome del facet.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.FunctionParameter">
      <summary>Classe che rappresenta un parametro di funzione</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.FunctionParameter.BuiltInTypeKind">
      <summary>Ottiene il tipo del tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.FunctionParameter" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind" /> che rappresenta il tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.FunctionParameter" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.FunctionParameter.Create(System.String,System.Data.Entity.Core.Metadata.Edm.EdmType,System.Data.Entity.Core.Metadata.Edm.ParameterMode)">
      <summary>Metodo factory per la costruzione dell'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.FunctionParameter" />.</summary>
      <returns>Nuova istanza di sola lettura del tipo <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmFunction" />.</returns>
      <param name="name">Nome del parametro.</param>
      <param name="edmType">EdmType del parametro.</param>
      <param name="parameterMode">Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.ParameterMode" /> del parametro.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.FunctionParameter.DeclaringFunction">
      <summary>Ottiene l'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmFunction" /> in cui è dichiarato il parametro.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmFunction" /> che rappresenta la funzione in cui è dichiarato il parametro.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.FunctionParameter.IsMaxLength">
      <summary>Ottiene un valore che indica se il parametro utilizza la lunghezza massima supportata dal provider di database.</summary>
      <returns>True se il parametro utilizza la lunghezza massima supportata dal provider di database; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.FunctionParameter.IsMaxLengthConstant">
      <summary>Ottiene un valore che indica se il facet MaxLength è costante per il provider di database.</summary>
      <returns>True se il facet è costante; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.FunctionParameter.IsPrecisionConstant">
      <summary>Ottiene un valore che indica se il facet Precision è costante per il provider di database.</summary>
      <returns>True se il facet è costante; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.FunctionParameter.IsScaleConstant">
      <summary>Ottiene un valore che indica se il facet Scale è costante per il provider di database.</summary>
      <returns>True se il facet è costante; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.FunctionParameter.MaxLength">
      <summary>Ottiene la lunghezza massima del parametro.</summary>
      <returns>Lunghezza massima del parametro.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.FunctionParameter.Mode">
      <summary>Ottiene la modalità di <see cref="T:System.Data.Entity.Core.Metadata.Edm.FunctionParameter" />.</summary>
      <returns>Uno dei valori di <see cref="T:System.Data.Entity.Core.Metadata.Edm.ParameterMode" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.FunctionParameter.Name">
      <summary>Ottiene il nome di <see cref="T:System.Data.Entity.Core.Metadata.Edm.FunctionParameter" />.</summary>
      <returns>Nome di <see cref="T:System.Data.Entity.Core.Metadata.Edm.FunctionParameter" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.FunctionParameter.Precision">
      <summary>Ottiene il valore di precisione del parametro.</summary>
      <returns>Valore di precisione del parametro.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.FunctionParameter.Scale">
      <summary>Ottiene il valore di scala del parametro.</summary>
      <returns>Valore di scala del parametro.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.FunctionParameter.ToString">
      <summary>Restituisce il nome di <see cref="T:System.Data.Entity.Core.Metadata.Edm.FunctionParameter" />.</summary>
      <returns>Nome di <see cref="T:System.Data.Entity.Core.Metadata.Edm.FunctionParameter" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.FunctionParameter.TypeName">
      <summary>Ottiene il nome del tipo del parametro.</summary>
      <returns>Nome del tipo del parametro.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.FunctionParameter.TypeUsage">
      <summary>Ottiene l'istanza della classe <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" /> che contiene sia il tipo del parametro sia i facet per il tipo.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" /> che contiene sia il tipo del parametro sia i facet per il tipo.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.GlobalItem">
      <summary>Rappresenta la classe dell'elemento di base per tutti i metadati</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.IEdmModelAdapter">
      <summary>Interfaccia per ottenere il modello concettuale e l'archivio sottostanti per un oggetto <see cref="T:System.Data.Entity.Infrastructure.DbModel" />.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.IEdmModelAdapter.ConceptualModel">
      <summary>Ottiene il modello concettuale.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.IEdmModelAdapter.StoreModel">
      <summary>Ottiene il modello di archivio.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.ItemCollection">
      <summary>Classe per la rappresentazione di una raccolta di elementi.La maggior parte dell'implementazione per la manutenzione effettiva della raccolta viene eseguita da MetadataCollection</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.ItemCollection.DataSpace">
      <summary>Ottiene il modello di dati associato a questa raccolta di elementi.</summary>
      <returns>Modello di dati associato a questa raccolta di elementi.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ItemCollection.GetEntityContainer(System.String)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityContainer" /> utilizzando il nome del contenitore di entità specificato.</summary>
      <returns>Se non vi è alcun contenitore di entità, questo metodo restituisce null; in caso contrario, restituisce il primo contenitore di entità.</returns>
      <param name="name">Nome del contenitore di entità.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ItemCollection.GetEntityContainer(System.String,System.Boolean)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityContainer" /> utilizzando il nome del contenitore di entità specificato.</summary>
      <returns>Se non vi è alcun contenitore di entità, questo metodo restituisce null; in caso contrario, restituisce il primo contenitore di entità.</returns>
      <param name="name">Nome del contenitore di entità.</param>
      <param name="ignoreCase">true per eseguire la ricerca senza distinzione tra maiuscole e minuscole; in caso contrario, false.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ItemCollection.GetFunctions(System.Collections.Generic.Dictionary{System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Entity.Core.Metadata.Edm.EdmFunction}},System.String,System.Boolean)">
      <summary>Restituisce tutti gli overload delle funzioni utilizzando il nome specificato da questa raccolta di elementi.</summary>
      <returns>Raccolta di tipo ReadOnlyCollection che contiene tutte le funzioni con il nome specificato.</returns>
      <param name="functionCollection">Dizionario di funzioni.</param>
      <param name="functionName">Nome completo della funzione.</param>
      <param name="ignoreCase">true per eseguire la ricerca senza distinzione tra maiuscole e minuscole; in caso contrario, false.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ItemCollection.GetFunctions(System.String)">
      <summary>Restituisce tutti gli overload delle funzioni utilizzando il nome specificato da questa raccolta di elementi.</summary>
      <returns>Raccolta di tipo <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> che contiene tutte le funzioni con il nome specificato.</returns>
      <param name="functionName">Nome completo della funzione.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ItemCollection.GetFunctions(System.String,System.Boolean)">
      <summary>Restituisce tutti gli overload delle funzioni utilizzando il nome specificato da questa raccolta di elementi.</summary>
      <returns>Raccolta di tipo <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> che contiene tutte le funzioni con il nome specificato.</returns>
      <param name="functionName">Nome completo della funzione.</param>
      <param name="ignoreCase">true per eseguire la ricerca senza distinzione tra maiuscole e minuscole; in caso contrario, false.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ItemCollection.GetItem``1(System.String)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.GlobalItem" /> fortemente tipizzato utilizzando l'identità specificata.</summary>
      <returns>Elemento specificato dall'identità.</returns>
      <param name="identity">Identità dell'elemento.</param>
      <typeparam name="T">Tipo restituito dal metodo.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ItemCollection.GetItem``1(System.String,System.Boolean)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.GlobalItem" /> fortemente tipizzato utilizzando l'identità specificata con una ricerca con o senza distinzione tra maiuscole e minuscole.</summary>
      <returns>Elemento specificato dall'identità.</returns>
      <param name="identity">Identità dell'elemento.</param>
      <param name="ignoreCase">true per eseguire la ricerca senza distinzione tra maiuscole e minuscole; in caso contrario, false.</param>
      <typeparam name="T">Tipo restituito dal metodo.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ItemCollection.GetItems``1">
      <summary>Restituisce tutti gli elementi del tipo specificato da questa raccolta di elementi.</summary>
      <returns>Raccolta di tipo <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> che contiene tutti gli elementi del tipo specificato.</returns>
      <typeparam name="T">Tipo restituito dal metodo.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ItemCollection.GetType(System.String,System.String)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" /> utilizzando il nome del tipo e il nome dello spazio dei nomi specificati in questa raccolta di elementi.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" /> che rappresenta il tipo corrispondente al nome del tipo e al nome dello spazio dei nomi specificati in questa raccolta di elementi.Se non vi è un tipo corrispondente, questo metodo restituisce null.</returns>
      <param name="name">Nome del tipo.</param>
      <param name="namespaceName">Spazio dei nomi del tipo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ItemCollection.GetType(System.String,System.String,System.Boolean)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" /> utilizzando il nome del tipo e il nome dello spazio dei nomi specificati da questa raccolta di elementi.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" /> che rappresenta il tipo corrispondente al nome del tipo e al nome dello spazio dei nomi specificati in questa raccolta di elementi.Se non vi è un tipo corrispondente, questo metodo restituisce null.</returns>
      <param name="name">Nome del tipo.</param>
      <param name="namespaceName">Spazio dei nomi del tipo.</param>
      <param name="ignoreCase">true per eseguire la ricerca senza distinzione tra maiuscole e minuscole; in caso contrario, false.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Boolean,System.Data.Entity.Core.Metadata.Edm.EntityContainer@)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityContainer" /> utilizzando il nome del contenitore di entità specificato.Se non vi è alcun contenitore di entità, questo parametro di output contiene null; in caso contrario, contiene il primo contenitore di entità.</summary>
      <returns>true se è presente un contenitore di entità che corrisponde ai criteri di ricerca; in caso contrario, false.</returns>
      <param name="name">Nome del contenitore di entità.</param>
      <param name="ignoreCase">true per eseguire la ricerca senza distinzione tra maiuscole e minuscole; in caso contrario, false.</param>
      <param name="entityContainer">Quando termina, questo metodo contiene un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityContainer" />.Se non vi è alcun contenitore di entità, questo parametro di output contiene null; in caso contrario, contiene il primo contenitore di entità.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Data.Entity.Core.Metadata.Edm.EntityContainer@)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityContainer" /> utilizzando il nome del contenitore di entità specificato.Se non vi è alcun contenitore di entità, il parametro di output contiene null; in caso contrario, contiene il primo contenitore di entità.</summary>
      <returns>true se è presente un contenitore di entità che corrisponde ai criteri di ricerca; in caso contrario, false.</returns>
      <param name="name">Nome del contenitore di entità.</param>
      <param name="entityContainer">Quando termina, questo metodo contiene un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityContainer" />.Se non vi è alcun contenitore di entità, questo parametro di output contiene null; in caso contrario, contiene il primo contenitore di entità.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,System.Boolean,``0@)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.GlobalItem" /> fortemente tipizzato utilizzando l'identità specificata da questa raccolta di elementi.</summary>
      <returns>true se è presente un elemento che corrisponde ai criteri di ricerca; in caso contrario, false.</returns>
      <param name="identity">Identità dell'elemento.</param>
      <param name="ignoreCase">true per eseguire la ricerca senza distinzione tra maiuscole e minuscole; in caso contrario, false.</param>
      <param name="item">Quando questo metodo termina, il parametro di output contiene un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.GlobalItem" />.Se non vi è alcun elemento globale con l'identità specificata nella raccolta di elementi, questo parametro di output contiene null.</param>
      <typeparam name="T">Tipo restituito dal metodo.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,``0@)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.GlobalItem" /> fortemente tipizzato utilizzando l'identità specificata da questa raccolta di elementi.</summary>
      <returns>true se è presente un elemento che corrisponde ai criteri di ricerca; in caso contrario, false.</returns>
      <param name="identity">Identità dell'elemento.</param>
      <param name="item">Quando questo metodo termina, il parametro di output contiene un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.GlobalItem" />.Se non vi è alcun elemento globale con l'identità specificata nella raccolta di elementi, questo parametro di output contiene null.</param>
      <typeparam name="T">Tipo restituito dal metodo.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Boolean,System.Data.Entity.Core.Metadata.Edm.EdmType@)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" /> utilizzando il nome del tipo e il nome dello spazio dei nomi specificati da questa raccolta di elementi.</summary>
      <returns>true se è presente un tipo che corrisponde ai criteri di ricerca; in caso contrario, false.</returns>
      <param name="name">Nome del tipo.</param>
      <param name="namespaceName">Spazio dei nomi del tipo.</param>
      <param name="ignoreCase">true per eseguire la ricerca senza distinzione tra maiuscole e minuscole; in caso contrario, false.</param>
      <param name="type">Quando questo metodo termina, questo parametro di output contiene un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" />.Se non vi è alcun tipo con il nome del tipo e il nome dello spazio dei nomi specificati in questa raccolta di elementi, questo parametro di output contiene null.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Data.Entity.Core.Metadata.Edm.EdmType@)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" /> utilizzando il nome del tipo e il nome dello spazio dei nomi specificati da questa raccolta di elementi.</summary>
      <returns>true se è presente un tipo che corrisponde ai criteri di ricerca; in caso contrario, false.</returns>
      <param name="name">Nome del tipo.</param>
      <param name="namespaceName">Spazio dei nomi del tipo.</param>
      <param name="type">Quando questo metodo termina, questo parametro di output contiene un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" />.Se non vi è alcun tipo con il nome del tipo e il nome dello spazio dei nomi specificati in questa raccolta di elementi, questo parametro di output contiene null.</param>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.MetadataItem">
      <summary>Rappresenta la classe dell'elemento di base per tutti i metadati</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataItem.AddAnnotation(System.String,System.Object)">
      <summary>Aggiunge o aggiorna un'annotazione con il nome e il valore specificati.</summary>
      <param name="name">Nome della proprietà di annotazione.</param>
      <param name="value">Valore della proprietà di annotazione.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.MetadataItem.BuiltInTypeKind">
      <summary>Ottiene il tipo del tipo incorporato per il tipo.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind" /> che rappresenta il tipo del tipo incorporato per il tipo.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.MetadataItem.Documentation">
      <summary>Ottiene o imposta la documentazione associata al tipo.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.Documentation" /> che rappresenta la documentazione sul tipo.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataItem.GetBuiltInType(System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind)">
      <summary>Restituisce un tipo incorporato di modello concettuale che corrisponde a uno dei valori di <see cref="T:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" /> che rappresenta il tipo incorporato in EDM.</returns>
      <param name="builtInTypeKind">Uno dei valori di <see cref="T:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataItem.GetGeneralFacetDescriptions">
      <summary>Restituisce l'elenco delle descrizioni dei facet generali per un tipo specificato.</summary>
      <returns>Oggetto <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> che rappresenta l'elenco delle descrizioni dei facet generali per un tipo specificato.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.MetadataItem.MetadataProperties">
      <summary>Ottiene l'elenco di proprietà del tipo corrente.</summary>
      <returns>Raccolta di tipo <see cref="T:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1" /> che contiene l'elenco di proprietà del tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataItem.RemoveAnnotation(System.String)">
      <summary>Rimuove un'annotazione con il nome specificato.</summary>
      <returns>true se un'annotazione è stata rimossa; in caso contrario, false.</returns>
      <param name="name">Nome della proprietà di annotazione.</param>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.MetadataProperty">
      <summary>Classe che rappresenta un attributo di metadati per un elemento</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.MetadataProperty.BuiltInTypeKind">
      <summary>Ottiene il tipo del tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataProperty" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind" /> che rappresenta il tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataProperty" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataProperty.Create(System.String,System.Data.Entity.Core.Metadata.Edm.TypeUsage,System.Object)">
      <summary>Metodo factory per la costruzione dell'oggetto MetadataProperty.</summary>
      <returns>Oggetto MetadataProperty.</returns>
      <param name="name">Nome della proprietà dei metadati.</param>
      <param name="typeUsage">Utilizzo del tipo della proprietà dei metadati.</param>
      <param name="value">Valore della proprietà dei metadati.</param>
      <exception cref="T:System.NullReferenceException">Generata se <paramref name="typeUsage" /> è null.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataProperty.CreateAnnotation(System.String,System.Object)">
      <summary>Crea un'annotazione dei metadati con il nome e il valore specificati.</summary>
      <returns>Istanza di MetadataProperty che rappresenta l'annotazione creata.</returns>
      <param name="name">Nome dell'annotazione.</param>
      <param name="value">Valore dell'annotazione.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.MetadataProperty.IsAnnotation">
      <summary>Ottiene un valore booleano che indica se la proprietà dei metadati è un'annotazione.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.MetadataProperty.Name">
      <summary>Ottiene il nome di <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataProperty" />.</summary>
      <returns>Nome di <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataProperty" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.MetadataProperty.PropertyKind">
      <summary>Ottiene il valore di <see cref="T:System.Data.Entity.Core.Metadata.Edm.PropertyKind" />.</summary>
      <returns>Valore di <see cref="T:System.Data.Entity.Core.Metadata.Edm.PropertyKind" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.MetadataProperty.TypeUsage">
      <summary>Ottiene l'istanza della classe <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" /> che contiene sia il tipo di <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataProperty" /> sia i facet per il tipo.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" /> che contiene sia il tipo di <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataProperty" /> sia i facet per il tipo.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.MetadataProperty.Value">
      <summary>Ottiene il valore di <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataProperty" />.</summary>
      <returns>Valore di <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataProperty" />.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace">
      <summary>Area di lavoro dei metadati di runtime</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace" /> utilizzando i percorsi e gli assembly specificati.</summary>
      <param name="paths">Percorsi dei metadati dell'area di lavoro.</param>
      <param name="assembliesToConsider">Nomi degli assembly utilizzati per creare l'area di lavoro.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.#ctor(System.Func{System.Data.Entity.Core.Metadata.Edm.EdmItemCollection},System.Func{System.Data.Entity.Core.Metadata.Edm.StoreItemCollection},System.Func{System.Data.Entity.Core.Mapping.StorageMappingItemCollection})">
      <summary>Costruisce un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace" /> con caricatori per tutte le raccolte di elementi (<see cref="T:System.Data.Entity.Core.Metadata.Edm.ItemCollection" />) derivanti dal mapping EDMX tradizionale.Verranno utilizzate le raccolte di mapping dello spazio O e di O/C predefinite.I delegati delle raccolte di elementi vengono eseguiti in modo differito quando una data raccolta viene utilizzata per la prima volta,È accettabile passare un delegato che restituisce Null se la raccolta non verrà mai utilizzata, ma si tratta di un'operazione effettuata di rado e qualsiasi tentativo da parte di EF di utilizzare la raccolta in tali casi genererà un'eccezione.</summary>
      <param name="cSpaceLoader">Delegato per restituire la raccolta di elementi dello spazio C (CSDL).</param>
      <param name="sSpaceLoader">Delegato per restituire la raccolta di elementi dello spazio S (SSDL).</param>
      <param name="csMappingLoader">Delegato per restituire la raccolta di elementi del mapping C/S (MSL).</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.#ctor(System.Func{System.Data.Entity.Core.Metadata.Edm.EdmItemCollection},System.Func{System.Data.Entity.Core.Metadata.Edm.StoreItemCollection},System.Func{System.Data.Entity.Core.Mapping.StorageMappingItemCollection},System.Func{System.Data.Entity.Core.Metadata.Edm.ObjectItemCollection})">
      <summary>Costruisce un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace" /> con caricatori per tutte le raccolte di elementi (<see cref="T:System.Data.Entity.Core.Metadata.Edm.ItemCollection" />) necessarie a EF, tranne il mapping O/C che verrà creato automaticamente in base agli specifici caricatori dello spazio O e dello spazio C.I delegati delle raccolte di elementi vengono eseguiti in modo differito quando una data raccolta viene utilizzata per la prima volta,È accettabile passare un delegato che restituisce Null se la raccolta non verrà mai utilizzata, ma si tratta di un'operazione effettuata di rado e qualsiasi tentativo da parte di EF di utilizzare la raccolta in tali casi genererà un'eccezione.</summary>
      <param name="cSpaceLoader">Delegato per restituire la raccolta di elementi dello spazio C (CSDL).</param>
      <param name="sSpaceLoader">Delegato per restituire la raccolta di elementi dello spazio S (SSDL).</param>
      <param name="csMappingLoader">Delegato per restituire la raccolta di elementi del mapping C/S (MSL).</param>
      <param name="oSpaceLoader">Delegato per restituire la raccolta di elementi dello spazio O.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.ClearCache">
      <summary>Cancella tutte le voci della cache dei metadati.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.CreateEntitySqlParser">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Common.EntitySql.EntitySqlParser" /> configurato per utilizzare lo spazio dati <see cref="F:System.Data.Entity.Core.Metadata.Edm.DataSpace.CSpace" />.</summary>
      <returns>Oggetto parser creato.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.CreateQueryCommandTree(System.Data.Entity.Core.Common.CommandTrees.DbExpression)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbQueryCommandTree" /> associato all'area di lavoro dei metadati in base all'espressione di query specificata.</summary>
      <returns>Nuovo oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbQueryCommandTree" /> con l'espressione specificata come la proprietà <see cref="P:System.Data.Entity.Core.Common.CommandTrees.DbQueryCommandTree.Query" />.</returns>
      <param name="query">Oggetto <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> che definisce la query.</param>
      <exception cref="T:System.ArgumentNullException">Se <paramref name="query" /> è Null</exception>
      <exception cref="T:System.ArgumentException">Se <paramref name="query" /> contiene metadati che non possono essere risolti in quest'area di lavoro dei metadati</exception>
      <exception cref="T:System.ArgumentException">Se <paramref name="query" /> non è valida a livello strutturale perché contiene riferimenti a variabili non risolvibili</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(System.Data.Entity.Core.Metadata.Edm.EnumType)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.StructuralType" /> che rappresenta l'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" /> corrispondente al tipo fornito dal parametro objectSpaceType.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.StructuralType" /> che rappresenta <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" />.Se non vi è un tipo corrispondente, questo metodo restituisce null.</returns>
      <param name="objectSpaceType">Oggetto <see cref="T:System.Data.Metadata.Edm.EnumlType" /> che fornisce il tipo nello spazio dell'oggetto.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(System.Data.Entity.Core.Metadata.Edm.StructuralType)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.StructuralType" /> che rappresenta l'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" /> corrispondente al tipo fornito dal parametro objectSpaceType.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.StructuralType" /> che rappresenta <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" />.Se non vi è un tipo corrispondente, questo metodo restituisce null.</returns>
      <param name="objectSpaceType">Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.StructuralType" /> che fornisce il tipo nello spazio dell'oggetto.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.GetEntityContainer(System.String,System.Boolean,System.Data.Entity.Core.Metadata.Edm.DataSpace)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityContainer" /> utilizzando il nome del contenitore di entità e il modello di dati specificati.</summary>
      <returns>Se non vi è alcun contenitore di entità, questo metodo restituisce null; in caso contrario, restituisce il primo contenitore di entità.</returns>
      <param name="name">Nome del contenitore di entità.</param>
      <param name="ignoreCase">true per eseguire la ricerca senza distinzione tra maiuscole e minuscole; in caso contrario, false.</param>
      <param name="dataSpace">Modello concettuale in cui viene eseguita la ricerca del contenitore di entità.</param>
      <exception cref="T:System.ArgumentException">Generata se lo spazio non è uno spazio valido.Uno spazio valido è C, O, CS o OCSpace.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.GetEntityContainer(System.String,System.Data.Entity.Core.Metadata.Edm.DataSpace)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityContainer" /> utilizzando il nome del contenitore di entità e il modello di dati specificati.</summary>
      <returns>Se non vi è alcun contenitore di entità, questo metodo restituisce null; in caso contrario, restituisce il primo contenitore di entità.</returns>
      <param name="name">Nome del contenitore di entità.</param>
      <param name="dataSpace">Modello concettuale in cui viene eseguita la ricerca del contenitore di entità.</param>
      <exception cref="T:System.ArgumentException">Generata se lo spazio non è uno spazio valido.Uno spazio valido è C, O, CS o OCSpace.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Entity.Core.Metadata.Edm.DataSpace)">
      <summary>Restituisce tutti gli overload delle funzioni utilizzando il nome, il nome dello spazio dei nomi e il modello di dati specificati.</summary>
      <returns>Raccolta di tipo <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> che contiene tutte le funzioni che corrispondono al nome specificato in uno spazio dei nomi e in un modello di dati specificati.</returns>
      <param name="name">Nome della funzione.</param>
      <param name="namespaceName">Spazio dei nomi della funzione.</param>
      <param name="dataSpace">Modello concettuale in cui viene eseguita la ricerca delle funzioni.</param>
      <exception cref="T:System.ArgumentException">Generata se lo spazio non è uno spazio valido.Uno spazio valido è C, O, CS o OCSpace.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Entity.Core.Metadata.Edm.DataSpace,System.Boolean)">
      <summary>Restituisce tutti gli overload delle funzioni utilizzando il nome, il nome dello spazio dei nomi e il modello di dati specificati.</summary>
      <returns>Raccolta di tipo <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> che contiene tutte le funzioni che corrispondono al nome specificato in uno spazio dei nomi e in un modello di dati specificati.</returns>
      <param name="name">Nome della funzione.</param>
      <param name="namespaceName">Spazio dei nomi della funzione.</param>
      <param name="dataSpace">Modello concettuale in cui viene eseguita la ricerca delle funzioni.</param>
      <param name="ignoreCase">true per eseguire la ricerca senza distinzione tra maiuscole e minuscole; in caso contrario, false.</param>
      <exception cref="T:System.ArgumentException">Generata se lo spazio non è uno spazio valido.Uno spazio valido è C, O, CS o OCSpace.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.GetItem``1(System.String,System.Boolean,System.Data.Entity.Core.Metadata.Edm.DataSpace)">
      <summary>Restituisce un elemento utilizzando l'identità e il modello di dati specificati.</summary>
      <returns>Elemento che corrisponde all'identità specificata nel modello di dati specificato.</returns>
      <param name="identity">Identità dell'elemento.</param>
      <param name="ignoreCase">true per eseguire la ricerca senza distinzione tra maiuscole e minuscole; in caso contrario, false.</param>
      <param name="dataSpace">Modello concettuale in cui viene eseguita la ricerca dell'elemento.</param>
      <typeparam name="T">Tipo restituito dal metodo.</typeparam>
      <exception cref="T:System.ArgumentException">Generata se lo spazio non è uno spazio valido.Uno spazio valido è C, O, CS o OCSpace.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.GetItem``1(System.String,System.Data.Entity.Core.Metadata.Edm.DataSpace)">
      <summary>Restituisce un elemento utilizzando l'identità e il modello di dati specificati.</summary>
      <returns>Elemento che corrisponde all'identità specificata nel modello di dati specificato.</returns>
      <param name="identity">Identità dell'elemento.</param>
      <param name="dataSpace">Modello concettuale in cui viene eseguita la ricerca dell'elemento.</param>
      <typeparam name="T">Tipo restituito dal metodo.</typeparam>
      <exception cref="T:System.ArgumentException">Generata se lo spazio non è uno spazio valido.Uno spazio valido è C, O, CS o OCSpace.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.GetItemCollection(System.Data.Entity.Core.Metadata.Edm.DataSpace)">
      <summary>Ottiene gli elementi dell'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace" />.</summary>
      <returns>Elementi <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace" />.</returns>
      <param name="dataSpace">Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.DataSpace" /> da cui recuperare gli elementi.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.GetItems(System.Data.Entity.Core.Metadata.Edm.DataSpace)">
      <summary>Ottiene tutti gli elementi nel modello di dati specificato.</summary>
      <returns>Raccolta di tipo <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> che contiene tutti gli elementi nel modello di dati specificato.</returns>
      <param name="dataSpace">Modello concettuale per il quale è necessario l'elenco di elementi.</param>
      <exception cref="T:System.ArgumentException">Generata se lo spazio non è uno spazio valido.Uno spazio valido è C, O, CS o OCSpace.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.GetItems``1(System.Data.Entity.Core.Metadata.Edm.DataSpace)">
      <summary>Ottiene tutti gli elementi nel modello di dati specificato.</summary>
      <returns>Raccolta di tipo <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> che contiene tutti gli elementi nel modello di dati specificato.</returns>
      <param name="dataSpace">Modello concettuale per il quale è necessario l'elenco di elementi.</param>
      <typeparam name="T">Tipo restituito dal metodo.</typeparam>
      <exception cref="T:System.ArgumentException">Generata se lo spazio non è uno spazio valido.Uno spazio valido è C, O, CS o OCSpace.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(System.Data.Entity.Core.Metadata.Edm.EnumType)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.StructuralType" /> che rappresenta il tipo di spazio dell'oggetto corrispondente al tipo fornito dal parametro edmSpaceType.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.StructuralType" /> che rappresenta il tipo dello spazio dell'oggetto.Se non vi è un tipo corrispondente, questo metodo restituisce null.</returns>
      <param name="edmSpaceType">Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EnumType" /> che rappresenta <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(System.Data.Entity.Core.Metadata.Edm.StructuralType)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.StructuralType" /> che rappresenta il tipo di spazio dell'oggetto corrispondente al tipo fornito dal parametro edmSpaceType.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.StructuralType" /> che rappresenta il tipo dello spazio dell'oggetto.Se non vi è un tipo corrispondente, questo metodo restituisce null.</returns>
      <param name="edmSpaceType">Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.StructuralType" /> che rappresenta <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.GetPrimitiveTypes(System.Data.Entity.Core.Metadata.Edm.DataSpace)">
      <summary>Restituisce l'elenco di tipi primitivi nel modello di dati specificato.</summary>
      <returns>Raccolta di tipo <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> che contiene tutti i tipi primitivi nel modello di dati specificato.</returns>
      <param name="dataSpace">Modello di dati per cui è necessario l'elenco di tipi primitivi.</param>
      <exception cref="T:System.ArgumentException">Generata se lo spazio non è uno spazio valido.Uno spazio valido è C, O, CS o OCSpace.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.GetRelevantMembersForUpdate(System.Data.Entity.Core.Metadata.Edm.EntitySetBase,System.Data.Entity.Core.Metadata.Edm.EntityTypeBase,System.Boolean)">
      <summary>Restituisce i membri di un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySet" /> / <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityType" /> specificato di cui sono necessari i valori originali durante la modifica di un'entità.</summary>
      <returns>Oggetti <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmMember" /> per cui è richiesto il valore originale.</returns>
      <param name="entitySet">Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySet" /> appartenente allo spazio C.</param>
      <param name="entityType">Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityType" /> che fa parte dell'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySet" /> specificato.</param>
      <param name="partialUpdateSupported">true se le entità possono essere aggiornate parzialmente; in caso contrario, false.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.GetRequiredOriginalValueMembers(System.Data.Entity.Core.Metadata.Edm.EntitySetBase,System.Data.Entity.Core.Metadata.Edm.EntityTypeBase)">
      <summary>Ottiene i membri dei valori originali da un set e da un tipo di entità.</summary>
      <returns>Membri dei valori originali da un set e da un tipo di entità.</returns>
      <param name="entitySet">Set di entità da cui recuperare i valori originali.</param>
      <param name="entityType">Tipo di entità da cui recuperare i valori originali.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.GetType(System.String,System.String,System.Boolean,System.Data.Entity.Core.Metadata.Edm.DataSpace)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" /> utilizzando il nome del tipo, il nome dello spazio dei nomi e il modello di dati specificati.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" />.</returns>
      <param name="name">Nome del tipo.</param>
      <param name="namespaceName">Spazio dei nomi del tipo.</param>
      <param name="ignoreCase">true per eseguire la ricerca senza distinzione tra maiuscole e minuscole; in caso contrario, false.</param>
      <param name="dataSpace">Modello concettuale in cui viene eseguita la ricerca del tipo.</param>
      <exception cref="T:System.ArgumentException">Generata se lo spazio non è uno spazio valido.Uno spazio valido è C, O, CS o OCSpace.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.GetType(System.String,System.String,System.Data.Entity.Core.Metadata.Edm.DataSpace)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" /> utilizzando il nome del tipo, il nome dello spazio dei nomi e il modello di dati specificati.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" /> che rappresenta il tipo corrispondente al nome del tipo e al nome dello spazio dei nomi specificati nel modello di dati specificato.Se non vi è un tipo corrispondente, questo metodo restituisce null.</returns>
      <param name="name">Nome del tipo.</param>
      <param name="namespaceName">Spazio dei nomi del tipo.</param>
      <param name="dataSpace">Modello concettuale in cui viene eseguita la ricerca del tipo.</param>
      <exception cref="T:System.ArgumentException">Generata se lo spazio non è uno spazio valido.Uno spazio valido è C, O, CS o OCSpace.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(System.Reflection.Assembly)">
      <summary>Carica i metadati dall'assembly specificato.</summary>
      <param name="assembly">Assembly da cui verranno caricati i metadati.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(System.Reflection.Assembly,System.Action{System.String})">
      <summary>Carica i metadati dall'assembly specificato.</summary>
      <param name="assembly">Assembly da cui verranno caricati i metadati.</param>
      <param name="logLoadMessage">Delegato per la registrazione dei messaggi di caricamento.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.MaximumEdmVersionSupported">
      <summary>Versione EDM massima supportata dal runtime.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.RegisterItemCollection(System.Data.Entity.Core.Metadata.Edm.ItemCollection)">
      <summary>Registra la raccolta di elementi con ogni modello di dati associato.</summary>
      <param name="collection">Raccolta di parametri di output che deve essere riempito.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(System.Data.Entity.Core.Metadata.Edm.EnumType,System.Data.Entity.Core.Metadata.Edm.EnumType@)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EnumType" /> tramite il parametro out edmSpaceType che rappresenta l'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" /> corrispondente al tipo fornito dal parametro objectSpaceType.</summary>
      <returns>true se l'operazione ha esito positivo, false in caso di esito negativo.</returns>
      <param name="objectSpaceType">Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EnumType" /> che rappresenta il tipo dello spazio dell'oggetto.</param>
      <param name="edmSpaceType">Quando termina, questo metodo contiene un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EnumType" /> che rappresenta <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" />.Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(System.Data.Entity.Core.Metadata.Edm.StructuralType,System.Data.Entity.Core.Metadata.Edm.StructuralType@)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.StructuralType" /> tramite il parametro out edmSpaceType che rappresenta l'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" /> corrispondente al tipo fornito dal parametro objectSpaceType.</summary>
      <returns>true se è presente un tipo che corrisponde ai criteri di ricerca; in caso contrario, false.</returns>
      <param name="objectSpaceType">Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.StructuralType" /> che rappresenta il tipo dello spazio dell'oggetto.</param>
      <param name="edmSpaceType">Quando termina, questo metodo contiene un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.StructuralType" /> che rappresenta <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" />.Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(System.String,System.Boolean,System.Data.Entity.Core.Metadata.Edm.DataSpace,System.Data.Entity.Core.Metadata.Edm.EntityContainer@)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityContainer" /> utilizzando il nome del contenitore di entità e il modello di dati specificati.</summary>
      <returns>true se è presente un contenitore di entità che corrisponde ai criteri di ricerca; in caso contrario, false.</returns>
      <param name="name">Nome del contenitore di entità.</param>
      <param name="ignoreCase">true per eseguire la ricerca senza distinzione tra maiuscole e minuscole; in caso contrario, false.</param>
      <param name="dataSpace">Modello concettuale in cui viene eseguita la ricerca del contenitore di entità.</param>
      <param name="entityContainer">Quando termina, questo metodo contiene un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityContainer" />.Se non vi è alcun contenitore di entità, questo parametro di output contiene null; in caso contrario, restituisce il primo contenitore di entità.Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(System.String,System.Data.Entity.Core.Metadata.Edm.DataSpace,System.Data.Entity.Core.Metadata.Edm.EntityContainer@)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityContainer" /> utilizzando il nome del contenitore di entità e il modello di dati specificati.</summary>
      <returns>true se è presente un contenitore di entità che corrisponde ai criteri di ricerca; in caso contrario, false.</returns>
      <param name="name">Nome del contenitore di entità.</param>
      <param name="dataSpace">Modello concettuale in cui viene eseguita la ricerca del contenitore di entità.</param>
      <param name="entityContainer">Quando termina, questo metodo contiene un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityContainer" />.Se non vi è alcun contenitore di entità, questo parametro di output contiene null; in caso contrario, restituisce il primo contenitore di entità.Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.TryGetItem``1(System.String,System.Boolean,System.Data.Entity.Core.Metadata.Edm.DataSpace,``0@)">
      <summary>Restituisce un elemento utilizzando l'identità e il modello di dati specificati.</summary>
      <returns>true se è presente un elemento che corrisponde ai criteri di ricerca; in caso contrario, false.</returns>
      <param name="identity">Modello concettuale in cui viene eseguita la ricerca dell'elemento.</param>
      <param name="ignoreCase">true per eseguire la ricerca senza distinzione tra maiuscole e minuscole; in caso contrario, false.</param>
      <param name="dataSpace">Modello concettuale in cui viene eseguita la ricerca dell'elemento.</param>
      <param name="item">Quando termina, questo metodo contiene un oggetto <see cref="T:System.Data.Metadata.Edm.GlobalIem" />.Questo parametro viene passato non inizializzato.</param>
      <typeparam name="T">Tipo restituito dal metodo.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.TryGetItem``1(System.String,System.Data.Entity.Core.Metadata.Edm.DataSpace,``0@)">
      <summary>Restituisce un elemento utilizzando l'identità e il modello di dati specificati.</summary>
      <returns>true se è presente un elemento che corrisponde ai criteri di ricerca; in caso contrario, false.</returns>
      <param name="identity">Modello concettuale in cui viene eseguita la ricerca dell'elemento.</param>
      <param name="space">Modello concettuale in cui viene eseguita la ricerca dell'elemento.</param>
      <param name="item">Quando termina, questo metodo contiene un oggetto <see cref="T:System.Data.Metadata.Edm.GlobalIem" />.Questo parametro viene passato non inizializzato.</param>
      <typeparam name="T">Tipo restituito dal metodo.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.TryGetItemCollection(System.Data.Entity.Core.Metadata.Edm.DataSpace,System.Data.Entity.Core.Metadata.Edm.ItemCollection@)">
      <summary>Testa il recupero di <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace" />.</summary>
      <returns>true se il recupero è stato completato; in caso contrario, false.</returns>
      <param name="dataSpace">
        <see cref="T:System.Data.Entity.Core.Metadata.Edm.DataSpace" /> da cui effettuare il tentativo di recupero di <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace" />.</param>
      <param name="collection">Quando termina, questo metodo contiene la raccolta di elementi.Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(System.Data.Entity.Core.Metadata.Edm.EnumType,System.Data.Entity.Core.Metadata.Edm.EnumType@)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EnumType" /> tramite il parametro out objectSpaceType che rappresenta il tipo corrispondente all'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" /> fornito dal parametro edmSpaceType.</summary>
      <returns>true se è presente un tipo che corrisponde ai criteri di ricerca; in caso contrario, false.</returns>
      <param name="edmSpaceType">Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EnumType" /> che rappresenta <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" />.</param>
      <param name="objectSpaceType">Quando termina, questo metodo contiene un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EnumType" /> che rappresenta il tipo dello spazio dell'oggetto.Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(System.Data.Entity.Core.Metadata.Edm.StructuralType,System.Data.Entity.Core.Metadata.Edm.StructuralType@)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.StructuralType" /> tramite il parametro out objectSpaceType che rappresenta il tipo corrispondente all'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" /> fornito dal parametro edmSpaceType.</summary>
      <returns>true se è presente un tipo che corrisponde ai criteri di ricerca; in caso contrario, false.</returns>
      <param name="edmSpaceType">Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.StructuralType" /> che rappresenta <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" />.</param>
      <param name="objectSpaceType">Quando termina, questo metodo contiene un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.StructuralType" /> che rappresenta il tipo dello spazio dell'oggetto.Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.TryGetType(System.String,System.String,System.Boolean,System.Data.Entity.Core.Metadata.Edm.DataSpace,System.Data.Entity.Core.Metadata.Edm.EdmType@)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" /> utilizzando il nome del tipo, il nome dello spazio dei nomi e il modello di dati specificati.</summary>
      <returns>true se è presente un tipo che corrisponde ai criteri di ricerca; in caso contrario, false.</returns>
      <param name="name">Nome del tipo.</param>
      <param name="namespaceName">Spazio dei nomi del tipo.</param>
      <param name="ignoreCase">true per eseguire la ricerca senza distinzione tra maiuscole e minuscole; in caso contrario, false.</param>
      <param name="dataSpace">Modello concettuale in cui viene eseguita la ricerca del tipo.</param>
      <param name="type">Quando termina, questo metodo contiene un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" />.Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace.TryGetType(System.String,System.String,System.Data.Entity.Core.Metadata.Edm.DataSpace,System.Data.Entity.Core.Metadata.Edm.EdmType@)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" /> utilizzando il nome del tipo, il nome dello spazio dei nomi e il modello di dati specificati.</summary>
      <returns>true se è presente un tipo che corrisponde ai criteri di ricerca; in caso contrario, false.</returns>
      <param name="name">Nome del tipo.</param>
      <param name="namespaceName">Spazio dei nomi del tipo.</param>
      <param name="dataSpace">Modello concettuale in cui viene eseguita la ricerca del tipo.</param>
      <param name="type">Quando termina, questo metodo contiene un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" />.Questo parametro viene passato non inizializzato.</param>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.NavigationProperty">
      <summary>Rappresenta la classe delle proprietà di navigazione</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.NavigationProperty.BuiltInTypeKind">
      <summary>Ottiene il tipo del tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.NavigationProperty" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind" /> che rappresenta il tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.NavigationProperty" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.NavigationProperty.Create(System.String,System.Data.Entity.Core.Metadata.Edm.TypeUsage,System.Data.Entity.Core.Metadata.Edm.RelationshipType,System.Data.Entity.Core.Metadata.Edm.RelationshipEndMember,System.Data.Entity.Core.Metadata.Edm.RelationshipEndMember,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.MetadataProperty})">
      <summary>Crea una istanza di NavigationProperty dai parametri specificati.</summary>
      <returns>Istanza di NavigationProperty appena creata.</returns>
      <param name="name">Nome della proprietà di navigazione.</param>
      <param name="typeUsage">Specifica il tipo delle proprietà di navigazione e i relativi facet.</param>
      <param name="relationshipType">Tipo di relazione per la navigazione.</param>
      <param name="from">Membro dell'entità finale di origine nella navigazione.</param>
      <param name="to">Membro dell'entità finale di destinazione nella navigazione.</param>
      <param name="metadataProperties">Proprietà dei metadati della proprietà di navigazione.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.NavigationProperty.FromEndMember">
      <summary>Ottiene il membro entità finale "from" della relazione nella navigazione.</summary>
      <returns>Membro entità finale "from" della relazione nella navigazione.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.NavigationProperty.GetDependentProperties">
      <summary>Se la proprietà di navigazione specificata si trova sull'entità finale dipendente di un vincolo referenziale, restituisce le proprietà della chiave esterna.In caso contrario, restituisce un set vuoto.I membri verranno restituiti nell'ordine delle proprietà chiave dell'entità finale principale.</summary>
      <returns>Raccolta delle proprietà di chiave esterna.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.NavigationProperty.RelationshipType">
      <summary>Ottiene il tipo di relazione su cui opera la proprietà di navigazione.</summary>
      <returns>Tipo di relazione su cui opera la proprietà di navigazione.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.NavigationProperty.ToEndMember">
      <summary>Ottiene il membro entità finale "to" della relazione nella navigazione.</summary>
      <returns>Membro entità finale "to" della relazione nella navigazione.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.ObjectItemCollection">
      <summary>Classe per la rappresentazione di una raccolta di elementi per il livello oggetti.La maggior parte dell'implementazione per la manutenzione effettiva della raccolta viene eseguita da ItemCollection</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ObjectItemCollection.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Metadata.Edm.ObjectItemCollection" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ObjectItemCollection.GetClrType(System.Data.Entity.Core.Metadata.Edm.EnumType)">
      <summary>Il metodo restituisce il tipo CLR sottostante per l'argomento di tipo OSpace specificato.Se lo spazio dati del parametro non è OSpace, viene generata un'eccezione ArgumentException.</summary>
      <returns>Tipo CLR dell'argomento OSpace.</returns>
      <param name="objectSpaceType">Tipo OSpace di cui eseguire la ricerca.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ObjectItemCollection.GetClrType(System.Data.Entity.Core.Metadata.Edm.StructuralType)">
      <summary>Restituisce il tipo CLR che corrisponde all'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.StructuralType" /> specificato dal parametro objectSpaceType.</summary>
      <returns>Tipo CLR dell'argomento OSpace.</returns>
      <param name="objectSpaceType">Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.StructuralType" /> che rappresenta il tipo dello spazio dell'oggetto.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ObjectItemCollection.GetItems``1">
      <summary>Restituisce tutti gli elementi del tipo specificato da questa raccolta di elementi.</summary>
      <returns>Raccolta di tipo <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> che contiene tutti gli elementi del tipo specificato.</returns>
      <typeparam name="T">Tipo restituito dal metodo.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ObjectItemCollection.GetPrimitiveTypes">
      <summary>Restituisce una raccolta di oggetti di tipo primitivo.</summary>
      <returns>Raccolta di oggetti di tipo primitivo.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ObjectItemCollection.LoadFromAssembly(System.Reflection.Assembly)">
      <summary>Carica i metadati dall'assembly specificato.</summary>
      <param name="assembly">Assembly da cui verranno caricati i metadati.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ObjectItemCollection.LoadFromAssembly(System.Reflection.Assembly,System.Data.Entity.Core.Metadata.Edm.EdmItemCollection)">
      <summary>Carica i metadati dall'assembly specificato.</summary>
      <param name="assembly">Assembly da cui verranno caricati i metadati.</param>
      <param name="edmItemCollection">Origine dei metadati EDM per i metadati dello spazio O.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ObjectItemCollection.LoadFromAssembly(System.Reflection.Assembly,System.Data.Entity.Core.Metadata.Edm.EdmItemCollection,System.Action{System.String})">
      <summary>Carica i metadati dall'assembly specificato.</summary>
      <param name="assembly">Assembly da cui verranno caricati i metadati.</param>
      <param name="edmItemCollection">Origine dei metadati EDM per i metadati dello spazio O.</param>
      <param name="logLoadMessage">Delegato a cui vengono inviati i messaggi del log.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ObjectItemCollection.TryGetClrType(System.Data.Entity.Core.Metadata.Edm.EnumType,System.Type@)">
      <summary>Restituisce il tipo CLR sottostante per l'argomento di tipo enum OSpace specificato.Se lo spazio dati del parametro non è OSpace, il metodo restituisce false e imposta il parametro out su Null.</summary>
      <returns>true se l'operazione ha esito positivo, false in caso di esito negativo</returns>
      <param name="objectSpaceType">Tipo enum OSpace di cui eseguire la ricerca</param>
      <param name="clrType">Tipo enum CLR dell'argomento OSpace</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ObjectItemCollection.TryGetClrType(System.Data.Entity.Core.Metadata.Edm.StructuralType,System.Type@)">
      <summary>Restituisce un tipo CLR che corrisponde all'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.StructuralType" /> specificato dal parametro objectSpaceType.</summary>
      <returns>true se è presente un tipo che corrisponde ai criteri di ricerca; in caso contrario, false.</returns>
      <param name="objectSpaceType">Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.StructuralType" /> che rappresenta il tipo dello spazio dell'oggetto.</param>
      <param name="clrType">Tipo CLR.</param>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.OperationAction">
      <summary>Rappresenta l'elenco delle possibili azioni per l'operazione di eliminazione</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.OperationAction.Cascade">
      <summary>Propagazione alle altre entità finali</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.OperationAction.None">
      <summary>nessuna azione</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.ParameterMode">
      <summary>Enumerazione che definisce la modalità di un parametro</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.ParameterMode.In">
      <summary>Parametro In</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.ParameterMode.InOut">
      <summary>Entrambi i parametri In e Out</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.ParameterMode.Out">
      <summary>Parametro Out</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.ParameterMode.ReturnValue">
      <summary>Parametro restituito</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.ParameterTypeSemantics">
      <summary>Enumerazione che definisce la semantica dei tipi utilizzata per risolvere gli overload della funzione.Questi flag sono definiti nel manifesto del provider per ogni definizione di funzione.</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.ParameterTypeSemantics.AllowImplicitConversion">
      <summary>Consentire la conversione implicita tra i tipi di argomenti specificati e formali (impostazione predefinita).</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.ParameterTypeSemantics.AllowImplicitPromotion">
      <summary>Consentire la promozione dei tipi tra i tipi di argomenti specificati e formali (impostazione predefinita).</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.ParameterTypeSemantics.ExactMatchOnly">
      <summary>Utilizzare unicamente l'equivalenza rigida.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.PrimitiveType">
      <summary>Classe che rappresenta un tipo primitivo</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.PrimitiveType.BuiltInTypeKind">
      <summary>Ottiene il tipo del tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.PrimitiveType" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind" /> che rappresenta il tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.PrimitiveType" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.PrimitiveType.ClrEquivalentType">
      <summary>Restituisce un tipo Common Language Runtime (CLR) equivalente a <see cref="T:System.Data.Entity.Core.Metadata.Edm.PrimitiveType" />.Si noti che la proprietà <see cref="P:System.Data.Entity.Core.Metadata.Edm.PrimitiveType.ClrEquivalentType" /> restituisce sempre un valore di un tipo che non ammette valori Null.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che rappresenta un tipo Common Language Runtime (CLR) equivalente a <see cref="T:System.Data.Entity.Core.Metadata.Edm.PrimitiveType" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.PrimitiveType.FacetDescriptions">
      <summary>Ottiene l'elenco di descrizioni dei facet per <see cref="T:System.Data.Entity.Core.Metadata.Edm.PrimitiveType" />.</summary>
      <returns>Raccolta di tipo <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> che contiene l'elenco di descrizioni dei facet per <see cref="T:System.Data.Entity.Core.Metadata.Edm.PrimitiveType" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.PrimitiveType.GetEdmPrimitiveType">
      <summary>Restituisce l'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" /> equivalente a <see cref="T:System.Data.Entity.Core.Metadata.Edm.PrimitiveType" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" /> equivalente a <see cref="T:System.Data.Entity.Core.Metadata.Edm.PrimitiveType" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.PrimitiveType.GetEdmPrimitiveType(System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind)">
      <summary>Restituisce l'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" /> equivalente a <see cref="T:System.Data.Entity.Core.Metadata.Edm.PrimitiveType" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" /> equivalente a un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.PrimitiveType" /> specificato.</returns>
      <param name="primitiveTypeKind">Valore di tipo <see cref="T:System.Data.Entity.Core.Metadata.Edm.PrimitiveType" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.PrimitiveType.GetEdmPrimitiveTypes">
      <summary>Restituisce l'elenco di tipi primitivi.</summary>
      <returns>Raccolta di tipo <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> che contiene l'elenco di tipi primitivi.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.PrimitiveType.PrimitiveTypeKind">
      <summary>Ottiene un valore di enumerazione <see cref="T:System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind" /> che indica un tipo primitivo di <see cref="T:System.Data.Entity.Core.Metadata.Edm.PrimitiveType" />.</summary>
      <returns>Valore di enumerazione <see cref="T:System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind" /> che indica un tipo primitivo di <see cref="T:System.Data.Entity.Core.Metadata.Edm.PrimitiveType" />.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind">
      <summary>Tipi primitivi secondo la definizione di EDM</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind.Binary">
      <summary>Tipo binario</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind.Boolean">
      <summary>Tipo booleano</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind.Byte">
      <summary>Tipo byte</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind.DateTime">
      <summary>Tipo DateTime</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind.DateTimeOffset">
      <summary>Tipo DateTimeOffset</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind.Decimal">
      <summary>Tipo Decimal</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind.Double">
      <summary>Tipo Double</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind.Geography">
      <summary>Tipo Geography</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind.GeographyCollection">
      <summary>Tipo della raccolta geografica</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind.GeographyLineString">
      <summary>Tipo della linea spezzata geografica</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind.GeographyMultiLineString">
      <summary>Tipo della multilinea spezzata geografica</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind.GeographyMultiPoint">
      <summary>Tipo del multipunto geografico</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind.GeographyMultiPolygon">
      <summary>Tipo del multipoligono geografico</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind.GeographyPoint">
      <summary>Tipo del punto geografico</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind.GeographyPolygon">
      <summary>Tipo del poligono geografico</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind.Geometry">
      <summary>Tipo Geometry</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind.GeometryCollection">
      <summary>Tipo della raccolta geometrica</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind.GeometryLineString">
      <summary>Tipo della linea spezzata geometrica</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind.GeometryMultiLineString">
      <summary>Tipo della multilinea spezzata geometrica</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind.GeometryMultiPoint">
      <summary>Tipo del multipunto geometrico</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind.GeometryMultiPolygon">
      <summary>Tipo del multipoligono geometrico</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind.GeometryPoint">
      <summary>Tipo del punto geometrico</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind.GeometryPolygon">
      <summary>Tipo del poligono geometrico</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind.Guid">
      <summary>Tipo Guid</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind.Int16">
      <summary>Tipo Int16</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind.Int32">
      <summary>Tipo Int32</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind.Int64">
      <summary>Tipo Int64</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind.SByte">
      <summary>Tipo SByte</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind.Single">
      <summary>Tipo Single</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind.String">
      <summary>Tipo String</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind.Time">
      <summary>Tipo Time</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.PropertyKind">
      <summary>Specifica i tipi di attributi degli elementi nel modello concettuale.</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.PropertyKind.Extended">
      <summary>Membro di enumerazione che indica che un attributo dell'elemento è Extended.</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.PropertyKind.System">
      <summary>Membro di enumerazione che indica che un attributo dell'elemento è System.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1">
      <summary>Classe che rappresenta un wrapper di sola lettura intorno a MetadataCollection</summary>
      <typeparam name="T">Tipo di elementi contenuti nella raccolta</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1.Contains(System.String)">
      <summary>Determina se la raccolta contiene un elemento con l'identità specificata.</summary>
      <returns>true se la raccolta contiene l'elemento di cui eseguire la ricerca; in caso contrario, false.Il valore predefinito è false.</returns>
      <param name="identity">Identità dell'elemento.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1.GetEnumerator">
      <summary>Restituisce un enumeratore che può scorrere la raccolta.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator" /> che può essere utilizzato per scorrere <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1.GetValue(System.String,System.Boolean)">
      <summary>Recupera un elemento dalla raccolta utilizzando l'identità specificata.</summary>
      <returns>Elemento dalla raccolta.</returns>
      <param name="identity">Identità dell'elemento di cui eseguire la ricerca.</param>
      <param name="ignoreCase">true per eseguire la ricerca senza distinzione tra maiuscole e minuscole; in caso contrario, false.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1.IndexOf(`0)">
      <summary>Restituisce l'indice del valore specificato nella raccolta.</summary>
      <returns>Indice del valore specificato nella raccolta.</returns>
      <param name="value">Valore da cercare.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1.IsReadOnly">
      <summary>Ottiene un valore che indica se la raccolta è di sola lettura.</summary>
      <returns>true se la raccolta è di sola lettura; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1.Item(System.String)">
      <summary>Ottiene un elemento dalla raccolta utilizzando l'identità specificata.</summary>
      <returns>Elemento dalla raccolta.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1.TryGetValue(System.String,System.Boolean,`0@)">
      <summary>Recupera un elemento dalla raccolta utilizzando l'identità specificata.</summary>
      <returns>true se è presente un elemento che corrisponde ai criteri di ricerca; in caso contrario, false.</returns>
      <param name="identity">Identità dell'elemento di cui eseguire la ricerca.</param>
      <param name="ignoreCase">true per eseguire la ricerca senza distinzione tra maiuscole e minuscole; in caso contrario, false.</param>
      <param name="item">Quando il metodo termina, questo parametro di output contiene un elemento della raccolta.Se non è presente alcun elemento corrispondente, questo parametro di output contiene null.</param>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator">
      <summary>Enumeratore per MetadataCollection</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.Current">
      <summary>Ottiene il membro nella posizione corrente.</summary>
      <returns>Membro nella posizione corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.Dispose">
      <summary>Elimina l'enumeratore.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.MoveNext">
      <summary>Viene spostato al membro successivo nella raccolta di tipo <see cref="T:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator" />.</summary>
      <returns>True se l'enumeratore viene spostato nella raccolta di tipo <see cref="T:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1.EnumeratortaCollection" />; in caso contrario, false.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.Reset">
      <summary>Posiziona l'enumeratore prima della prima posizione nella raccolta di tipo <see cref="T:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1" />.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Ottiene il membro alla posizione corrente</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.ReferentialConstraint">
      <summary>Questa classe rappresenta un vincolo referenziale tra due entità specificando le entità finali "to" e "from" della relazione.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ReferentialConstraint.#ctor(System.Data.Entity.Core.Metadata.Edm.RelationshipEndMember,System.Data.Entity.Core.Metadata.Edm.RelationshipEndMember,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.EdmProperty},System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.EdmProperty})">
      <summary>Costruisce un nuovo vincolo sulla relazione</summary>
      <param name="fromRole">ruolo da cui ha origine la relazione</param>
      <param name="toRole">ruolo a cui è collegata/destinata la relazione</param>
      <param name="fromProperties">proprietà sul tipo di entità del ruolo a che fanno parte del vincolo</param>
      <param name="toProperties">proprietà sul tipo di entità del ruolo da che fanno parte del vincolo</param>
      <exception cref="T:System.ArgumentNullException">Eccezione Null dell'argomento se uno degli argomenti è Null</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.ReferentialConstraint.BuiltInTypeKind">
      <summary>Ottiene il tipo del tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.ReferentialConstraint" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind" /> che rappresenta il tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.ReferentialConstraint" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.ReferentialConstraint.FromProperties">
      <summary>Ottiene l'elenco di proprietà per l'oggetto "FromRole" per cui è definito <see cref="T:System.Data.Entity.Core.Metadata.Edm.ReferentialConstraint" />.</summary>
      <returns>Raccolta di tipo <see cref="T:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1" /> che contiene l'elenco di proprietà per l'oggetto "FromRole" per cui è definito <see cref="T:System.Data.Entity.Core.Metadata.Edm.ReferentialConstraint" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.ReferentialConstraint.FromRole">
      <summary>Ottiene l'oggetto "FromRole" che fa parte di <see cref="T:System.Data.Entity.Core.Metadata.Edm.ReferentialConstraint" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.RelationshipEndMember" /> che rappresenta l'oggetto "FromRole" che fa parte di <see cref="T:System.Data.Entity.Core.Metadata.Edm.ReferentialConstraint" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.ReferentialConstraint.ToProperties">
      <summary>Ottiene l'elenco di proprietà per l'oggetto "ToRole" per cui è definito <see cref="T:System.Data.Entity.Core.Metadata.Edm.ReferentialConstraint" />.</summary>
      <returns>Raccolta di tipo <see cref="T:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1" /> che contiene l'elenco di proprietà per l'oggetto "ToRole" per cui è definito <see cref="T:System.Data.Entity.Core.Metadata.Edm.ReferentialConstraint" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.ReferentialConstraint.ToRole">
      <summary>Ottiene l'oggetto "ToRole" che fa parte di <see cref="T:System.Data.Entity.Core.Metadata.Edm.ReferentialConstraint" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.RelationshipEndMember" /> che rappresenta l'oggetto "ToRole" che fa parte di <see cref="T:System.Data.Entity.Core.Metadata.Edm.ReferentialConstraint" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.ReferentialConstraint.ToString">
      <summary>Restituisce la combinazione dei nomi di <see cref="P:System.Data.Entity.Core.Metadata.Edm.ReferentialConstraint.FromRole" /> e di <see cref="P:System.Data.Entity.Core.Metadata.Edm.ReferentialConstraint.ToRole" />.</summary>
      <returns>Combinazione dei nomi di <see cref="P:System.Data.Entity.Core.Metadata.Edm.ReferentialConstraint.FromRole" /> e di <see cref="P:System.Data.Entity.Core.Metadata.Edm.ReferentialConstraint.ToRole" />.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.RefType">
      <summary>Rappresenta una classe per un tipo di riferimento.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.RefType.BuiltInTypeKind">
      <summary>Ottiene il tipo del tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.RefType" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind" /> che rappresenta il tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.RefType" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.RefType.ElementType">
      <summary>Ottiene il tipo di entità a cui fa riferimento <see cref="T:System.Data.Entity.Core.Metadata.Edm.RefType" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityTypeBase" /> che rappresenta il tipo di entità a cui fa riferimento <see cref="T:System.Data.Entity.Core.Metadata.Edm.RefType" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.RefType.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'istanza corrente.</summary>
      <returns>true se l'oggetto specificato è uguale all'istanza corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.RefType.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza corrente.</summary>
      <returns>Codice hash per l'istanza corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.RelationshipEndMember">
      <summary>Inizializza una nuova istanza della classe RelationshipEndMember</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.RelationshipEndMember.DeleteBehavior">
      <summary>Ottiene il comportamento operativo del membro End della relazione.</summary>
      <returns>Uno dei valori di <see cref="T:System.Data.Entity.Core.Metadata.Edm.OperationAction" />.Il valore predefinito è <see cref="P:System.Data.Entity.Core.Metadata.Edm.OperationAction.None" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.RelationshipEndMember.GetEntityType">
      <summary>Accede a EntityType di EndMember in un'associazione.</summary>
      <returns>EntityType di EndMember in un'associazione.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.RelationshipEndMember.RelationshipMultiplicity">
      <summary>Ottiene la molteplicità del membro End della relazione.</summary>
      <returns>Uno dei valori di <see cref="T:System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity" />.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity">
      <summary>Rappresenta le informazioni sulla molteplicità per l'entità finale di un tipo di relazione</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many">
      <summary>Il limite inferiore è zero e il limite superiore è Null</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One">
      <summary>Entrambi i limiti, superiore e inferiore, sono uno</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne">
      <summary>Il limite inferiore è Zero e quello superiore è Uno</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.RelationshipSet">
      <summary>Classe per la rappresentazione di un set di relazioni</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.RelationshipSet.BuiltInTypeKind">
      <summary>Ottiene il tipo del tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.RelationshipSet" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind" /> che rappresenta il tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.RelationshipSet" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.RelationshipSet.ElementType">
      <summary>Ottiene il tipo di relazione per <see cref="T:System.Data.Entity.Core.Metadata.Edm.RelationshipSet" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.RelationshipType" /> che rappresenta il tipo di relazione di <see cref="T:System.Data.Entity.Core.Metadata.Edm.RelationshipSet" />.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.RelationshipType">
      <summary>Rappresenta il tipo di relazione</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.RelationshipType.RelationshipEndMembers">
      <summary>Ottiene l'elenco delle entità finali per il tipo di relazione.</summary>
      <returns>Raccolta di tipo <see cref="T:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1" /> che contiene l'elenco delle entità finali per il tipo di relazione.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.RowType">
      <summary>Rappresenta il tipo di riga Edm</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.RowType.BuiltInTypeKind">
      <summary>Ottiene il tipo del tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.RowType" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind" /> che rappresenta il tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.RowType" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.RowType.Create(System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.EdmProperty},System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.MetadataProperty})">
      <summary>Metodo factory per la costruzione dell'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.RowType" />.</summary>
      <returns>Nuova istanza di sola lettura dell'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.RowType" />.</returns>
      <param name="properties">Proprietà dell'oggetto tipo di riga.</param>
      <param name="metadataProperties">Proprietà dei metadati che verranno aggiunti alla funzione.Può essere null.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.RowType.DeclaredProperties">
      <summary>Ottiene una raccolta delle proprietà definite dal tipo corrente.</summary>
      <returns>Raccolta delle proprietà definite dal tipo corrente.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.RowType.Properties">
      <summary>Ottiene l'elenco di proprietà in <see cref="T:System.Data.Entity.Core.Metadata.Edm.RowType" />.</summary>
      <returns>Raccolta di tipo <see cref="T:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1" /> che contiene l'elenco di proprietà in <see cref="T:System.Data.Entity.Core.Metadata.Edm.RowType" />.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.SimpleType">
      <summary>Classe che rappresenta un tipo semplice</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.SsdlSerializer">
      <summary>Fornisce i metodi per la serializzazione della sezione di archiviazione (database) di <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmModel" /> in XML.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.SsdlSerializer.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Metadata.Edm.SsdlSerializer" />.</summary>
    </member>
    <member name="E:System.Data.Entity.Core.Metadata.Edm.SsdlSerializer.OnError">
      <summary>Si verifica quando viene individuato un errore durante la serializzazione del modello.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.SsdlSerializer.Serialize(System.Data.Entity.Core.Metadata.Edm.EdmModel,System.String,System.String,System.String,System.Xml.XmlWriter,System.Boolean)">
      <summary>Serializza <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmModel" /> in <see cref="T:System.Xml.XmlWriter" />.</summary>
      <returns>true se il modello può essere serializzato. In caso contrario, false.</returns>
      <param name="dbDatabase">EdmModel da serializzare.</param>
      <param name="namespaceName">Nome dello spazio dei nomi nell'elemento Schema.</param>
      <param name="provider">Informazioni sul provider nell'elemento Schema.</param>
      <param name="providerManifestToken">Informazioni ProviderManifestToken nell'elemento Schema.</param>
      <param name="xmlWriter">XmlWriter in cui serializzare.</param>
      <param name="serializeDefaultNullability">Valore che indica se serializzare gli attributi che ammettono valori null quando vengono impostati sul valore predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.SsdlSerializer.Serialize(System.Data.Entity.Core.Metadata.Edm.EdmModel,System.String,System.String,System.Xml.XmlWriter,System.Boolean)">
      <summary>Serializza <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmModel" /> in <see cref="T:System.Xml.XmlWriter" />.</summary>
      <returns>true se il modello può essere serializzato. In caso contrario, false.</returns>
      <param name="dbDatabase">EdmModel da serializzare.</param>
      <param name="provider">Informazioni sul provider nell'elemento Schema.</param>
      <param name="providerManifestToken">Informazioni ProviderManifestToken nell'elemento Schema.</param>
      <param name="xmlWriter">XmlWriter in cui serializzare.</param>
      <param name="serializeDefaultNullability">Valore che indica se serializzare gli attributi che ammettono valori null quando vengono impostati sul valore predefinito.</param>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.StoreGeneratedPattern">
      <summary>Modello per le proprietà generate dal server.</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.StoreGeneratedPattern.Computed">
      <summary>Viene generato un valore sia in fase di inserimento che di aggiornamento.</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.StoreGeneratedPattern.Identity">
      <summary>Viene generato un valore durante l'inserimento e il valore viene mantenuto invariato all'aggiornamento.</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Metadata.Edm.StoreGeneratedPattern.None">
      <summary>Non una proprietà generata dal server.Impostazione predefinita.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.StoreItemCollection">
      <summary>Classe per la rappresentazione di una raccolta di elementi nello spazio dell'archivio.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.StoreItemCollection.#ctor(System.Collections.Generic.IEnumerable{System.Xml.XmlReader})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Metadata.Edm.StoreItemCollection" /> utilizzando l'oggetto XMLReader specificato.</summary>
      <param name="xmlReaders">Oggetto XMLReader utilizzato per creare i metadati.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.StoreItemCollection.#ctor(System.Data.Entity.Core.Metadata.Edm.EdmModel)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Metadata.Edm.StoreItemCollection" />.</summary>
      <param name="model">Modello dell'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.StoreItemCollection" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.StoreItemCollection.#ctor(System.String[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Metadata.Edm.StoreItemCollection" /> utilizzando i percorsi di file specificati.</summary>
      <param name="filePaths">Percorsi di file utilizzati per creare i metadati.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.StoreItemCollection.Create(System.Collections.Generic.IEnumerable{System.Xml.XmlReader},System.Collections.ObjectModel.ReadOnlyCollection{System.String},System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver,System.Collections.Generic.IList{System.Data.Entity.Core.Metadata.Edm.EdmSchemaError}@)">
      <summary>Metodo factory che crea un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.StoreItemCollection" />.</summary>
      <returns>Istanza di <see cref="T:System.Data.Entity.Core.Metadata.Edm.StoreItemCollection" /> se non vengono rilevati errori.In caso contrario, null.</returns>
      <param name="xmlReaders">Elementi SSDL da caricare.Non deve essere null.</param>
      <param name="filePaths">Percorsi degli elementi SSDL.Utilizzato nei messaggi di errore.Può essere null, nel qual caso l'URI di base di XmlReader verrà utilizzato come percorso.</param>
      <param name="resolver">Sistema di risoluzione personalizzato.Attualmente utilizzato per risolvere l'implementazione di DbProviderServices.Se null verrà utilizzato il sistema di risoluzione predefinito.</param>
      <param name="errors">Raccolta di errori rilevati durante il caricamento.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.StoreItemCollection.GetPrimitiveTypes">
      <summary>Restituisce una raccolta degli oggetti <see cref="T:System.Data.Entity.Core.Metadata.Edm.PrimitiveType" />.</summary>
      <returns>Oggetto <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> che rappresenta la raccolta degli oggetti <see cref="T:System.Data.Entity.Core.Metadata.Edm.PrimitiveType" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.StoreItemCollection.ProviderFactory">
      <summary>Ottiene la factory del provider di StoreItemCollection.</summary>
      <returns>Factory del provider di StoreItemCollection.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.StoreItemCollection.ProviderInvariantName">
      <summary>Ottiene il nome invariante di StoreItemCollection.</summary>
      <returns>Nome invariante di StoreItemCollection.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.StoreItemCollection.ProviderManifest">
      <summary>Ottiene il manifesto del provider di StoreItemCollection.</summary>
      <returns>Manifesto del provider di StoreItemCollection.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.StoreItemCollection.ProviderManifestToken">
      <summary>Ottiene il token del manifesto di StoreItemCollection.</summary>
      <returns>Token del manifesto di StoreItemCollection.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.StoreItemCollection.StoreSchemaVersion">
      <summary>Ottiene la versione dello schema di archivio per questa raccolta.</summary>
      <returns>Versione dello schema di archivio per questa raccolta.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.StructuralType">
      <summary>Rappresenta il tipo strutturale</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.StructuralType.AddMember(System.Data.Entity.Core.Metadata.Edm.EdmMember)">
      <summary>Aggiunge un membro al tipo</summary>
      <param name="member">Membro da aggiungere</param>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.StructuralType.Members">
      <summary>Ottiene l'elenco di membri nel tipo.</summary>
      <returns>Raccolta di tipo <see cref="T:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1" /> che contiene un set di membri nel tipo.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.StructuralType.RemoveMember(System.Data.Entity.Core.Metadata.Edm.EdmMember)">
      <summary>Rimuove un membro da questo tipo.</summary>
      <param name="member">Membro da rimuovere.</param>
    </member>
    <member name="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage">
      <summary>Classe che rappresenta le informazioni sul tipo per un elemento</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.TypeUsage.BuiltInTypeKind">
      <summary>Ottiene il tipo del tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind" /> che rappresenta il tipo incorporato per <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.TypeUsage.Create(System.Data.Entity.Core.Metadata.Edm.EdmType,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.Facet})">
      <summary>Metodo factory per la creazione di un elemento TypeUsage con EdmType e facet specificati</summary>
      <returns>nuova istanza di TypeUsage</returns>
      <param name="edmType">EdmType per cui creare un utilizzo del tipo</param>
      <param name="facets">facet da copiare nel nuovo elemento TypeUsage</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.TypeUsage.CreateBinaryTypeUsage(System.Data.Entity.Core.Metadata.Edm.PrimitiveType,System.Boolean)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" /> per descrivere un tipo binario utilizzando i valori di facet specificati.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" /> che descrive un tipo binario utilizzando i valori di facet specificati.</returns>
      <param name="primitiveType">Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.PrimitiveType" /> per cui viene creato l'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" />.</param>
      <param name="isFixedLength">true per impostare una lunghezza fissa per il tipo binario; in caso contrario, false.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.TypeUsage.CreateBinaryTypeUsage(System.Data.Entity.Core.Metadata.Edm.PrimitiveType,System.Boolean,System.Int32)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" /> per descrivere un tipo binario utilizzando i valori di facet specificati.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" /> che descrive un tipo binario utilizzando i valori di facet specificati.</returns>
      <param name="primitiveType">Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.PrimitiveType" /> per cui viene creato l'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" />.</param>
      <param name="isFixedLength">true per impostare una lunghezza fissa per il tipo binario; in caso contrario, false.</param>
      <param name="maxLength">Lunghezza massima del tipo binario.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.TypeUsage.CreateDateTimeOffsetTypeUsage(System.Data.Entity.Core.Metadata.Edm.PrimitiveType,System.Nullable{System.Byte})">
      <summary>Crea un oggetto <see cref="T:System.Data.Metadata.Edm.DateTimeOffsetTypeUsage" /> del tipo descritto dai parametri.</summary>
      <returns>Oggetto <see cref="T:System.Data.Metadata.Edm.DateTimeOffsetTypeUsage" />.</returns>
      <param name="primitiveType">Tipo semplice che definisce le unità di misura dell'offset.</param>
      <param name="precision">Grado di granularità di <see cref="T:System." />DateTimeOffset espresso in frazioni di secondo, in base al numero di posizioni decimali supportate.Ad esempio una precisione di 3 significa che la granularità supportata è costituita dai millisecondi.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.TypeUsage.CreateDateTimeTypeUsage(System.Data.Entity.Core.Metadata.Edm.PrimitiveType,System.Nullable{System.Byte})">
      <summary>Crea un oggetto <see cref="T:System.Data.Metadata.Edm.DateTimeTypeUsage" /> del tipo descritto dai parametri.</summary>
      <returns>Oggetto <see cref="T:System.Data.Metadata.Edm.DateTimeTypeUsage" />.</returns>
      <param name="primitiveType">Tipo semplice che definisce le unità di misura dell'oggetto <see cref="T:System." />DateTime.</param>
      <param name="precision">Grado di granularità di <see cref="T:System." />DateTimeOffset espresso in frazioni di secondo, in base al numero di posizioni decimali supportate.Ad esempio una precisione di 3 significa che la granularità supportata è costituita dai millisecondi.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.TypeUsage.CreateDecimalTypeUsage(System.Data.Entity.Core.Metadata.Edm.PrimitiveType)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" /> per descrivere un tipo decimale con valori di facet di precisione e scala non associati.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" /> che descrive un tipo decimale con valori di facet di precisione e scala non associati.</returns>
      <param name="primitiveType">Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.PrimitiveType" /> per cui viene creato l'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.TypeUsage.CreateDecimalTypeUsage(System.Data.Entity.Core.Metadata.Edm.PrimitiveType,System.Byte,System.Byte)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" /> per descrivere un tipo decimale utilizzando i valori di facet specificati.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" /> che descrive un tipo decimale utilizzando i valori di facet specificati.</returns>
      <param name="primitiveType">Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.PrimitiveType" /> per cui viene creato l'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" />.</param>
      <param name="precision">Precisione del tipo decimale come tipo <see cref="T:System.Byte" />.</param>
      <param name="scale">Scala del tipo decimale come tipo <see cref="T:System.Byte" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.TypeUsage.CreateDefaultTypeUsage(System.Data.Entity.Core.Metadata.Edm.EdmType)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" /> con il tipo di modello concettuale specificato.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" /> con i valori di facet predefiniti per l'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" /> specificato.</returns>
      <param name="edmType">Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" /> per cui viene creato l'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.TypeUsage.CreateStringTypeUsage(System.Data.Entity.Core.Metadata.Edm.PrimitiveType,System.Boolean,System.Boolean)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" /> per descrivere un tipo stringa utilizzando i valori di facet e l'oggetto MaxLength non associato specificati.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" /> che descrive un tipo stringa utilizzando i valori di facet e l'oggetto MaxLength non associato specificati.</returns>
      <param name="primitiveType">Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.PrimitiveType" /> per cui viene creato l'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" />.</param>
      <param name="isUnicode">true per impostare lo standard di codifica dei caratteri del tipo stringa su Unicode; in caso contrario, false.</param>
      <param name="isFixedLength">true per impostare una lunghezza fissa per il tipo stringa; in caso contrario, false.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.TypeUsage.CreateStringTypeUsage(System.Data.Entity.Core.Metadata.Edm.PrimitiveType,System.Boolean,System.Boolean,System.Int32)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" /> per descrivere un tipo stringa utilizzando i valori di facet specificati.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" /> che descrive un tipo stringa utilizzando i valori di facet specificati.</returns>
      <param name="primitiveType">Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.PrimitiveType" /> per cui viene creato l'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" />.</param>
      <param name="isUnicode">true per impostare lo standard di codifica dei caratteri del tipo stringa su Unicode; in caso contrario, false.</param>
      <param name="isFixedLength">true per impostare lo standard di codifica dei caratteri del tipo stringa su Unicode; in caso contrario, false.</param>
      <param name="maxLength">true per impostare una lunghezza fissa per il tipo stringa; in caso contrario, false.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.TypeUsage.CreateTimeTypeUsage(System.Data.Entity.Core.Metadata.Edm.PrimitiveType,System.Nullable{System.Byte})">
      <summary>Crea un oggetto <see cref="T:System.Data.Metadata.Edm.TimeTypeUsage" /> del tipo descritto dai parametri.</summary>
      <returns>Oggetto <see cref="T:System.Data.Metadata.Edm.TimeTypeUsage" />.</returns>
      <param name="primitiveType">Tipo semplice che definisce le unità di misura dell'oggetto <see cref="T:System." />DateTime.</param>
      <param name="precision">Grado di granularità di <see cref="T:System." />DateTimeOffset espresso in frazioni di secondo, in base al numero di posizioni decimali supportate.Ad esempio una precisione di 3 significa che la granularità supportata è costituita dai millisecondi.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.TypeUsage.EdmType">
      <summary>Ottiene le informazioni sul tipo specificate da <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmType" /> che rappresenta le informazioni sul tipo specificate da <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.TypeUsage.Facets">
      <summary>Ottiene l'elenco di facet per il tipo descritto da <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" />.</summary>
      <returns>Raccolta di tipo <see cref="T:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1" /> che contiene l'elenco di facet per il tipo descritto da <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.TypeUsage.IsSubtypeOf(System.Data.Entity.Core.Metadata.Edm.TypeUsage)">
      <summary>Verifica se <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" /> è un sottotipo dell'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" /> specificato.</summary>
      <returns>true se <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" /> è un sottotipo dell'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" /> specificato; in caso contrario, false.</returns>
      <param name="typeUsage">Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" /> da verificare.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Metadata.Edm.TypeUsage.ModelTypeUsage">
      <summary>Restituisce un utilizzo di tipo Modello per un tipo di provider</summary>
      <returns>Utilizzo di tipo Modello (CSpace)</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Metadata.Edm.TypeUsage.ToString">
      <summary>Restituisce il nome completo del tipo descritto da <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" />.</summary>
      <returns>Nome completo del tipo descritto da <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" /> come stringa.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.CompiledQuery">
      <summary>Memorizza nella cache una query ELinq</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})">
      <summary>Crea un nuovo delegato che rappresenta la query LINQ to Entities compilata.</summary>
      <returns>
        <see cref="T:System.Func`10" />, un delegato generico che rappresenta la query LINQ to Entities compilata.</returns>
      <param name="query">Espressione lambda da compilare.</param>
      <typeparam name="TArg0">Tipo derivato da <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.</typeparam>
      <typeparam name="TArg1">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg1 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg2">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg2 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg3">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg3 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg4">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg4 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg5">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg5 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg6">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg6 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg7">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg7 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg8">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg8 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TResult">Tipo T dei risultati della query restituiti eseguendo il delegato restituito dal metodo <see cref="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})">
      <summary>Crea un nuovo delegato che rappresenta la query LINQ to Entities compilata.</summary>
      <returns>
        <see cref="T:System.Func`11" />, un delegato generico che rappresenta la query LINQ to Entities compilata.</returns>
      <param name="query">Espressione lambda da compilare.</param>
      <typeparam name="TArg0">Tipo derivato da <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.</typeparam>
      <typeparam name="TArg1">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg1 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg2">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg2 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg3">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg3 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg4">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg4 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg5">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg5 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg6">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg6 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg7">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg7 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg8">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg8 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg9">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg9 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TResult">Tipo T dei risultati della query restituiti eseguendo il delegato restituito dal metodo <see cref="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})">
      <summary>Crea un nuovo delegato che rappresenta la query LINQ to Entities compilata.</summary>
      <returns>
        <see cref="T:System.Func`12" />, un delegato generico che rappresenta la query LINQ to Entities compilata.</returns>
      <param name="query">Espressione lambda da compilare.</param>
      <typeparam name="TArg0">Tipo derivato da <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.</typeparam>
      <typeparam name="TArg1">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg1 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg2">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg2 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg3">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg3 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg4">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg4 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg5">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg5 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg6">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg6 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg7">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg7 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg8">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg8 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg9">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg9 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg10">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg10 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TResult">Tipo T dei risultati della query restituiti eseguendo il delegato restituito dal metodo <see cref="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})">
      <summary>Crea un nuovo delegato che rappresenta la query LINQ to Entities compilata.</summary>
      <returns>
        <see cref="T:System.Func`13" />, un delegato generico che rappresenta la query LINQ to Entities compilata.</returns>
      <param name="query">Espressione lambda da compilare.</param>
      <typeparam name="TArg0">Tipo derivato da <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.</typeparam>
      <typeparam name="TArg1">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg1 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg2">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg2 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg3">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg3 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg4">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg4 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg5">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg5 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg6">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg6 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg7">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg7 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg8">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg8 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg9">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg9 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg10">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg10 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg11">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg11 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TResult">Tipo T dei risultati della query restituiti eseguendo il delegato restituito dal metodo <see cref="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})">
      <summary>Crea un nuovo delegato che rappresenta la query LINQ to Entities compilata.</summary>
      <returns>
        <see cref="T:System.Func`14" />, un delegato generico che rappresenta la query LINQ to Entities compilata.</returns>
      <param name="query">Espressione lambda da compilare.</param>
      <typeparam name="TArg0">Tipo derivato da <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.</typeparam>
      <typeparam name="TArg1">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg1 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg2">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg2 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg3">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg3 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg4">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg4 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg5">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg5 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg6">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg6 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg7">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg7 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg8">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg8 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg9">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg9 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg10">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg10 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg11">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg11 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg12">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg12 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TResult">Tipo T dei risultati della query restituiti eseguendo il delegato restituito dal metodo <see cref="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})">
      <summary>Crea un nuovo delegato che rappresenta la query LINQ to Entities compilata.</summary>
      <returns>
        <see cref="T:System.Func`15" />, un delegato generico che rappresenta la query LINQ to Entities compilata.</returns>
      <param name="query">Espressione lambda da compilare.</param>
      <typeparam name="TArg0">Tipo derivato da <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.</typeparam>
      <typeparam name="TArg1">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg1 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg2">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg2 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg3">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg3 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg4">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg4 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg5">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg5 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg6">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg6 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg7">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg7 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg8">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg8 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg9">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg9 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg10">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg10 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg11">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg11 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg12">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg12 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg13">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg13 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TResult">Tipo T dei risultati della query restituiti eseguendo il delegato restituito dal metodo <see cref="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})">
      <summary>Crea un nuovo delegato che rappresenta la query LINQ to Entities compilata.</summary>
      <returns>
        <see cref="T:System.Func`16" />, un delegato generico che rappresenta la query LINQ to Entities compilata.</returns>
      <param name="query">Espressione lambda da compilare.</param>
      <typeparam name="TArg0">Tipo derivato da <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.</typeparam>
      <typeparam name="TArg1">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg1 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg2">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg2 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg3">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg3 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg4">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg4 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg5">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg5 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg6">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg6 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg7">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg7 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg8">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg8 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg9">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg9 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg10">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg10 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg11">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg11 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg12">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg12 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg13">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg13 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg14">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg14 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TResult">Tipo T dei risultati della query restituiti eseguendo il delegato restituito dal metodo <see cref="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}})">
      <summary>Crea un nuovo delegato che rappresenta la query LINQ to Entities compilata.</summary>
      <returns>
        <see cref="T:System.Func`17" />, un delegato generico che rappresenta la query LINQ to Entities compilata.</returns>
      <param name="query">Espressione lambda da compilare.</param>
      <typeparam name="TArg0">Tipo derivato da <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.</typeparam>
      <typeparam name="TArg1">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg1 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg2">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg2 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg3">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg3 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg4">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg4 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg5">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg5 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg6">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg6 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg7">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg7 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg8">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg8 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg9">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg9 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg10">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg10 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg11">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg11 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg12">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg12 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg13">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg13 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg14">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg14 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg15">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg15 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TResult">Tipo T dei risultati della query restituiti eseguendo il delegato restituito dal metodo <see cref="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}})" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Crea un nuovo delegato che rappresenta la query LINQ to Entities compilata.</summary>
      <returns>
        <see cref="T:System.Func`2" />, un delegato generico che rappresenta la query LINQ to Entities compilata.</returns>
      <param name="query">Espressione lambda da compilare.</param>
      <typeparam name="TArg0">Tipo derivato da <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.</typeparam>
      <typeparam name="TResult">Tipo T dei risultati della query restituiti eseguendo il delegato restituito dal metodo <see cref="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
      <summary>Crea un nuovo delegato che rappresenta la query LINQ to Entities compilata.</summary>
      <returns>
        <see cref="T:System.Func`3" />, un delegato generico che rappresenta la query LINQ to Entities compilata.</returns>
      <param name="query">Espressione lambda da compilare.</param>
      <typeparam name="TArg0">Tipo derivato da <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.</typeparam>
      <typeparam name="TArg1">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg1 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TResult">Tipo T dei risultati della query restituiti eseguendo il delegato restituito dal metodo <see cref="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})">
      <summary>Crea un nuovo delegato che rappresenta la query LINQ to Entities compilata.</summary>
      <returns>
        <see cref="T:System.Func`4" />, un delegato generico che rappresenta la query LINQ to Entities compilata.</returns>
      <param name="query">Espressione lambda da compilare.</param>
      <typeparam name="TArg0">Tipo derivato da <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.</typeparam>
      <typeparam name="TArg1">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg1 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg2">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg2 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TResult">Tipo T dei risultati della query restituiti eseguendo il delegato restituito dal metodo <see cref="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})">
      <summary>Crea un nuovo delegato che rappresenta la query LINQ to Entities compilata.</summary>
      <returns>
        <see cref="T:System.Func`5" />, un delegato generico che rappresenta la query LINQ to Entities compilata.</returns>
      <param name="query">Espressione lambda da compilare.</param>
      <typeparam name="TArg0">Tipo derivato da <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.</typeparam>
      <typeparam name="TArg1">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg1 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg2">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg2 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg3">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg3 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TResult">Tipo T dei risultati della query restituiti eseguendo il delegato restituito dal metodo <see cref="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})">
      <summary>Crea un nuovo delegato che rappresenta la query LINQ to Entities compilata.</summary>
      <returns>
        <see cref="T:System.Func`6" />, un delegato generico che rappresenta la query LINQ to Entities compilata.</returns>
      <param name="query">Espressione lambda da compilare.</param>
      <typeparam name="TArg0">Tipo derivato da <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.</typeparam>
      <typeparam name="TArg1">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg1 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg2">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg2 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg3">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg3 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg4">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg4 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TResult">Tipo T dei risultati della query restituiti eseguendo il delegato restituito dal metodo <see cref="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})">
      <summary>Crea un nuovo delegato che rappresenta la query LINQ to Entities compilata.</summary>
      <returns>
        <see cref="T:System.Func`7" />, un delegato generico che rappresenta la query LINQ to Entities compilata.</returns>
      <param name="query">Espressione lambda da compilare.</param>
      <typeparam name="TArg0">Tipo derivato da <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.</typeparam>
      <typeparam name="TArg1">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg1 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg2">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg2 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg3">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg3 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg4">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg4 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg5">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg5 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TResult">Tipo T dei risultati della query restituiti eseguendo il delegato restituito dal metodo <see cref="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})">
      <summary>Crea un nuovo delegato che rappresenta la query LINQ to Entities compilata.</summary>
      <returns>
        <see cref="T:System.Func`8" />, un delegato generico che rappresenta la query LINQ to Entities compilata.</returns>
      <param name="query">Espressione lambda da compilare.</param>
      <typeparam name="TArg0">Tipo derivato da <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.</typeparam>
      <typeparam name="TArg1">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg1 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg2">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg2 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg3">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg3 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg4">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg4 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg5">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg5 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg6">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg6 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TResult">Tipo T dei risultati della query restituiti eseguendo il delegato restituito dal metodo <see cref="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})">
      <summary>Crea un nuovo delegato che rappresenta la query LINQ to Entities compilata.</summary>
      <returns>
        <see cref="T:System.Func`9" />, un delegato generico che rappresenta la query LINQ to Entities compilata.</returns>
      <param name="query">Espressione lambda da compilare.</param>
      <typeparam name="TArg0">Tipo derivato da <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.</typeparam>
      <typeparam name="TArg1">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg1 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg2">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg2 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg3">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg3 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg4">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg4 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg5">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg5 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg6">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg6 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TArg7">Rappresenta il tipo di parametro che deve essere passato quando viene eseguito il delegato restituito da questo metodo.TArg7 deve essere un tipo primitivo.</typeparam>
      <typeparam name="TResult">Tipo T dei risultati della query restituiti eseguendo il delegato restituito dal metodo <see cref="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})" />.</typeparam>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.CurrentValueRecord">
      <summary>Valori attualmente assegnati alle proprietà di un'entità.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.DbUpdatableDataRecord">
      <summary>Fornisce l'accesso ai valori originali dei dati dell'oggetto.L'oggetto DbUpdatableDataRecord implementa metodi che consentono aggiornamenti ai valori originali di un oggetto.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.DataRecordInfo">
      <summary>Ottiene informazioni sul record di dati.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Common.DataRecordInfo" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.FieldCount">
      <summary>Ottiene il numero di campi nel record.</summary>
      <returns>Valore integer che rappresenta il numero di campi.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.GetBoolean(System.Int32)">
      <summary>Recupera il valore del campo come valore Boolean.</summary>
      <returns>Valore del campo come valore Boolean.</returns>
      <param name="i">Ordinale del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.GetByte(System.Int32)">
      <summary>Recupera il valore del campo come byte.</summary>
      <returns>Valore del campo come byte.</returns>
      <param name="i">Ordinale del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Recupera il valore del campo come matrice di byte.</summary>
      <returns>Numero di byte copiati.</returns>
      <param name="i">Ordinale del campo.</param>
      <param name="dataIndex">Indice da cui iniziare la copia dei dati.</param>
      <param name="buffer">Buffer di destinazione in cui vengano copiati i dati.</param>
      <param name="bufferIndex">Indice nel buffer di destinazione da cui ha inizio la copia.</param>
      <param name="length">Numero di byte da copiare.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.GetChar(System.Int32)">
      <summary>Recupera il valore del campo come carattere.</summary>
      <returns>Valore del campo come carattere.</returns>
      <param name="i">Ordinale del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Recupera il valore del campo come matrice di caratteri.</summary>
      <returns>Numero di caratteri copiati.</returns>
      <param name="i">Ordinale del campo.</param>
      <param name="dataIndex">Indice da cui iniziare la copia dei dati.</param>
      <param name="buffer">Buffer di destinazione in cui vengano copiati i dati.</param>
      <param name="bufferIndex">Indice nel buffer di destinazione da cui ha inizio la copia.</param>
      <param name="length">Numero di caratteri da copiare.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.GetDataReader(System.Int32)">
      <summary>Recupera il valore del campo come <see cref="T:System.Common.DbDataReader" />.</summary>
      <returns>Valore del campo come <see cref="T:System.Data.Common.DbDataReader" />.</returns>
      <param name="i">Ordinale del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.GetDataRecord(System.Int32)">
      <summary>Recupera il valore di un campo come <see cref="T:System.Data.Common.DbDataRecord" />.</summary>
      <returns>Valore di un campo come <see cref="T:System.Data.Common.DbDataRecord" />.</returns>
      <param name="i">Ordinale del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.GetDataTypeName(System.Int32)">
      <summary>Recupera il nome del tipo di dati del campo.</summary>
      <returns>Nome del tipo di dati del campo.</returns>
      <param name="i">Ordinale del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.GetDateTime(System.Int32)">
      <summary>Recupera il valore del campo come <see cref="T:System.DateTime" />.</summary>
      <returns>Valore del campo come <see cref="T:System.DateTime" />.</returns>
      <param name="i">Ordinale del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.GetDbDataReader(System.Int32)">
      <summary>Recupera il valore del campo come <see cref="T:System.Common.DbDataReader" />.</summary>
      <returns>Valore del campo come <see cref="T:System.Data.Common.DbDataReader" />.</returns>
      <param name="i">Ordinale del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.GetDecimal(System.Int32)">
      <summary>Recupera il valore del campo come valore decimale.</summary>
      <returns>Valore del campo come valore decimale.</returns>
      <param name="i">Ordinale del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.GetDouble(System.Int32)">
      <summary>Recupera il valore del campo come valore double.</summary>
      <returns>Valore del campo come valore double.</returns>
      <param name="i">Ordinale del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.GetFieldType(System.Int32)">
      <summary>Recupera il tipo di un campo.</summary>
      <returns>Tipo del campo.</returns>
      <param name="i">Ordinale del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.GetFloat(System.Int32)">
      <summary>Recupera il valore del campo come valore float.</summary>
      <returns>Valore del campo come valore float.</returns>
      <param name="i">Ordinale del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.GetGuid(System.Int32)">
      <summary>Recupera il valore del campo come <see cref="T:System.Guid" />.</summary>
      <returns>Valore del campo come <see cref="T:System.Guid" />.</returns>
      <param name="i">Ordinale del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.GetInt16(System.Int32)">
      <summary>Recupera il valore del campo come <see cref="T:System.Int16" />.</summary>
      <returns>Valore del campo come <see cref="T:System.Int16" />.</returns>
      <param name="i">Ordinale del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.GetInt32(System.Int32)">
      <summary>Recupera il valore del campo come <see cref="T:System.Int32" />.</summary>
      <returns>Valore del campo come <see cref="T:System.Int32" />.</returns>
      <param name="i">Ordinale del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.GetInt64(System.Int32)">
      <summary>Recupera il valore del campo come <see cref="T:System.Int64" />.</summary>
      <returns>Valore del campo come <see cref="T:System.Int64" />.</returns>
      <param name="i">Ordinale del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.GetName(System.Int32)">
      <summary>Recupera il nome di un campo.</summary>
      <returns>Nome del campo.</returns>
      <param name="i">Ordinale del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.GetOrdinal(System.String)">
      <summary>Recupera l'ordinale di un campo utilizzando il relativo nome.</summary>
      <returns>Ordinale del campo.</returns>
      <param name="name">Nome del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.GetRecordValue(System.Int32)">
      <summary>Recupera il valore di un campo.</summary>
      <returns>Valore del campo.</returns>
      <param name="ordinal">Ordinale del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.GetString(System.Int32)">
      <summary>Recupera il valore del campo come stringa.</summary>
      <returns>Valore del campo.</returns>
      <param name="i">Ordinale del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.GetValue(System.Int32)">
      <summary>Recupera il valore di un campo.</summary>
      <returns>Valore del campo.</returns>
      <param name="i">Ordinale del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.GetValues(System.Object[])">
      <summary>Popola una matrice di oggetti con i valori del campo del record corrente.</summary>
      <returns>Numero di valori dei campi restituiti.</returns>
      <param name="values">Matrice di oggetti per archiviare i valori dei campi.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.IsDBNull(System.Int32)">
      <summary>Restituisce un valore che indica se il campo specificato è impostato su <see cref="T:System.DBNull" />.</summary>
      <returns>true se il campo è impostato su <see cref="T:System.DBNull" />; in caso contrario, false.</returns>
      <param name="i">Ordinale del campo.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.Item(System.Int32)">
      <summary>Restituisce un valore con l'ordinale del campo specificato.</summary>
      <returns>Valore con l'ordinale del campo specificato.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.Item(System.String)">
      <summary>Ottiene un valore con il nome del campo specificato.</summary>
      <returns>Valore del campo.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.SetBoolean(System.Int32,System.Boolean)">
      <summary>Imposta il valore di un campo in un record.</summary>
      <param name="ordinal">Ordinale del campo.</param>
      <param name="value">Valore del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.SetByte(System.Int32,System.Byte)">
      <summary>Imposta il valore di un campo in un record.</summary>
      <param name="ordinal">Ordinale del campo.</param>
      <param name="value">Valore del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.SetChar(System.Int32,System.Char)">
      <summary>Imposta il valore di un campo in un record.</summary>
      <param name="ordinal">Ordinale del campo.</param>
      <param name="value">Valore del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.SetDataRecord(System.Int32,System.Data.IDataRecord)">
      <summary>Imposta il valore di un campo in un record.</summary>
      <param name="ordinal">Ordinale del campo.</param>
      <param name="value">Valore del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.SetDateTime(System.Int32,System.DateTime)">
      <summary>Imposta il valore di un campo in un record.</summary>
      <param name="ordinal">Ordinale del campo.</param>
      <param name="value">Valore del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.SetDBNull(System.Int32)">
      <summary>Imposta un campo sul valore <see cref="T:System.DBNull" />.</summary>
      <param name="ordinal">Ordinale del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.SetDecimal(System.Int32,System.Decimal)">
      <summary>Imposta il valore di un campo in un record.</summary>
      <param name="ordinal">Ordinale del campo.</param>
      <param name="value">Valore del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.SetDouble(System.Int32,System.Double)">
      <summary>Imposta il valore di un campo in un record.</summary>
      <param name="ordinal">Ordinale del campo.</param>
      <param name="value">Valore del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.SetFloat(System.Int32,System.Single)">
      <summary>Imposta il valore di un campo in un record.</summary>
      <param name="ordinal">Ordinale del campo.</param>
      <param name="value">Valore del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.SetGuid(System.Int32,System.Guid)">
      <summary>Imposta il valore di un campo in un record.</summary>
      <param name="ordinal">Ordinale del campo.</param>
      <param name="value">Valore del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.SetInt16(System.Int32,System.Int16)">
      <summary>Imposta il valore di un campo in un record.</summary>
      <param name="ordinal">Ordinale del campo.</param>
      <param name="value">Valore del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.SetInt32(System.Int32,System.Int32)">
      <summary>Imposta il valore di un campo in un record.</summary>
      <param name="ordinal">Ordinale del campo.</param>
      <param name="value">Valore del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.SetInt64(System.Int32,System.Int64)">
      <summary>Imposta il valore di un campo in un record.</summary>
      <param name="ordinal">Ordinale del campo.</param>
      <param name="value">Valore del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.SetRecordValue(System.Int32,System.Object)">
      <summary>Imposta il valore di un campo in un record.</summary>
      <param name="ordinal">Ordinale del campo.</param>
      <param name="value">Valore del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.SetString(System.Int32,System.String)">
      <summary>Imposta il valore di un campo in un record.</summary>
      <param name="ordinal">Ordinale del campo.</param>
      <param name="value">Valore del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.SetValue(System.Int32,System.Object)">
      <summary>Imposta il valore di un campo in un record.</summary>
      <param name="ordinal">Ordinale del campo.</param>
      <param name="value">Valore del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.SetValues(System.Object[])">
      <summary>Imposta i valori dei campi in un record.</summary>
      <returns>Numero di campi impostati.</returns>
      <param name="values">Valori del campo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DbUpdatableDataRecord.System#Data#IDataRecord#GetData(System.Int32)">
      <summary>Recupera il valore del campo come <see cref="T:System.Data.IDataReader" />.</summary>
      <returns>Valore del campo come <see cref="T:System.Data.IDataReader" />.</returns>
      <param name="ordinal">Ordinale del campo.</param>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.EntityFunctions">
      <summary>Fornisce metodi CLR (Common Language Runtime) che espongono funzioni canoniche EDM per l'utilizzo nelle query LINQ to Entities <see cref="T:System.Data.Entity.DbContext" /> o <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.AddDays(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddDays canonica per aggiungere il numero di giorni specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="dateValue">Data/ora di input.</param>
      <param name="addValue">Numero di giorni da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.AddDays(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddDays canonica per aggiungere il numero di giorni specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="dateValue">Data/ora di input.</param>
      <param name="addValue">Numero di giorni da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.AddHours(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddHours canonica per aggiungere il numero di ore specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di ore da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.AddHours(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddHours canonica per aggiungere il numero di ore specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di ore da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.AddHours(System.Nullable{System.TimeSpan},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddHours canonica per aggiungere il numero di ore specificato a un intervallo di tempo.</summary>
      <returns>Intervallo di tempo risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di ore da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.AddMicroseconds(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddMicroseconds canonica per aggiungere il numero di microsecondi specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di microsecondi da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.AddMicroseconds(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddMicroseconds canonica per aggiungere il numero di microsecondi specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di microsecondi da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.AddMicroseconds(System.Nullable{System.TimeSpan},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddMicroseconds canonica per aggiungere il numero di microsecondi specificato a un intervallo di tempo.</summary>
      <returns>Intervallo di tempo risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di microsecondi da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.AddMilliseconds(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddMilliseconds canonica per aggiungere il numero di millisecondi specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di millisecondi da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.AddMilliseconds(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddMilliseconds canonica per aggiungere il numero di millisecondi specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di millisecondi da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.AddMilliseconds(System.Nullable{System.TimeSpan},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddMilliseconds canonica per aggiungere il numero di millisecondi specificato a un intervallo di tempo.</summary>
      <returns>Intervallo di tempo risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di millisecondi da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.AddMinutes(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddMinutes canonica per aggiungere il numero di minuti specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di minuti da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.AddMinutes(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddMinutes canonica per aggiungere il numero di minuti specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di minuti da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.AddMinutes(System.Nullable{System.TimeSpan},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddMinutes canonica per aggiungere il numero di minuti specificato a un intervallo di tempo.</summary>
      <returns>Intervallo di tempo risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di minuti da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.AddMonths(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddMonths canonica per aggiungere il numero di mesi specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="dateValue">Data/ora di input.</param>
      <param name="addValue">Numero di mesi da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.AddMonths(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddMonths canonica per aggiungere il numero di mesi specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="dateValue">Data/ora di input.</param>
      <param name="addValue">Numero di mesi da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.AddNanoseconds(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddNanoseconds canonica per aggiungere il numero di nanosecondi specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di nanosecondi da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.AddNanoseconds(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddNanoseconds canonica per aggiungere il numero di nanosecondi specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di nanosecondi da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.AddNanoseconds(System.Nullable{System.TimeSpan},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddNanoseconds canonica per aggiungere il numero di nanosecondi specificato a un intervallo di tempo.</summary>
      <returns>Intervallo di tempo risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di nanosecondi da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.AddSeconds(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddSeconds canonica per aggiungere il numero di secondi specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di secondi da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.AddSeconds(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddSeconds canonica per aggiungere il numero di secondi specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di secondi da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.AddSeconds(System.Nullable{System.TimeSpan},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddSeconds canonica per aggiungere il numero di secondi specificato a un intervallo di tempo.</summary>
      <returns>Intervallo di tempo risultante.</returns>
      <param name="timeValue">Data/ora di input.</param>
      <param name="addValue">Numero di secondi da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.AddYears(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddYears canonica per aggiungere il numero di anni specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="dateValue">Data/ora di input.</param>
      <param name="addValue">Numero di anni da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.AddYears(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM AddYears canonica per aggiungere il numero di anni specificato a una data/ora.</summary>
      <returns>Data/ora risultante.</returns>
      <param name="dateValue">Data/ora di input.</param>
      <param name="addValue">Numero di anni da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.AsNonUnicode(System.String)">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo funge da operatore che fa in modo che l'input venga trattato come una stringa non Unicode.</summary>
      <returns>Stringa di input considerata come stringa non Unicode.</returns>
      <param name="value">Stringa di input.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.AsUnicode(System.String)">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo funge da operatore che fa in modo che l'input venga trattato come una stringa Unicode.</summary>
      <returns>Stringa di input considerata come stringa Unicode.</returns>
      <param name="value">Stringa di input.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.CreateDateTime(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Double})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM CreateDateTime canonica per creare un nuovo oggetto <see cref="T:System.DateTime" />.</summary>
      <returns>Nuova data/ora.</returns>
      <param name="year">Anno.</param>
      <param name="month">Mese (in base 1).</param>
      <param name="day">Giorno (in base 1).</param>
      <param name="hour">Ore.</param>
      <param name="minute">Minuti.</param>
      <param name="second">Secondi, incluse le parti frazionarie dei secondi se lo si desidera.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.CreateDateTimeOffset(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Double},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM CreateDateTimeOffset canonica per creare un nuovo oggetto <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Nuova data/ora.</returns>
      <param name="year">Anno.</param>
      <param name="month">Mese (in base 1).</param>
      <param name="day">Giorno (in base 1).</param>
      <param name="hour">Ore.</param>
      <param name="minute">Minuti.</param>
      <param name="second">Secondi, incluse le parti frazionarie dei secondi se lo si desidera.</param>
      <param name="timeZoneOffset">Parte relativa alla differenza di fuso orario della nuova data.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.CreateTime(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Double})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM CreateTime canonica per creare un nuovo oggetto <see cref="T:System.TimeSpan" />.</summary>
      <returns>Nuovo intervallo di tempo.</returns>
      <param name="hour">Ore.</param>
      <param name="minute">Minuti.</param>
      <param name="second">Secondi, incluse le parti frazionarie dei secondi se lo si desidera.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.DiffDays(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffDays canonica per calcolare il numero di giorni tra due date/ore.</summary>
      <returns>Numero di giorni tra la prima e la seconda data/ora.</returns>
      <param name="dateValue1">Prima data/ora.</param>
      <param name="dateValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.DiffDays(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffDays canonica per calcolare il numero di giorni tra due date/ore.</summary>
      <returns>Numero di giorni tra la prima e la seconda data/ora.</returns>
      <param name="dateValue1">Prima data/ora.</param>
      <param name="dateValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.DiffHours(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffHours canonica per calcolare il numero di ore tra due date/ore.</summary>
      <returns>Numero di ore tra la prima e la seconda data/ora.</returns>
      <param name="timeValue1">Prima data/ora.</param>
      <param name="timeValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.DiffHours(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffHours canonica per calcolare il numero di ore tra due date/ore.</summary>
      <returns>Numero di ore tra la prima e la seconda data/ora.</returns>
      <param name="timeValue1">Prima data/ora.</param>
      <param name="timeValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.DiffHours(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffHours canonica per calcolare il numero di ore tra due intervalli di tempo.</summary>
      <returns>Numero di ore tra il primo e il secondo intervallo di tempo.</returns>
      <param name="timeValue1">Primo intervallo di tempo.</param>
      <param name="timeValue2">Secondo intervallo di tempo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.DiffMicroseconds(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffMicroseconds canonica per calcolare il numero di microsecondi tra due date/ore.</summary>
      <returns>Numero di microsecondi tra la prima e la seconda data/ora.</returns>
      <param name="timeValue1">Prima data/ora.</param>
      <param name="timeValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.DiffMicroseconds(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffMicroseconds canonica per calcolare il numero di microsecondi tra due date/ore.</summary>
      <returns>Numero di microsecondi tra la prima e la seconda data/ora.</returns>
      <param name="timeValue1">Prima data/ora.</param>
      <param name="timeValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.DiffMicroseconds(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffMicroseconds canonica per calcolare il numero di microsecondi tra due intervalli di tempo.</summary>
      <returns>Numero di microsecondi tra il primo e il secondo intervallo di tempo.</returns>
      <param name="timeValue1">Primo intervallo di tempo.</param>
      <param name="timeValue2">Secondo intervallo di tempo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.DiffMilliseconds(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffMilliseconds canonica per calcolare il numero di millisecondi tra due date/ore.</summary>
      <returns>Numero di millisecondi tra la prima e la seconda data/ora.</returns>
      <param name="timeValue1">Prima data/ora.</param>
      <param name="timeValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.DiffMilliseconds(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffMilliseconds canonica per calcolare il numero di millisecondi tra due date/ore.</summary>
      <returns>Numero di millisecondi tra la prima e la seconda data/ora.</returns>
      <param name="timeValue1">Prima data/ora.</param>
      <param name="timeValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.DiffMilliseconds(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffMilliseconds canonica per calcolare il numero di millisecondi tra due intervalli di tempo.</summary>
      <returns>Numero di millisecondi tra il primo e il secondo intervallo di tempo.</returns>
      <param name="timeValue1">Primo intervallo di tempo.</param>
      <param name="timeValue2">Secondo intervallo di tempo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.DiffMinutes(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffMinutes canonica per calcolare il numero di minuti tra due date/ore.</summary>
      <returns>Numero di minuti tra la prima e la seconda data/ora.</returns>
      <param name="timeValue1">Prima data/ora.</param>
      <param name="timeValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.DiffMinutes(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffMinutes canonica per calcolare il numero di minuti tra due date/ore.</summary>
      <returns>Numero di minuti tra la prima e la seconda data/ora.</returns>
      <param name="timeValue1">Prima data/ora.</param>
      <param name="timeValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.DiffMinutes(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffMinutes canonica per calcolare il numero di minuti tra due intervalli di tempo.</summary>
      <returns>Numero di minuti tra il primo e il secondo intervallo di tempo.</returns>
      <param name="timeValue1">Primo intervallo di tempo.</param>
      <param name="timeValue2">Secondo intervallo di tempo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.DiffMonths(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffMonths canonica per calcolare il numero di mesi tra due date/ore.</summary>
      <returns>Numero di mesi tra la prima e la seconda data/ora.</returns>
      <param name="dateValue1">Prima data/ora.</param>
      <param name="dateValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.DiffMonths(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffMonths canonica per calcolare il numero di mesi tra due date/ore.</summary>
      <returns>Numero di mesi tra la prima e la seconda data/ora.</returns>
      <param name="dateValue1">Prima data/ora.</param>
      <param name="dateValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.DiffNanoseconds(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffNanoseconds canonica per calcolare il numero di nanosecondi tra due date/ore.</summary>
      <returns>Numero di nanosecondi tra la prima e la seconda data/ora.</returns>
      <param name="timeValue1">Prima data/ora.</param>
      <param name="timeValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.DiffNanoseconds(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffNanoseconds canonica per calcolare il numero di nanosecondi tra due date/ore.</summary>
      <returns>Numero di nanosecondi tra la prima e la seconda data/ora.</returns>
      <param name="timeValue1">Prima data/ora.</param>
      <param name="timeValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.DiffNanoseconds(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffNanoseconds canonica per calcolare il numero di nanosecondi tra due intervalli di tempo.</summary>
      <returns>Numero di nanosecondi tra il primo e il secondo intervallo di tempo.</returns>
      <param name="timeValue1">Primo intervallo di tempo.</param>
      <param name="timeValue2">Secondo intervallo di tempo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.DiffSeconds(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffSeconds canonica per calcolare il numero di secondi tra due date/ore.</summary>
      <returns>Numero di secondi tra la prima e la seconda data/ora.</returns>
      <param name="timeValue1">Prima data/ora.</param>
      <param name="timeValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.DiffSeconds(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffSeconds canonica per calcolare il numero di secondi tra due date/ore.</summary>
      <returns>Numero di secondi tra la prima e la seconda data/ora.</returns>
      <param name="timeValue1">Prima data/ora.</param>
      <param name="timeValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.DiffSeconds(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffSeconds canonica per calcolare il numero di secondi tra due intervalli di tempo.</summary>
      <returns>Numero di secondi tra il primo e il secondo intervallo di tempo.</returns>
      <param name="timeValue1">Primo intervallo di tempo.</param>
      <param name="timeValue2">Secondo intervallo di tempo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.DiffYears(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffYears canonica per calcolare il numero di anni tra due date/ore.</summary>
      <returns>Numero di anni tra la prima e la seconda data/ora.</returns>
      <param name="dateValue1">Prima data/ora.</param>
      <param name="dateValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.DiffYears(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM DiffYears canonica per calcolare il numero di anni tra due date/ore.</summary>
      <returns>Numero di anni tra la prima e la seconda data/ora.</returns>
      <param name="dateValue1">Prima data/ora.</param>
      <param name="dateValue2">Seconda data/ora.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.GetTotalOffsetMinutes(System.Nullable{System.DateTimeOffset})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM GetTotalOffsetMinutes canonica per restituire il numero di minuti di offset della data/ora specificata rispetto al fuso orario UTC.In genere si tratta di un valore compreso tra +780 e -780 (+ o - 13 ore).</summary>
      <returns>Offset dell'input da UTC.</returns>
      <param name="dateTimeOffsetArgument">Valore data/ora da utilizzare.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.Left(System.String,System.Nullable{System.Int64})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM Left canonica per restituire un numero specificato dei caratteri più a sinistra in una stringa.</summary>
      <returns>Stringa che contiene il numero di caratteri richiesto dal lato sinistro della stringa di input.</returns>
      <param name="stringArgument">Stringa di input.</param>
      <param name="length">Numero dei caratteri da restituire</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.Reverse(System.String)">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM Reverse canonica per restituire una stringa specificata con l'ordine dei caratteri invertito.</summary>
      <returns>Stringa di input con l'ordine dei caratteri invertito.</returns>
      <param name="stringArgument">Stringa di input.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.Right(System.String,System.Nullable{System.Int64})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM Right canonica per restituire un numero specificato dei caratteri più a destra in una stringa.</summary>
      <returns>Stringa che contiene il numero di caratteri richiesto dal lato destro della stringa di input.</returns>
      <param name="stringArgument">Stringa di input.</param>
      <param name="length">Numero dei caratteri da restituire</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Decimal})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM StDev canonica per calcolare la deviazione standard della raccolta.</summary>
      <returns>Deviazione standard.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Double})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM StDev canonica per calcolare la deviazione standard della raccolta.</summary>
      <returns>Deviazione standard.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM StDev canonica per calcolare la deviazione standard della raccolta.</summary>
      <returns>Deviazione standard.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM StDev canonica per calcolare la deviazione standard della raccolta.</summary>
      <returns>Deviazione standard.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM StDev canonica per calcolare la deviazione standard della raccolta.</summary>
      <returns>Deviazione standard.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM StDev canonica per calcolare la deviazione standard della raccolta.</summary>
      <returns>Deviazione standard.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM StDev canonica per calcolare la deviazione standard della raccolta.</summary>
      <returns>Deviazione standard.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM StDev canonica per calcolare la deviazione standard della raccolta.</summary>
      <returns>Deviazione standard.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Decimal})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM StDevP canonica per calcolare la deviazione standard per la popolazione.</summary>
      <returns>Deviazione standard della popolazione.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Double})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM StDevP canonica per calcolare la deviazione standard per la popolazione.</summary>
      <returns>Deviazione standard della popolazione.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM StDevP canonica per calcolare la deviazione standard per la popolazione.</summary>
      <returns>Deviazione standard della popolazione.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM StDevP canonica per calcolare la deviazione standard per la popolazione.</summary>
      <returns>Deviazione standard della popolazione.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM StDevP canonica per calcolare la deviazione standard per la popolazione.</summary>
      <returns>Deviazione standard della popolazione.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM StDevP canonica per calcolare la deviazione standard per la popolazione.</summary>
      <returns>Deviazione standard della popolazione.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM StDevP canonica per calcolare la deviazione standard per la popolazione.</summary>
      <returns>Deviazione standard della popolazione.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM StDevP canonica per calcolare la deviazione standard per la popolazione.</summary>
      <returns>Deviazione standard della popolazione.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.Truncate(System.Nullable{System.Decimal},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM Truncate canonica per troncare il valore specificato in base al numero di cifre indicate.</summary>
      <returns>Valore troncato.</returns>
      <param name="value">Valore da troncare.</param>
      <param name="digits">Numero di cifre da mantenere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.Truncate(System.Nullable{System.Double},System.Nullable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM Truncate canonica per troncare il valore specificato in base al numero di cifre indicate.</summary>
      <returns>Valore troncato.</returns>
      <param name="value">Valore da troncare.</param>
      <param name="digits">Numero di cifre da mantenere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.TruncateTime(System.Nullable{System.DateTime})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM TruncateTime canonica per restituire la data specificata con la porzione ora cancellata.</summary>
      <returns>Data di input priva della porzione relativa all'ora.</returns>
      <param name="dateValue">Valore data/ora da utilizzare.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.TruncateTime(System.Nullable{System.DateTimeOffset})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM TruncateTime canonica per restituire la data specificata con la porzione ora cancellata.</summary>
      <returns>Data di input priva della porzione relativa all'ora.</returns>
      <param name="dateValue">Valore data/ora da utilizzare.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.Var(System.Collections.Generic.IEnumerable{System.Decimal})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM Var canonica per calcolare la varianza della raccolta.</summary>
      <returns>Varianza.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.Var(System.Collections.Generic.IEnumerable{System.Double})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM Var canonica per calcolare la varianza della raccolta.</summary>
      <returns>Varianza.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.Var(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM Var canonica per calcolare la varianza della raccolta.</summary>
      <returns>Varianza.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.Var(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM Var canonica per calcolare la varianza della raccolta.</summary>
      <returns>Varianza.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.Var(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM Var canonica per calcolare la varianza della raccolta.</summary>
      <returns>Varianza.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.Var(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM Var canonica per calcolare la varianza della raccolta.</summary>
      <returns>Varianza.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.Var(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM Var canonica per calcolare la varianza della raccolta.</summary>
      <returns>Varianza.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.Var(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM Var canonica per calcolare la varianza della raccolta.</summary>
      <returns>Varianza.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.VarP(System.Collections.Generic.IEnumerable{System.Decimal})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM VarP canonica per calcolare la varianza per la popolazione.</summary>
      <returns>Varianza della popolazione.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.VarP(System.Collections.Generic.IEnumerable{System.Double})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM VarP canonica per calcolare la varianza per la popolazione.</summary>
      <returns>Varianza della popolazione.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.VarP(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM VarP canonica per calcolare la varianza per la popolazione.</summary>
      <returns>Varianza della popolazione.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.VarP(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM VarP canonica per calcolare la varianza per la popolazione.</summary>
      <returns>Varianza della popolazione.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.VarP(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM VarP canonica per calcolare la varianza per la popolazione.</summary>
      <returns>Varianza della popolazione.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.VarP(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM VarP canonica per calcolare la varianza per la popolazione.</summary>
      <returns>Varianza della popolazione.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.VarP(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM VarP canonica per calcolare la varianza per la popolazione.</summary>
      <returns>Varianza della popolazione.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.EntityFunctions.VarP(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
      <summary>Se utilizzato come parte di una query LINQ to Entities, questo metodo richiama la funzione EDM VarP canonica per calcolare la varianza per la popolazione.</summary>
      <returns>Varianza della popolazione.</returns>
      <param name="collection">Raccolta su cui eseguire il calcolo.</param>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.ExecutionOptions">
      <summary>Rappresenta le opzioni per l'esecuzione della query.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ExecutionOptions.#ctor(System.Data.Entity.Core.Objects.MergeOption)">
      <summary>Crea una nuova istanza di <see cref="T:System.Data.Entity.Core.Objects.ExecutionOptions" />.</summary>
      <param name="mergeOption">Opzione di unione da utilizzare per i risultati di entità.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ExecutionOptions.#ctor(System.Data.Entity.Core.Objects.MergeOption,System.Boolean)">
      <summary>Crea una nuova istanza di <see cref="T:System.Data.Entity.Core.Objects.ExecutionOptions" />.</summary>
      <param name="mergeOption">Opzione di unione da utilizzare per i risultati di entità.</param>
      <param name="streaming">true se la query è di flusso o di buffer; in caso contrario, false.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ExecutionOptions.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se l'oggetto specificato è uguale all'oggetto corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ExecutionOptions.GetHashCode">
      <summary>Funge da funzione hash per un tipo specifico.</summary>
      <returns>Codice hash per l'oggetto corrente.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ExecutionOptions.MergeOption">
      <summary>Ottiene l'opzione di unione da usare per i risultati di entità.</summary>
      <returns>Opzione di unione da utilizzare per i risultati di entità.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ExecutionOptions.op_Equality(System.Data.Entity.Core.Objects.ExecutionOptions,System.Data.Entity.Core.Objects.ExecutionOptions)">
      <summary>Determina se gli oggetti specificati sono uguali.</summary>
      <returns>true se i due oggetti sono uguali; in caso contrario, false.</returns>
      <param name="left">Oggetto a sinistra da confrontare.</param>
      <param name="right">Oggetto a destra da confrontare.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ExecutionOptions.op_Inequality(System.Data.Entity.Core.Objects.ExecutionOptions,System.Data.Entity.Core.Objects.ExecutionOptions)">
      <summary>Determina se gli oggetti specificati non sono uguali.</summary>
      <returns>true se i due oggetti non sono uguali; in caso contrario, false.</returns>
      <param name="left">Oggetto a sinistra da confrontare.</param>
      <param name="right">Oggetto a destra da confrontare.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ExecutionOptions.Streaming">
      <summary>Ottiene un valore che indica se la query è di flusso o di buffer.</summary>
      <returns>true se la query è di flusso. In caso contrario, false.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.IObjectSet`1">
      <summary>Definisce il comportamento per le implementazioni di IQueryable che consentono modifiche all'appartenenza del set risultante.</summary>
      <typeparam name="TEntity">Tipo delle entità restituite da queryable.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.IObjectSet`1.AddObject(`0)">
      <summary>Notifica al set che è necessario aggiungere a esso un oggetto che rappresenta una nuova entità.</summary>
      <param name="entity">Nuovo oggetto da aggiungere al set.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.IObjectSet`1.Attach(`0)">
      <summary>Notifica al set che è necessario aggiungere a esso un oggetto che rappresenta un'entità esistente.</summary>
      <param name="entity">Oggetto esistente da aggiungere al set.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.IObjectSet`1.DeleteObject(`0)">
      <summary>Notifica al set che è necessario eliminare da esso un oggetto che rappresenta un'entità esistente.</summary>
      <param name="entity">Oggetto esistente da eliminare dal set.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.IObjectSet`1.Detach(`0)">
      <summary>Notifica al set che è necessario scollegare da esso un oggetto che rappresenta un'entità esistente.</summary>
      <param name="entity">Oggetto da scollegare dal set.</param>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.MergeOption">
      <summary>Modi diversi in cui i nuovi oggetti caricati dal database possono essere uniti con gli oggetti esistenti già in memoria.</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Objects.MergeOption.AppendOnly">
      <summary>Aggiungerà solo nuove righe (univoche del primo livello).Comportamento predefinito.</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Objects.MergeOption.NoTracking">
      <summary>Non modificherà la cache.</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Objects.MergeOption.OverwriteChanges">
      <summary>Stesso comportamento di LoadOption.OverwriteChanges.</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Objects.MergeOption.PreserveChanges">
      <summary>Stesso comportamento di LoadOption.PreserveChanges.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.ObjectContext">
      <summary>ObjectContext è l'oggetto di primo livello che incapsula una connessione tra il CLR e il database e funge da gateway per le operazioni di creazione, lettura, aggiornamento ed eliminazione.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.#ctor(System.Data.Entity.Core.EntityClient.EntityConnection)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" /> con la connessione specificata.Durante la costruzione, l'area di lavoro metadati viene estratta dall'oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" />.</summary>
      <param name="connection">Oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" /> che contiene riferimenti al modello e alla connessione all'origine dati.</param>
      <exception cref="T:System.ArgumentNullException">connection è Null.</exception>
      <exception cref="T:System.ArgumentException">connection non è valido o l'area di lavoro dei metadati non è valida.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.#ctor(System.Data.Entity.Core.EntityClient.EntityConnection,System.Boolean)">
      <summary>Crea un elemento ObjectContext con l'area di lavoro dei metadati e la connessione specificate.</summary>
      <param name="connection">connessione all'archivio</param>
      <param name="contextOwnsConnection">Se impostato su true, la connessione verrà eliminata con l'eliminazione del contesto; in caso contrario, il chiamante deve eliminare la connessione.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.#ctor(System.Data.Entity.Core.EntityClient.EntityConnection,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" /> con la connessione e il nome del contenitore di entità specificati.</summary>
      <param name="connection">Oggetto <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" /> che contiene riferimenti al modello e alla connessione all'origine dati.</param>
      <param name="defaultContainerName">Nome del contenitore di entità predefinito.Quando defaultContainerName viene impostato tramite questo metodo, la proprietà diventa di sola lettura.</param>
      <exception cref="T:System.ArgumentNullException">connection è Null.</exception>
      <exception cref="T:System.ArgumentException">connection, defaultContainerName o l'area di lavoro dei metadati non è valido.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" /> con la stringa di connessione specificata e il nome del contenitore di entità predefinito.</summary>
      <param name="connectionString">Stringa di connessione che fornisce inoltre l'accesso alle informazioni sui metadati.</param>
      <exception cref="T:System.ArgumentNullException">connectionString è Null.</exception>
      <exception cref="T:System.ArgumentException">connectionString non è valido o l'area di lavoro dei metadati non è valida.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" /> con la stringa di connessione e il nome del contenitore di entità specificati.</summary>
      <param name="connectionString">Stringa di connessione che fornisce inoltre l'accesso alle informazioni sui metadati.</param>
      <param name="defaultContainerName">Nome del contenitore di entità predefinito.Quando defaultContainerName viene impostato tramite questo metodo, la proprietà diventa di sola lettura.</param>
      <exception cref="T:System.ArgumentNullException">connectionString è Null.</exception>
      <exception cref="T:System.ArgumentException">connectionString, defaultContainerName o l'area di lavoro dei metadati non è valido.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.AcceptAllChanges">
      <summary>Accetta tutte le modifiche apportate agli oggetti nel contesto dell'oggetto.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.AddObject(System.String,System.Object)">
      <summary>Aggiunge un oggetto al contesto dell'oggetto.</summary>
      <param name="entitySetName">Rappresenta il nome del set di entità che può essere qualificato facoltativamente dal nome del contenitore di entità.</param>
      <param name="entity">
        <see cref="T:System.Object" /> da aggiungere.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro entity è Null o entitySetName non è qualificato.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.ApplyCurrentValues``1(System.String,``0)">
      <summary>Copia i valori scalari dall'oggetto fornito nell'oggetto in <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" /> che dispone della stessa chiave.</summary>
      <returns>Oggetto aggiornato.</returns>
      <param name="entitySetName">Nome del set di entità a cui appartiene l'oggetto.</param>
      <param name="currentEntity">Oggetto disconnesso contenente gli aggiornamenti delle proprietà da applicare all'oggetto originale.La chiave di entità di currentEntity deve corrispondere alla proprietà <see cref="P:System.Data.Entity.Core.Objects.ObjectStateEntry.EntityKey" /> di una voce in <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.</param>
      <typeparam name="TEntity">Tipo di entità dell'oggetto.</typeparam>
      <exception cref="T:System.ArgumentNullException">entitySetName o current è Null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySet" /> derivante da entitySetName non corrisponde a <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySet" /> di <see cref="T:System.Data.Entity.Core.EntityKey" /> dell'oggetto o l'oggetto non è presente in <see cref="T:System.Data.Entity.Core.Objects.ObjectStateManager" /> o si trova in uno stato <see cref="F:System.Data.Entity.EntityState.Detached" /> o la chiave di entità dell'oggetto fornito non è valida.</exception>
      <exception cref="T:System.ArgumentException">entitySetName è una stringa vuota.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.ApplyOriginalValues``1(System.String,``0)">
      <summary>Copia i valori scalari dall'oggetto fornito nel set di valori originali per l'oggetto nell'oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" /> con la stessa chiave.</summary>
      <returns>Oggetto aggiornato.</returns>
      <param name="entitySetName">Nome del set di entità a cui appartiene l'oggetto.</param>
      <param name="originalEntity">Oggetto scollegato contenente i valori originali da applicare all'oggetto.La chiave di entità di originalEntity deve corrispondere alla proprietà <see cref="P:System.Data.Entity.Core.Objects.ObjectStateEntry.EntityKey" /> di una voce in <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.</param>
      <typeparam name="TEntity">Tipo dell'oggetto entità.</typeparam>
      <exception cref="T:System.ArgumentNullException">entitySetName o original è Null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySet" /> derivante da entitySetName non corrisponde a <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySet" /> di <see cref="T:System.Data.Entity.Core.EntityKey" /> dell'oggetto o non è possibile trovare <see cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" /> per l'oggetto in <see cref="T:System.Data.Entity.Core.Objects.ObjectStateManager" /> o l'oggetto si trova in uno stato <see cref="F:System.Data.Entity.EntityState.Added" /> o <see cref="F:System.Data.Entity.EntityState.Detached" /> oppure la chiave di entità dell'oggetto fornito non è valida o ne sono state modificate le proprietà.</exception>
      <exception cref="T:System.ArgumentException">entitySetName è una stringa vuota.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.ApplyPropertyChanges(System.String,System.Object)">
      <summary>Applica le modifiche delle proprietà da un oggetto disconnesso a un oggetto già connesso al contesto dell'oggetto.</summary>
      <param name="entitySetName">Nome del set di entità a cui appartiene l'oggetto.</param>
      <param name="changed">Oggetto disconnesso contenente gli aggiornamenti delle proprietà da applicare all'oggetto originale.</param>
      <exception cref="T:System.ArgumentNullException">Quando entitySetName è Null o una stringa vuota o quando changed è Null.</exception>
      <exception cref="T:System.InvalidOperationException">Quando <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySet" /> derivante da entitySetName non corrisponde a <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySet" /> di <see cref="T:System.Data.Entity.Core.EntityKey" /> dell'oggetto o quando l'entità si trova in uno stato diverso da <see cref="F:System.Data.Entity.EntityState.Modified" /> o <see cref="F:System.Data.Entity.EntityState.Unchanged" /> oppure l'oggetto originale non è collegato al contesto.</exception>
      <exception cref="T:System.ArgumentException">Quando il tipo dell'oggetto changed non è lo stesso tipo dell'oggetto originale.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.Attach(System.Data.Entity.Core.Objects.DataClasses.IEntityWithKey)">
      <summary>Connette un oggetto o un oggetto grafico al contesto dell'oggetto quando l'oggetto contiene una chiave di entità.</summary>
      <param name="entity">Oggetto da connettere.</param>
      <exception cref="T:System.ArgumentNullException">entity è Null.</exception>
      <exception cref="T:System.InvalidOperationException">Chiave di entità non valida.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.AttachTo(System.String,System.Object)">
      <summary>Connette un oggetto o un oggetto grafico al contesto dell'oggetto in un set di entità specifico.</summary>
      <param name="entitySetName">Rappresenta il nome del set di entità che può essere qualificato facoltativamente dal nome del contenitore di entità.</param>
      <param name="entity">Oggetto <see cref="T:System.Object" /> da connettere.</param>
      <exception cref="T:System.ArgumentNullException">entity è Null.</exception>
      <exception cref="T:System.InvalidOperationException">Set di entità non valido o l'oggetto dispone di una chiave temporanea o l'oggetto dispone di <see cref="T:System.Data.Entity.Core.EntityKey" /> e <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySet" /> non corrisponde al set di entità passato come argomento del metodo o l'oggetto non dispone di <see cref="T:System.Data.Entity.Core.EntityKey" /> e non viene fornito un set di entità o un oggetto presente nell'oggetto grafico dispone di un oggetto <see cref="T:System.Data.Entity.Core.EntityKey" /> temporaneo o un oggetto presente nell'oggetto grafico dispone di un oggetto <see cref="T:System.Data.Entity.Core.EntityKey" /> non valido, ad esempio i valori nella chiave non corrispondono ai valori nell'oggetto, o non è possibile trovare il set di entità in base al nome entitySetName e al nome del contenitore di entità specificati o un oggetto presente nell'oggetto grafico esiste già in un altro gestore degli stati.</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectContext.CommandTimeout">
      <summary>Ottiene o imposta il valore di timeout, espresso in secondi, per tutte le operazioni relative al contesto dell'oggetto.Il valore Null indica che verrà usato il valore predefinito del provider sottostante.</summary>
      <returns>Valore <see cref="T:System.Int32" /> che rappresenta il valore di timeout espresso in secondi.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectContext.Connection">
      <summary>Ottiene la connessione usata dal contesto dell'oggetto.</summary>
      <returns>Oggetto <see cref="T:System.Data.Common.DbConnection" /> che rappresenta la connessione.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectContext.ContextOptions">
      <summary>Ottiene l'istanza di <see cref="T:System.Data.Entity.Core.Objects.ObjectContextOptions" /> che contiene le opzioni che incidono sul comportamento di <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.</summary>
      <returns>Istanza di <see cref="T:System.Data.Entity.Core.Objects.ObjectContextOptions" /> che contiene le opzioni che incidono sul comportamento di <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.CreateDatabase">
      <summary>Crea il database usando la connessione all'origine dati corrente e i metadati in <see cref="T:System.Data.Entity.Core.Metadata.Edm.StoreItemCollection" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.CreateDatabaseScript">
      <summary>Genera uno script Data Definition Language (DDL) che crea oggetti dello schema (tabelle, chiavi primarie, chiavi esterne) per i metadati in <see cref="T:System.Data.Entity.Core.Metadata.Edm.StoreItemCollection" />.<see cref="T:System.Data.Entity.Core.Metadata.Edm.StoreItemCollection" /> carica metadati dai file Store Schema Definition Language (SSDL).</summary>
      <returns>Script DDL che crea oggetti dello schema per i metadati in <see cref="T:System.Data.Entity.Core.Metadata.Edm.StoreItemCollection" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.CreateEntityKey(System.String,System.Object)">
      <summary>Crea la chiave di entità per un oggetto specifico o restituisce la chiave di entità se già esiste.</summary>
      <returns>
        <see cref="T:System.Data.Entity.Core.EntityKey" /> dell'oggetto.</returns>
      <param name="entitySetName">Nome completo del set di entità a cui appartiene l'oggetto entità.</param>
      <param name="entity">Oggetto per il quale viene recuperata la chiave di entità.</param>
      <exception cref="T:System.ArgumentNullException">Quando uno dei parametri è Null.</exception>
      <exception cref="T:System.ArgumentException">Quando entitySetName è vuoto o quando il tipo dell'oggetto entità non è presente nel set di entità o quando entitySetName non è completo.</exception>
      <exception cref="T:System.InvalidOperationException">Quando la chiave di entità non può essere costruita correttamente in base ai parametri specificati.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.CreateObject``1">
      <summary>Crea e restituisce un'istanza del tipo richiesto.</summary>
      <returns>Istanza del tipo T richiesto o istanza di un tipo derivato che consente l'utilizzo di T con Entity Framework.L'oggetto restituito è un'istanza del tipo richiesto o un'istanza di un tipo derivato che consente l'utilizzo del tipo richiesto con Entity Framework.</returns>
      <typeparam name="T">Tipo di oggetto da restituire.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.CreateObjectSet``1">
      <summary>Crea una nuova istanza di <see cref="T:System.Data.Entity.Core.Objects.ObjectSet`1" /> usata per eseguire query su oggetti del tipo di entità specificato, aggiungere tali oggetti, modificarli ed eliminarli.</summary>
      <returns>Nuova istanza di <see cref="T:System.Data.Entity.Core.Objects.ObjectSet`1" />.</returns>
      <typeparam name="TEntity">Tipo di entità dell'oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectSet`1" /> richiesto.</typeparam>
      <exception cref="T:System.InvalidOperationException">La proprietà <see cref="P:System.Data.Entity.Core.Objects.ObjectContext.DefaultContainerName" /> non viene impostata su <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" /> o il tipo specificato appartiene a più di un set di entità.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.CreateObjectSet``1(System.String)">
      <summary>Crea una nuova istanza di <see cref="T:System.Data.Entity.Core.Objects.ObjectSet`1" /> usata per eseguire query su oggetti del tipo specificato e con il nome del set di entità specificato, aggiungere tali oggetti, modificarli ed eliminarli.</summary>
      <returns>Nuova istanza di <see cref="T:System.Data.Entity.Core.Objects.ObjectSet`1" />.</returns>
      <param name="entitySetName">Nome del set di entità per l'oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectSet`1" /> restituito.La stringa deve essere qualificata dal nome del contenitore predefinito se la proprietà <see cref="P:System.Data.Entity.Core.Objects.ObjectContext.DefaultContainerName" /> non è impostata su <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.</param>
      <typeparam name="TEntity">Tipo di entità dell'oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectSet`1" /> richiesto.</typeparam>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySet" /> derivante da entitySetName non corrisponde a <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySet" /> di <see cref="T:System.Data.Entity.Core.EntityKey" /> dell'oggetto o la proprietà <see cref="P:System.Data.Entity.Core.Objects.ObjectContext.DefaultContainerName" /> non è impostata su <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" /> e il nome non è qualificato come parte del parametro entitySetName o il tipo specificato appartiene a più di un set di entità.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.CreateProxyTypes(System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Genera un tipo equivalente che può essere usato con Entity Framework per ogni tipo nell'enumerazione fornita.</summary>
      <param name="types">Enumerazione di oggetti <see cref="T:System.Type" /> che rappresentano classi di dati personalizzate che eseguono il mapping al modello concettuale.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.CreateQuery``1(System.String,System.Data.Entity.Core.Objects.ObjectParameter[])">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectQuery`1" /> nel contesto dell'oggetto corrente usando la stringa di query specificata.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectQuery`1" /> del tipo specificato.</returns>
      <param name="queryString">Stringa di query da eseguire.</param>
      <param name="parameters">Parametri da passare alla query.</param>
      <typeparam name="T">Tipo di entità dell'oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectQuery`1" /> restituito.</typeparam>
      <exception cref="T:System.ArgumentNullException">queryString o parameters è Null.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.DatabaseExists">
      <summary>Controlla se il database specificato come database nella connessione all'archivio corrente esiste nell'archivio.La maggior parte del lavoro viene eseguito tramite l'implementazione di DbProviderServices per la connessione all'archivio corrente.</summary>
      <returns>true se il database esiste; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectContext.DefaultContainerName">
      <summary>Ottiene o imposta il nome del contenitore predefinito.</summary>
      <returns>Oggetto <see cref="T:System.String" /> che rappresenta il nome del contenitore predefinito.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.DeleteDatabase">
      <summary>Elimina il database specificato come database nella connessione all'origine dati corrente.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.DeleteObject(System.Object)">
      <summary>Contrassegna un oggetto per l'eliminazione.</summary>
      <param name="entity">Oggetto che specifica l'entità da eliminare.L'oggetto può trovarsi in qualsiasi stato ad eccezione di <see cref="F:System.Data.Entity.EntityState.Detached" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.Detach(System.Object)">
      <summary>Rimuove l'oggetto dal contesto dell'oggetto.</summary>
      <param name="entity">Oggetto da disconnettere.Viene rimossa solo l'entità. Se sono presenti oggetti correlati che vengono rilevati dallo stesso oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectStateManager" />, tali oggetti non verranno scollegati automaticamente.</param>
      <exception cref="T:System.ArgumentNullException">entity è Null.</exception>
      <exception cref="T:System.InvalidOperationException">L'entità non è associata a questo oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />, ad esempio è stato appena creato e non è stato ancora associato a un contesto oppure è stato ottenuto mediante un altro contesto o è già stato scollegato.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.DetectChanges">
      <summary>Assicura che le modifiche di <see cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" /> siano sincronizzate con le modifiche in tutti gli oggetti rilevate da <see cref="T:System.Data.Entity.Core.Objects.ObjectStateManager" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.Dispose">
      <summary>Rilascia le risorse usate dal contesto dell'oggetto.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.Dispose(System.Boolean)">
      <summary>Rilascia le risorse usate dal contesto dell'oggetto.</summary>
      <param name="disposing">true per rilasciare sia le risorse gestite sia quelle non gestite; false per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.ExecuteFunction``1(System.String,System.Data.Entity.Core.Objects.ExecutionOptions,System.Data.Entity.Core.Objects.ObjectParameter[])">
      <summary>Esegue la funzione specificata sul contenitore predefinito.</summary>
      <returns>Oggetto che rappresenta il risultato dell'esecuzione di questa funzione.</returns>
      <param name="functionName">Nome della funzione.Potrebbe includere il contenitore (ad esempioContainerName.FunctionName) o solo il nome della funzione quando DefaultContainerName è noto.</param>
      <param name="executionOptions">Opzioni per l'esecuzione di questa funzione.</param>
      <param name="parameters">Valori dei parametri da usare per la funzione.Se si usano parametri di output, i relativi valori non saranno disponibili fino alla lettura completa dei risultati.Questo è dovuto al comportamento sottostante di DbDataReader. Per altre informazioni, vedi http://go.microsoft.com/fwlink/?LinkID=398589.</param>
      <typeparam name="TElement">Tipo di elemento per i risultati della funzione.</typeparam>
      <exception cref="T:System.ArgumentException">Se la funzione è Null o vuota</exception>
      <exception cref="T:System.InvalidOperationException">Se la funzione non è valida (sintassi, non esiste, fa riferimento a una funzione con tipo restituito incompatibile con T)</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.ExecuteFunction``1(System.String,System.Data.Entity.Core.Objects.MergeOption,System.Data.Entity.Core.Objects.ObjectParameter[])">
      <summary>Esegue la stored procedure o la funzione specificata definita nell'origine dati ed espressa nel modello concettuale, con l'opzione di unione e i parametri specificati.Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectResult`1" /> tipizzato.</summary>
      <returns>
        <see cref="T:System.Data.Entity.Core.Objects.ObjectResult`1" /> per i dati restituiti dalla stored procedure.</returns>
      <param name="functionName">Nome della stored procedure o della funzione.Il nome può includere il nome del contenitore, ad esempio &amp;lt;Container Name&amp;gt;.&amp;lt;Function Name&amp;gt;.Quando è noto il nome del contenitore predefinito, è necessario solo il nome della funzione.</param>
      <param name="mergeOption">Oggetto <see cref="T:System.Data.Entity.Core.Objects.MergeOption" /> da usare quando viene eseguita la query.</param>
      <param name="parameters">Matrice di oggetti <see cref="T:System.Data.Entity.Core.Objects.ObjectParameter" />.Se si usano parametri di output, i relativi valori non saranno disponibili fino alla lettura completa dei risultati.Questo è dovuto al comportamento sottostante di DbDataReader. Per altre informazioni, vedi http://go.microsoft.com/fwlink/?LinkID=398589.</param>
      <typeparam name="TElement">Tipo di entità dell'oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectResult`1" /> restituito quando viene eseguita la funzione sull'origine dati.Questo tipo deve implementare <see cref="T:System.Data.Entity.Core.Objects.DataClasses.IEntityWithChangeTracker" />.</typeparam>
      <exception cref="T:System.ArgumentException">function è Null o vuoto o non è stato trovato.</exception>
      <exception cref="T:System.InvalidOperationException">Il lettore dell'entità non supporta questa funzione o si è verificata un'errata corrispondenza del tipo nel lettore e nella funzione.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.ExecuteFunction``1(System.String,System.Data.Entity.Core.Objects.ObjectParameter[])">
      <summary>Esegue una stored procedure o una funzione definita nell'origine dati e di cui è stato eseguito il mapping nel modello concettuale, con i parametri specificati.Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectResult`1" /> tipizzato.</summary>
      <returns>
        <see cref="T:System.Data.Entity.Core.Objects.ObjectResult`1" /> per i dati restituiti dalla stored procedure.</returns>
      <param name="functionName">Nome della stored procedure o della funzione.Il nome può includere il nome del contenitore, ad esempio &amp;lt;Container Name&amp;gt;.&amp;lt;Function Name&amp;gt;.Quando è noto il nome del contenitore predefinito, è necessario solo il nome della funzione.</param>
      <param name="parameters">Matrice di oggetti <see cref="T:System.Data.Entity.Core.Objects.ObjectParameter" />.Se si usano parametri di output, i relativi valori non saranno disponibili fino alla lettura completa dei risultati.Questo è dovuto al comportamento sottostante di DbDataReader. Per altre informazioni, vedi http://go.microsoft.com/fwlink/?LinkID=398589.</param>
      <typeparam name="TElement">Tipo di entità dell'oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectResult`1" /> restituito quando viene eseguita la funzione sull'origine dati.Questo tipo deve implementare <see cref="T:System.Data.Entity.Core.Objects.DataClasses.IEntityWithChangeTracker" />.</typeparam>
      <exception cref="T:System.ArgumentException">function è Null o vuoto o non è stato trovato.</exception>
      <exception cref="T:System.InvalidOperationException">Il lettore dell'entità non supporta questa funzione o si è verificata un'errata corrispondenza del tipo nel lettore e nella funzione.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.ExecuteFunction(System.String,System.Data.Entity.Core.Objects.ObjectParameter[])">
      <summary>Esegue una stored procedure o una funzione definita nell'origine dati ed espressa nel modello concettuale, rimuove qualsiasi risultato restituito dalla funzione e restituisce il numero di righe interessate dall'esecuzione.</summary>
      <returns>Numero di righe interessate.</returns>
      <param name="functionName">Nome della stored procedure o della funzione.Il nome può includere il nome del contenitore, ad esempio &amp;lt;Container Name&amp;gt;.&amp;lt;Function Name&amp;gt;.Quando è noto il nome del contenitore predefinito, è necessario solo il nome della funzione.</param>
      <param name="parameters">Matrice di oggetti <see cref="T:System.Data.Entity.Core.Objects.ObjectParameter" />.Se si usano parametri di output, i relativi valori non saranno disponibili fino alla lettura completa dei risultati.Questo è dovuto al comportamento sottostante di DbDataReader. Per altre informazioni, vedi http://go.microsoft.com/fwlink/?LinkID=398589.</param>
      <exception cref="T:System.ArgumentException">function è Null o vuoto o non è stato trovato.</exception>
      <exception cref="T:System.InvalidOperationException">Il lettore dell'entità non supporta questa funzione o si è verificata un'errata corrispondenza del tipo nel lettore e nella funzione.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreCommand(System.Data.Entity.TransactionalBehavior,System.String,System.Object[])">
      <summary>Esegue un comando arbitrario direttamente sull'origine dati usando la connessione esistente.Il comando viene specificato usando il linguaggio di query nativo del server, ad esempio SQL.Come con qualsiasi API che accetta SQL, è importante parametrizzare un input utente in modo da fornire protezione da un attacco SQL injection.È possibile includere i segnaposto dei parametri nella stringa di query SQL e quindi fornire i valori dei parametri come argomenti aggiuntivi.Tutti i valori dei parametri forniti verranno convertiti automaticamente in DbParameter.context.ExecuteStoreCommand("UPDATE dbo.Posts SET Rating = 5 WHERE Author = @p0", userSuppliedAuthor); in alternativa, è inoltre possibile costruire un oggetto DbParameter e fornirlo a SqlQuery.In questo modo è possibile usare i parametri denominati nella stringa di query SQL.context.ExecuteStoreCommand("UPDATE dbo.Posts SET Rating = 5 WHERE Author = @author", new SqlParameter("@author", userSuppliedAuthor));</summary>
      <returns>Numero di righe interessate.</returns>
      <param name="transactionalBehavior">Controlla la creazione di una transazione per questo comando.</param>
      <param name="commandText">Comando specificato nel linguaggio di query nativo del server.</param>
      <param name="parameters">Valori dei parametri da usare per la query.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreCommand(System.String,System.Object[])">
      <summary>Esegue un comando arbitrario direttamente sull'origine dati usando la connessione esistente.Il comando viene specificato usando il linguaggio di query nativo del server, ad esempio SQL.Come con qualsiasi API che accetta SQL, è importante parametrizzare un input utente in modo da fornire protezione da un attacco SQL injection.È possibile includere i segnaposto dei parametri nella stringa di query SQL e quindi fornire i valori dei parametri come argomenti aggiuntivi.Tutti i valori dei parametri forniti verranno convertiti automaticamente in DbParameter.context.ExecuteStoreCommand("UPDATE dbo.Posts SET Rating = 5 WHERE Author = @p0", userSuppliedAuthor); in alternativa, è inoltre possibile costruire un oggetto DbParameter e fornirlo a SqlQuery.In questo modo è possibile usare i parametri denominati nella stringa di query SQL.context.ExecuteStoreCommand("UPDATE dbo.Posts SET Rating = 5 WHERE Author = @author", new SqlParameter("@author", userSuppliedAuthor));</summary>
      <returns>Numero di righe interessate.</returns>
      <param name="commandText">Comando specificato nel linguaggio di query nativo del server.</param>
      <param name="parameters">Valori dei parametri da usare per la query.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreCommandAsync(System.Data.Entity.TransactionalBehavior,System.String,System.Object[])">
      <summary>Esegue in modo asincrono un comando arbitrario direttamente sull'origine dati usando la connessione esistente.Il comando viene specificato usando il linguaggio di query nativo del server, ad esempio SQL.Come con qualsiasi API che accetta SQL, è importante parametrizzare un input utente in modo da fornire protezione da un attacco SQL injection.È possibile includere i segnaposto dei parametri nella stringa di query SQL e quindi fornire i valori dei parametri come argomenti aggiuntivi.Tutti i valori dei parametri forniti verranno convertiti automaticamente in DbParameter.context.ExecuteStoreCommandAsync("UPDATE dbo.Posts SET Rating = 5 WHERE Author = @p0", userSuppliedAuthor); in alternativa, è inoltre possibile costruire un oggetto DbParameter e fornirlo a SqlQuery.In questo modo è possibile usare i parametri denominati nella stringa di query SQL.context.ExecuteStoreCommandAsync("UPDATE dbo.Posts SET Rating = 5 WHERE Author = @author", new SqlParameter("@author", userSuppliedAuthor));</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il numero di righe interessate.</returns>
      <param name="transactionalBehavior">Controlla la creazione di una transazione per questo comando.</param>
      <param name="commandText">Comando specificato nel linguaggio di query nativo del server.</param>
      <param name="parameters">Valori dei parametri da usare per la query.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreCommandAsync(System.Data.Entity.TransactionalBehavior,System.String,System.Threading.CancellationToken,System.Object[])">
      <summary>Esegue in modo asincrono un comando arbitrario direttamente sull'origine dati usando la connessione esistente.Il comando viene specificato usando il linguaggio di query nativo del server, ad esempio SQL.Come con qualsiasi API che accetta SQL, è importante parametrizzare un input utente in modo da fornire protezione da un attacco SQL injection.È possibile includere i segnaposto dei parametri nella stringa di query SQL e quindi fornire i valori dei parametri come argomenti aggiuntivi.Tutti i valori dei parametri forniti verranno convertiti automaticamente in DbParameter.context.ExecuteStoreCommandAsync("UPDATE dbo.Posts SET Rating = 5 WHERE Author = @p0", userSuppliedAuthor); in alternativa, è inoltre possibile costruire un oggetto DbParameter e fornirlo a SqlQuery.In questo modo è possibile usare i parametri denominati nella stringa di query SQL.context.ExecuteStoreCommandAsync("UPDATE dbo.Posts SET Rating = 5 WHERE Author = @author", new SqlParameter("@author", userSuppliedAuthor));</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il numero di righe interessate.</returns>
      <param name="transactionalBehavior">Controlla la creazione di una transazione per questo comando.</param>
      <param name="commandText">Comando specificato nel linguaggio di query nativo del server.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <param name="parameters">Valori dei parametri da usare per la query.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreCommandAsync(System.String,System.Object[])">
      <summary>Esegue in modo asincrono un comando arbitrario direttamente sull'origine dati usando la connessione esistente.Il comando viene specificato usando il linguaggio di query nativo del server, ad esempio SQL.Come con qualsiasi API che accetta SQL, è importante parametrizzare un input utente in modo da fornire protezione da un attacco SQL injection.È possibile includere i segnaposto dei parametri nella stringa di query SQL e quindi fornire i valori dei parametri come argomenti aggiuntivi.Tutti i valori dei parametri forniti verranno convertiti automaticamente in DbParameter.context.ExecuteStoreCommandAsync("UPDATE dbo.Posts SET Rating = 5 WHERE Author = @p0", userSuppliedAuthor); in alternativa, è inoltre possibile costruire un oggetto DbParameter e fornirlo a SqlQuery.In questo modo è possibile usare i parametri denominati nella stringa di query SQL.context.ExecuteStoreCommandAsync("UPDATE dbo.Posts SET Rating = 5 WHERE Author = @author", new SqlParameter("@author", userSuppliedAuthor));</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il numero di righe interessate.</returns>
      <param name="commandText">Comando specificato nel linguaggio di query nativo del server.</param>
      <param name="parameters">Valori dei parametri da usare per la query.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreCommandAsync(System.String,System.Threading.CancellationToken,System.Object[])">
      <summary>Esegue in modo asincrono un comando arbitrario direttamente sull'origine dati usando la connessione esistente.Il comando viene specificato usando il linguaggio di query nativo del server, ad esempio SQL.Come con qualsiasi API che accetta SQL, è importante parametrizzare un input utente in modo da fornire protezione da un attacco SQL injection.È possibile includere i segnaposto dei parametri nella stringa di query SQL e quindi fornire i valori dei parametri come argomenti aggiuntivi.Tutti i valori dei parametri forniti verranno convertiti automaticamente in DbParameter.context.ExecuteStoreCommandAsync("UPDATE dbo.Posts SET Rating = 5 WHERE Author = @p0", userSuppliedAuthor); in alternativa, è inoltre possibile costruire un oggetto DbParameter e fornirlo a SqlQuery.In questo modo è possibile usare i parametri denominati nella stringa di query SQL.context.ExecuteStoreCommandAsync("UPDATE dbo.Posts SET Rating = 5 WHERE Author = @author", new SqlParameter("@author", userSuppliedAuthor));</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il numero di righe interessate.</returns>
      <param name="commandText">Comando specificato nel linguaggio di query nativo del server.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <param name="parameters">Valori dei parametri da usare per la query.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreQuery``1(System.String,System.Data.Entity.Core.Objects.ExecutionOptions,System.Object[])">
      <summary>Esegue una query direttamente sull'origine dati e restituisce una sequenza di risultati tipizzati.La query viene specificata usando il linguaggio di query nativo del server, ad esempio SQL.I risultati non vengono rilevati dal contesto. Usare l'overload che specifica il nome di un set di entità per rilevare i risultati.Come con qualsiasi API che accetta SQL, è importante parametrizzare un input utente in modo da fornire protezione da un attacco SQL injection.È possibile includere i segnaposto dei parametri nella stringa di query SQL e quindi fornire i valori dei parametri come argomenti aggiuntivi.Tutti i valori dei parametri forniti verranno convertiti automaticamente in DbParameter.context.ExecuteStoreQuery&amp;amp;lt;Post&amp;amp;gt;("SELECT * FROM dbo.Posts WHERE Author = @p0", userSuppliedAuthor); in alternativa, è anche possibile costruire un oggetto DbParameter e fornirlo a SqlQuery.In questo modo è possibile usare i parametri denominati nella stringa di query SQL.context.ExecuteStoreQuery&amp;amp;lt;Post&amp;amp;gt;("SELECT * FROM dbo.Posts WHERE Author = @author", new SqlParameter("@author", userSuppliedAuthor));</summary>
      <returns>Enumerazione di oggetti di tipo <paramref name="TElement" />.</returns>
      <param name="commandText">Query specificata nel linguaggio di query nativo del server.</param>
      <param name="executionOptions">Opzioni per l'esecuzione di questa query.</param>
      <param name="parameters">Valori dei parametri da usare per la query.Se si usano parametri di output, i relativi valori non saranno disponibili fino alla lettura completa dei risultati.Questo è dovuto al comportamento sottostante di DbDataReader. Per altre informazioni, vedi http://go.microsoft.com/fwlink/?LinkID=398589.</param>
      <typeparam name="TElement">Tipo di elemento della sequenza di risultati.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreQuery``1(System.String,System.Object[])">
      <summary>Esegue una query direttamente sull'origine dati e restituisce una sequenza di risultati tipizzati.La query viene specificata usando il linguaggio di query nativo del server, ad esempio SQL.I risultati non vengono rilevati dal contesto. Usare l'overload che specifica il nome di un set di entità per rilevare i risultati.Come con qualsiasi API che accetta SQL, è importante parametrizzare un input utente in modo da fornire protezione da un attacco SQL injection.È possibile includere i segnaposto dei parametri nella stringa di query SQL e quindi fornire i valori dei parametri come argomenti aggiuntivi.Tutti i valori dei parametri forniti verranno convertiti automaticamente in DbParameter.context.ExecuteStoreQuery&amp;amp;lt;Post&amp;amp;gt;("SELECT * FROM dbo.Posts WHERE Author = @p0", userSuppliedAuthor); in alternativa, è anche possibile costruire un oggetto DbParameter e fornirlo a SqlQuery.In questo modo è possibile usare i parametri denominati nella stringa di query SQL.context.ExecuteStoreQuery&amp;amp;lt;Post&amp;amp;gt;("SELECT * FROM dbo.Posts WHERE Author = @author", new SqlParameter("@author", userSuppliedAuthor));</summary>
      <returns>Enumerazione di oggetti di tipo <paramref name="TElement" />.</returns>
      <param name="commandText">Query specificata nel linguaggio di query nativo del server.</param>
      <param name="parameters">Valori dei parametri da usare per la query.Se si usano parametri di output, i relativi valori non saranno disponibili fino alla lettura completa dei risultati.Questo è dovuto al comportamento sottostante di DbDataReader. Per altre informazioni, vedi http://go.microsoft.com/fwlink/?LinkID=398589.</param>
      <typeparam name="TElement">Tipo di elemento della sequenza di risultati.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreQuery``1(System.String,System.String,System.Data.Entity.Core.Objects.ExecutionOptions,System.Object[])">
      <summary>Esegue una query direttamente sull'origine dati e restituisce una sequenza di risultati tipizzati.La query viene specificata usando il linguaggio di query nativo del server, ad esempio SQL.Se non viene specificato il nome di un set di entità, i risultati vengono rilevati dal contesto.Come con qualsiasi API che accetta SQL, è importante parametrizzare un input utente in modo da fornire protezione da un attacco SQL injection.È possibile includere i segnaposto dei parametri nella stringa di query SQL e quindi fornire i valori dei parametri come argomenti aggiuntivi.Tutti i valori dei parametri forniti verranno convertiti automaticamente in DbParameter.context.ExecuteStoreQuery&amp;amp;lt;Post&amp;amp;gt;("SELECT * FROM dbo.Posts WHERE Author = @p0", userSuppliedAuthor); in alternativa, è anche possibile costruire un oggetto DbParameter e fornirlo a SqlQuery.In questo modo è possibile usare i parametri denominati nella stringa di query SQL.context.ExecuteStoreQuery&amp;amp;lt;Post&amp;amp;gt;("SELECT * FROM dbo.Posts WHERE Author = @author", new SqlParameter("@author", userSuppliedAuthor));</summary>
      <returns>Enumerazione di oggetti di tipo <paramref name="TElement" />.</returns>
      <param name="commandText">Query specificata nel linguaggio di query nativo del server.</param>
      <param name="entitySetName">Set di entità di tipo TResult.Se non viene fornito il nome di un set di entità, i risultati non verranno rilevati.</param>
      <param name="executionOptions">Opzioni per l'esecuzione di questa query.</param>
      <param name="parameters">Valori dei parametri da usare per la query.Se si usano parametri di output, i relativi valori non saranno disponibili fino alla lettura completa dei risultati.Questo è dovuto al comportamento sottostante di DbDataReader. Per altre informazioni, vedi http://go.microsoft.com/fwlink/?LinkID=398589.</param>
      <typeparam name="TElement">Tipo di elemento della sequenza di risultati.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreQuery``1(System.String,System.String,System.Data.Entity.Core.Objects.MergeOption,System.Object[])">
      <summary>Esegue una query direttamente sull'origine dati e restituisce una sequenza di risultati tipizzati.La query viene specificata usando il linguaggio di query nativo del server, ad esempio SQL.Se non viene specificato il nome di un set di entità, i risultati vengono rilevati dal contesto.Come con qualsiasi API che accetta SQL, è importante parametrizzare un input utente in modo da fornire protezione da un attacco SQL injection.È possibile includere i segnaposto dei parametri nella stringa di query SQL e quindi fornire i valori dei parametri come argomenti aggiuntivi.Tutti i valori dei parametri forniti verranno convertiti automaticamente in DbParameter.context.ExecuteStoreQuery&amp;amp;lt;Post&amp;amp;gt;("SELECT * FROM dbo.Posts WHERE Author = @p0", userSuppliedAuthor); in alternativa, è anche possibile costruire un oggetto DbParameter e fornirlo a SqlQuery.In questo modo è possibile usare i parametri denominati nella stringa di query SQL.context.ExecuteStoreQuery&amp;amp;lt;Post&amp;amp;gt;("SELECT * FROM dbo.Posts WHERE Author = @author", new SqlParameter("@author", userSuppliedAuthor));</summary>
      <returns>Enumerazione di oggetti di tipo <paramref name="TElement" />.</returns>
      <param name="commandText">Query specificata nel linguaggio di query nativo del server.</param>
      <param name="entitySetName">Set di entità di tipo TResult.Se non viene fornito il nome di un set di entità, i risultati non verranno rilevati.</param>
      <param name="mergeOption">Oggetto <see cref="T:System.Data.Entity.Core.Objects.MergeOption" /> da usare quando viene eseguita la query.Il valore predefinito è <see cref="F:System.Data.Entity.Core.Objects.MergeOption.AppendOnly" />.</param>
      <param name="parameters">Valori dei parametri da usare per la query.Se si usano parametri di output, i relativi valori non saranno disponibili fino alla lettura completa dei risultati.Questo è dovuto al comportamento sottostante di DbDataReader. Per altre informazioni, vedi http://go.microsoft.com/fwlink/?LinkID=398589.</param>
      <typeparam name="TElement">Tipo di elemento della sequenza di risultati.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreQueryAsync``1(System.String,System.Data.Entity.Core.Objects.ExecutionOptions,System.Object[])">
      <summary>Esegue in modo asincrono una query direttamente sull'origine dati e restituisce una sequenza di risultati tipizzati.La query viene specificata usando il linguaggio di query nativo del server, ad esempio SQL.I risultati non vengono rilevati dal contesto. Usare l'overload che specifica il nome di un set di entità per rilevare i risultati.Come con qualsiasi API che accetta SQL, è importante parametrizzare un input utente in modo da fornire protezione da un attacco SQL injection.È possibile includere i segnaposto dei parametri nella stringa di query SQL e quindi fornire i valori dei parametri come argomenti aggiuntivi.Tutti i valori dei parametri forniti verranno convertiti automaticamente in DbParameter.context.ExecuteStoreQueryAsync&amp;amp;lt;Post&amp;amp;gt;("SELECT * FROM dbo.Posts WHERE Author = @p0", userSuppliedAuthor); in alternativa, è anche possibile costruire un oggetto DbParameter e fornirlo a SqlQuery.In questo modo è possibile usare i parametri denominati nella stringa di query SQL.context.ExecuteStoreQueryAsync&amp;amp;lt;Post&amp;amp;gt;("SELECT * FROM dbo.Posts WHERE Author = @author", new SqlParameter("@author", userSuppliedAuthor));</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene un'enumerazione di oggetti di tipo <paramref name="TElement" />.</returns>
      <param name="commandText">Query specificata nel linguaggio di query nativo del server.</param>
      <param name="executionOptions">Opzioni per l'esecuzione di questa query.</param>
      <param name="parameters">Valori dei parametri da usare per la query.Se si usano parametri di output, i relativi valori non saranno disponibili fino alla lettura completa dei risultati.Questo è dovuto al comportamento sottostante di DbDataReader. Per altre informazioni, vedi http://go.microsoft.com/fwlink/?LinkID=398589.</param>
      <typeparam name="TElement">Tipo di elemento della sequenza di risultati.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreQueryAsync``1(System.String,System.Data.Entity.Core.Objects.ExecutionOptions,System.Threading.CancellationToken,System.Object[])">
      <summary>Esegue in modo asincrono una query direttamente sull'origine dati e restituisce una sequenza di risultati tipizzati.La query viene specificata usando il linguaggio di query nativo del server, ad esempio SQL.I risultati non vengono rilevati dal contesto. Usare l'overload che specifica il nome di un set di entità per rilevare i risultati.Come con qualsiasi API che accetta SQL, è importante parametrizzare un input utente in modo da fornire protezione da un attacco SQL injection.È possibile includere i segnaposto dei parametri nella stringa di query SQL e quindi fornire i valori dei parametri come argomenti aggiuntivi.Tutti i valori dei parametri forniti verranno convertiti automaticamente in DbParameter.context.ExecuteStoreQueryAsync&amp;amp;lt;Post&amp;amp;gt;("SELECT * FROM dbo.Posts WHERE Author = @p0", userSuppliedAuthor); in alternativa, è anche possibile costruire un oggetto DbParameter e fornirlo a SqlQuery.In questo modo è possibile usare i parametri denominati nella stringa di query SQL.context.ExecuteStoreQueryAsync&amp;amp;lt;Post&amp;amp;gt;("SELECT * FROM dbo.Posts WHERE Author = @author", new SqlParameter("@author", userSuppliedAuthor));</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene un'enumerazione di oggetti di tipo <paramref name="TElement" />.</returns>
      <param name="commandText">Query specificata nel linguaggio di query nativo del server.</param>
      <param name="executionOptions">Opzioni per l'esecuzione di questa query.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <param name="parameters">Valori dei parametri da usare per la query.Se si usano parametri di output, i relativi valori non saranno disponibili fino alla lettura completa dei risultati.Questo è dovuto al comportamento sottostante di DbDataReader. Per altre informazioni, vedi http://go.microsoft.com/fwlink/?LinkID=398589.</param>
      <typeparam name="TElement">Tipo di elemento della sequenza di risultati.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreQueryAsync``1(System.String,System.Object[])">
      <summary>Esegue in modo asincrono una query direttamente sull'origine dati e restituisce una sequenza di risultati tipizzati.La query viene specificata usando il linguaggio di query nativo del server, ad esempio SQL.I risultati non vengono rilevati dal contesto. Usare l'overload che specifica il nome di un set di entità per rilevare i risultati.Come con qualsiasi API che accetta SQL, è importante parametrizzare un input utente in modo da fornire protezione da un attacco SQL injection.È possibile includere i segnaposto dei parametri nella stringa di query SQL e quindi fornire i valori dei parametri come argomenti aggiuntivi.Tutti i valori dei parametri forniti verranno convertiti automaticamente in DbParameter.context.ExecuteStoreQueryAsync&amp;amp;lt;Post&amp;amp;gt;("SELECT * FROM dbo.Posts WHERE Author = @p0", userSuppliedAuthor); in alternativa, è anche possibile costruire un oggetto DbParameter e fornirlo a SqlQuery.In questo modo è possibile usare i parametri denominati nella stringa di query SQL.context.ExecuteStoreQueryAsync&amp;amp;lt;Post&amp;amp;gt;("SELECT * FROM dbo.Posts WHERE Author = @author", new SqlParameter("@author", userSuppliedAuthor));</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene un'enumerazione di oggetti di tipo <paramref name="TElement" />.</returns>
      <param name="commandText">Query specificata nel linguaggio di query nativo del server.</param>
      <param name="parameters">Valori dei parametri da usare per la query.Se si usano parametri di output, i relativi valori non saranno disponibili fino alla lettura completa dei risultati.Questo è dovuto al comportamento sottostante di DbDataReader. Per altre informazioni, vedi http://go.microsoft.com/fwlink/?LinkID=398589.</param>
      <typeparam name="TElement">Tipo di elemento della sequenza di risultati.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreQueryAsync``1(System.String,System.String,System.Data.Entity.Core.Objects.ExecutionOptions,System.Object[])">
      <summary>Esegue in modo asincrono una query direttamente sull'origine dati e restituisce una sequenza di risultati tipizzati.La query viene specificata usando il linguaggio di query nativo del server, ad esempio SQL.Se non viene specificato il nome di un set di entità, i risultati vengono rilevati dal contesto.Come con qualsiasi API che accetta SQL, è importante parametrizzare un input utente in modo da fornire protezione da un attacco SQL injection.È possibile includere i segnaposto dei parametri nella stringa di query SQL e quindi fornire i valori dei parametri come argomenti aggiuntivi.Tutti i valori dei parametri forniti verranno convertiti automaticamente in DbParameter.context.ExecuteStoreQueryAsync&amp;amp;lt;Post&amp;amp;gt;("SELECT * FROM dbo.Posts WHERE Author = @p0", userSuppliedAuthor); in alternativa, è anche possibile costruire un oggetto DbParameter e fornirlo a SqlQuery.In questo modo è possibile usare i parametri denominati nella stringa di query SQL.context.ExecuteStoreQueryAsync&amp;amp;lt;Post&amp;amp;gt;("SELECT * FROM dbo.Posts WHERE Author = @author", new SqlParameter("@author", userSuppliedAuthor));</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene un'enumerazione di oggetti di tipo <paramref name="TElement" />.</returns>
      <param name="commandText">Query specificata nel linguaggio di query nativo del server.</param>
      <param name="entitySetName">Set di entità di tipo TResult.Se non viene fornito il nome di un set di entità, i risultati non verranno rilevati.</param>
      <param name="executionOptions">Opzioni per l'esecuzione di questa query.</param>
      <param name="parameters">Valori dei parametri da usare per la query.Se si usano parametri di output, i relativi valori non saranno disponibili fino alla lettura completa dei risultati.Questo è dovuto al comportamento sottostante di DbDataReader. Per altre informazioni, vedi http://go.microsoft.com/fwlink/?LinkID=398589.</param>
      <typeparam name="TElement">Tipo di elemento della sequenza di risultati.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreQueryAsync``1(System.String,System.String,System.Data.Entity.Core.Objects.ExecutionOptions,System.Threading.CancellationToken,System.Object[])">
      <summary>Esegue in modo asincrono una query direttamente sull'origine dati e restituisce una sequenza di risultati tipizzati.La query viene specificata usando il linguaggio di query nativo del server, ad esempio SQL.Se non viene specificato il nome di un set di entità, i risultati vengono rilevati dal contesto.Come con qualsiasi API che accetta SQL, è importante parametrizzare un input utente in modo da fornire protezione da un attacco SQL injection.È possibile includere i segnaposto dei parametri nella stringa di query SQL e quindi fornire i valori dei parametri come argomenti aggiuntivi.Tutti i valori dei parametri forniti verranno convertiti automaticamente in DbParameter.context.ExecuteStoreQueryAsync&amp;amp;lt;Post&amp;amp;gt;("SELECT * FROM dbo.Posts WHERE Author = @p0", userSuppliedAuthor); in alternativa, è anche possibile costruire un oggetto DbParameter e fornirlo a SqlQuery.In questo modo è possibile usare i parametri denominati nella stringa di query SQL.context.ExecuteStoreQueryAsync&amp;amp;lt;Post&amp;amp;gt;("SELECT * FROM dbo.Posts WHERE Author = @author", new SqlParameter("@author", userSuppliedAuthor));</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene un'enumerazione di oggetti di tipo <paramref name="TElement" />.</returns>
      <param name="commandText">Query specificata nel linguaggio di query nativo del server.</param>
      <param name="entitySetName">Set di entità di tipo TResult.Se non viene fornito il nome di un set di entità, i risultati non verranno rilevati.</param>
      <param name="executionOptions">Opzioni per l'esecuzione di questa query.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <param name="parameters">Valori dei parametri da usare per la query.Se si usano parametri di output, i relativi valori non saranno disponibili fino alla lettura completa dei risultati.Questo è dovuto al comportamento sottostante di DbDataReader. Per altre informazioni, vedi http://go.microsoft.com/fwlink/?LinkID=398589.</param>
      <typeparam name="TElement">Tipo di elemento della sequenza di risultati.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreQueryAsync``1(System.String,System.Threading.CancellationToken,System.Object[])">
      <summary>Esegue in modo asincrono una query direttamente sull'origine dati e restituisce una sequenza di risultati tipizzati.La query viene specificata usando il linguaggio di query nativo del server, ad esempio SQL.I risultati non vengono rilevati dal contesto. Usare l'overload che specifica il nome di un set di entità per rilevare i risultati.Come con qualsiasi API che accetta SQL, è importante parametrizzare un input utente in modo da fornire protezione da un attacco SQL injection.È possibile includere i segnaposto dei parametri nella stringa di query SQL e quindi fornire i valori dei parametri come argomenti aggiuntivi.Tutti i valori dei parametri forniti verranno convertiti automaticamente in DbParameter.context.ExecuteStoreQueryAsync&amp;amp;lt;Post&amp;amp;gt;("SELECT * FROM dbo.Posts WHERE Author = @p0", userSuppliedAuthor); in alternativa, è anche possibile costruire un oggetto DbParameter e fornirlo a SqlQuery.In questo modo è possibile usare i parametri denominati nella stringa di query SQL.context.ExecuteStoreQueryAsync&amp;amp;lt;Post&amp;amp;gt;("SELECT * FROM dbo.Posts WHERE Author = @author", new SqlParameter("@author", userSuppliedAuthor));</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene un'enumerazione di oggetti di tipo <paramref name="TElement" />.</returns>
      <param name="commandText">Query specificata nel linguaggio di query nativo del server.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <param name="parameters">Valori dei parametri da usare per la query.Se si usano parametri di output, i relativi valori non saranno disponibili fino alla lettura completa dei risultati.Questo è dovuto al comportamento sottostante di DbDataReader. Per altre informazioni, vedi http://go.microsoft.com/fwlink/?LinkID=398589.</param>
      <typeparam name="TElement">Tipo di elemento della sequenza di risultati.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.Finalize">
      <summary>Completa un'istanza della classe <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.GetKnownProxyTypes">
      <summary>Restituisce tutti i tipi di proxy esistenti.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di tutti i tipi di proxy esistenti.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.GetObjectByKey(System.Data.Entity.Core.EntityKey)">
      <summary>Restituisce un oggetto contenente la chiave di entità specificata.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta un'istanza di un tipo di entità.</returns>
      <param name="key">Chiave dell'oggetto da trovare.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro key è Null.</exception>
      <exception cref="T:System.Data.Entity.Core.ObjectNotFoundException">L'oggetto non viene trovato nell'oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectStateManager" /> né nell'origine dati.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.GetObjectType(System.Type)">
      <summary>Restituisce il tipo di entità dell'entità POCO associata a un oggetto proxy di un tipo specificato.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> dell'entità POCO associata.</returns>
      <param name="type">
        <see cref="T:System.Type" /> dell'oggetto proxy.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectContext.InterceptionContext">
      <summary>Restituisce l'oggetto <see cref="T:System.Data.Entity.Infrastructure.Interception.DbInterceptionContext" /> usato per questo contesto.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.LoadProperty(System.Object,System.String)">
      <summary>Carica in modo esplicito un oggetto correlato all'oggetto fornito in base alla proprietà di navigazione specificata e usando l'opzione di unione predefinita.</summary>
      <param name="entity">Entità per la quale devono essere caricati gli oggetti correlati.</param>
      <param name="navigationProperty">Nome della proprietà di navigazione che restituisce gli oggetti correlati da caricare.</param>
      <exception cref="T:System.InvalidOperationException">L'entità si trova in uno stato <see cref="F:System.Data.Entity.EntityState.Detached" />, <see cref="F:System.Data.Entity.EntityState.Added," /> o <see cref="F:System.Data.Entity.EntityState.Deleted" /> o l'entità è collegata a un'altra istanza di <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.LoadProperty(System.Object,System.String,System.Data.Entity.Core.Objects.MergeOption)">
      <summary>Carica in modo esplicito un oggetto correlato all'oggetto fornito in base alla proprietà di navigazione specificata e usando l'opzione di unione specificata.</summary>
      <param name="entity">Entità per la quale devono essere caricati gli oggetti correlati.</param>
      <param name="navigationProperty">Nome della proprietà di navigazione che restituisce gli oggetti correlati da caricare.</param>
      <param name="mergeOption">Valore di <see cref="T:System.Data.Entity.Core.Objects.MergeOption" /> da usare quando si caricano gli oggetti correlati.</param>
      <exception cref="T:System.InvalidOperationException">L'entità si trova in uno stato <see cref="F:System.Data.Entity.EntityState.Detached" />, <see cref="F:System.Data.Entity.EntityState.Added," /> o <see cref="F:System.Data.Entity.EntityState.Deleted" /> o l'entità è collegata a un'altra istanza di <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.LoadProperty``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
      <summary>Carica in modo esplicito un oggetto correlato all'oggetto fornito in base alla query LINQ specificata e usando l'opzione di unione predefinita.</summary>
      <param name="entity">Oggetto di origine per il quale vengono caricati gli oggetti correlati.</param>
      <param name="selector">Espressione LINQ che definisce gli oggetti correlati da caricare.</param>
      <typeparam name="TEntity">Tipo dell'entità.</typeparam>
      <exception cref="T:System.ArgumentException">selector non fornisce un parametro di input valido.</exception>
      <exception cref="T:System.ArgumentNullException">selector è Null.</exception>
      <exception cref="T:System.InvalidOperationException">L'entità si trova in uno stato <see cref="F:System.Data.Entity.EntityState.Detached" />, <see cref="F:System.Data.Entity.EntityState.Added," /> o <see cref="F:System.Data.Entity.EntityState.Deleted" /> o l'entità è collegata a un'altra istanza di <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.LoadProperty``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.Entity.Core.Objects.MergeOption)">
      <summary>Carica in modo esplicito un oggetto correlato all'oggetto fornito in base alla query LINQ specificata e usando l'opzione di unione specificata.</summary>
      <param name="entity">Oggetto di origine per il quale vengono caricati gli oggetti correlati.</param>
      <param name="selector">Espressione LINQ che definisce gli oggetti correlati da caricare.</param>
      <param name="mergeOption">Valore di <see cref="T:System.Data.Entity.Core.Objects.MergeOption" /> da usare quando si caricano gli oggetti correlati.</param>
      <typeparam name="TEntity">Tipo dell'entità.</typeparam>
      <exception cref="T:System.ArgumentException">selector non fornisce un parametro di input valido.</exception>
      <exception cref="T:System.ArgumentNullException">selector è Null.</exception>
      <exception cref="T:System.InvalidOperationException">L'entità si trova in uno stato <see cref="F:System.Data.Entity.EntityState.Detached" />, <see cref="F:System.Data.Entity.EntityState.Added," /> o <see cref="F:System.Data.Entity.EntityState.Deleted" /> o l'entità è collegata a un'altra istanza di <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectContext.MetadataWorkspace">
      <summary>Ottiene l'area di lavoro metadati usata dal contesto dell'oggetto.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace" /> associato a questo oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.</returns>
    </member>
    <member name="E:System.Data.Entity.Core.Objects.ObjectContext.ObjectMaterialized">
      <summary>Si verifica quando un nuovo oggetto entità viene creato dai dati nell'origine dati come parte di una query o di un'operazione di caricamento.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectContext.ObjectStateManager">
      <summary>Ottiene il gestore degli stati dell'oggetto usato dal contesto dell'oggetto per rilevare le modifiche dell'oggetto.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectStateManager" /> usato da questo oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectContext.QueryProvider">
      <summary>Ottiene il provider di query LINQ associato al contesto dell'oggetto.</summary>
      <returns>Istanza di <see cref="T:System.Linq.IQueryProvider" /> usata dal contesto di questo oggetto.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.Refresh(System.Data.Entity.Core.Objects.RefreshMode,System.Collections.IEnumerable)">
      <summary>Aggiorna una raccolta di oggetti nel contesto dell'oggetto con i dati presenti nel database.</summary>
      <param name="refreshMode">Valore di <see cref="T:System.Data.Entity.Core.Objects.RefreshMode" /> che indica se le modifiche alle proprietà nel contesto dell'oggetto vengono sovrascritte con i valori delle proprietà presenti nel database.</param>
      <param name="collection">Raccolta <see cref="T:System.Collections.IEnumerable" /> di oggetti da aggiornare.</param>
      <exception cref="T:System.ArgumentNullException">collection è Null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">refreshMode non è valido.</exception>
      <exception cref="T:System.ArgumentException">collection è vuoto o un oggetto non è collegato al contesto.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.Refresh(System.Data.Entity.Core.Objects.RefreshMode,System.Object)">
      <summary>Aggiorna un oggetto nel contesto dell'oggetto con i dati presenti nel database.</summary>
      <param name="refreshMode">Valore di <see cref="T:System.Data.Entity.Core.Objects.RefreshMode" /> che indica se le modifiche alle proprietà nel contesto dell'oggetto vengono sovrascritte con i valori delle proprietà presenti nel database.</param>
      <param name="entity">Oggetto da aggiornare.</param>
      <exception cref="T:System.ArgumentNullException">entity è Null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">refreshMode non è valido.</exception>
      <exception cref="T:System.ArgumentException">entity non è collegato al contesto.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.RefreshAsync(System.Data.Entity.Core.Objects.RefreshMode,System.Collections.IEnumerable)">
      <summary>Aggiorna in modo asincrono una raccolta di oggetti nel contesto dell'oggetto con i dati presenti nel database.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
      <param name="refreshMode">Valore di <see cref="T:System.Data.Entity.Core.Objects.RefreshMode" /> che indica se le modifiche alle proprietà nel contesto dell'oggetto vengono sovrascritte con i valori delle proprietà presenti nel database.</param>
      <param name="collection">Raccolta <see cref="T:System.Collections.IEnumerable" /> di oggetti da aggiornare.</param>
      <exception cref="T:System.ArgumentNullException">collection è Null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">refreshMode non è valido.</exception>
      <exception cref="T:System.ArgumentException">collection è vuoto o un oggetto non è collegato al contesto.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.RefreshAsync(System.Data.Entity.Core.Objects.RefreshMode,System.Collections.IEnumerable,System.Threading.CancellationToken)">
      <summary>Aggiorna in modo asincrono una raccolta di oggetti nel contesto dell'oggetto con i dati presenti nel database.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
      <param name="refreshMode">Valore di <see cref="T:System.Data.Entity.Core.Objects.RefreshMode" /> che indica se le modifiche alle proprietà nel contesto dell'oggetto vengono sovrascritte con i valori delle proprietà presenti nel database.</param>
      <param name="collection">Raccolta <see cref="T:System.Collections.IEnumerable" /> di oggetti da aggiornare.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.ArgumentNullException">collection è Null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">refreshMode non è valido.</exception>
      <exception cref="T:System.ArgumentException">collection è vuoto o un oggetto non è collegato al contesto.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.RefreshAsync(System.Data.Entity.Core.Objects.RefreshMode,System.Object)">
      <summary>Aggiorna in modo asincrono un oggetto nel contesto dell'oggetto con i dati presenti nel database.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
      <param name="refreshMode">Valore di <see cref="T:System.Data.Entity.Core.Objects.RefreshMode" /> che indica se le modifiche alle proprietà nel contesto dell'oggetto vengono sovrascritte con i valori delle proprietà presenti nel database.</param>
      <param name="entity">Oggetto da aggiornare.</param>
      <exception cref="T:System.ArgumentNullException">entity è Null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">refreshMode non è valido.</exception>
      <exception cref="T:System.ArgumentException">entity non è collegato al contesto.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.RefreshAsync(System.Data.Entity.Core.Objects.RefreshMode,System.Object,System.Threading.CancellationToken)">
      <summary>Aggiorna in modo asincrono un oggetto nel contesto dell'oggetto con i dati presenti nel database.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
      <param name="refreshMode">Valore di <see cref="T:System.Data.Entity.Core.Objects.RefreshMode" /> che indica se le modifiche alle proprietà nel contesto dell'oggetto vengono sovrascritte con i valori delle proprietà presenti nel database.</param>
      <param name="entity">Oggetto da aggiornare.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.ArgumentNullException">entity è Null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">refreshMode non è valido.</exception>
      <exception cref="T:System.ArgumentException">entity non è collegato al contesto.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.SaveChanges">
      <summary>Rende persistenti tutti gli aggiornamenti al database e reimposta il rilevamento delle modifiche nel contesto dell'oggetto.</summary>
      <returns>Il numero di oggetti che si trovano nello stato <see cref="F:System.Data.Entity.EntityState.Added" />, <see cref="F:System.Data.Entity.EntityState.Modified" /> o <see cref="F:System.Data.Entity.EntityState.Deleted" /> al momento della chiamata a <see cref="M:System.Data.Entity.Core.Objects.ObjectContext.SaveChanges" />.</returns>
      <exception cref="T:System.Data.Entity.Core.OptimisticConcurrencyException">Si è verificata una violazione della concorrenza ottimistica durante il salvataggio delle modifiche.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.SaveChanges(System.Boolean)">
      <summary>Rende persistenti tutti gli aggiornamenti al database e reimposta facoltativamente il rilevamento delle modifiche nel contesto dell'oggetto.</summary>
      <returns>Il numero di oggetti che si trovano nello stato <see cref="F:System.Data.Entity.EntityState.Added" />, <see cref="F:System.Data.Entity.EntityState.Modified" /> o <see cref="F:System.Data.Entity.EntityState.Deleted" /> al momento della chiamata a <see cref="M:System.Data.Entity.Core.Objects.ObjectContext.SaveChanges" />.</returns>
      <param name="acceptChangesDuringSave">Questo parametro è necessario per il supporto delle transazioni lato client.Se true, il rilevamento delle modifiche in tutti gli oggetti viene reimpostato dopo il completamento di <see cref="M:System.Data.Entity.Core.Objects.ObjectContext.SaveChanges(System.Boolean)" />.Se false, è necessario chiamare il metodo <see cref="M:System.Data.Entity.Core.Objects.ObjectContext.AcceptAllChanges" /> dopo <see cref="M:System.Data.Entity.Core.Objects.ObjectContext.SaveChanges(System.Boolean)" />.</param>
      <exception cref="T:System.Data.Entity.Core.OptimisticConcurrencyException">Si è verificata una violazione della concorrenza ottimistica durante il salvataggio delle modifiche.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.SaveChanges(System.Data.Entity.Core.Objects.SaveOptions)">
      <summary>Rende persistenti tutti gli aggiornamenti al database e reimposta facoltativamente il rilevamento delle modifiche nel contesto dell'oggetto.</summary>
      <returns>Il numero di oggetti che si trovano nello stato <see cref="F:System.Data.Entity.EntityState.Added" />, <see cref="F:System.Data.Entity.EntityState.Modified" /> o <see cref="F:System.Data.Entity.EntityState.Deleted" /> al momento della chiamata a <see cref="M:System.Data.Entity.Core.Objects.ObjectContext.SaveChanges" />.</returns>
      <param name="options">Valore di <see cref="T:System.Data.Entity.Core.Objects.SaveOptions" /> che determina il comportamento dell'operazione.</param>
      <exception cref="T:System.Data.Entity.Core.OptimisticConcurrencyException">Si è verificata una violazione della concorrenza ottimistica durante il salvataggio delle modifiche.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.SaveChangesAsync">
      <summary>Rende persistenti in modo asincrono tutti gli aggiornamenti al database e reimposta il rilevamento delle modifiche nel contesto dell'oggetto.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il numero di oggetti che si trovano nello stato <see cref="F:System.Data.Entity.EntityState.Added" />, <see cref="F:System.Data.Entity.EntityState.Modified" /> o <see cref="F:System.Data.Entity.EntityState.Deleted" /> al momento della chiamata a <see cref="M:System.Data.Entity.Core.Objects.ObjectContext.SaveChanges" />.</returns>
      <exception cref="T:System.Data.Entity.Core.OptimisticConcurrencyException">Si è verificata una violazione della concorrenza ottimistica durante il salvataggio delle modifiche.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.SaveChangesAsync(System.Data.Entity.Core.Objects.SaveOptions)">
      <summary>Rende persistenti in modo asincrono tutti gli aggiornamenti al database e reimposta facoltativamente il rilevamento delle modifiche nel contesto dell'oggetto.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il numero di oggetti che si trovano nello stato <see cref="F:System.Data.Entity.EntityState.Added" />, <see cref="F:System.Data.Entity.EntityState.Modified" /> o <see cref="F:System.Data.Entity.EntityState.Deleted" /> al momento della chiamata a <see cref="M:System.Data.Entity.Core.Objects.ObjectContext.SaveChanges" />.</returns>
      <param name="options">Valore di <see cref="T:System.Data.Entity.Core.Objects.SaveOptions" /> che determina il comportamento dell'operazione.</param>
      <exception cref="T:System.Data.Entity.Core.OptimisticConcurrencyException">Si è verificata una violazione della concorrenza ottimistica durante il salvataggio delle modifiche.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.SaveChangesAsync(System.Data.Entity.Core.Objects.SaveOptions,System.Threading.CancellationToken)">
      <summary>Rende persistenti in modo asincrono tutti gli aggiornamenti al database e reimposta facoltativamente il rilevamento delle modifiche nel contesto dell'oggetto.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il numero di oggetti che si trovano nello stato <see cref="F:System.Data.Entity.EntityState.Added" />, <see cref="F:System.Data.Entity.EntityState.Modified" /> o <see cref="F:System.Data.Entity.EntityState.Deleted" /> al momento della chiamata a <see cref="M:System.Data.Entity.Core.Objects.ObjectContext.SaveChanges" />.</returns>
      <param name="options">Valore di <see cref="T:System.Data.Entity.Core.Objects.SaveOptions" /> che determina il comportamento dell'operazione.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.Data.Entity.Core.OptimisticConcurrencyException">Si è verificata una violazione della concorrenza ottimistica durante il salvataggio delle modifiche.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.SaveChangesAsync(System.Threading.CancellationToken)">
      <summary>Rende persistenti in modo asincrono tutti gli aggiornamenti al database e reimposta il rilevamento delle modifiche nel contesto dell'oggetto.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il numero di oggetti che si trovano nello stato <see cref="F:System.Data.Entity.EntityState.Added" />, <see cref="F:System.Data.Entity.EntityState.Modified" /> o <see cref="F:System.Data.Entity.EntityState.Deleted" /> al momento della chiamata a <see cref="M:System.Data.Entity.Core.Objects.ObjectContext.SaveChanges" />.</returns>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.Data.Entity.Core.OptimisticConcurrencyException">Si è verificata una violazione della concorrenza ottimistica durante il salvataggio delle modifiche.</exception>
    </member>
    <member name="E:System.Data.Entity.Core.Objects.ObjectContext.SavingChanges">
      <summary>Si verifica quando le modifiche vengono salvate nell'origine dati.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectContext.System#Data#Entity#Infrastructure#IObjectContextAdapter#ObjectContext">
      <summary>Restituisce se stesso.ObjectContext implementa <see cref="T:System.Data.Entity.Infrastructure.IObjectContextAdapter" /> per fornire un'interfaccia comune per <see cref="T:System.Data.Entity.DbContext" /> e ObjectContext i quali restituiranno entrambi l'elemento ObjectContext sottostante.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectContext.TransactionHandler">
      <summary>Ottiene il gestore delle transazioni usato da questo contesto.Può essere Null se nessuna transazione è stata avviata.</summary>
      <returns>Gestore delle transazioni.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.Translate``1(System.Data.Common.DbDataReader)">
      <summary>Converte <see cref="T:System.Data.Common.DbDataReader" /> che contiene righe di dati di entità in oggetti del tipo di entità richiesto.</summary>
      <returns>Enumerazione di oggetti di tipo TResult.</returns>
      <param name="reader">
        <see cref="T:System.Data.Common.DbDataReader" /> che contiene dati di entità da convertire in oggetti entità.</param>
      <typeparam name="TElement">Tipo di entità.</typeparam>
      <exception cref="T:System.ArgumentNullException">Quando reader è Null.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.Translate``1(System.Data.Common.DbDataReader,System.String,System.Data.Entity.Core.Objects.MergeOption)">
      <summary>Converte <see cref="T:System.Data.Common.DbDataReader" /> che contiene righe di dati di entità in oggetti del tipo di entità richiesto, in un set di entità specifico e con l'opzione di unione specificata.</summary>
      <returns>Enumerazione di oggetti di tipo TResult.</returns>
      <param name="reader">
        <see cref="T:System.Data.Common.DbDataReader" /> che contiene dati di entità da convertire in oggetti entità.</param>
      <param name="entitySetName">Set di entità di tipo TResult.</param>
      <param name="mergeOption">
        <see cref="T:System.Data.Entity.Core.Objects.MergeOption" /> da usare quando gli oggetti convertiti vengono aggiunti al contesto dell'oggetto.Il valore predefinito è <see cref="F:System.Data.Entity.Core.Objects.MergeOption.AppendOnly" />.</param>
      <typeparam name="TEntity">Tipo di entità.</typeparam>
      <exception cref="T:System.ArgumentNullException">Quando reader è Null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Quando il parametro mergeOption fornito non è un valore <see cref="T:System.Data.Entity.Core.Objects.MergeOption" /> valido.</exception>
      <exception cref="T:System.InvalidOperationException">Quando il parametro entitySetName fornito non è un set di entità valido per il tipo TResult.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectContext.TryGetObjectByKey(System.Data.Entity.Core.EntityKey,System.Object@)">
      <summary>Restituisce un oggetto contenente la chiave di entità specificata.</summary>
      <returns>true se l'oggetto è stato recuperato correttamente.false se key è temporaneo, connessione è Null o value è Null.</returns>
      <param name="key">Chiave dell'oggetto da trovare.</param>
      <param name="value">Quando termina, questo metodo contiene l'oggetto.</param>
      <exception cref="T:System.ArgumentException">Metadati incompatibili per key.</exception>
      <exception cref="T:System.ArgumentNullException">key è Null.</exception>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.ObjectContextOptions">
      <summary>Definisce le opzioni che influiscono sul comportamento di ObjectContext.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectContextOptions.EnsureTransactionsForFunctionsAndCommands">
      <summary>Ottiene o imposta il valore che determina se le funzioni e i comandi SQL devono essere sempre eseguiti in una transazione.</summary>
      <returns>Comportamento predefinito della transazione.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectContextOptions.LazyLoadingEnabled">
      <summary>Ottiene o imposta un valore booleano che determina se gli oggetti correlati vengono caricati automaticamente quando si accede a una proprietà di navigazione.</summary>
      <returns>true se il caricamento lazy è abilitato; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectContextOptions.ProxyCreationEnabled">
      <summary>Ottiene o imposta un valore booleano che determina se vengono create istanze proxy per classi di dati personalizzate che non riconoscono la persistenza.</summary>
      <returns>true se vengono creati proxy; in caso contrario, false.Il valore predefinito è true.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectContextOptions.UseConsistentNullReferenceBehavior">
      <summary>Ottiene o imposta un valore booleano che determina se usare il comportamento NullReference coerente.</summary>
      <returns>true se deve essere usato il comportamento NullReference coerente; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectContextOptions.UseCSharpNullComparisonBehavior">
      <summary>Ottiene o imposta un valore booleano che determina se usare il comportamento C# NullComparison.</summary>
      <returns>true se deve essere usato il comportamento C# NullComparison; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectContextOptions.UseLegacyPreserveChangesBehavior">
      <summary>Ottiene o imposta un valore booleano che determina se usare il comportamento PreserveChanges legacy.</summary>
      <returns>true se deve essere usato il comportamento PreserveChanges legacy; in caso contrario, false.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.ObjectMaterializedEventArgs">
      <summary>EventArgs per l'evento ObjectMaterialized.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectMaterializedEventArgs.Entity">
      <summary>Ottiene l'oggetto entità creato.</summary>
      <returns>Oggetto entità creato.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.ObjectMaterializedEventHandler">
      <summary>Delegato per l'evento ObjectMaterialized.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.ObjectParameter">
      <summary>Questa classe rappresenta un parametro di query a livello oggetti costituito da un nome, un tipo e un valore.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectParameter.#ctor(System.String,System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Objects.ObjectParameter" /> con il nome e il valore specificati.</summary>
      <param name="name">Nome del parametro.Questo nome non deve includere il marcatore di parametro "@" utilizzato nelle istruzioni Entity SQL, ma solo il nome effettivo.Il primo carattere dell'espressione deve essere una lettera.Tutti i caratteri successivi nell'espressione devono essere lettere, numeri o un carattere di sottolineatura (_).</param>
      <param name="value">Valore iniziale, e implicitamente il tipo, del parametro.</param>
      <exception cref="T:System.ArgumentNullException">Se il valore di un argomento è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Se il valore dell'argomento nome non è valido.I nomi dei parametri devono iniziare con una lettera e possono contenere solo lettere, numeri e caratteri di sottolineatura.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectParameter.#ctor(System.String,System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Objects.ObjectParameter" /> con il nome e il tipo specificati.</summary>
      <param name="name">Nome del parametro.Questo nome non deve includere il marcatore di parametro "@" utilizzato nelle istruzioni Entity SQL, ma solo il nome effettivo.Il primo carattere dell'espressione deve essere una lettera.Tutti i caratteri successivi nell'espressione devono essere lettere, numeri o un carattere di sottolineatura (_).</param>
      <param name="type">Tipo Common Language Runtime (CLR) del parametro.</param>
      <exception cref="T:System.ArgumentNullException">Se il valore di un argomento è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Se il valore dell'argomento nome non è valido.I nomi dei parametri devono iniziare con una lettera e possono contenere solo lettere, numeri e caratteri di sottolineatura.</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectParameter.Name">
      <summary>Ottiene il nome del parametro che può essere impostato solo tramite un costruttore.</summary>
      <returns>Nome del parametro che può essere impostato solo tramite un costruttore.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectParameter.ParameterType">
      <summary>Ottiene il tipo del parametro.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> del parametro.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectParameter.Value">
      <summary>Ottiene o imposta il valore del parametro.</summary>
      <returns>Valore del parametro.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.ObjectParameterCollection">
      <summary>Rappresenta una raccolta di parametri di query a livello oggetti.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectParameterCollection.Add(System.Data.Entity.Core.Objects.ObjectParameter)">
      <summary>Aggiunge l'oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectParameter" /> specificato alla raccolta.</summary>
      <param name="item">Parametro da aggiungere alla raccolta.</param>
      <exception cref="T:System.ArgumentNullException">L'argomento parameter è null.</exception>
      <exception cref="T:System.ArgumentException">L'argomento parameter esiste già nella raccolta.Questo comportamento è diverso da quello previsto per la maggior parte delle raccolte che consentono voci duplicate.-oppure-Un altro parametro con lo stesso nome dell'argomento parameter esiste già nella raccolta.Notare che la ricerca viene eseguita senza distinzione tra maiuscole e minuscole.Questo comportamento è diverso da quello previsto per la maggior parte delle raccolte ed è più simile al comportamento di <see cref="T:System.Collections.Generic.Dictionary" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il tipo di parameter non è valido.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectParameterCollection.Clear">
      <summary>Elimina tutte le istanze di <see cref="T:System.Data.Entity.Core.Objects.ObjectParameter" /> dalla raccolta.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectParameterCollection.Contains(System.Data.Entity.Core.Objects.ObjectParameter)">
      <summary>Verifica se nella raccolta è presente un oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectParameter" /> specificato in base al riferimento.</summary>
      <returns>Restituisce true se l'oggetto parametro è stato trovato nella raccolta; in caso contrario, false.</returns>
      <param name="item">
        <see cref="T:System.Data.Entity.Core.Objects.ObjectParameter" /> da trovare nella raccolta.</param>
      <exception cref="T:System.ArgumentNullException">L'argomento parameter è null.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectParameterCollection.Contains(System.String)">
      <summary>Determina se un oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectParameter" /> con il nome specificato è presente nella raccolta.</summary>
      <returns>Restituisce true se un parametro con il nome specificato è stato trovato nella raccolta. In caso contrario, false.</returns>
      <param name="name">Nome del parametro da cercare nella raccolta.Questo nome non deve includere il marcatore di parametro "@" utilizzato nelle istruzioni Entity SQL, ma solo il nome effettivo.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro name è null.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectParameterCollection.CopyTo(System.Data.Entity.Core.Objects.ObjectParameter[],System.Int32)">
      <summary>Consente di copiare i parametri presenti nella raccolta in una matrice specificata, partendo dall'oggetto in corrispondenza dell'indice specificato.</summary>
      <param name="array">Matrice in cui copiare i parametri.</param>
      <param name="arrayIndex">Indice nella matrice in corrispondenza del quale iniziare la copia dei parametri.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectParameterCollection.Count">
      <summary>Ottiene il numero di parametri attualmente presenti nella raccolta.</summary>
      <returns>Numero di oggetti <see cref="T:System.Data.Entity.Core.Objects.ObjectParameter" /> presenti nella raccolta.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectParameterCollection.GetEnumerator">
      <summary>Restituisce le istanze dell'enumeratore che consentono l'iterazione e l'attraversamento della raccolta.</summary>
      <returns>Oggetto <see cref="T:System.Collections.Generic.IEnumerator`1" /> che può essere usato per eseguire l'iterazione nella raccolta.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectParameterCollection.Item(System.String)">
      <summary>Ottiene un indicizzatore che permette ai chiamanti di recuperare i parametri in base al nome.</summary>
      <returns>Indicizzatore che permette ai chiamanti di recuperare i parametri in base al nome.</returns>
      <param name="name">Nome dell'elemento.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectParameterCollection.Remove(System.Data.Entity.Core.Objects.ObjectParameter)">
      <summary>Rimuove un'istanza di un oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectParameter" /> dalla raccolta in base al riferimento se presente nella raccolta.</summary>
      <returns>Restituisce true se l'oggetto parametro è stato trovato e rimosso dalla raccolta. In caso contrario, false.</returns>
      <param name="item">Oggetto da rimuovere dalla raccolta.</param>
      <exception cref="T:System.ArgumentNullException">L'argomento parameter è null.</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectParameterCollection.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Ottiene un valore che indica se <see cref="T:System.Data.Entity.Core.Objects.ObjectParameter" /> è di sola lettura.</summary>
      <returns>true se <see cref="T:System.Data.Entity.Core.Objects.ObjectParameter" /> è di sola lettura; in caso contrario, false.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectParameterCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore non tipizzato della raccolta.</summary>
      <returns>Istanza di <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.ObjectQuery">
      <summary>Questa classe implementa query non tipizzate a livello oggetti.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectQuery.CommandText">
      <summary>Restituisce il testo del comando per la query.</summary>
      <returns>Valore stringa.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectQuery.Context">
      <summary>Ottiene il contesto dell'oggetto associato a questa query di oggetto.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" /> associato all'istanza di <see cref="T:System.Data.Entity.Core.Objects.ObjectQuery`1" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectQuery.EnablePlanCaching">
      <summary>Ottiene o imposta un valore che indica se il piano di query deve essere memorizzato nella cache.</summary>
      <returns>Valore che indica se il piano di query deve essere memorizzato nella cache.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectQuery.Execute(System.Data.Entity.Core.Objects.MergeOption)">
      <summary>Esegue la query di oggetto non tipizzata con l'opzione di unione specificata.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectResult`1" /> contenente una raccolta di oggetti entità restituiti dalla query.</returns>
      <param name="mergeOption">Oggetto <see cref="T:System.Data.Entity.Core.Objects.MergeOption" /> da utilizzare quando viene eseguita la query.Il valore predefinito è <see cref="F:System.Data.Entity.Core.Objects.MergeOption.AppendOnly" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectQuery.ExecuteAsync(System.Data.Entity.Core.Objects.MergeOption)">
      <summary>Esegue in modo asincrono la query di oggetto non tipizzata con l'opzione di unione specificata.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene <see cref="T:System.Data.Entity.Core.Objects.ObjectResult`1" /> contenente una raccolta di oggetti entità restituiti dalla query.</returns>
      <param name="mergeOption">Oggetto <see cref="T:System.Data.Entity.Core.Objects.MergeOption" /> da utilizzare quando viene eseguita la query.Il valore predefinito è <see cref="F:System.Data.Entity.Core.Objects.MergeOption.AppendOnly" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectQuery.ExecuteAsync(System.Data.Entity.Core.Objects.MergeOption,System.Threading.CancellationToken)">
      <summary>Esegue in modo asincrono la query di oggetto non tipizzata con l'opzione di unione specificata.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene <see cref="T:System.Data.Entity.Core.Objects.ObjectResult`1" /> contenente una raccolta di oggetti entità restituiti dalla query.</returns>
      <param name="mergeOption">Oggetto <see cref="T:System.Data.Entity.Core.Objects.MergeOption" /> da utilizzare quando viene eseguita la query.Il valore predefinito è <see cref="F:System.Data.Entity.Core.Objects.MergeOption.AppendOnly" />.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectQuery.GetResultType">
      <summary>Restituisce le informazioni sul tipo di risultato della query.</summary>
      <returns>Valore di <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" /> contenente le informazioni sul tipo di risultato della query.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectQuery.MergeOption">
      <summary>Ottiene o imposta il modo in cui gli oggetti restituiti da una query vengono aggiunti al contesto dell'oggetto.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Objects.MergeOption" /> della query.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectQuery.Parameters">
      <summary>Ottiene la raccolta di parametri per questa query di oggetto.</summary>
      <returns>Raccolta di parametri per l'oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectQuery`1" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectQuery.Streaming">
      <summary>Indica se la query è di flusso o di buffer</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che scorre una raccolta.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere utilizzato per scorrere la raccolta.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectQuery.System#ComponentModel#IListSource#ContainsListCollection">
      <summary>Ottiene un valore che indica se la query contiene una raccolta di oggetti query.</summary>
      <returns>true se la query contiene una raccolta di oggetti query; in caso contrario, false.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList">
      <summary>Restituisce la raccolta come <see cref="T:System.Collections.IList" /> utilizzato per l'associazione dati.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IList" /> di oggetti entità.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectQuery.System#Data#Entity#Infrastructure#IDbAsyncEnumerable#GetAsyncEnumerator">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncEnumerator" /> che, se enumerato, eseguirà la query SQL specificata nel database.</summary>
      <returns>Risultati di query.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectQuery.System#Linq#IQueryable#ElementType">
      <summary>Ottiene il tipo di elemento del risultato per questa istanza della query.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectQuery.System#Linq#IQueryable#Expression">
      <summary>Ottiene l'espressione che descrive questa query.Per le query compilate utilizzando i modelli del generatore LINQ, restituisce un albero delle espressioni LINQ completo; in caso contrario restituisce un'espressione costante che esegue il wrapping della query.Notare che l'espressione predefinita non viene memorizzata nella cache.In questo modo è possibile fare distinzione tra le query LINQ e le query Entity-SQL.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectQuery.System#Linq#IQueryable#Provider">
      <summary>Ottiene l'oggetto <see cref="T:System.Linq.IQueryProvider" /> associato all'istanza della query.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectQuery.ToTraceString">
      <summary>Restituisce i comandi per l'esecuzione sull'origine dati.</summary>
      <returns>Oggetto string che rappresenta i comandi che la query esegue sull'origine dati.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.ObjectQuery`1">
      <summary>ObjectQuery implementa le query fortemente tipizzate al livello oggetti.Le query vengono specificate utilizzando stringhe Entity-SQL e possono essere create chiamando i metodi del generatore di query basato su Entity-SQL dichiarati da ObjectQuery.</summary>
      <typeparam name="T">Tipo di risultato di ObjectQuery</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Entity.Core.Objects.ObjectContext)">
      <summary>Crea una nuova istanza di <see cref="T:System.Data.Entity.Core.Objects.ObjectQuery`1" /> utilizzando il comando Entity SQL specificato come query iniziale.</summary>
      <param name="commandText">Query Entity SQL.</param>
      <param name="context">Oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" /> su cui eseguire la query.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Entity.Core.Objects.ObjectContext,System.Data.Entity.Core.Objects.MergeOption)">
      <summary>Crea una nuova istanza di <see cref="T:System.Data.Entity.Core.Objects.ObjectQuery`1" /> utilizzando il comando Entity SQL specificato come query iniziale e l'opzione di unione specificata.</summary>
      <param name="commandText">Query Entity SQL.</param>
      <param name="context">Oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" /> su cui eseguire la query.</param>
      <param name="mergeOption">Specifica il modo in cui le entità recuperate mediante questa query devono essere unite con le entità restituite dalle query precedenti sullo stesso oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectQuery`1.Distinct">
      <summary>Limita la query in modo da visualizzare risultati univoci.</summary>
      <returns>Nuova istanza di <see cref="T:System.Data.Entity.Core.Objects.ObjectQuery`1" /> equivalente all'istanza originale con la clausola SELECT DISTINCT applicata.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectQuery`1.Except(System.Data.Entity.Core.Objects.ObjectQuery{`0})">
      <summary>Questo metodo del generatore di query crea una nuova query i cui risultati sono tutti i risultati di questa query, ad eccezione di quelli che appartengono anche all'altra query specificata.</summary>
      <returns>nuova istanza di ObjectQuery.</returns>
      <param name="query">Query che rappresenta i risultati da escludere.</param>
      <exception cref="T:System.ArgumentNullException">Se il parametro query è Null.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectQuery`1.Execute(System.Data.Entity.Core.Objects.MergeOption)">
      <summary>Esegue la query di oggetto con l'opzione di unione specificata.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectResult`1" /> contenente una raccolta di oggetti entità restituiti dalla query.</returns>
      <param name="mergeOption">Oggetto <see cref="T:System.Data.Entity.Core.Objects.MergeOption" /> da utilizzare quando viene eseguita la query.Il valore predefinito è <see cref="F:System.Data.Entity.Core.Objects.MergeOption.AppendOnly" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectQuery`1.ExecuteAsync(System.Data.Entity.Core.Objects.MergeOption)">
      <summary>Esegue in modo asincrono la query di oggetto con l'opzione di unione specificata.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene <see cref="T:System.Data.Entity.Core.Objects.ObjectResult`1" /> contenente una raccolta di oggetti entità restituiti dalla query.</returns>
      <param name="mergeOption">Oggetto <see cref="T:System.Data.Entity.Core.Objects.MergeOption" /> da utilizzare quando viene eseguita la query.Il valore predefinito è <see cref="F:System.Data.Entity.Core.Objects.MergeOption.AppendOnly" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectQuery`1.ExecuteAsync(System.Data.Entity.Core.Objects.MergeOption,System.Threading.CancellationToken)">
      <summary>Esegue in modo asincrono la query di oggetto con l'opzione di unione specificata.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene <see cref="T:System.Data.Entity.Core.Objects.ObjectResult`1" /> contenente una raccolta di oggetti entità restituiti dalla query.</returns>
      <param name="mergeOption">Oggetto <see cref="T:System.Data.Entity.Core.Objects.MergeOption" /> da utilizzare quando viene eseguita la query.Il valore predefinito è <see cref="F:System.Data.Entity.Core.Objects.MergeOption.AppendOnly" />.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectQuery`1.GroupBy(System.String,System.String,System.Data.Entity.Core.Objects.ObjectParameter[])">
      <summary>Raggruppa i risultati della query in base ai criteri specificati.</summary>
      <returns>Nuova istanza di <see cref="T:System.Data.Entity.Core.Objects.ObjectQuery`1" /> di tipo <see cref="T:System.Data.Common.DbDataRecord" /> equivalente all'istanza originale con la clausola GROUP BY applicata.</returns>
      <param name="keys">Colonne chiave in base alle quali raggruppare i risultati.</param>
      <param name="projection">Elenco delle proprietà selezionate che definisce la proiezione.</param>
      <param name="parameters">Zero o più parametri utilizzati in questo metodo.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro query è Null o una stringa vuota oppure il parametro projection è Null o una stringa vuota.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectQuery`1.Include(System.String)">
      <summary>Specifica gli oggetti correlati da includere nei risultati della query.</summary>
      <returns>Nuovo oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectQuery`1" /> con il percorso della query definito.</returns>
      <param name="path">Elenco di oggetti correlati separato da punti da restituire nei risultati della query.</param>
      <exception cref="T:System.ArgumentNullException">path è null.</exception>
      <exception cref="T:System.ArgumentException">path è empty.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectQuery`1.Intersect(System.Data.Entity.Core.Objects.ObjectQuery{`0})">
      <summary>Questo metodo del generatore di query crea una nuova query i cui risultati sono quelli presenti tanto in questa query, quanto nell'altra query specificata.</summary>
      <returns>nuova istanza di ObjectQuery.</returns>
      <param name="query">Query che rappresenta i risultati con cui intersecare.</param>
      <exception cref="T:System.ArgumentNullException">Se il parametro query è Null.</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectQuery`1.Name">
      <summary>Ottiene o imposta il nome della query di oggetto.</summary>
      <returns>Valore stringa che rappresenta il nome di questo oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectQuery`1" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectQuery`1.OfType``1">
      <summary>Limita la query in modo da visualizzare solo i risultati di un tipo specifico.</summary>
      <returns>Nuova istanza di <see cref="T:System.Data.Entity.Core.Objects.ObjectQuery`1" /> equivalente all'istanza originale con l'operatore OFTYPE applicato.</returns>
      <typeparam name="TResultType">Tipo di entità dell'oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectResult`1" /> restituito quando viene eseguita la query con il filtro applicato.</typeparam>
      <exception cref="T:System.Data.Entity.Core.EntitySqlException">Il tipo specificato non è valido.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectQuery`1.OrderBy(System.String,System.Data.Entity.Core.Objects.ObjectParameter[])">
      <summary>Ordina i risultati della query in base ai criteri specificati.</summary>
      <returns>Nuova istanza di <see cref="T:System.Data.Entity.Core.Objects.ObjectQuery`1" /> equivalente all'istanza originale con la clausola ORDER BY applicata.</returns>
      <param name="keys">Colonne chiave in base alle quali ordinare i risultati.</param>
      <param name="parameters">Zero o più parametri utilizzati in questo metodo.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro keys o parameters è null.</exception>
      <exception cref="T:System.ArgumentException">key è una stringa vuota.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectQuery`1.Select(System.String,System.Data.Entity.Core.Objects.ObjectParameter[])">
      <summary>Limita i risultati della query solo alle proprietà definite nella proiezione specificata.</summary>
      <returns>Nuova istanza di <see cref="T:System.Data.Entity.Core.Objects.ObjectQuery`1" /> di tipo <see cref="T:System.Data.Common.DbDataRecord" /> equivalente all'istanza originale con la clausola SELECT applicata.</returns>
      <param name="projection">Elenco delle proprietà selezionate che definisce la proiezione.</param>
      <param name="parameters">Zero o più parametri utilizzati in questo metodo.</param>
      <exception cref="T:System.ArgumentNullException">projection è Null o parameters è Null.</exception>
      <exception cref="T:System.ArgumentException">projection è una stringa vuota.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Entity.Core.Objects.ObjectParameter[])">
      <summary>Limita i risultati della query solo alla proprietà specificata nella proiezione.</summary>
      <returns>Nuova istanza di <see cref="T:System.Data.Entity.Core.Objects.ObjectQuery`1" /> di un tipo compatibile con la proiezione specifica.L'oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectQuery`1" /> restituito è equivalente all'istanza originale con la clausola SELECT VALUE applicata.</returns>
      <param name="projection">Elenco di proiezione.</param>
      <param name="parameters">Set facoltativo di parametri di query che devono trovarsi nell'ambito durante l'analisi.</param>
      <typeparam name="TResultType">Tipo dell'oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectQuery`1" /> restituito dal metodo <see cref="M:System.Data.Entity.Core.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Entity.Core.Objects.ObjectParameter[])" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">projection è Null o parameters è Null.</exception>
      <exception cref="T:System.ArgumentException">projection è una stringa vuota.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectQuery`1.Skip(System.String,System.String,System.Data.Entity.Core.Objects.ObjectParameter[])">
      <summary>Ordina i risultati della query in base ai criteri specificati e ignora un numero di risultati specificato.</summary>
      <returns>Nuova istanza di <see cref="T:System.Data.Entity.Core.Objects.ObjectQuery`1" /> equivalente all'istanza originale con le clausole ORDER BY e SKIP applicate.</returns>
      <param name="keys">Colonne chiave in base alle quali ordinare i risultati.</param>
      <param name="count">Numero di risultati da ignorare.Deve trattarsi di una costante o di un riferimento ai parametri.</param>
      <param name="parameters">Set facoltativo di parametri di query che devono trovarsi nell'ambito durante l'analisi.</param>
      <exception cref="T:System.ArgumentNullException">Tutti gli argomenti sono null.</exception>
      <exception cref="T:System.ArgumentException">keys è una stringa vuota o count è una stringa vuota.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Restituisce un oggetto <see cref="T:System.Collections.Generic.IEnumerator`1" /> che, se enumerato, eseguirà la query SQL specificata nel database.</summary>
      <returns>Risultati di query.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectQuery`1.System#Data#Entity#Infrastructure#IDbAsyncEnumerable{T}#GetAsyncEnumerator">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncEnumerator`1" /> che, se enumerato, eseguirà la query SQL specificata nel database.</summary>
      <returns>Risultati di query.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectQuery`1.Top(System.String,System.Data.Entity.Core.Objects.ObjectParameter[])">
      <summary>Limita i risultati della query in modo da visualizzare un numero di elementi specificato.</summary>
      <returns>Nuova istanza di <see cref="T:System.Data.Entity.Core.Objects.ObjectQuery`1" /> equivalente all'istanza originale con la clausola TOP applicata.</returns>
      <param name="count">Numero di elementi presenti nei risultati sotto forma di stringa.</param>
      <param name="parameters">Set facoltativo di parametri di query che devono trovarsi nell'ambito durante l'analisi.</param>
      <exception cref="T:System.ArgumentNullException">count è null.</exception>
      <exception cref="T:System.ArgumentException">count è una stringa vuota.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectQuery`1.Union(System.Data.Entity.Core.Objects.ObjectQuery{`0})">
      <summary>Questo metodo del generatore di query crea una nuova query i cui risultati sono tutti i risultati di questa query, oltre a tutti i risultati dell'altra query, senza duplicati (risultati univoci).</summary>
      <returns>nuova istanza di ObjectQuery.</returns>
      <param name="query">Query che rappresenta i risultati da aggiungere.</param>
      <exception cref="T:System.ArgumentNullException">Se il parametro query è Null.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectQuery`1.UnionAll(System.Data.Entity.Core.Objects.ObjectQuery{`0})">
      <summary>Questo metodo del generatore di query crea una nuova query i cui risultati sono tutti i risultati di questa query, oltre a tutti i risultati dell'altra query, inclusi eventuali duplicati (risultati non necessariamente univoci).</summary>
      <returns>nuova istanza di ObjectQuery.</returns>
      <param name="query">Query che rappresenta i risultati da aggiungere.</param>
      <exception cref="T:System.ArgumentNullException">Se il parametro query è Null.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectQuery`1.Where(System.String,System.Data.Entity.Core.Objects.ObjectParameter[])">
      <summary>Limita la query in modo dai visualizzare i risultati che corrispondono ai criteri di filtro specificati.</summary>
      <returns>Nuova istanza di <see cref="T:System.Data.Entity.Core.Objects.ObjectQuery`1" /> equivalente all'istanza originale con la clausola WHERE applicata.</returns>
      <param name="predicate">Predicato del filtro.</param>
      <param name="parameters">Zero o più parametri utilizzati in questo metodo.</param>
      <exception cref="T:System.ArgumentNullException">predicate è Null o parameters è Null.</exception>
      <exception cref="T:System.ArgumentException">predicate è una stringa vuota.</exception>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.ObjectResult">
      <summary>Questa classe implementa IEnumerable e IDisposable.Un'istanza di questa classe viene restituita dal metodo ObjectQuery.Execute.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectResult.#ctor">
      <summary>Questo costruttore deve essere usato solo quando si creano copie di test che sostituiranno i membri con un comportamento fittizio o falso.L'uso di questo costruttore per altri scopi può causare comportamenti imprevisti, tra cui la generazione dell'eccezione <see cref="T:System.NullReferenceException" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectResult.Dispose">
      <summary>Esegue attività quali liberare, rilasciare o reimpostare risorse.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectResult.Dispose(System.Boolean)">
      <summary>Rilascia le risorse usate dal risultato dell'oggetto.</summary>
      <param name="disposing">true per rilasciare sia le risorse gestite sia quelle non gestite; false per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectResult.ElementType">
      <summary>Quando sottoposto a override in una classe derivata, ottiene il tipo dell'oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectResult`1" /> generico.</summary>
      <returns>Tipo dell'oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectResult`1" /> generico.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectResult.GetNextResult``1">
      <summary>Ottiene il set di risultati successivo di una stored procedure.</summary>
      <returns>ObjectResult che enumera i valori del set di risultati successivo.Null se non ce ne sono più o se ObjectResult non è il risultato di una chiamata a una stored procedure.</returns>
      <typeparam name="TElement">Tipo dell'elemento.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectResult.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore con cui è possibile scorrere i risultati della query.</summary>
      <returns>Enumeratore con cui è possibile scorrere i risultati della query.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectResult.System#ComponentModel#IListSource#ContainsListCollection">
      <summary>Implementazione di IListSource.ContainsListCollection.Restituisce sempre false.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectResult.System#ComponentModel#IListSource#GetList">
      <summary>Restituisce i risultati in un formato utile per il data binding.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IList" /> di oggetti entità.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectResult.System#Data#Entity#Infrastructure#IDbAsyncEnumerable#GetAsyncEnumerator">
      <summary>Restituisce un enumeratore asincrono con cui è possibile scorrere i risultati della query.</summary>
      <returns>Enumeratore asincrono con cui è possibile scorrere i risultati della query.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.ObjectResult`1">
      <summary>Questa classe rappresenta il risultato del metodo <see cref="M:System.Data.Entity.Core.Objects.ObjectQuery`1.Execute(System.Data.Entity.Core.Objects.MergeOption)" />.</summary>
      <typeparam name="T">Tipo del risultato.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectResult`1.#ctor">
      <summary>Questo costruttore deve essere usato solo quando si creano copie di test che sostituiranno i membri con un comportamento fittizio o falso.L'uso di questo costruttore per altri scopi può causare comportamenti imprevisti, tra cui la generazione dell'eccezione <see cref="T:System.NullReferenceException" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectResult`1.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate dall'oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectResult`1" /> e facoltativamente le risorse gestite.</summary>
      <param name="disposing">true per rilasciare le risorse gestite e non gestite; false per rilasciare solo quelle non gestite.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectResult`1.ElementType">
      <summary>Ottiene il tipo di <see cref="T:System.Data.Entity.Core.Objects.ObjectResult`1" />.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che rappresenta il tipo dell'oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectResult`1" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectResult`1.GetEnumerator">
      <summary>Restituisce un enumeratore con cui è possibile scorrere i risultati della query.</summary>
      <returns>Enumeratore con cui è possibile scorrere i risultati della query.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectResult`1.System#Data#Entity#Infrastructure#IDbAsyncEnumerable{T}#GetAsyncEnumerator">
      <summary>Ottiene in modo asincrono l'enumeratore che scorre l'oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectResult`1" />.</summary>
      <returns>Enumeratore che scorre l'oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectResult`1" />.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.ObjectSet`1">
      <summary>Rappresenta un set di entità tipizzato utilizzato per eseguire operazioni di creazione, lettura, aggiornamento ed eliminazione.</summary>
      <typeparam name="TEntity">Tipo dell'entità.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectSet`1.AddObject(`0)">
      <summary>Aggiunge un oggetto al contesto dell'oggetto nel set di entità corrente.</summary>
      <param name="entity">Oggetto da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectSet`1.ApplyCurrentValues(`0)">
      <summary>Copia i valori scalari dall'oggetto fornito nell'oggetto in <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" /> che dispone della stessa chiave.</summary>
      <returns>Oggetto aggiornato.</returns>
      <param name="currentEntity">Oggetto disconnesso contenente gli aggiornamenti delle proprietà da applicare all'oggetto originale.La chiave di entità di currentEntity deve corrispondere alla proprietà <see cref="P:System.Data.Entity.Core.Objects.ObjectStateEntry.EntityKey" /> di una voce in <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectSet`1.ApplyOriginalValues(`0)">
      <summary>Imposta la proprietà <see cref="P:System.Data.Entity.Core.Objects.ObjectStateEntry.OriginalValues" /> di <see cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" /> in modo che corrisponda ai valori della proprietà di un oggetto fornito.</summary>
      <returns>Oggetto aggiornato.</returns>
      <param name="originalEntity">Oggetto disconnesso contenente gli aggiornamenti delle proprietà da applicare all'oggetto originale.La chiave di entità di originalEntity deve corrispondere alla proprietà <see cref="P:System.Data.Entity.Core.Objects.ObjectStateEntry.EntityKey" /> di una voce in <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectSet`1.Attach(`0)">
      <summary>Collega un oggetto o un oggetto grafico al contesto dell'oggetto nel set di entità corrente.</summary>
      <param name="entity">Oggetto da connettere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectSet`1.CreateObject``1">
      <summary>Crea un'istanza del tipo specificato.</summary>
      <returns>Istanza del tipo richiesto T o istanza di un tipo di proxy che corrisponde al tipo T.</returns>
      <typeparam name="T">Tipo di oggetto da restituire.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectSet`1.CreateObject">
      <summary>Crea un nuovo oggetto tipo di entità.</summary>
      <returns>Nuovo oggetto tipo di entità o istanza di un tipo di proxy che corrisponde al tipo di entità.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectSet`1.DeleteObject(`0)">
      <summary>Contrassegna un oggetto per l'eliminazione.</summary>
      <param name="entity">Oggetto che rappresenta l'entità da eliminare.L'oggetto può trovarsi in qualsiasi stato ad eccezione di <see cref="F:System.Data.Entity.EntityState.Detached" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectSet`1.Detach(`0)">
      <summary>Rimuove l'oggetto dal contesto dell'oggetto.</summary>
      <param name="entity">Oggetto da disconnettere.Viene rimossa solo l'entità. Se sono presenti oggetti correlati che vengono rilevati dallo stesso oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectStateManager" />, tali oggetti non verranno scollegati automaticamente.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectSet`1.EntitySet">
      <summary>Ottiene i metadati del set di entità rappresentato da questa istanza di <see cref="T:System.Data.Entity.Core.Objects.ObjectSet`1" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySet" />.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.ObjectStateEntry">
      <summary>Rappresenta un'entità, uno stub entità o una relazione</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectStateEntry.AcceptChanges">
      <summary>Accetta i valori correnti come valori originali.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectStateEntry.ApplyCurrentValues(System.Object)">
      <summary>Imposta i valori correnti della voce in modo che corrispondano ai valori di proprietà di un oggetto fornito.</summary>
      <param name="currentEntity">Oggetto scollegato contenente i valori aggiornati da applicare all'oggetto.currentEntity può anche essere la chiave di entità dell'oggetto.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectStateEntry.ApplyOriginalValues(System.Object)">
      <summary>Imposta i valori originali della voce in modo che corrispondano ai valori di proprietà di un oggetto fornito.</summary>
      <param name="originalEntity">Oggetto scollegato contenente i valori originali da applicare all'oggetto.originalEntity può anche essere la chiave di entità dell'oggetto.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectStateEntry.ChangeState(System.Data.Entity.EntityState)">
      <summary>Modifica lo stato della voce impostandolo sul valore <see cref="T:System.Data.Entity.EntityState" /> specificato.</summary>
      <param name="state">Valore <see cref="T:System.Data.Entity.EntityState" /> da impostare per la proprietà <see cref="P:System.Data.Entity.Core.Objects.ObjectStateEntry.State" /> della voce.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectStateEntry.CurrentValues">
      <summary>Ottiene i valori della proprietà correnti della relazione o dell'oggetto associato a questo oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" />.</summary>
      <returns>
        <see cref="T:System.Data.Entity.Core.Objects.CurrentValueRecord" /> contenente i valori correnti della relazione o dell'oggetto associato a questo oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectStateEntry.Delete">
      <summary>Contrassegna un'entità come eliminata.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectStateEntry.Entity">
      <summary>Ottiene l'oggetto entità.</summary>
      <returns>Oggetto entità.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectStateEntry.EntityKey">
      <summary>Ottiene la chiave di entità.</summary>
      <returns>Chiave di entità.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectStateEntry.EntitySet">
      <summary>Ottiene <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySetBase" /> per l'oggetto o la relazione.</summary>
      <returns>
        <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySetBase" /> per l'oggetto o la relazione.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectStateEntry.GetModifiedProperties">
      <summary>Restituisce i nomi delle proprietà di un oggetto che sono state modificate dall'ultima chiamata a  <see cref="M:System.Data.Entity.Core.Objects.ObjectContext.SaveChanges" />.</summary>
      <returns>Raccolta <see cref="T:System.Collections.Generic.IEnumerable`1" /> di nomi sotto forma di stringa.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectStateEntry.GetUpdatableOriginalValues">
      <summary>Ottiene la versione aggiornabile dei valori originali dell'oggetto associato a questo oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" />.</summary>
      <returns>Valori originali aggiornabili dei dati dell'oggetto.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectStateEntry.IsPropertyChanged(System.String)">
      <summary>Utilizza DetectChanges per determinare se il valore corrente della proprietà con il nome specificato è diverso o meno dal valore originale.Si noti che potrebbe essere diverso dalla proprietà contrassegnata come Modified perché una proprietà che non è cambiata può ancora essere contrassegnata come Modified.</summary>
      <returns>true se la proprietà è cambiata; in caso contrario, false.</returns>
      <param name="propertyName">Nome della proprietà.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectStateEntry.IsRelationship">
      <summary>Ottiene un valore che indica se <see cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" /> rappresenta una relazione.</summary>
      <returns>true se <see cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" /> rappresenta una relazione; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectStateEntry.ObjectStateManager">
      <summary>Ottiene <see cref="T:System.Data.Entity.Core.Objects.ObjectStateManager" /> per <see cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" />.</summary>
      <returns>
        <see cref="T:System.Data.Entity.Core.Objects.ObjectStateManager" /> per <see cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectStateEntry.OriginalValues">
      <summary>Ottiene la versione di sola lettura dei valori originali dell'oggetto o della relazione.</summary>
      <returns>Versione di sola lettura dei valori originali della voce del set di relazioni o dell'entità.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectStateEntry.RejectPropertyChanges(System.String)">
      <summary>Rifiuta le modifiche apportate alla proprietà con il nome specificato dopo che la proprietà è stata caricata, collegata, salvata o le modifiche sono state accettate.Il valore originale della proprietà viene archiviato e la proprietà non sarà più contrassegnata come modificata.</summary>
      <param name="propertyName">Il nome della proprietà da modificare.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectStateEntry.RelationshipManager">
      <summary>Ottiene l'istanza di <see cref="T:System.Data.Entity.Core.Objects.DataClasses.RelationshipManager" /> per l'oggetto rappresentato dalla voce.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Objects.DataClasses.RelationshipManager" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectStateEntry.SetModified">
      <summary>Imposta lo stato dell'oggetto o della relazione da modificare.</summary>
      <exception cref="T:System.InvalidOperationException">Se lo Stato non è Modified o Unchanged</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectStateEntry.SetModifiedProperty(System.String)">
      <summary>Contrassegna la proprietà specificata come modificata.</summary>
      <param name="propertyName">Nome della proprietà.</param>
      <exception cref="T:System.InvalidOperationException">Se lo Stato non è Modified o Unchanged</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectStateEntry.State">
      <summary>Ottiene lo stato della classe <see cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" />.</summary>
      <returns>Stato di <see cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectStateEntry.System#Data#Entity#Core#Objects#DataClasses#IEntityChangeTracker#EntityComplexMemberChanged(System.String,System.Object,System.String)">
      <summary>Utilizzato per segnalare che una proprietà complessa è stata modificata. Il valore della proprietà memorizzato nella cache durante EntityMemberChanging viene ora aggiunto a OriginalValues</summary>
      <param name="entityMemberName">Nome della proprietà dell'entità di primo livello che è cambiata</param>
      <param name="complexObject">Oggetto complesso che contiene la proprietà modificata</param>
      <param name="complexObjectMemberName">Nome della proprietà modificata in complexObject</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectStateEntry.System#Data#Entity#Core#Objects#DataClasses#IEntityChangeTracker#EntityComplexMemberChanging(System.String,System.Object,System.String)">
      <summary>Utilizzato per segnalare che una proprietà complessa sta per essere modificata. Il valore corrente della proprietà specificata viene memorizzato nella cache quando viene chiamato questo metodo.</summary>
      <param name="entityMemberName">Nome della proprietà dell'entità di primo livello che sta per essere modificata</param>
      <param name="complexObject">Oggetto complesso che contiene la proprietà che sta per essere modificata</param>
      <param name="complexObjectMemberName">Nome della proprietà che sta per essere modificata in complexObject</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectStateEntry.System#Data#Entity#Core#Objects#DataClasses#IEntityChangeTracker#EntityMemberChanged(System.String)">
      <summary>Utilizzato per segnalare che una proprietà dell'entità scalare è stata modificata. Il valore della proprietà memorizzato nella cache durante EntityMemberChanging viene ora aggiunto a OriginalValues</summary>
      <param name="entityMemberName">Nome della proprietà dell'entità che sta per essere modificata</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectStateEntry.System#Data#Entity#Core#Objects#DataClasses#IEntityChangeTracker#EntityMemberChanging(System.String)">
      <summary>Utilizzato per segnalare che una proprietà dell'entità scalare sta per essere modificata. Il valore corrente della proprietà specificata viene memorizzato nella cache quando viene chiamato questo metodo.</summary>
      <param name="entityMemberName">Nome della proprietà dell'entità che sta per essere modificata</param>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectStateEntry.System#Data#Entity#Core#Objects#DataClasses#IEntityChangeTracker#EntityState">
      <summary>Restituisce l'elemento EntityState da ObjectStateEntry</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.ObjectStateManager">
      <summary>Mantiene lo stato dell'oggetto e la gestione delle identità per le istanze del tipo di entità e le istanze della relazione.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectStateManager.#ctor(System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Objects.ObjectStateManager" />.</summary>
      <param name="metadataWorkspace">
        <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace" /> che fornisce le informazioni sul mapping e sui metadati.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectStateManager.ChangeObjectState(System.Object,System.Data.Entity.EntityState)">
      <summary>Modifica lo stato di <see cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" /> per un oggetto specifico impostandolo sull'elemento entityState specificato.</summary>
      <returns>
        <see cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" /> per l'entità fornita.</returns>
      <param name="entity">Oggetto di cui è necessario modificare lo stato.</param>
      <param name="entityState">Nuovo stato dell'oggetto.</param>
      <exception cref="T:System.ArgumentNullException">Quando entity è Null.</exception>
      <exception cref="T:System.InvalidOperationException">Quando l'oggetto non è scollegato e non dispone di una voce nel gestore degli stati o quando si tenta di modificare lo stato in <see cref="F:System.Data.Entity.EntityState.Detached" /> da un altro oggetto <see cref="T:System.Data.Entity.EntityState." /> o quando lo stato non è un valore <see cref="T:System.Data.Entity.EntityState" /> valido.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.Data.Entity.EntityState)">
      <summary>Modifica lo stato della relazione tra due oggetti entità specificata in base ai due oggetti correlati e al nome della proprietà di navigazione.</summary>
      <returns>
        <see cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" /> per la relazione modificata.</returns>
      <param name="sourceEntity">Istanza dell'oggetto o <see cref="T:System.Data.Entity.Core.EntityKey" /> dell'entità di origine a un'estremità della relazione.</param>
      <param name="targetEntity">Istanza dell'oggetto o <see cref="T:System.Data.Entity.Core.EntityKey" /> dell'entità di destinazione all'altra estremità della relazione.</param>
      <param name="navigationProperty">Nome della proprietà di navigazione nell'oggetto di origine che restituisce la destinazione specificata.</param>
      <param name="relationshipState">Oggetto <see cref="T:System.Data.Entity.EntityState" /> richiesto della relazione specificata.</param>
      <exception cref="T:System.ArgumentNullException">Quando source o target è Null.</exception>
      <exception cref="T:System.InvalidOperationException">Quando si tenta di modificare lo stato della relazione impostandolo su uno stato diverso da <see cref="F:System.Data.Entity.EntityState.Deleted" /> o <see cref="F:System.Data.Entity.EntityState.Detached" /> quando l'origine o la destinazione si trova in uno stato <see cref="F:System.Data.Entity.EntityState.Deleted" /> o quando si tenta di modificare lo stato della relazione impostandolo su uno stato diverso da <see cref="F:System.Data.Entity.EntityState.Added" /> o <see cref="F:System.Data.Entity.EntityState.Detached" /> quando l'origine o la destinazione si trova in uno stato <see cref="F:System.Data.Entity.EntityState.Added" /> o quando lo stato non è un valore <see cref="T:System.Data.Entity.EntityState" /> valido.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.String,System.Data.Entity.EntityState)">
      <summary>Modifica lo stato della relazione tra due oggetti entità specificata in base ai due oggetti correlati e alle proprietà della relazione.</summary>
      <returns>
        <see cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" /> per la relazione modificata.</returns>
      <param name="sourceEntity">Istanza dell'oggetto o <see cref="T:System.Data.Entity.Core.EntityKey" /> dell'entità di origine a un'estremità della relazione.</param>
      <param name="targetEntity">Istanza dell'oggetto o <see cref="T:System.Data.Entity.Core.EntityKey" /> dell'entità di destinazione all'altra estremità della relazione.</param>
      <param name="relationshipName">Nome della relazione.</param>
      <param name="targetRoleName">Nome del ruolo nell'entità finale di destinazione della relazione.</param>
      <param name="relationshipState">Oggetto <see cref="T:System.Data.Entity.EntityState" /> richiesto della relazione specificata.</param>
      <exception cref="T:System.ArgumentNullException">Quando source o target è Null.</exception>
      <exception cref="T:System.InvalidOperationException">Quando si tenta di modificare lo stato della relazione impostandolo su uno stato diverso da <see cref="F:System.Data.Entity.EntityState.Deleted" /> o <see cref="F:System.Data.Entity.EntityState.Detached" /> quando l'origine o la destinazione si trova in uno stato <see cref="F:System.Data.Entity.EntityState.Deleted" /> o quando si tenta di modificare lo stato della relazione impostandolo su uno stato diverso da <see cref="F:System.Data.Entity.EntityState.Added" /> o <see cref="F:System.Data.Entity.EntityState.Detached" /> quando l'origine o la destinazione si trova in uno stato <see cref="F:System.Data.Entity.EntityState.Added" /> o quando lo stato non è un valore <see cref="T:System.Data.Entity.EntityState" /> valido.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectStateManager.ChangeRelationshipState``1(``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.Entity.EntityState)">
      <summary>Modifica lo stato della relazione tra due oggetti entità specificata in base ai due oggetti correlati e a un'espressione LINQ che definisce la proprietà di navigazione.</summary>
      <returns>
        <see cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" /> per la relazione modificata.</returns>
      <param name="sourceEntity">Istanza dell'oggetto o <see cref="T:System.Data.Entity.Core.EntityKey" /> dell'entità di origine a un'estremità della relazione.</param>
      <param name="targetEntity">Istanza dell'oggetto o <see cref="T:System.Data.Entity.Core.EntityKey" /> dell'entità di destinazione all'altra estremità della relazione.</param>
      <param name="navigationPropertySelector">Espressione LINQ che seleziona la proprietà di navigazione dell'origine che restituisce la destinazione specificata.</param>
      <param name="relationshipState">Oggetto <see cref="T:System.Data.Entity.EntityState" /> richiesto della relazione specificata.</param>
      <typeparam name="TEntity">Tipo di entità dell'oggetto di origine.</typeparam>
      <exception cref="T:System.ArgumentNullException">Quando source, target o selector è Null.</exception>
      <exception cref="T:System.ArgumentException">selector è in un formato non valido o non può restituire una proprietà di navigazione.</exception>
      <exception cref="T:System.InvalidOperationException">Quando si tenta di modificare lo stato della relazione impostandolo su uno stato diverso da <see cref="F:System.Data.Entity.EntityState.Deleted" /> o <see cref="F:System.Data.Entity.EntityState.Detached" /> quando l'origine o la destinazione si trova in uno stato <see cref="F:System.Data.Entity.EntityState.Deleted" /> o quando si tenta di modificare lo stato della relazione impostandolo su uno stato diverso da <see cref="F:System.Data.Entity.EntityState.Added" /> o <see cref="F:System.Data.Entity.EntityState.Detached" /> quando l'origine o la destinazione si trova in uno stato <see cref="F:System.Data.Entity.EntityState.Added" /> o quando lo stato non è un valore <see cref="T:System.Data.Entity.EntityState" /> valido.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectStateManager.GetObjectStateEntries(System.Data.Entity.EntityState)">
      <summary>Restituisce una raccolta di oggetti <see cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" /> per oggetti o relazioni con lo stato specificato.</summary>
      <returns>Raccolta di oggetti <see cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" /> nell'oggetto <see cref="T:System.Data.Entity.EntityState" /> specificato.</returns>
      <param name="state">Oggetto <see cref="T:System.Data.Entity.EntityState" /> utilizzato per filtrare gli oggetti <see cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" /> restituiti.</param>
      <exception cref="T:System.ArgumentException">Quando lo stato è <see cref="F:System.Data.Entity.EntityState.Detached" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectStateManager.GetObjectStateEntry(System.Data.Entity.Core.EntityKey)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" /> per la voce di oggetto o di relazione con la chiave specificata.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" /> corrispondente per l'oggetto <see cref="T:System.Data.Entity.Core.EntityKey" /> specificato.</returns>
      <param name="key">Oggetto <see cref="T:System.Data.Entity.Core.EntityKey" />.</param>
      <exception cref="T:System.ArgumentNullException">Quando key è Null.</exception>
      <exception cref="T:System.ArgumentException">Quando la chiave specificata non può essere trovata nel gestore degli stati.</exception>
      <exception cref="T:System.InvalidOperationException">In <see cref="T:System.Data.Entity.Core.Objects.ObjectStateManager" /> non è presente alcuna entità con l'oggetto <see cref="T:System.Data.Entity.Core.EntityKey" /> specificato.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectStateManager.GetObjectStateEntry(System.Object)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" /> per l'oggetto specificato.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" /> corrispondente per l'oggetto <see cref="T:System.Object" /> specificato.</returns>
      <param name="entity">Oggetto <see cref="T:System.Object" /> a cui appartiene l'oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" /> recuperato.</param>
      <exception cref="T:System.InvalidOperationException">In <see cref="T:System.Data.Entity.Core.Objects.ObjectStateManager" /> non è presente alcuna entità per l'oggetto <see cref="T:System.Object" /> specificato.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectStateManager.GetRelationshipManager(System.Object)">
      <summary>Restituisce l'oggetto <see cref="T:System.Data.Entity.Core.Objects.DataClasses.RelationshipManager" /> utilizzato dall'oggetto specificato.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Objects.DataClasses.RelationshipManager" /> per l'oggetto specificato.</returns>
      <param name="entity">Oggetto per il quale restituire <see cref="T:System.Data.Entity.Core.Objects.DataClasses.RelationshipManager" />.</param>
      <exception cref="T:System.InvalidOperationException">L'entità non implementa IEntityWithRelationships e non è rilevata da ObjectStateManager</exception>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.ObjectStateManager.MetadataWorkspace">
      <summary>Ottiene l'oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace" /> associato a questo gestore degli stati.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace" /> associato a questo oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectStateManager" />.</returns>
    </member>
    <member name="E:System.Data.Entity.Core.Objects.ObjectStateManager.ObjectStateManagerChanged">
      <summary>Si verifica quando le entità vengono aggiunte o rimosse dal gestore degli stati.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Data.Entity.Core.EntityKey,System.Data.Entity.Core.Objects.ObjectStateEntry@)">
      <summary>Tenta di recuperare l'oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" /> corrispondente per l'oggetto o la relazione con l'oggetto <see cref="T:System.Data.Entity.Core.EntityKey" /> specificato.</summary>
      <returns>Valore booleano che è true se è presente un oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" /> corrispondente per l'oggetto <see cref="T:System.Data.Entity.Core.EntityKey" /> specificato; in caso contrario, false.</returns>
      <param name="key">Oggetto <see cref="T:System.Data.Entity.Core.EntityKey" /> specificato.</param>
      <param name="entry">Quando termina, questo metodo contiene un oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" /> per l'oggetto <see cref="T:System.Data.Entity.Core.EntityKey" /> specificato. Questo parametro viene passato senza inizializzazione.</param>
      <exception cref="T:System.ArgumentNullException">Viene fornito un valore Null (Nothing in Visual Basic) per key.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Object,System.Data.Entity.Core.Objects.ObjectStateEntry@)">
      <summary>Tenta di recuperare l'oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" /> corrispondente per l'oggetto <see cref="T:System.Object" /> specificato.</summary>
      <returns>Valore booleano che è true se è presente un oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" /> corrispondente per l'oggetto specificato; in caso contrario, false.</returns>
      <param name="entity">Oggetto <see cref="T:System.Object" /> a cui appartiene l'oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" /> recuperato.</param>
      <param name="entry">Quando termina, questo metodo contiene l'oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" /> per l'oggetto <see cref="T:System.Data.Entity.Core.EntityKey" /> specificato. Questo parametro viene passato senza inizializzazione.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ObjectStateManager.TryGetRelationshipManager(System.Object,System.Data.Entity.Core.Objects.DataClasses.RelationshipManager@)">
      <summary>Restituisce l'oggetto <see cref="T:System.Data.Entity.Core.Objects.DataClasses.RelationshipManager" /> utilizzato dall'oggetto specificato.</summary>
      <returns>true se un'istanza di <see cref="T:System.Data.Entity.Core.Objects.DataClasses.RelationshipManager" /> è stata restituita per l'entità fornita; in caso contrario, false.</returns>
      <param name="entity">Oggetto per il quale restituire <see cref="T:System.Data.Entity.Core.Objects.DataClasses.RelationshipManager" />.</param>
      <param name="relationshipManager">Quando termina, questo metodo contiene <see cref="T:System.Data.Entity.Core.Objects.DataClasses.RelationshipManager" /> per l'entità.</param>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.OriginalValueRecord">
      <summary>Valori originali delle proprietà di un'entità quando è stata recuperata dal database.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.ProxyDataContractResolver">
      <summary>DataContractResolver che sa come risolvere i tipi proxy creati per le classi che non riconoscono la persistenza nei relativi tipi di base.Utilizzato con DataContractSerializer.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ProxyDataContractResolver.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Objects.ProxyDataContractResolver" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ProxyDataContractResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)">
      <summary>Durante la deserializzazione, esegue il mapping di qualsiasi informazione xsi:type al tipo effettivo dell'oggetto che non riconosce la persistenza.</summary>
      <returns>Restituisce il tipo a cui viene eseguito il mapping di xsi:type.Restituisce Null se non è stato trovato alcun tipo noto corrispondente a xsi:type.</returns>
      <param name="typeName">Informazioni xsi:type di cui viene eseguito il mapping.</param>
      <param name="typeNamespace">Spazio dei nomi di xsi:type.</param>
      <param name="declaredType">Tipo dichiarato.</param>
      <param name="knownTypeResolver">Istanza di <see cref="T:System.Data.Entity.Core.Objects.ProxyDataContractResolver" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.ProxyDataContractResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)">
      <summary>Durante la serializzazione, esegue il mapping di tipi effettivi alle informazioni xsi:type.</summary>
      <returns>true se il tipo è stato risolto; in caso contrario, false.</returns>
      <param name="type">Tipo effettivo dell'oggetto che non riconosce la persistenza.</param>
      <param name="declaredType">Tipo dichiarato.</param>
      <param name="knownTypeResolver">Istanza di <see cref="T:System.Data.Entity.Core.Objects.ProxyDataContractResolver" />.</param>
      <param name="typeName">Quando termina, questo metodo contiene un elenco di dichiarazioni xsi:type.</param>
      <param name="typeNamespace">Quando termina, questo metodo contiene un elenco degli spazi dei nomi utilizzati.</param>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.RefreshMode">
      <summary>Definisce i diversi modi per gestire le proprietà modificate durante l'aggiornamento dei dati in memoria del database.</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Objects.RefreshMode.ClientWins">
      <summary>Per gli oggetti client non modificati, lo stesso comportamento di StoreWins.Per gli oggetti client modificati, aggiornare i valori originali con il valore dell'archivio, mantenendo tutti i valori nell'oggetto client.Al successivo aggiornamento, tutte le unità di modifica client verranno considerate modificate e richiederanno l'aggiornamento.</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Objects.RefreshMode.StoreWins">
      <summary>Eliminare tutte le modifiche sul client e aggiornare i valori con i valori dell'archivio.I valori originali client verranno aggiornati in base all'archivio.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.SaveOptions">
      <summary>Flag utilizzati per modificare il comportamento di ObjectContext.SaveChanges()</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Objects.SaveOptions.AcceptAllChangesAfterSave">
      <summary>Dopo il salvataggio delle modifiche viene chiamato il metodo AcceptAllChangesAfterSave, che reimposta il rilevamento delle modifiche in ObjectStateManager.</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Objects.SaveOptions.DetectChangesBeforeSave">
      <summary>Prima del salvataggio delle modifiche viene chiamato il metodo DetectChanges per sincronizzare i valori delle proprietà degli oggetti collegati al contesto dell'oggetto con i dati in ObjectStateManager.</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Objects.SaveOptions.None">
      <summary>Le modifiche vengono salvate senza che venga chiamato il metodo DetectChanges o il metodo AcceptAllChangesAfterSave.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.DataClasses.ComplexObject">
      <summary>Si tratta dell'interfaccia che rappresenta l'interfaccia minima necessaria per essere un'entità in ADO.NET.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.ComplexObject.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Objects.DataClasses.ComplexObject" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.ComplexObject.ReportPropertyChanged(System.String)">
      <summary>Notifica allo strumento di rilevamento delle modifiche la modifica di una proprietà di un oggetto complesso.</summary>
      <param name="property">Nome della proprietà modificata.</param>
      <exception cref="T:System.ArgumentNullException">property è null.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.ComplexObject.ReportPropertyChanging(System.String)">
      <summary>Notifica allo strumento di rilevamento delle modifiche la presenza di una modifica in sospeso a una proprietà di un oggetto complesso.</summary>
      <param name="property">Nome della proprietà in fase di modifica.</param>
      <exception cref="T:System.ArgumentNullException">property è null.</exception>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.DataClasses.EdmComplexPropertyAttribute">
      <summary>Attributo per proprietà complesse Proprietà AttributeUsage predefinite implicite Inherited=True, AllowMultiple=False, Il sistema di metadati si aspetta questo e farà riferimento solo al primo di questi attributi, anche se ce ne sono di più.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EdmComplexPropertyAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EdmComplexPropertyAttribute" />.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.DataClasses.EdmComplexTypeAttribute">
      <summary>attributo per tipi complessi</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EdmComplexTypeAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EdmComplexTypeAttribute" />.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.DataClasses.EdmEntityTypeAttribute">
      <summary>Attributo che identifica la classe di base Edm</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EdmEntityTypeAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EdmEntityTypeAttribute" />.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.DataClasses.EdmEnumTypeAttribute">
      <summary>Attributo che indica un tipo enum.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EdmEnumTypeAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EdmEnumTypeAttribute" />.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.DataClasses.EdmFunctionAttribute">
      <summary>Indica che il metodo specificato è un proxy per una funzione EDM.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EdmFunctionAttribute.#ctor(System.String,System.String)">
      <summary>Crea una nuova istanza di DbFunctionAttribute.</summary>
      <param name="namespaceName">Nome dello spazio dei nomi della funzione EDM rappresentata dal metodo con attribuito.</param>
      <param name="functionName">Nome di funzione della funzione EDM rappresentata dal metodo con attribuito.</param>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.DataClasses.EdmPropertyAttribute">
      <summary>Attributo di base per le proprietà di cui è stato eseguito il mapping agli elementi dell'archivio.Proprietà AttributeUsage predefinite implicite Inherited=True, AllowMultiple=False, Il sistema di metadati si aspetta questo e farà riferimento solo al primo di questi attributi, anche se ce ne sono di più.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.DataClasses.EdmRelationshipAttribute">
      <summary>Definisce una relazione tra due tipi di entità in base a un'associazione nel modello concettuale.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EdmRelationshipAttribute.#ctor(System.String,System.String,System.String,System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity,System.Type,System.String,System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity,System.Type)">
      <summary>Crea un'istanza della classe <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EdmRelationshipAttribute" />.</summary>
      <param name="relationshipNamespaceName">Nome dello spazio dei nomi per l'associazione di cui fa parte questa entità.</param>
      <param name="relationshipName">Nome di una relazione di cui fa parte questa entità.</param>
      <param name="role1Name">Nome del ruolo per il tipo in un'entità finale dell'associazione.</param>
      <param name="role1Multiplicity">Valore di <see cref="T:System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity" /> che indica la molteplicità in un'entità finale dell'associazione, ad esempio uno o molti.</param>
      <param name="role1Type">Tipo dell'entità in un'entità finale dell'associazione.</param>
      <param name="role2Name">Nome del ruolo per il tipo nell'altra un'entità finale dell'associazione.</param>
      <param name="role2Multiplicity">Valore di <see cref="T:System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity" /> che indica la molteplicità nell'altra entità finale dell'associazione, ad esempio uno o molti.</param>
      <param name="role2Type">Tipo dell'entità nell'altra entità finale dell'associazione.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EdmRelationshipAttribute.#ctor(System.String,System.String,System.String,System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity,System.Type,System.String,System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity,System.Type,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EdmRelationshipAttribute" />.</summary>
      <param name="relationshipNamespaceName">Nome dello spazio dei nomi per l'associazione di cui fa parte questa entità.</param>
      <param name="relationshipName">Nome di una relazione di cui fa parte questa entità.</param>
      <param name="role1Name">Nome del ruolo per il tipo in un'entità finale dell'associazione.</param>
      <param name="role1Multiplicity">Valore di <see cref="T:System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity" /> che indica la molteplicità in un'entità finale dell'associazione, ad esempio uno o molti.</param>
      <param name="role1Type">Tipo dell'entità in un'entità finale dell'associazione.</param>
      <param name="role2Name">Nome del ruolo per il tipo nell'altra un'entità finale dell'associazione.</param>
      <param name="role2Multiplicity">Valore di <see cref="T:System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity" /> che indica la molteplicità nell'altra entità finale dell'associazione, ad esempio uno o molti.</param>
      <param name="role2Type">Tipo dell'entità nell'altra entità finale dell'associazione.</param>
      <param name="isForeignKey">Valore che indica se la relazione è basata sul valore di chiave esterna.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.EdmRelationshipAttribute.IsForeignKey">
      <summary>Ottiene un valore booleano che indica se la relazione è basata sul valore di chiave esterna.</summary>
      <returns>true se la relazione è basata sul valore di chiave esterna; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.EdmRelationshipAttribute.RelationshipName">
      <summary>Nome della relazione.</summary>
      <returns>Oggetto <see cref="T:System.String" /> che rappresenta il nome di una relazione definita da <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EdmRelationshipAttribute" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.EdmRelationshipAttribute.RelationshipNamespaceName">
      <summary>Spazio dei nomi per la relazione.</summary>
      <returns>Oggetto <see cref="T:System.String" /> che rappresenta lo spazio dei nomi per la relazione.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.EdmRelationshipAttribute.Role1Multiplicity">
      <summary>Molteplicità in un'entità finale della relazione.</summary>
      <returns>Valore di <see cref="T:System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity" /> che indica la molteplicità.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.EdmRelationshipAttribute.Role1Name">
      <summary>Nome del ruolo in un'entità finale della relazione.</summary>
      <returns>Oggetto <see cref="T:System.String" /> che rappresenta il nome del ruolo.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.EdmRelationshipAttribute.Role1Type">
      <summary>Tipo dell'entità in un'entità finale della relazione.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che rappresenta il tipo dell'oggetto in questa entità finale dell'associazione.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.EdmRelationshipAttribute.Role2Multiplicity">
      <summary>Molteplicità nell'altra entità finale della relazione.</summary>
      <returns>Valore di <see cref="T:System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity" /> che indica la molteplicità.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.EdmRelationshipAttribute.Role2Name">
      <summary>Nome del ruolo nell'altra entità finale della relazione.</summary>
      <returns>Oggetto <see cref="T:System.String" /> che rappresenta il nome del ruolo.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.EdmRelationshipAttribute.Role2Type">
      <summary>Tipo dell'entità nell'altra entità finale della relazione.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che rappresenta il tipo dell'oggetto nell'altra entità finale dell'associazione.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute">
      <summary>Attributo che identifica le entità finali definiti per un elemento RelationshipSet. Proprietà AttributeUsage predefinite implicite Inherited=True, AllowMultiple=False, Il sistema di metadati si aspetta questo e farà riferimento solo al primo di questi attributi, anche se ce ne sono di più.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute.#ctor(System.String,System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute" />.</summary>
      <param name="relationshipNamespaceName">Nome dello spazio dei nomi della proprietà della relazione.</param>
      <param name="relationshipName">Nome della relazione.Il nome della relazione non è qualificato con lo spazio dei nomi.</param>
      <param name="targetRoleName">Nome del ruolo nell'altra entità finale della relazione.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute.RelationshipName">
      <summary>Ottiene il nome della relazione non qualificato.</summary>
      <returns>Nome della relazione.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute.RelationshipNamespaceName">
      <summary>Nome dello spazio dei nomi della proprietà di navigazione.</summary>
      <returns>Oggetto <see cref="T:System.String" /> che rappresenta il nome dello spazio dei nomi.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute.TargetRoleName">
      <summary>Ottiene il nome del ruolo nell'altra entità finale della relazione.</summary>
      <returns>Il nome del ruolo di destinazione viene specificato dall'attributo Role dell'altro elemento End nell'associazione che definisce questa relazione nel modello concettuale.Per ulteriori informazioni, vedere Associazione (EDM).</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.DataClasses.EdmScalarPropertyAttribute">
      <summary>Attributo per le proprietà scalari in IEntity.Proprietà AttributeUsage predefinite implicite Inherited=True, AllowMultiple=False, Il sistema di metadati si aspetta questo e farà riferimento solo al primo di questi attributi, anche se ce ne sono di più.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EdmScalarPropertyAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EdmScalarPropertyAttribute" />.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.EdmScalarPropertyAttribute.EntityKeyProperty">
      <summary>Ottiene o imposta il valore che indica se la proprietà fa parte della chiave di entità.</summary>
      <returns>Valore che indica se la proprietà fa parte della chiave di entità.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.EdmScalarPropertyAttribute.IsNullable">
      <summary>Ottiene o imposta il valore che indica se la proprietà può avere un valore null.</summary>
      <returns>Valore che indica se la proprietà può avere un valore null.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.DataClasses.EdmSchemaAttribute">
      <summary>Attributo per tipi statici</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EdmSchemaAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EdmSchemaAttribute" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EdmSchemaAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EdmSchemaAttribute" /> con un valore univoco per ogni modello a cui fa riferimento l'assembly.</summary>
      <param name="assemblyGuid">Stringa che rappresenta un valore GUID univoco per il modello nell'assembly.</param>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.DataClasses.EdmTypeAttribute">
      <summary>Attributo di base per i tipi schematizzati</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.EdmTypeAttribute.Name">
      <summary>Nome del tipo nello schema concettuale che viene mappato alla classe alla quale viene applicato questo attributo.</summary>
      <returns>Oggetto <see cref="T:System.String" /> che rappresenta il nome.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.EdmTypeAttribute.NamespaceName">
      <summary>Nome dello spazio dei nomi del tipo di oggetto entità o del tipo complesso nello schema concettuale che viene mappato a questo tipo.</summary>
      <returns>Oggetto <see cref="T:System.String" /> che rappresenta il nome dello spazio dei nomi.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1">
      <summary>Raccolta di entità che modellano un costrutto EDM specifico che può essere dato da tutte le entità di un determinato tipo o dalle entità che partecipano a una determinata relazione.</summary>
      <typeparam name="TEntity">Tipo di entità contenute nella raccolta.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1.Add(`0)">
      <summary>Aggiunge un oggetto alla raccolta.</summary>
      <param name="item">Oggetto da aggiungere alla raccolta.entity deve implementare <see cref="T:System.Data.Entity.Core.Objects.DataClasses.IEntityWithRelationships" />.</param>
      <exception cref="T:System.ArgumentNullException">entity è null.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})">
      <summary>Definisce le relazioni tra un oggetto e una raccolta di oggetti correlati in un contesto dell'oggetto.</summary>
      <param name="entities">Raccolta di oggetti nel contesto dell'oggetto correlati all'oggetto di origine.</param>
      <exception cref="T:System.ArgumentNullException">La raccolta entities è null.</exception>
      <exception cref="T:System.InvalidOperationException">L'oggetto di origine o un oggetto nella raccolta entities è Null o non è in uno stato <see cref="F:System.Data.Entity.EntityState.Unchanged" /> o <see cref="F:System.Data.Entity.EntityState.Modified" />. -oppure- Non è possibile definire la relazione in base ai metadati EDM.Questa condizione può verificarsi quando l'associazione nello schema concettuale non supporta una relazione tra i due tipi.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1.Attach(`0)">
      <summary>Definisce una relazione tra due oggetti connessi in un contesto dell'oggetto.</summary>
      <param name="entity">Oggetto da connettere.</param>
      <exception cref="T:System.ArgumentNullException">Quando entity è null.</exception>
      <exception cref="T:System.InvalidOperationException">Quando entity non può essere correlato all'oggetto di origine.Questa condizione può verificarsi quando l'associazione nello schema concettuale non supporta una relazione tra i due tipi. -oppure- Quando un oggetto è Null o non si trova in uno stato <see cref="F:System.Data.Entity.EntityState.Unchanged" /> o <see cref="F:System.Data.Entity.EntityState.Modified" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1.Clear">
      <summary>Rimuove tutte le entità dalla raccolta.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1.Contains(`0)">
      <summary>Determina se nella raccolta è presente un oggetto specifico.</summary>
      <returns>true se l'oggetto si trova in <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1" />; in caso contrario, false.</returns>
      <param name="item">Oggetto da individuare in <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1.CopyTo(`0[],System.Int32)">
      <summary>Copia tutto il contenuto della raccolta in una matrice, iniziando dall'indice specificato della matrice di destinazione.</summary>
      <param name="array">Matrice in cui effettuare la copia.</param>
      <param name="arrayIndex">Indice in base zero nella matrice da cui inizia la copia.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1.Count">
      <summary>Ottiene il numero di oggetti contenuti nella raccolta.</summary>
      <returns>Numero di elementi contenuti in <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1.CreateSourceQuery">
      <summary>Restituisce una query di oggetto che, quando eseguita, restituisce lo stesso set di oggetti presente nella raccolta corrente.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectQuery`1" /> che rappresenta la raccolta di entità.</returns>
      <exception cref="T:System.InvalidOperationException">Quando l'oggetto si trova in uno stato <see cref="F:System.Data.Entity.EntityState.Added" /> o in uno stato <see cref="F:System.Data.Entity.EntityState.Detached" /> con la proprietà <see cref="T:System.Data.Entity.Core.Objects.MergeOption" /> diversa da <see cref="F:System.Data.Entity.Core.Objects.MergeOption.NoTracking" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1.GetEnumerator">
      <summary>Restituisce un enumeratore utilizzato per scorrere gli oggetti della raccolta.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che scorre il set di valori memorizzati nella cache da <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1.IsReadOnly">
      <summary>Ottiene un valore che indica se <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1" /> è di sola lettura.</summary>
      <returns>Restituisce sempre false.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1.Load(System.Data.Entity.Core.Objects.MergeOption)">
      <summary>Carica gli oggetti correlati nella raccolta utilizzando l'opzione di unione specificata.</summary>
      <param name="mergeOption">Specifica il modo in cui gli oggetti della raccolta devono essere uniti con gli eventuali oggetti restituiti dalle query precedenti sullo stesso oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1.LoadAsync(System.Data.Entity.Core.Objects.MergeOption,System.Threading.CancellationToken)">
      <summary>Carica in modo asincrono l'entità o le entità correlate nell'entità finale correlata utilizzando l'opzione di merge predefinita.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
      <param name="mergeOption">Opzione di unione.</param>
      <param name="cancellationToken">Oggetto CancellationToken da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1.OnCollectionDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>Utilizzato internamente per deserializzare oggetti entità.</summary>
      <param name="context">Contesto di flusso.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1.OnSerializing(System.Runtime.Serialization.StreamingContext)">
      <summary>Utilizzato internamente per serializzare oggetti entità.</summary>
      <param name="context">Contesto di flusso.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1.Remove(`0)">
      <summary>Rimuove un oggetto dalla raccolta e contrassegna la relazione per l'eliminazione.</summary>
      <returns>true se l'elemento è stato rimosso correttamente; in caso contrario false.</returns>
      <param name="item">Oggetto da rimuovere dalla raccolta.</param>
      <exception cref="T:System.ArgumentNullException">L'oggetto entity è null.</exception>
      <exception cref="T:System.InvalidOperationException">L'oggetto entità non è collegato allo stesso contesto dell'oggetto. -oppure- L'oggetto entità non dispone di un gestore delle relazioni valido.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore utilizzato per scorrere il set di valori memorizzati nella cache da <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1" />.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che scorre il set di valori memorizzati nella cache da <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#ContainsListCollection">
      <summary>Implementazione di IListSource.ContainsListCollection.Restituisce sempre false.Ciò significa che l'elemento IList restituito contiene i dati effettivi, non è un elenco di raccolte.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#GetList">
      <summary>Restituisce la raccolta come <see cref="T:System.Collections.IList" /> utilizzato per l'associazione dati.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IList" /> di oggetti entità.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.DataClasses.EntityObject">
      <summary>Classe di base per tutte le classi EntityObject descritte.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EntityObject.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityObject" />.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.EntityObject.EntityKey">
      <summary>Ottiene o imposta la chiave per questo oggetto.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.EntityKey" /> per questo oggetto.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.EntityObject.EntityState">
      <summary>Ottiene lo stato dell'entità dell'oggetto.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.EntityState" /> di questo oggetto.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EntityObject.ReportPropertyChanged(System.String)">
      <summary>Notifica all'individuazione modifiche la modifica di una proprietà.</summary>
      <param name="property">Nome della proprietà modificata.</param>
      <exception cref="T:System.ArgumentNullException">property è null.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EntityObject.ReportPropertyChanging(System.String)">
      <summary>Notifica all'individuazione modifiche la presenza di una modifica in sospeso per una proprietà.</summary>
      <param name="property">Nome della proprietà in fase di modifica.</param>
      <exception cref="T:System.ArgumentNullException">property è null.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EntityObject.System#Data#Entity#Core#Objects#DataClasses#IEntityWithChangeTracker#SetChangeTracker(System.Data.Entity.Core.Objects.DataClasses.IEntityChangeTracker)">
      <summary>Utilizzato da ObjectStateManager per collegare o scollegare l'elemento EntityObject alla cache.</summary>
      <param name="changeTracker">Riferimento a ObjectStateEntry che contiene questa entità</param>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.EntityObject.System#Data#Entity#Core#Objects#DataClasses#IEntityWithRelationships#RelationshipManager">
      <summary>Restituisce il contenitore per i riferimenti, le raccolte e gli oggetti delle proprietà di navigazione della relazione creati in modo differito.</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.DataClasses.EntityReference">
      <summary>Modella l'entità finale di una relazione con molteplicità 1.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.EntityReference.EntityKey">
      <summary>Restituisce la chiave dell'oggetto correlato.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.EntityKey" /> che rappresenta la chiave dell'oggetto correlato.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.DataClasses.EntityReference`1">
      <summary>Modella l'entità finale di una relazione con molteplicità 1.</summary>
      <typeparam name="TEntity">Tipo dell'entità a cui viene fatto riferimento.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EntityReference`1.#ctor">
      <summary>Crea una nuova istanza di <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityReference`1" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EntityReference`1.Attach(`0)">
      <summary>Crea una relazione molti-a-uno o uno-a-uno tra due oggetti nel contesto dell'oggetto.</summary>
      <param name="entity">Oggetto da connettere.</param>
      <exception cref="T:System.ArgumentNullException">Quando entity è null.</exception>
      <exception cref="T:System.InvalidOperationException">Quando entity non può essere correlato all'entità finale correlata corrente.Questa condizione può verificarsi quando l'associazione nello schema concettuale non supporta una relazione tra i due tipi.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EntityReference`1.CreateSourceQuery">
      <summary>Crea una query di oggetto equivalente che restituisce l'oggetto correlato.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectQuery`1" /> che restituisce l'oggetto correlato.</returns>
      <exception cref="T:System.InvalidOperationException">Quando l'oggetto si trova in uno stato <see cref="F:System.Data.Entity.EntityState.Added" /> o in uno stato <see cref="F:System.Data.Entity.EntityState.Detached" /> con la proprietà <see cref="P:System.Data.Entity.Core.Objects.ObjectQuery.MergeOption" /> diversa da <see cref="F:System.Data.Entity.Core.Objects.MergeOption.NoTracking" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EntityReference`1.Load(System.Data.Entity.Core.Objects.MergeOption)">
      <summary>Carica l'oggetto correlato per l'oggetto <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityReference`1" /> con l'opzione di unione specificata.</summary>
      <param name="mergeOption">Specifica il modo in cui l'oggetto deve essere restituito se esiste già in <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.</param>
      <exception cref="T:System.InvalidOperationException">L'origine di <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityReference`1" /> è Null oppure una query ha restituito più entità finali correlate oppure una query non ha restituito alcuna entità finale correlata mentre ne era prevista una.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EntityReference`1.LoadAsync(System.Data.Entity.Core.Objects.MergeOption,System.Threading.CancellationToken)">
      <summary>Carica in modo asincrono l'entità o le entità correlate nell'entità finale correlata utilizzando l'opzione di merge predefinita.</summary>
      <returns>Entità correlate caricate nell'entità finale correlata.</returns>
      <param name="mergeOption">Opzioni di unione.</param>
      <param name="cancellationToken">Oggetto CancellationToken da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EntityReference`1.OnRefDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>Tale metodo viene utilizzato internamente per serializzare oggetti entità correlati.</summary>
      <param name="context">Flusso serializzato.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.EntityReference`1.OnSerializing(System.Runtime.Serialization.StreamingContext)">
      <summary>Tale metodo viene utilizzato internamente per serializzare oggetti entità correlati.</summary>
      <param name="context">Flusso serializzato.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.EntityReference`1.Value">
      <summary>Ottiene o imposta l'oggetto correlato restituito da <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityReference`1" />.</summary>
      <returns>Oggetto restituito dall'oggetto <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityReference`1" />.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.DataClasses.IEntityChangeTracker">
      <summary>Questa interfaccia è implementata dall'individuazione delle modifiche e utilizzata dalle classi di dati per segnalare le modifiche</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanged(System.String,System.Object,System.String)">
      <summary>Notifica allo strumento di rilevamento delle modifiche la modifica di una proprietà di un tipo complesso.</summary>
      <param name="entityMemberName">Nome della proprietà complessa del tipo di entità modificata.</param>
      <param name="complexObject">Tipo complesso contenente la proprietà modificata.</param>
      <param name="complexObjectMemberName">Nome della proprietà modificata in un tipo complesso.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanging(System.String,System.Object,System.String)">
      <summary>Notifica all'individuazione modifiche la presenza di una modifica in sospeso per una proprietà complessa.</summary>
      <param name="entityMemberName">Nome della proprietà dell'entità di livello superiore in fase di modifica.</param>
      <param name="complexObject">Tipo complesso contenente la proprietà in fase di modifica.</param>
      <param name="complexObjectMemberName">Nome della proprietà in fase di modifica nel tipo complesso.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.IEntityChangeTracker.EntityMemberChanged(System.String)">
      <summary>Notifica allo strumento di rilevamento delle modifiche la modifica di una proprietà di un tipo di entità.</summary>
      <param name="entityMemberName">Nome della proprietà modificata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.IEntityChangeTracker.EntityMemberChanging(System.String)">
      <summary>Notifica allo strumento di rilevamento delle modifiche la presenza di una modifica in sospeso a una proprietà di un tipo di entità.</summary>
      <param name="entityMemberName">Nome della proprietà in fase di modifica.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.IEntityChangeTracker.EntityState">
      <summary>Ottiene lo stato corrente di un oggetto di cui viene eseguito il rilevamento.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.EntityState" /> che rappresenta lo stato dell'oggetto rilevato. Per ulteriori informazioni, vedere Risoluzione di identità, gestione dello stato e rilevamento delle modifiche e Rilevamento delle modifiche nelle entità POCO.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.DataClasses.IEntityWithChangeTracker">
      <summary>Interfaccia minima che una classe di dati deve implementare per essere gestita dall'individuazione delle modifiche.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.IEntityWithChangeTracker.SetChangeTracker(System.Data.Entity.Core.Objects.DataClasses.IEntityChangeTracker)">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.Data.Entity.Core.Objects.DataClasses.IEntityChangeTracker" /> utilizzato per segnalare le modifiche.</summary>
      <param name="changeTracker">Oggetto <see cref="T:System.Data.Entity.Core.Objects.DataClasses.IEntityChangeTracker" /> utilizzato per segnalare le modifiche.</param>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.DataClasses.IEntityWithKey">
      <summary>Interfaccia che definisce un'entità contenente una chiave.</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.IEntityWithKey.EntityKey">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.Data.Entity.Core.EntityKey" /> per istanze dei tipi di entità che implementano questa interfaccia.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.EntityKey" /> per istanze dei tipi di entità che implementano questa interfaccia.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.DataClasses.IEntityWithRelationships">
      <summary>Interfaccia che una classe di dati deve implementare se espone relazioni</summary>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.IEntityWithRelationships.RelationshipManager">
      <summary>Restituisce il gestore delle relazioni che gestisce le relazioni per un'istanza di un tipo di entità.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Objects.DataClasses.RelationshipManager" /> per questa entità.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd">
      <summary>Rappresenta un'entità finale di una relazione.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd.Add(System.Data.Entity.Core.Objects.DataClasses.IEntityWithRelationships)">
      <summary>Aggiunge un oggetto all'entità finale correlata.</summary>
      <param name="entity">Oggetto da aggiungere alla raccolta.entity deve implementare <see cref="T:System.Data.Entity.Core.Objects.DataClasses.IEntityWithRelationships" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd.Add(System.Object)">
      <summary>Aggiunge un oggetto all'entità finale correlata.</summary>
      <param name="entity">Oggetto da aggiungere alla raccolta.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd.Attach(System.Data.Entity.Core.Objects.DataClasses.IEntityWithRelationships)">
      <summary>Definisce una relazione tra due oggetti connessi.</summary>
      <param name="entity">Oggetto da connettere.entity deve implementare <see cref="T:System.Data.Entity.Core.Objects.DataClasses.IEntityWithRelationships" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd.Attach(System.Object)">
      <summary>Definisce una relazione tra due oggetti connessi.</summary>
      <param name="entity">Oggetto da connettere.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd.CreateSourceQuery">
      <summary>Restituisce un oggetto <see cref="T:System.Collections.IEnumerable" /> che rappresenta gli oggetti appartenenti all'entità finale correlata.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerable" /> che rappresenta gli oggetti appartenenti all'entità finale correlata.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd.GetEnumerator">
      <summary>Restituisce un oggetto <see cref="T:System.Collections.IEnumerator" /> con cui è possibile scorrere la raccolta di oggetti correlati.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che scorre la raccolta di oggetti correlati.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd.IsLoaded">
      <summary>Ottiene o imposta un valore che indica se l'entità (per un oggetto <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityReference" />) o tutte le entità della raccolta (per un oggetto <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1" />) sono state caricate dal database.</summary>
      <returns>True se tutte le entità correlate vengono caricate o se IsLoaded è stato impostato in modo esplicito su true; in caso contrario false.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd.Load">
      <summary>Carica l'oggetto o gli oggetti correlati in questa entità finale correlata con l'opzione di unione predefinita.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd.Load(System.Data.Entity.Core.Objects.MergeOption)">
      <summary>Carica l'oggetto o gli oggetti correlati nell'entità finale correlata con l'opzione di unione specificata.</summary>
      <param name="mergeOption">
        <see cref="T:System.Data.Entity.Core.Objects.MergeOption" /> da utilizzare quando si uniscono gli oggetti in un oggetto <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1" /> esistente.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd.LoadAsync(System.Data.Entity.Core.Objects.MergeOption,System.Threading.CancellationToken)">
      <summary>Carica in modo asincrono l'oggetto o gli oggetti correlati nell'entità finale correlata con l'opzione di unione specificata.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
      <param name="mergeOption">
        <see cref="T:System.Data.Entity.Core.Objects.MergeOption" /> da utilizzare quando si uniscono gli oggetti in un oggetto <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1" /> esistente.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd.LoadAsync(System.Threading.CancellationToken)">
      <summary>Carica in modo asincrono l'oggetto o gli oggetti correlati in questa entità finale correlata con l'opzione di unione predefinita.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd.RelationshipName">
      <summary>Ottiene il nome della relazione di cui fa parte l'entità finale correlata.</summary>
      <returns>Nome della relazione di cui fa parte <see cref="T:System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd" />.Il nome della relazione non è qualificato con lo spazio dei nomi.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd.RelationshipSet">
      <summary>Restituisce un riferimento ai metadati per l'entità finale correlata.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.RelationshipSet" /> che contiene i metadati per l'entità finale di una relazione.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd.Remove(System.Data.Entity.Core.Objects.DataClasses.IEntityWithRelationships)">
      <summary>Rimuove un oggetto dalla raccolta di oggetti nell'entità finale correlata.</summary>
      <returns>true se l'entità è stata rimossa correttamente; false se l'entità non fa parte di <see cref="T:System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd" />.</returns>
      <param name="entity">Oggetto da rimuovere dalla raccolta.entity deve implementare <see cref="T:System.Data.Entity.Core.Objects.DataClasses.IEntityWithRelationships" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd.Remove(System.Object)">
      <summary>Rimuove un oggetto dalla raccolta di oggetti nell'entità finale correlata.</summary>
      <returns>true se l'entità è stata rimossa correttamente; false se l'entità non fa parte di <see cref="T:System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd" />.</returns>
      <param name="entity">Oggetto da rimuovere dalla raccolta.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd.SourceRoleName">
      <summary>Ottiene il nome del ruolo nell'entità finale di origine della relazione.</summary>
      <returns>Nome del ruolo nell'entità finale di origine della relazione.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd.TargetRoleName">
      <summary>Ottiene il nome del ruolo nell'entità finale di destinazione della relazione.</summary>
      <returns>Nome del ruolo nell'entità finale di destinazione della relazione.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.DataClasses.RelatedEnd">
      <summary>Classe di base per EntityCollection ed EntityReference</summary>
    </member>
    <member name="E:System.Data.Entity.Core.Objects.DataClasses.RelatedEnd.AssociationChanged">
      <summary>Si verifica quando viene apportata una modifica a un'entità finale correlata.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.RelatedEnd.GetEnumerator">
      <summary>Restituisce un oggetto <see cref="T:System.Collections.IEnumerator" /> con cui è possibile scorrere la raccolta di oggetti correlati.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che scorre la raccolta di oggetti correlati.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.RelatedEnd.IsLoaded">
      <summary>Ottiene un valore che indica se sono stati caricati tutti gli oggetti correlati.</summary>
      <returns>true se l'entità finale correlata contiene tutti gli oggetti correlati presenti nel database; in caso contrario, false.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.RelatedEnd.Load">
      <summary>Carica l'oggetto o gli oggetti correlati nell'entità finale correlata con l'opzione di unione predefinita.</summary>
      <exception cref="T:System.InvalidOperationException">Quando l'oggetto di origine è stato recuperato utilizzando una query <see cref="F:System.Data.Entity.Core.Objects.MergeOption.NoTracking" /> e <see cref="T:System.Data.Entity.Core.Objects.MergeOption" /> non è <see cref="F:System.Data.Entity.Core.Objects.MergeOption.NoTracking" /> oppure gli oggetti correlati sono già caricati oppure quando l'oggetto di origine non è collegato a <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" /> oppure quando viene eseguito il rilevamento dell'oggetto di origine, il quale si trova tuttavia nello stato <see cref="F:System.Data.Entity.EntityState.Added" /> o <see cref="F:System.Data.Entity.EntityState.Deleted" /> oppure l'oggetto <see cref="T:System.Data.Entity.Core.Objects.MergeOption" /> utilizzato per <see cref="M:System.Data.Entity.Core.Objects.DataClasses.RelatedEnd.Load" /> è <see cref="F:System.Data.Entity.Core.Objects.MergeOption.NoTracking" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.RelatedEnd.Load(System.Data.Entity.Core.Objects.MergeOption)">
      <summary>Carica uno o più oggetti dall'entità finale correlata con l'opzione di unione specificata.</summary>
      <param name="mergeOption">
        <see cref="T:System.Data.Entity.Core.Objects.MergeOption" /> da utilizzare quando si uniscono gli oggetti in un oggetto <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1" /> esistente.</param>
      <exception cref="T:System.InvalidOperationException">Quando l'oggetto di origine è stato recuperato utilizzando una query <see cref="F:System.Data.Entity.Core.Objects.MergeOption.NoTracking" /> e <see cref="T:System.Data.Entity.Core.Objects.MergeOption" /> non è <see cref="F:System.Data.Entity.Core.Objects.MergeOption.NoTracking" /> oppure gli oggetti correlati sono già caricati oppure quando l'oggetto di origine non è collegato a <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" /> oppure quando viene eseguito il rilevamento dell'oggetto di origine, il quale si trova tuttavia nello stato <see cref="F:System.Data.Entity.EntityState.Added" /> o <see cref="F:System.Data.Entity.EntityState.Deleted" /> oppure l'oggetto <see cref="T:System.Data.Entity.Core.Objects.MergeOption" /> utilizzato per <see cref="M:System.Data.Entity.Core.Objects.DataClasses.RelatedEnd.Load" /> è <see cref="F:System.Data.Entity.Core.Objects.MergeOption.NoTracking" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.RelatedEnd.LoadAsync(System.Data.Entity.Core.Objects.MergeOption,System.Threading.CancellationToken)">
      <summary>Carica in modo asincrono uno o più oggetti dall'entità finale correlata con l'opzione di unione specificata.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
      <param name="mergeOption">
        <see cref="T:System.Data.Entity.Core.Objects.MergeOption" /> da utilizzare quando si uniscono gli oggetti in un oggetto <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1" /> esistente.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.InvalidOperationException">Quando l'oggetto di origine è stato recuperato utilizzando una query <see cref="F:System.Data.Entity.Core.Objects.MergeOption.NoTracking" /> e <see cref="T:System.Data.Entity.Core.Objects.MergeOption" /> non è <see cref="F:System.Data.Entity.Core.Objects.MergeOption.NoTracking" /> oppure gli oggetti correlati sono già caricati oppure quando l'oggetto di origine non è collegato a <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" /> oppure quando viene eseguito il rilevamento dell'oggetto di origine, il quale si trova tuttavia nello stato <see cref="F:System.Data.Entity.EntityState.Added" /> o <see cref="F:System.Data.Entity.EntityState.Deleted" /> oppure l'oggetto <see cref="T:System.Data.Entity.Core.Objects.MergeOption" /> utilizzato per <see cref="M:System.Data.Entity.Core.Objects.DataClasses.RelatedEnd.Load" /> è <see cref="F:System.Data.Entity.Core.Objects.MergeOption.NoTracking" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.RelatedEnd.LoadAsync(System.Threading.CancellationToken)">
      <summary>Carica in modo asincrono l'oggetto o gli oggetti correlati nell'entità finale correlata con l'opzione di unione predefinita.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.InvalidOperationException">Quando l'oggetto di origine è stato recuperato utilizzando una query <see cref="F:System.Data.Entity.Core.Objects.MergeOption.NoTracking" /> e <see cref="T:System.Data.Entity.Core.Objects.MergeOption" /> non è <see cref="F:System.Data.Entity.Core.Objects.MergeOption.NoTracking" /> oppure gli oggetti correlati sono già caricati oppure quando l'oggetto di origine non è collegato a <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" /> oppure quando viene eseguito il rilevamento dell'oggetto di origine, il quale si trova tuttavia nello stato <see cref="F:System.Data.Entity.EntityState.Added" /> o <see cref="F:System.Data.Entity.EntityState.Deleted" /> oppure l'oggetto <see cref="T:System.Data.Entity.Core.Objects.MergeOption" /> utilizzato per <see cref="M:System.Data.Entity.Core.Objects.DataClasses.RelatedEnd.Load" /> è <see cref="F:System.Data.Entity.Core.Objects.MergeOption.NoTracking" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.RelatedEnd.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>Utilizzato internamente per deserializzare oggetti entità insieme alle istanze di <see cref="T:System.Data.Entity.Core.Objects.DataClasses.RelationshipManager" />.</summary>
      <param name="context">Flusso serializzato.</param>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.RelatedEnd.RelationshipName">
      <summary>Ottiene il nome della relazione di cui fa parte l'entità finale correlata.</summary>
      <returns>Nome della relazione di cui fa parte <see cref="T:System.Data.Entity.Core.Objects.DataClasses.RelatedEnd" />.Il nome della relazione non è qualificato con lo spazio dei nomi.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.RelatedEnd.RelationshipSet">
      <summary>Ottiene un riferimento ai metadati per l'entità finale correlata.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.RelationshipSet" /> che contiene i metadati per l'entità finale di una relazione.</returns>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.RelatedEnd.SourceRoleName">
      <summary>Ottiene il nome del ruolo nell'entità finale di origine della relazione.</summary>
      <returns>Oggetto <see cref="T:System.String" /> che rappresenta il nome del ruolo.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.RelatedEnd.System#Data#Entity#Core#Objects#DataClasses#IRelatedEnd#Add(System.Data.Entity.Core.Objects.DataClasses.IEntityWithRelationships)">
      <summary>Aggiunge un'entità all'entità finale correlata.Questo metodo funziona esattamente come Add(object).Viene mantenuto per garantire la compatibilità con le versioni precedenti di IRelatedEnd.</summary>
      <param name="entity">Istanza di entità da aggiungere all'entità finale correlata</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.RelatedEnd.System#Data#Entity#Core#Objects#DataClasses#IRelatedEnd#Add(System.Object)">
      <summary>Aggiunge un'entità all'entità finale correlata.Se il proprietario è collegato a una cache, tutte le entità finali collegate vengono aggiunte alla cache oggetti e le relazioni corrispondenti vengono aggiunte a ObjectStateManager.Anche l'elemento RelatedEnd della relazione viene corretto.</summary>
      <param name="entity">Istanza di entità da aggiungere all'entità finale correlata</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.RelatedEnd.System#Data#Entity#Core#Objects#DataClasses#IRelatedEnd#Attach(System.Data.Entity.Core.Objects.DataClasses.IEntityWithRelationships)">
      <summary>Collega un'entità all'entità finale correlata.Questo metodo funziona esattamente come Attach(object).Viene mantenuto per garantire la compatibilità con le versioni precedenti di IRelatedEnd.</summary>
      <param name="entity">Entità da collegare all'entità correlata</param>
      <exception cref="T:System.ArgumentNullException">Generata quando <paramref name="entity" /> è Null.</exception>
      <exception cref="T:System.InvalidOperationException">Generata quando l'entità non può essere correlata attraverso l'entità finale della relazione corrente.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.RelatedEnd.System#Data#Entity#Core#Objects#DataClasses#IRelatedEnd#Attach(System.Object)">
      <summary>Collega un'entità all'entità finale correlata.Se l'entità finale correlata è già stata riempita totalmente o parzialmente, le entità esistenti vengono unite all'entità specificata.L'entità specificata non viene considerata come il set completo di entità correlate.Il proprietario e tutte le entità passate devono trovarsi nello stato Unchanged o Modified.Gli elementi eliminati sono consentiti solo quando è in corso la registrazione dell'istanza della relazione da parte del gestore degli stati.</summary>
      <param name="entity">Entità da collegare all'entità correlata</param>
      <exception cref="T:System.ArgumentNullException">Generata quando <paramref name="entity" /> è Null.</exception>
      <exception cref="T:System.InvalidOperationException">Generata quando l'entità non può essere correlata attraverso l'entità finale della relazione corrente.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.RelatedEnd.System#Data#Entity#Core#Objects#DataClasses#IRelatedEnd#CreateSourceQuery">
      <summary>Restituisce un oggetto <see cref="T:System.Collections.IEnumerable" /> che rappresenta gli oggetti appartenenti all'entità finale correlata.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerable" /> che rappresenta gli oggetti appartenenti all'entità finale correlata.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.RelatedEnd.System#Data#Entity#Core#Objects#DataClasses#IRelatedEnd#Remove(System.Data.Entity.Core.Objects.DataClasses.IEntityWithRelationships)">
      <summary>Rimuove un'entità dall'entità finale correlata.Questo metodo funziona esattamente come Remove(object).Viene mantenuto per garantire la compatibilità con le versioni precedenti di IRelatedEnd.</summary>
      <returns>Restituisce true se l'entità è stata rimossa correttamente, false se l'entità non fa parte di RelatedEnd.</returns>
      <param name="entity">Istanza di entità da rimuovere dall'entità finale correlata</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.RelatedEnd.System#Data#Entity#Core#Objects#DataClasses#IRelatedEnd#Remove(System.Object)">
      <summary>Rimuove un'entità dall'entità finale correlata.Se il proprietario è collegato a una cache, contrassegna la relazione per l'eliminazione e se la relazione è di tipo composizione contrassegna per l'eliminazione anche l'entità.</summary>
      <returns>Restituisce true se l'entità è stata rimossa correttamente, false se l'entità non fa parte di RelatedEnd.</returns>
      <param name="entity">Istanza di entità da rimuovere dall'entità finale correlata</param>
    </member>
    <member name="P:System.Data.Entity.Core.Objects.DataClasses.RelatedEnd.TargetRoleName">
      <summary>Ottiene il nome del ruolo nell'entità finale di destinazione della relazione.</summary>
      <returns>Oggetto <see cref="T:System.String" /> che rappresenta il nome del ruolo.</returns>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.DataClasses.RelationshipKind">
      <summary>Identifica il tipo di una relazione</summary>
    </member>
    <member name="F:System.Data.Entity.Core.Objects.DataClasses.RelationshipKind.Association">
      <summary>La relazione è un'associazione</summary>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.DataClasses.RelationshipManager">
      <summary>Contenitore per gli oggetti delle proprietà di navigazione (raccolte e riferimenti) della relazione creati in modo differito.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.RelationshipManager.Create(System.Data.Entity.Core.Objects.DataClasses.IEntityWithRelationships)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Data.Entity.Core.Objects.DataClasses.RelationshipManager" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Objects.DataClasses.RelationshipManager" /> richiesto.</returns>
      <param name="owner">Riferimento all'entità che chiama questo metodo.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.RelationshipManager.GetAllRelatedEnds">
      <summary>Restituisce un'enumerazione di tutte le entità finali correlate gestite dal gestore delle relazioni.</summary>
      <returns>Insieme <see cref="T:System.Collections.Generic.IEnumerable`1" /> di oggetti che implementano <see cref="T:System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd" />.Quando le relazioni non sono state ancora popolate, viene restituita un'enumerazione vuota.</returns>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.RelationshipManager.GetRelatedCollection``1(System.String,System.String)">
      <summary>Ottiene un oggetto <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1" /> di oggetti correlati con il nome della relazione e il nome del ruolo di destinazione specificati.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1" /> di oggetti correlati.</returns>
      <param name="relationshipName">Nome della relazione per la navigazione.Il nome della relazione non è qualificato con lo spazio dei nomi.</param>
      <param name="targetRoleName">Nome del ruolo di destinazione per la navigazione.Indica la direzione di navigazione nella relazione.</param>
      <typeparam name="TTargetEntity">Tipo dell'oggetto <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1" /> restituito.</typeparam>
      <exception cref="T:System.InvalidOperationException">Il ruolo specificato ha restituito <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityReference`1" /> anziché <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.RelationshipManager.GetRelatedEnd(System.String,System.String)">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1" /> o <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityReference`1" /> del tipo corretto per il ruolo di destinazione specificato in una relazione.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Objects.DataClasses.IRelatedEnd" /> che rappresenta l'oggetto <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1" /> o <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityReference`1" /> recuperato.</returns>
      <param name="relationshipName">Nome della relazione in cui viene definito targetRoleName.Il nome della relazione non è qualificato con lo spazio dei nomi.</param>
      <param name="targetRoleName">Ruolo di destinazione da utilizzare per recuperare l'altra entità finale di relationshipName.</param>
      <exception cref="T:System.ArgumentNullException">relationshipName o targetRoleName è null.</exception>
      <exception cref="T:System.InvalidOperationException">Il tipo di origine non corrisponde al tipo del proprietario.</exception>
      <exception cref="T:System.ArgumentException">targetRoleName non è valido oppure non è possibile trovare il tipo di relazione nei metadati.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.RelationshipManager.GetRelatedReference``1(System.String,System.String)">
      <summary>Ottiene l'oggetto <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityReference`1" /> per un oggetto correlato utilizzando il nome della relazione e il nome del ruolo di destinazione specificati.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityReference`1" /> di un oggetto correlato.</returns>
      <param name="relationshipName">Nome della relazione per la navigazione.Il nome della relazione non è qualificato con lo spazio dei nomi.</param>
      <param name="targetRoleName">Nome del ruolo di destinazione per la navigazione.Indica la direzione di navigazione nella relazione.</param>
      <typeparam name="TTargetEntity">Tipo dell'oggetto <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityReference`1" /> restituito.</typeparam>
      <exception cref="T:System.InvalidOperationException">Il ruolo specificato ha restituito <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityCollection`1" /> anziché <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityReference`1" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.RelationshipManager.InitializeRelatedCollection``1(System.String,System.String,System.Data.Entity.Core.Objects.DataClasses.EntityCollection{``0})">
      <summary>Accetta un elemento EntityCollection esistente creato con il costruttore predefinito e lo inizializza utilizzando i nomi del ruolo di destinazione e della relazione specificati.Questo metodo è destinato esclusivamente alla deserializzazione e verrà generata un'eccezione se l'elemento EntityCollection specificato è già stato inizializzato o se il gestore delle relazioni è già collegato a un elemento ObjectContext.</summary>
      <param name="relationshipName">Nome della relazione.</param>
      <param name="targetRoleName">Nome del ruolo di destinazione.</param>
      <param name="entityCollection">Oggetto EntityCollection esistente.</param>
      <typeparam name="TTargetEntity">Tipo dell'entità rappresentata da targetRoleName</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.RelationshipManager.InitializeRelatedReference``1(System.String,System.String,System.Data.Entity.Core.Objects.DataClasses.EntityReference{``0})">
      <summary>Accetta un elemento EntityReference esistente creato con il costruttore predefinito e lo inizializza utilizzando i nomi del ruolo di destinazione e della relazione specificati.Questo metodo è destinato esclusivamente alla deserializzazione e verrà generata un'eccezione se l'oggetto EntityReference specificato è già stato inizializzato, se il gestore delle relazioni contiene già una relazione con questo nome e con questo ruolo di destinazione o se il gestore delle relazioni è già collegato a un oggetto ObjectContext.</summary>
      <param name="relationshipName">Nome della relazione.</param>
      <param name="targetRoleName">Nome del ruolo dell'entità finale correlata.</param>
      <param name="entityReference">Oggetto <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityReference`1" /> da inizializzare.</param>
      <typeparam name="TTargetEntity">Tipo dell'oggetto <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityReference`1" /> da inizializzare.</typeparam>
      <exception cref="T:System.InvalidOperationException">Quando l'oggetto <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityReference`1" /> è già stato inizializzato. -oppure- Quando il gestore delle relazioni è già collegato a un oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" /> o contiene già una relazione con questo nome e con questo ruolo di destinazione.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.RelationshipManager.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>Utilizzato internamente per deserializzare oggetti entità insieme alle istanze di <see cref="T:System.Data.Entity.Core.Objects.DataClasses.RelationshipManager" />.</summary>
      <param name="context">Flusso serializzato.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.RelationshipManager.OnSerializing(System.Runtime.Serialization.StreamingContext)">
      <summary>Chiamato da Object Services per preparare un oggetto <see cref="T:System.Data.Entity.Core.EntityKey" /> per la serializzazione binaria con una relazione serializzata.</summary>
      <param name="context">Descrive l'origine e la destinazione di un flusso serializzato specificato e fornisce un ulteriore contesto definito dal chiamante.</param>
    </member>
    <member name="T:System.Data.Entity.Core.Objects.DataClasses.StructuralObject">
      <summary>Questa classe contiene i metodi comuni necessari per un oggetto data.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Core.Objects.DataClasses.StructuralObject" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.BinaryEquals(System.Byte[],System.Byte[])">
      <summary>Determina se le matrici di byte specificate contengono valori identici.</summary>
      <returns>true se entrambe le matrici hanno la stessa lunghezza e contengono gli stessi valori byte; in caso contrario, false.</returns>
      <param name="first">Valore della prima matrice di byte da confrontare.</param>
      <param name="second">Seconda matrice di byte da confrontare.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.DefaultDateTimeValue">
      <summary>Restituisce il valore di data e ora minimo supportato dall'origine dati.</summary>
      <returns>Valore <see cref="T:System.DateTime" /> che rappresenta il valore di data e ora minimo supportato dall'origine dati.</returns>
    </member>
    <member name="F:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.EntityKeyPropertyName">
      <summary>Nome costante pubblico utilizzato per l'individuazione delle modifiche. Questa definizione consente agli utenti di utilizzare questa costante anziché definire la stringa a livello di codice.In questo modo ci si assicura che il nome della proprietà sia corretto e che sia possibile eseguire più rapidamente i confronti nelle posizioni in cui si cerca questa stringa specifica.Gli utenti possono utilizzare la stringa con distinzione tra maiuscole e minuscole direttamente anziché la costante, la sola differenza è che il confronto sarà più lento.Delimitare il nome con i caratteri trattino (-) per garantire che non si creino conflitti con una proprietà dati reale perché -EntityKey- non è un nome di identificatore valido</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.GetValidValue(System.Byte[])">
      <summary>Restituisce una copia del valore byte corrente.</summary>
      <returns>Copia del valore <see cref="T:System.Byte" /> corrente.</returns>
      <param name="currentValue">Valore della matrice di byte corrente.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.GetValidValue``1(``0,System.String,System.Boolean,System.Boolean)">
      <summary>Restituisce un tipo complesso per la proprietà specificata.</summary>
      <returns>Oggetto di tipo complesso per la proprietà.</returns>
      <param name="currentValue">Oggetto complesso che eredita da qualsiasi oggetto complesso.</param>
      <param name="property">Nome della proprietà complessa che rappresenta l'oggetto complesso.</param>
      <param name="isNullable">Indica se il tipo supporta valori null.</param>
      <param name="isInitialized">Indica se il tipo è inizializzato.</param>
      <typeparam name="T">Tipo dell'oggetto complesso da richiedere.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.OnPropertyChanged(System.String)">
      <summary>Genera l'evento <see cref="E:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.PropertyChanged" />.</summary>
      <param name="property">Nome della proprietà modificata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.OnPropertyChanging(System.String)">
      <summary>Genera l'evento <see cref="E:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.PropertyChanging" />.</summary>
      <param name="property">Nome della proprietà in fase di modifica.</param>
    </member>
    <member name="E:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.PropertyChanged">
      <summary>Notifica della modifica di una proprietà.</summary>
    </member>
    <member name="E:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.PropertyChanging">
      <summary>Notifica che una proprietà sta per cambiare.</summary>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.ReportPropertyChanged(System.String)">
      <summary>Genera un evento utilizzato per segnalare che una proprietà è stata modificata.</summary>
      <param name="property">Nome della proprietà modificata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.ReportPropertyChanging(System.String)">
      <summary>Genera un evento utilizzato per segnalare che la modifica di una proprietà è in sospeso.</summary>
      <param name="property">Nome della proprietà in fase di modifica.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Boolean)">
      <summary>Assicura che il valore <see cref="T:System.Boolean" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Boolean" /> che viene impostato.</returns>
      <param name="value">Valore booleano.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Boolean,System.String)">
      <summary>Assicura che il valore <see cref="T:System.Boolean" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Boolean" /> che viene impostato.</returns>
      <param name="value">Valore booleano.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Byte)">
      <summary>Assicura che il valore <see cref="T:System.Byte" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Byte" /> impostato.</returns>
      <param name="value">Valore da convalidare.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Byte,System.String)">
      <summary>Assicura che il valore <see cref="T:System.Byte" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Byte" /> impostato.</returns>
      <param name="value">Valore <see cref="T:System.Byte" />.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Byte[],System.Boolean)">
      <summary>Assicura che il valore <see cref="T:System.Byte[]" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Byte" /> che viene impostato.</returns>
      <param name="value">Valore che viene impostato.</param>
      <param name="isNullable">Indica se la proprietà ammette i valori Null.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Byte[],System.Boolean,System.String)">
      <summary>Assicura che il valore <see cref="T:System.Byte[]" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Byte" /> che viene convalidato.</returns>
      <param name="value">Valore passato nel metodo Set della proprietà.</param>
      <param name="isNullable">Flag che indica se questa proprietà può essere Null.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
      <exception cref="T:System.Data.ConstraintException">Se il valore è Null per un valore che non ammette i valori Null.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Data.Entity.Spatial.DbGeography,System.Boolean)">
      <summary>Verifica che la proprietà non sia Null e genera un'eccezione se lo è.</summary>
      <returns>Valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> che viene impostato.</returns>
      <param name="value">valore di <see cref="T:System.Data.Entity.Spatial.DbGeography" /> da verificare.</param>
      <param name="isNullable">Flag che indica se questa proprietà può essere Null.</param>
      <exception cref="T:System.Data.ConstraintException">Il valore è Null per una proprietà che non ammette i valori Null.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Data.Entity.Spatial.DbGeography,System.Boolean,System.String)">
      <summary>Verifica che la proprietà non sia Null e genera un'eccezione se lo è.</summary>
      <returns>Valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> che viene impostato.</returns>
      <param name="value">Valore di <see cref="T:System.Data.Entity.Spatial.DbGeography" /> da verificare.</param>
      <param name="isNullable">Flag che indica se questa proprietà può essere Null.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
      <exception cref="T:System.Data.ConstraintException">Il valore è Null per una proprietà che non ammette i valori Null.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Data.Entity.Spatial.DbGeometry,System.Boolean)">
      <summary>Verifica che la proprietà non sia Null e genera un'eccezione se lo è.</summary>
      <returns>Valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> che viene impostato.</returns>
      <param name="value">Valore di <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> da verificare.</param>
      <param name="isNullable">Flag che indica se questa proprietà può essere Null.</param>
      <exception cref="T:System.Data.ConstraintException">Il valore è Null per una proprietà che non ammette i valori Null.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Data.Entity.Spatial.DbGeometry,System.Boolean,System.String)">
      <summary>Verifica che la proprietà non sia Null e genera un'eccezione se lo è.</summary>
      <returns>Valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> che viene impostato.</returns>
      <param name="value">valore di <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> da verificare.</param>
      <param name="isNullable">Flag che indica se questa proprietà può essere Null.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
      <exception cref="T:System.Data.ConstraintException">Il valore è Null per una proprietà che non ammette i valori Null.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.DateTime)">
      <summary>Assicura che il valore <see cref="T:System.DateTime" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.DateTime" /> che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.DateTime" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.DateTime,System.String)">
      <summary>Assicura che il valore <see cref="T:System.DateTime" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.DateTime" /> che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.DateTime" />.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.DateTimeOffset)">
      <summary>Assicura che il valore <see cref="T:System.DateTimeOffset" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.DateTimeOffset" /> che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.DateTimeOffset" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.DateTimeOffset,System.String)">
      <summary>Assicura che il valore <see cref="T:System.DateTimeOffset" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.DateTimeOffset" /> che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.DateTimeOffset" />.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Decimal)">
      <summary>Assicura che il valore <see cref="T:System.Decimal" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Decimal" /> che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.Decimal" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Decimal,System.String)">
      <summary>Assicura che il valore <see cref="T:System.Decimal" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Decimal" /> che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.Decimal" />.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Double)">
      <summary>Assicura che il valore <see cref="T:System.Double" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Double" /> che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.Double" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Double,System.String)">
      <summary>Assicura che il valore <see cref="T:System.Double" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Double" /> che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.Double" />.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Guid)">
      <summary>Assicura che il valore <see cref="T:System.Guid" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Guid" /> che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.Guid" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Guid,System.String)">
      <summary>Assicura che il valore <see cref="T:System.Guid" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Guid" /> che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.Guid" />.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Int16)">
      <summary>Assicura che il valore <see cref="T:System.Int16" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Int16" /> che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.Int16" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Int16,System.String)">
      <summary>Assicura che il valore <see cref="T:System.Int16" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Int16" /> che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.Int16" />.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Int32)">
      <summary>Assicura che il valore <see cref="T:System.Int32" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Int32" /> che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.Int32" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Int32,System.String)">
      <summary>Assicura che il valore <see cref="T:System.Int32" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Int32" /> che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.Int32" />.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Int64)">
      <summary>Assicura che il valore <see cref="T:System.Int64" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Int64" /> che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.Int64" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Int64,System.String)">
      <summary>Assicura che il valore <see cref="T:System.Int64" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Int64" /> che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.Int64" />.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Boolean})">
      <summary>Assicura che il valore <see cref="T:System.Boolean" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Boolean" /> che ammette i valori Null che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.Boolean" /> che ammette i valori Null.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Boolean},System.String)">
      <summary>Assicura che il valore <see cref="T:System.Boolean" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Boolean" /> che ammette i valori Null che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.Boolean" /> che ammette i valori Null.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Byte})">
      <summary>Assicura che il valore <see cref="T:System.Byte" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Byte" /> che ammette i valori Null che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.Byte" /> che ammette i valori Null.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Byte},System.String)">
      <summary>Assicura che il valore <see cref="T:System.Byte" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Byte" /> che ammette i valori Null che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.Byte" /> che ammette i valori Null.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.DateTime})">
      <summary>Assicura che il valore <see cref="T:System.DateTime" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.DateTime" /> che ammette i valori Null che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.DateTime" /> che ammette i valori Null.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.DateTime},System.String)">
      <summary>Assicura che il valore <see cref="T:System.DateTime" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.DateTime" /> che ammette i valori Null che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.DateTime" /> che ammette i valori Null.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.DateTimeOffset})">
      <summary>Assicura che il valore <see cref="T:System.DateTimeOffset" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.DateTimeOffset" /> che ammette i valori Null che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.DateTimeOffset" /> che ammette i valori Null.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.DateTimeOffset},System.String)">
      <summary>Assicura che il valore <see cref="T:System.DateTimeOffset" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.DateTimeOffset" /> che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.DateTimeOffset" />.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Decimal})">
      <summary>Assicura che il valore <see cref="T:System.Decimal" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Decimal" /> che ammette i valori Null che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.Decimal" /> che ammette i valori Null.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Decimal},System.String)">
      <summary>Assicura che il valore <see cref="T:System.Decimal" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Decimal" /> che ammette i valori Null che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.Decimal" /> che ammette i valori Null.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Double})">
      <summary>Assicura che il valore <see cref="T:System.Double" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Double" /> che ammette i valori Null che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.Double" /> che ammette i valori Null.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Double},System.String)">
      <summary>Assicura che il valore <see cref="T:System.Double" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Double" /> che ammette i valori Null che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.Double" /> che ammette i valori Null.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Guid})">
      <summary>Assicura che il valore <see cref="T:System.Guid" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Guid" /> che ammette i valori Null che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.Guid" /> che ammette i valori Null.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Guid},System.String)">
      <summary>Assicura che il valore <see cref="T:System.Guid" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Guid" /> che ammette i valori Null che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.Guid" /> che ammette i valori Null.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int16})">
      <summary>Assicura che il valore <see cref="T:System.Int16" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Int16" /> che ammette i valori Null che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.Int16" /> che ammette i valori Null.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int16},System.String)">
      <summary>Assicura che il valore <see cref="T:System.Int16" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Int16" /> che ammette i valori Null che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.Int16" /> che ammette i valori Null.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int32})">
      <summary>Assicura che il valore <see cref="T:System.Int32" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Int32" /> che ammette i valori Null che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.Int32" /> che ammette i valori Null.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int32},System.String)">
      <summary>Assicura che il valore <see cref="T:System.Int32" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Int32" /> che ammette i valori Null che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.Int32" /> che ammette i valori Null.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int64})">
      <summary>Assicura che il valore <see cref="T:System.Int64" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Int64" /> che ammette i valori Null che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.Int64" /> che ammette i valori Null.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int64},System.String)">
      <summary>Assicura che il valore <see cref="T:System.Int64" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Int64" /> che ammette i valori Null che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.Int64" /> che ammette i valori Null.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.SByte})">
      <summary>Assicura che il valore <see cref="T:System.SByte" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.SByte" /> che ammette i valori Null che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.SByte" /> che ammette i valori Null.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.SByte},System.String)">
      <summary>Assicura che il valore <see cref="T:System.SByte" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.SByte" /> che ammette i valori Null che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.SByte" /> che ammette i valori Null.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Single})">
      <summary>Assicura che il valore <see cref="T:System.Single" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Single" /> che ammette i valori Null che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.Single" /> che ammette i valori Null.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Single},System.String)">
      <summary>Assicura che il valore <see cref="T:System.Single" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Single" /> che ammette i valori Null che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.Single" /> che ammette i valori Null.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.TimeSpan})">
      <summary>Assicura che il valore <see cref="T:System.TimeSpan" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.TimeSpan" /> che ammette i valori Null che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.TimeSpan" /> che ammette i valori Null.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.TimeSpan},System.String)">
      <summary>Assicura che il valore <see cref="T:System.TimeSpan" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.TimeSpan" /> che ammette i valori Null che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.TimeSpan" /> che ammette i valori Null.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt16})">
      <summary>Assicura che il valore UInt16 che verrà impostato per una proprietà sia valido.</summary>
      <returns>Valore UInt16 che ammette i valori Null che viene impostato.</returns>
      <param name="value">Valore UInt16 che ammette i valori Null.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt16},System.String)">
      <summary>Assicura che il valore UInt16 che verrà impostato per una proprietà sia valido.</summary>
      <returns>Valore UInt16 che ammette i valori Null che viene impostato.</returns>
      <param name="value">Valore UInt16 che ammette i valori Null.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt32})">
      <summary>Assicura che il valore UInt32 che verrà impostato per una proprietà sia valido.</summary>
      <returns>Valore UInt32 che ammette i valori Null che viene impostato.</returns>
      <param name="value">Valore UInt32 che ammette i valori Null.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt32},System.String)">
      <summary>Assicura che il valore UInt32 che verrà impostato per una proprietà sia valido.</summary>
      <returns>Valore UInt32 che ammette i valori Null che viene impostato.</returns>
      <param name="value">Valore UInt32 che ammette i valori Null.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt64})">
      <summary>Assicura che il valore <see cref="T:System.UInt64" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore UInt64 che ammette i valori Null che viene impostato.</returns>
      <param name="value">Valore UInt64 che ammette i valori Null.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt64},System.String)">
      <summary>Assicura che il valore <see cref="T:System.UInt64" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore UInt64 che ammette i valori Null che viene impostato.</returns>
      <param name="value">Valore UInt64 che ammette i valori Null.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.SByte)">
      <summary>Assicura che il valore <see cref="T:System.SByte" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.SByte" /> che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.SByte" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.SByte,System.String)">
      <summary>Assicura che il valore <see cref="T:System.SByte" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.SByte" /> che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.SByte" />.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Single)">
      <summary>Assicura che il valore Single che verrà impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Single" /> che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.Single" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.Single,System.String)">
      <summary>Assicura che il valore Single che verrà impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.Single" /> che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.Single" />.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.String,System.Boolean)">
      <summary>Verifica che la proprietà non sia Null e genera un'eccezione se lo è.</summary>
      <returns>Valore <see cref="T:System.String" /> convalidato.</returns>
      <param name="value">Valore stringa da verificare.</param>
      <param name="isNullable">Flag che indica se questa proprietà può essere Null.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.String,System.Boolean,System.String)">
      <summary>Verifica che la proprietà non sia Null e genera un'eccezione se lo è.</summary>
      <returns>Proprietà convalidata.</returns>
      <param name="value">Valore stringa da verificare.</param>
      <param name="isNullable">Flag che indica se questa proprietà può essere Null.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
      <exception cref="T:System.Data.ConstraintException">Il valore stringa è Null per una stringa che non ammette i valori Null.</exception>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.TimeSpan)">
      <summary>Assicura che il valore <see cref="T:System.TimeSpan" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.TimeSpan" /> che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.TimeSpan" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.TimeSpan,System.String)">
      <summary>Assicura che il valore <see cref="T:System.TimeSpan" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.TimeSpan" /> che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.TimeSpan" />.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt16)">
      <summary>Assicura che il valore <see cref="T:System.UInt16" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.UInt16" /> che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.UInt16" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt16,System.String)">
      <summary>Assicura che il valore <see cref="T:System.UInt16" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.UInt16" /> che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.UInt16" />.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt32)">
      <summary>Assicura che il valore <see cref="T:System.UInt32" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.UInt32" /> che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.UInt32" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt32,System.String)">
      <summary>Assicura che il valore <see cref="T:System.UInt32" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.UInt32" /> che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.UInt32" />.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt64)">
      <summary>Assicura che il valore <see cref="T:System.UInt64" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.UInt64" /> che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.UInt64" />.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt64,System.String)">
      <summary>Assicura che il valore <see cref="T:System.UInt64" /> impostato per una proprietà sia valido.</summary>
      <returns>Valore <see cref="T:System.UInt64" /> che viene impostato.</returns>
      <param name="value">Valore <see cref="T:System.UInt64" />.</param>
      <param name="propertyName">Nome della proprietà che verrà convalidata.</param>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.SetValidValue``1(``0,``0,System.String)">
      <summary>Imposta un oggetto complesso per la proprietà specificata.</summary>
      <returns>Tipo complesso che deriva dall'oggetto complesso.</returns>
      <param name="oldValue">Oggetto complesso originale per la proprietà, se presente.</param>
      <param name="newValue">Oggetto complesso che viene impostato.</param>
      <param name="property">Proprietà complessa da impostare sull'oggetto complesso.</param>
      <typeparam name="T">Tipo dell'oggetto che viene sostituito.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Core.Objects.DataClasses.StructuralObject.VerifyComplexObjectIsNotNull``1(``0,System.String)">
      <summary>Verifica che un oggetto complesso non sia null.</summary>
      <returns>Oggetto complesso da convalidare.</returns>
      <param name="complexObject">Oggetto complesso da convalidare.</param>
      <param name="propertyName">Proprietà complessa nell'oggetto padre associato a complexObject.</param>
      <typeparam name="TComplex">Tipo dell'oggetto complesso da verificare.</typeparam>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.CommitFailedException">
      <summary>Eccezione generata quando si verifica un errore che esegue il commit di <see cref="T:System.Data.Common.DbTransaction" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.CommitFailedException.#ctor">
      <summary>Inizializza una nuova istanza di <see cref="T:System.Data.Entity.Infrastructure.CommitFailedException" /> con i valori predefiniti.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.CommitFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.CommitFailedException" /> con dati serializzati.</summary>
      <param name="info">Dati necessari per serializzare o deserializzare un oggetto.</param>
      <param name="context">Descrizione dell'origine e della destinazione del flusso serializzato specificato.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.CommitFailedException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza di <see cref="T:System.Data.Entity.Infrastructure.CommitFailedException" /> con messaggio di errore.</summary>
      <param name="message">Messaggio dell'eccezione.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.CommitFailedException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza di <see cref="T:System.Data.Entity.Infrastructure.CommitFailedException" /> con messaggio di errore ed eccezione interna.</summary>
      <param name="message">Messaggio dell'eccezione.</param>
      <param name="innerException">Eccezione interna.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.CommitFailureHandler">
      <summary>Rappresenta un gestore delle transazioni che consente il recupero da errori di connessione non gravi durante il commit della transazione archiviando le informazioni di traccia della transazione nel database.Deve essere registrato tramite <see cref="M:System.Data.Entity.DbConfiguration.SetDefaultTransactionHandler(System.Func{System.Data.Entity.Infrastructure.TransactionHandler})" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.CommitFailureHandler.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.CommitFailureHandler" /> utilizzando l'oggetto <see cref="P:System.Data.Entity.Infrastructure.CommitFailureHandler.TransactionContext" /> predefinito.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.CommitFailureHandler.#ctor(System.Func{System.Data.Common.DbConnection,System.Data.Entity.Infrastructure.TransactionContext})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.CommitFailureHandler" />.</summary>
      <param name="transactionContextFactory">Factory del contesto della transazione.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.CommitFailureHandler.BeganTransaction(System.Data.Common.DbConnection,System.Data.Entity.Infrastructure.Interception.BeginTransactionInterceptionContext)">
      <summary>Archivia le informazioni di rilevamento per la nuova transazione nel database nella stessa transazione.</summary>
      <param name="connection">Connessione che ha avviato la transazione.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.CommitFailureHandler.BuildDatabaseInitializationScript">
      <summary>Genera lo script di inizializzazione del database.</summary>
      <returns>Script di inizializzazione del database.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.CommitFailureHandler.ClearTransactionHistory">
      <summary>Rimuove tutta la cronologia delle transazioni.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.CommitFailureHandler.ClearTransactionHistoryAsync">
      <summary>Rimuove in modo asincrono tutta la cronologia delle transazioni.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.CommitFailureHandler.ClearTransactionHistoryAsync(System.Threading.CancellationToken)">
      <summary>Rimuove in modo asincrono tutta la cronologia delle transazioni.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
      <param name="cancellationToken">Token di annullamento.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.CommitFailureHandler.Committed(System.Data.Common.DbTransaction,System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext)">
      <summary>Se viene generata un'eccezione, verifica la disponibilità della transazione nel database e genera nuovamente un'eccezione se non viene trovata.In caso contrario contrassegna il commit come completato e accoda le informazioni sulla transazione da eliminare.</summary>
      <param name="transaction">Transazione che è stata sottoposta al commit.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.CommitFailureHandler.Dispose(System.Boolean)">
      <summary>Rilascia le risorse usate da questo oggetto transazione.</summary>
      <param name="disposing">true per rilasciare sia le risorse gestite sia quelle non gestite; false per rilasciare solo quelle non gestite.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.CommitFailureHandler.Disposed(System.Data.Common.DbTransaction,System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext)">
      <summary>Arresta il rilevamento della transazione che è stata eliminata.</summary>
      <param name="transaction">Transazione che è stata eliminata.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.CommitFailureHandler.FromContext(System.Data.Entity.Core.Objects.ObjectContext)">
      <summary>Ottiene l'oggetto <see cref="T:System.Data.Entity.Infrastructure.CommitFailureHandler" /> associato a <paramref name="context" /> se esistente; in caso contrario restituisce null.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Infrastructure.CommitFailureHandler" /> associato.</returns>
      <param name="context">Contesto.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.CommitFailureHandler.FromContext(System.Data.Entity.DbContext)">
      <summary>Ottiene l'oggetto <see cref="T:System.Data.Entity.Infrastructure.CommitFailureHandler" /> associato a <paramref name="context" /> se esistente; in caso contrario restituisce null.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Infrastructure.CommitFailureHandler" /> associato.</returns>
      <param name="context">Contesto.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.CommitFailureHandler.Initialize(System.Data.Entity.Core.Objects.ObjectContext)">
      <summary>Inizializza le proprietà dell'istanza.</summary>
      <param name="context">Contesto.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.CommitFailureHandler.Initialize(System.Data.Entity.DbContext,System.Data.Common.DbConnection)">
      <summary>Inizializza le proprietà dell'istanza.</summary>
      <param name="context">Contesto.</param>
      <param name="connection">Connessione.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.CommitFailureHandler.MarkTransactionForPruning(System.Data.Entity.Infrastructure.TransactionRow)">
      <summary>Aggiunge la transazione specificata all'elenco delle transazioni che possono essere rimosse dal database</summary>
      <param name="transaction">Transazione da rimuovere dal database.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.CommitFailureHandler.PruneTransactionHistory">
      <summary>Rimuove le transazioni contrassegnate per l'eliminazione.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.CommitFailureHandler.PruneTransactionHistory(System.Boolean,System.Boolean)">
      <summary>Rimuove le transazioni contrassegnate per l'eliminazione se il numero è maggiore di <see cref="P:System.Data.Entity.Infrastructure.CommitFailureHandler.PruningLimit" />.</summary>
      <param name="force">true per rimuovere tutte le transazioni precedenti anche se il numero non supera <see cref="P:System.Data.Entity.Infrastructure.CommitFailureHandler.PruningLimit" />. In caso contrario, false.</param>
      <param name="useExecutionStrategy">true per eseguire l'operazione usando la strategia di esecuzione associata. In caso contrario, false.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.CommitFailureHandler.PruneTransactionHistoryAsync">
      <summary>Rimuove in modo asincrono le transazioni contrassegnate per l'eliminazione.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.CommitFailureHandler.PruneTransactionHistoryAsync(System.Boolean,System.Boolean,System.Threading.CancellationToken)">
      <summary>Rimuove le transazioni contrassegnate per l'eliminazione se il numero è maggiore di <see cref="P:System.Data.Entity.Infrastructure.CommitFailureHandler.PruningLimit" />.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
      <param name="force">true per rimuovere tutte le transazioni precedenti anche se il numero non supera <see cref="P:System.Data.Entity.Infrastructure.CommitFailureHandler.PruningLimit" />. In caso contrario, false.</param>
      <param name="useExecutionStrategy">true per eseguire l'operazione usando la strategia di esecuzione associata. In caso contrario, false.</param>
      <param name="cancellationToken">Token di annullamento.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.CommitFailureHandler.PruneTransactionHistoryAsync(System.Threading.CancellationToken)">
      <summary>Rimuove in modo asincrono le transazioni contrassegnate per l'eliminazione.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
      <param name="cancellationToken">Token di annullamento.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.CommitFailureHandler.PruningLimit">
      <summary>Ottiene il numero di transazioni da eseguire nel contesto prima che il log delle transazioni venga pulito.Il valore predefinito è 20.</summary>
      <returns>Numero di transazioni da eseguire nel contesto prima che il log delle transazioni venga pulito.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.CommitFailureHandler.RolledBack(System.Data.Common.DbTransaction,System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext)">
      <summary>Arresta il rilevamento della transazione sottoposta al rollback.</summary>
      <param name="transaction">Transazione che è stata sottoposta al rollback.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.CommitFailureHandler.TransactionContext">
      <summary>Ottiene il contesto della transazione.</summary>
      <returns>Contesto della transazione.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbChangeTracker">
      <summary>Restituito dal metodo ChangeTracker di <see cref="T:System.Data.Entity.DbContext" /> per fornire l'accesso alle caratteristiche del contesto correlate all'individuazione delle modifiche delle entità.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbChangeTracker.DetectChanges">
      <summary>Rileva le modifiche apportate alle proprietà e alle relazioni delle entità POCO.Si noti che alcuni tipi di entità, ad esempio proxy di individuazione delle modifiche ed entità che derivano da <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EntityObject" />, segnalano automaticamente le modifiche e che per questi tipi di entità una chiamata a DetectChanges non è normalmente necessaria.Si noti inoltre che DetectChanges viene in genere chiamato automaticamente da molti dei metodi di <see cref="T:System.Data.Entity.DbContext" /> e dalle relative classi correlate; è pertanto raro che questo metodo debba essere chiamato in modo esplicito.Potrebbe tuttavia essere auspicabile, in genere per motivi di prestazioni, disabilitare la chiamata automatica a DetectChanges utilizzando il flag AutoDetectChangesEnabled da <see cref="P:System.Data.Entity.DbContext.Configuration" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbChangeTracker.Entries">
      <summary>Ottiene gli oggetti <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> per tutte le entità rilevate da questo contesto.</summary>
      <returns>Voci.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbChangeTracker.Entries``1">
      <summary>Ottiene gli oggetti <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> per tutte le entità del tipo specificato rilevate da questo contesto.</summary>
      <returns>Voci.</returns>
      <typeparam name="TEntity">Tipo dell'entità.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbChangeTracker.Equals(System.Object)">
      <summary>Specifica se <see cref="T:System.Data.Entity.Infrastructure.DbChangeTracker" /> è uguale all'oggetto specificato.</summary>
      <returns>true se <see cref="T:System.Data.Entity.Infrastructure.DbChangeTracker" /> è uguale all'oggetto specificato; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbChangeTracker.GetHashCode">
      <summary>Ottiene il codice hash associato a <see cref="T:System.Data.Entity.Infrastructure.DbChangeTracker" />.</summary>
      <returns>Codice hash associato a <see cref="T:System.Data.Entity.Infrastructure.DbChangeTracker" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbChangeTracker.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbChangeTracker.HasChanges">
      <summary>Verifica se tramite l'oggetto <see cref="T:System.Data.Entity.DbContext" /> vengono rilevate eventuali entità o relazioni nuove, eliminate o modificate che verranno inviate al database se viene chiamato il metodo <see cref="M:System.Data.Entity.DbContext.SaveChanges" />.</summary>
      <returns>True se nell'oggetto <see cref="T:System.Data.Entity.DbContext" /> sottostante sono presenti modifiche, in caso contrario false.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbChangeTracker.ToString">
      <summary>Restituisce una rappresentazione in forma di stringa di <see cref="T:System.Data.Entity.Infrastructure.DbChangeTracker" />.</summary>
      <returns>Rappresentazione in forma di stringa di <see cref="T:System.Data.Entity.Infrastructure.DbChangeTracker" />.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbCollectionEntry">
      <summary>Rappresenta una versione non generica della classe <see cref="T:System.Data.Entity.Infrastructure.DbCollectionEntry`2" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbCollectionEntry.Cast``2">
      <summary>Restituisce l'oggetto <see cref="T:System.Data.Entity.Infrastructure.DbCollectionEntry`2" /> generico equivalente.</summary>
      <returns>Oggetto generico equivalente.</returns>
      <typeparam name="TEntity">Tipo di entità in cui viene dichiarato il membro.</typeparam>
      <typeparam name="TElement">Tipo dell'elemento della raccolta.</typeparam>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbCollectionEntry.CurrentValue">
      <summary>Ottiene o imposta il valore corrente della proprietà di navigazione.Il valore corrente è costituito dall'entità a cui fa riferimento la proprietà di navigazione.</summary>
      <returns>Valore corrente.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbCollectionEntry.EntityEntry">
      <summary>Ottiene <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> a cui appartiene questa proprietà di navigazione.</summary>
      <returns>Una voce per l'entità che possiede questa proprietà di navigazione.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbCollectionEntry.IsLoaded">
      <summary>Ottiene o imposta un valore che indica se tutte le entità di questa raccolta sono state caricate dal database.</summary>
      <returns>true se tutte le entità correlate vengono caricate o se IsLoaded è stato impostato in modo esplicito su true; in caso contrario false.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbCollectionEntry.Load">
      <summary>Carica la raccolta di entità dal database.Notare che le entità già esistenti nel contesto non vengono sovrascritte con i valori del database.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbCollectionEntry.LoadAsync">
      <summary>Carica in modo asincrono la raccolta di entità dal database.Notare che le entità già esistenti nel contesto non vengono sovrascritte con i valori del database.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbCollectionEntry.LoadAsync(System.Threading.CancellationToken)">
      <summary>Carica in modo asincrono la raccolta di entità dal database.Notare che le entità già esistenti nel contesto non vengono sovrascritte con i valori del database.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbCollectionEntry.Name">
      <summary>Ottiene il nome della proprietà.</summary>
      <returns>Nome della proprietà.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbCollectionEntry.Query">
      <summary>Restituisce la query che verrà utilizzata per caricare questa raccolta dal database.È possibile modificare la query restituita utilizzando LINQ per applicare filtri o eseguire operazioni nel database, come il conteggio del numero di entità contenute nella raccolta del database senza che vengano effettivamente caricate.</summary>
      <returns>Query per la raccolta.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbCollectionEntry`2">
      <summary>Le istanze di questa classe vengono restituite dal metodo Collection di <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> e consentono l'esecuzione di operazioni come il caricamento sulle proprietà di navigazione della raccolta di un'entità.</summary>
      <typeparam name="TEntity">Tipo dell'entità a cui appartiene questa proprietà.</typeparam>
      <typeparam name="TElement">Tipo dell'elemento contenuto nella raccolta di entità.</typeparam>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbCollectionEntry`2.CurrentValue">
      <summary>Ottiene o imposta il valore corrente della proprietà di navigazione.Il valore corrente è costituito dall'entità a cui fa riferimento la proprietà di navigazione.</summary>
      <returns>Valore corrente.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbCollectionEntry`2.EntityEntry">
      <summary>Oggetto <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> a cui appartiene questa proprietà di navigazione.</summary>
      <returns>Una voce per l'entità che possiede questa proprietà di navigazione.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbCollectionEntry`2.IsLoaded">
      <summary>Ottiene o imposta un valore che indica se tutte le entità di questa raccolta sono state caricate dal database.</summary>
      <returns>true se tutte le entità correlate vengono caricate o se IsLoaded è stato impostato in modo esplicito su true; in caso contrario false.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbCollectionEntry`2.Load">
      <summary>Carica la raccolta di entità dal database.Notare che le entità già esistenti nel contesto non vengono sovrascritte con i valori del database.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbCollectionEntry`2.LoadAsync">
      <summary>Carica in modo asincrono la raccolta di entità dal database.Notare che le entità già esistenti nel contesto non vengono sovrascritte con i valori del database.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbCollectionEntry`2.LoadAsync(System.Threading.CancellationToken)">
      <summary>Carica in modo asincrono la raccolta di entità dal database.Notare che le entità già esistenti nel contesto non vengono sovrascritte con i valori del database.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbCollectionEntry`2.Name">
      <summary>Ottiene il nome della proprietà.</summary>
      <returns>Nome della proprietà.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbCollectionEntry`2.op_Implicit(System.Data.Entity.Infrastructure.DbCollectionEntry{`0,`1})~System.Data.Entity.Infrastructure.DbCollectionEntry">
      <summary>Restituisce una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbCollectionEntry" /> non generica per la proprietà di navigazione rappresentata da questo oggetto.</summary>
      <returns>Versione non generica.</returns>
      <param name="entry">Oggetto che rappresenta la proprietà di navigazione.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbCollectionEntry`2.Query">
      <summary>Restituisce la query che verrà utilizzata per caricare questa raccolta dal database.È possibile modificare la query restituita utilizzando LINQ per applicare filtri o eseguire operazioni nel database, come il conteggio del numero di entità contenute nella raccolta del database senza che vengano effettivamente caricate.</summary>
      <returns>Query per la raccolta.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbCompiledModel">
      <summary>Rappresentazione non modificabile di un modello Entity Data Model (EDM) che può essere utilizzato per creare un oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" /> o passato al costruttore di <see cref="T:System.Data.Entity.DbContext" />.Per incrementare le prestazioni, le istanze di questo tipo devono essere memorizzate nella cache e riutilizzate per la costruzione di contesti.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbCompiledModel.CreateObjectContext``1(System.Data.Common.DbConnection)">
      <summary>Crea un'istanza di ObjectContext o una classe derivata da ObjectContext.Si noti che è invece possibile creare un'istanza di DbContext tramite il costruttore DbContext adatto.Se viene utilizzato un ObjectContext derivato, questo deve disporre di un costruttore pubblico con un solo parametro EntityConnection.La connessione passata viene utilizzata dall'ObjectContext creato, ma appartiene al contesto.Il chiamante deve eliminare la connessione dopo l'eliminazione del contesto.</summary>
      <returns>Contesto.</returns>
      <param name="existingConnection">Connessione esistente al database per l'utilizzo da parte del contesto.</param>
      <typeparam name="TContext">Tipo di contesto da creare.</typeparam>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbComplexPropertyEntry">
      <summary>Versione non generica della classe <see cref="T:System.Data.Entity.Infrastructure.DbComplexPropertyEntry`2" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbComplexPropertyEntry.Cast``2">
      <summary>Restituisce l'oggetto <see cref="T:System.Data.Entity.Infrastructure.DbComplexPropertyEntry`2" /> generico equivalente.</summary>
      <returns>Oggetto generico equivalente.</returns>
      <typeparam name="TEntity">Tipo di entità in cui viene dichiarato il membro.</typeparam>
      <typeparam name="TComplexProperty">Tipo della proprietà complessa.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbComplexPropertyEntry.ComplexProperty(System.String)">
      <summary>Ottiene un oggetto che rappresenta una proprietà annidata complessa della proprietà.</summary>
      <returns>Oggetto che rappresenta la proprietà annidata.</returns>
      <param name="propertyName">Nome della proprietà annidata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbComplexPropertyEntry.Property(System.String)">
      <summary>Ottiene un oggetto che rappresenta una proprietà annidata della proprietà.Questo metodo può essere utilizzato sia per le proprietà scalari che per quelle complesse.</summary>
      <returns>Oggetto che rappresenta la proprietà annidata.</returns>
      <param name="propertyName">Nome della proprietà annidata.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbComplexPropertyEntry`2">
      <summary>Le istanze di questa classe vengono restituite dal metodo ComplexProperty di <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> e consentono l'accesso allo stato di una proprietà complessa.</summary>
      <typeparam name="TEntity">Tipo dell'entità a cui appartiene questa proprietà.</typeparam>
      <typeparam name="TComplexProperty">Tipo della proprietà.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbComplexPropertyEntry`2.ComplexProperty``1(System.Linq.Expressions.Expression{System.Func{`1,``0}})">
      <summary>Ottiene un oggetto che rappresenta una proprietà annidata complessa della proprietà.</summary>
      <returns>Oggetto che rappresenta la proprietà annidata.</returns>
      <param name="property">Espressione che rappresenta la proprietà annidata.</param>
      <typeparam name="TNestedComplexProperty">Tipo della proprietà annidata.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbComplexPropertyEntry`2.ComplexProperty(System.String)">
      <summary>Ottiene un oggetto che rappresenta una proprietà annidata complessa della proprietà.</summary>
      <returns>Oggetto che rappresenta la proprietà annidata.</returns>
      <param name="propertyName">Nome della proprietà annidata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbComplexPropertyEntry`2.ComplexProperty``1(System.String)">
      <summary>Ottiene un oggetto che rappresenta una proprietà annidata complessa della proprietà.</summary>
      <returns>Oggetto che rappresenta la proprietà annidata.</returns>
      <param name="propertyName">Nome della proprietà annidata.</param>
      <typeparam name="TNestedComplexProperty">Tipo della proprietà annidata.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbComplexPropertyEntry`2.op_Implicit(System.Data.Entity.Infrastructure.DbComplexPropertyEntry{`0,`1})~System.Data.Entity.Infrastructure.DbComplexPropertyEntry">
      <summary>Restituisce una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbComplexPropertyEntry" /> non generica per la proprietà rappresentata da questo oggetto.</summary>
      <returns>Versione non generica.</returns>
      <param name="entry">Oggetto che rappresenta la proprietà.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbComplexPropertyEntry`2.Property``1(System.Linq.Expressions.Expression{System.Func{`1,``0}})">
      <summary>Ottiene un oggetto che rappresenta una proprietà annidata della proprietà.Questo metodo può essere utilizzato sia per le proprietà scalari che per quelle complesse.</summary>
      <returns>Oggetto che rappresenta la proprietà annidata.</returns>
      <param name="property">Espressione che rappresenta la proprietà annidata.</param>
      <typeparam name="TNestedProperty">Tipo della proprietà annidata.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbComplexPropertyEntry`2.Property``1(System.String)">
      <summary>Ottiene un oggetto che rappresenta una proprietà annidata della proprietà.Questo metodo può essere utilizzato sia per le proprietà scalari che per quelle complesse.</summary>
      <returns>Oggetto che rappresenta la proprietà annidata.</returns>
      <param name="propertyName">Nome della proprietà annidata.</param>
      <typeparam name="TNestedProperty">Tipo della proprietà annidata.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbComplexPropertyEntry`2.Property(System.String)">
      <summary>Ottiene un oggetto che rappresenta una proprietà annidata della proprietà.Questo metodo può essere utilizzato sia per le proprietà scalari che per quelle complesse.</summary>
      <returns>Oggetto che rappresenta la proprietà annidata.</returns>
      <param name="propertyName">Nome della proprietà annidata.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbConnectionInfo">
      <summary>Rappresenta le informazioni su una connessione di database.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbConnectionInfo.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbConnectionInfo" /> che rappresenta una connessione specificata nel file di configurazione dell'applicazione.</summary>
      <param name="connectionName">Nome della stringa di connessione contenuta nella configurazione dell'applicazione.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbConnectionInfo.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbConnectionInfo" /> in base a una stringa di connessione.</summary>
      <param name="connectionString">Stringa di connessione da utilizzare per la connessione.</param>
      <param name="providerInvariantName">Nome del provider da utilizzare per la connessione.Utilizzare 'System.Data.SqlClient' per SQL Server.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbConnectionInfo.Equals(System.Object)">
      <summary>Determina se il tipo <see cref="T:System.Data.Entity.Infrastructure.DbConnectionInfo" /> corrente è uguale a un tipo di oggetto fornito.</summary>
      <returns>true se il tipo <see cref="T:System.Data.Entity.Infrastructure.DbConnectionInfo" /> corrente è uguale al tipo di oggetto specificato; in caso contrario, false.</returns>
      <param name="obj">Oggetto confrontato con l'oggetto <see cref="T:System.Data.Entity.Infrastructure.DbConnectionInfo" /> corrente.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbConnectionInfo.GetHashCode">
      <summary>Genera un valore che rappresenta la connessione corrente.</summary>
      <returns>Valore che rappresenta la connessione corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbConnectionInfo.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbConnectionInfo.ToString">
      <summary>Converte l'oggetto <see cref="T:System.Data.Entity.Infrastructure.DbConnectionInfo" /> in una stringa.</summary>
      <returns>Unità corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbConnectionStringOrigin">
      <summary>Descrive l'origine della stringa di connessione al database associata a un oggetto <see cref="T:System.Data.Entity.DbContext" />.</summary>
    </member>
    <member name="F:System.Data.Entity.Infrastructure.DbConnectionStringOrigin.Configuration">
      <summary>La stringa di connessione è stata letta dalla configurazione esterna.</summary>
    </member>
    <member name="F:System.Data.Entity.Infrastructure.DbConnectionStringOrigin.Convention">
      <summary>La stringa di connessione è stata creata in base alla convenzione.</summary>
    </member>
    <member name="F:System.Data.Entity.Infrastructure.DbConnectionStringOrigin.DbContextInfo">
      <summary>La stringa di connessione è stata sottoposta a override dalle informazioni sulla connessione fornite a DbContextInfo.</summary>
    </member>
    <member name="F:System.Data.Entity.Infrastructure.DbConnectionStringOrigin.UserCode">
      <summary>La stringa di connessione è stata specificata in modo esplicito in fase di esecuzione.</summary>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbContextConfiguration">
      <summary>Restituito dal metodo Configuration di <see cref="T:System.Data.Entity.DbContext" /> per fornire l'accesso alle opzioni di configurazione per il contesto.</summary>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbContextConfiguration.AutoDetectChangesEnabled">
      <summary>Ottiene o imposta un valore che indica se il metodo <see cref="M:System.Data.Entity.Infrastructure.DbChangeTracker.DetectChanges" /> viene chiamato automaticamente dai metodi di <see cref="T:System.Data.Entity.DbContext" /> e classi correlate.Il valore predefinito è true.</summary>
      <returns>true se deve essere chiamato automaticamente; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbContextConfiguration.EnsureTransactionsForFunctionsAndCommands">
      <summary>Ottiene o imposta il valore che determina se le funzioni e i comandi SQL devono essere sempre eseguiti in una transazione.</summary>
      <returns>Comportamento predefinito della transazione.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbContextConfiguration.Equals(System.Object)">
      <summary>Specifica se la configurazione è uguale all'oggetto specificato.</summary>
      <returns>true se la configurazione è uguale all'oggetto specificato; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbContextConfiguration.GetHashCode">
      <summary>Ottiene il codice hash associato alla configurazione.</summary>
      <returns>Codice hash associato alla configurazione.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbContextConfiguration.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbContextConfiguration.LazyLoadingEnabled">
      <summary>Ottiene o imposta un valore che indica se è abilitato il caricamento lazy di relazioni esposte come proprietà di navigazione.Il caricamento lazy è abilitato per impostazione predefinita.</summary>
      <returns>true se il caricamento lazy è abilitato; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbContextConfiguration.ProxyCreationEnabled">
      <summary>Ottiene o imposta un valore che indica se il framework creerà istanze di classi proxy generate dinamicamente ogni volta che viene da esso creata un'istanza di un tipo di entità.Notare che anche se la creazione di proxy è abilitata con questo flag, le istanze del proxy verranno create solo per tipi di entità che soddisfano i requisiti per l'inserimento nel proxy.La creazione di proxy è abilitata per impostazione predefinita.</summary>
      <returns>true se la creazione di proxy è abilitata; in caso contrario, false.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbContextConfiguration.ToString">
      <summary>Restituisce una rappresentazione in forma di stringa di <see cref="T:System.Data.Entity.Infrastructure.DbContextConfiguration" />.</summary>
      <returns>Rappresentazione in forma di stringa di <see cref="T:System.Data.Entity.Infrastructure.DbContextConfiguration" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbContextConfiguration.UseDatabaseNullSemantics">
      <summary>Ottiene o imposta un valore che indica se viene esibita la semantica Null del database durante il confronto di due operandi per i quali vengono potenzialmente ammessi i valori Null.Il valore predefinito è false.Ad esempio, (operand1 == operand2) sarà convertito in: (operand1 = operand2) se UseDatabaseNullSemantics è true, rispettivamente (((operand1 = operand2) AND (NOT (operand1 IS NULL OR operand2 IS NULL))) OR ((operand1 IS NULL) AND (operand2 IS NULL))) se UseDatabaseNullSemantics è false.</summary>
      <returns>true se il comportamento di confronto Null del database è abilitato; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbContextConfiguration.ValidateOnSaveEnabled">
      <summary>Ottiene o imposta un valore che indica se le entità rilevate devono essere convalidate automaticamente quando viene richiamato l'oggetto <see cref="M:System.Data.Entity.DbContext.SaveChanges" />.Il valore predefinito è true.</summary>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbContextInfo">
      <summary>Vengono fornite informazioni di runtime su un tipo <see cref="T:System.Data.Entity.DbContext" /> specificato.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbContextInfo.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbContextInfo" /> con il tipo di contesto specificato.</summary>
      <param name="contextType">Tipo <see cref="T:System.Data.Entity.DbContext" /> concreto.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbContextInfo.#ctor(System.Type,System.Configuration.Configuration)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbContextInfo" /> con il tipo di contesto e il file di configurazione specificato.</summary>
      <param name="contextType">Tipo <see cref="T:System.Data.Entity.DbContext" /> concreto.</param>
      <param name="config">Oggetto che rappresenta il file di configurazione.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbContextInfo.#ctor(System.Type,System.Configuration.Configuration,System.Data.Entity.Infrastructure.DbConnectionInfo)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbContextInfo" /> usando le informazioni di connessione, il tipo di contesto e il file di configurazione specificati.</summary>
      <param name="contextType">Tipo derivante da <see cref="T:System.Data.Entity.DbContext" />.</param>
      <param name="config">Oggetto che rappresenta il file di configurazione.</param>
      <param name="connectionInfo">Informazioni sulla connessione per il database da utilizzare.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbContextInfo.#ctor(System.Type,System.Configuration.Configuration,System.Data.Entity.Infrastructure.DbProviderInfo)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbContextInfo" /> usando le informazioni sul provider, il tipo di contesto e il file di configurazione specificati.</summary>
      <param name="contextType">Tipo derivante da <see cref="T:System.Data.Entity.DbContext" />.</param>
      <param name="config">Oggetto che rappresenta il file di configurazione.</param>
      <param name="modelProviderInfo">Oggetto <see cref="T:System.Data.Entity.Infrastructure.DbProviderInfo" /> che specifica il provider ADO.NET sottostante di destinazione.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbContextInfo.#ctor(System.Type,System.Configuration.ConnectionStringSettingsCollection)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbContextInfo" /> con il tipo di contesto specificato e l'impostazione specificata per la stringa di connessione.</summary>
      <param name="contextType">Tipo derivante da <see cref="T:System.Data.Entity.DbContext" />.</param>
      <param name="connectionStringSettings">Raccolta di stringhe di connessione.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbContextInfo.#ctor(System.Type,System.Data.Entity.Infrastructure.DbConnectionInfo)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbContextInfo" /> usando il tipo di contesto specificato e le informazioni di connessione specificate.</summary>
      <param name="contextType">Tipo derivante da <see cref="T:System.Data.Entity.DbContext" />.</param>
      <param name="connectionInfo">Informazioni sulla connessione per il database da utilizzare.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbContextInfo.#ctor(System.Type,System.Data.Entity.Infrastructure.DbProviderInfo)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbContextInfo" /> usando il tipo di contesto specificato e le informazioni sul provider specificate.</summary>
      <param name="contextType">Tipo derivante da <see cref="T:System.Data.Entity.DbContext" />.</param>
      <param name="modelProviderInfo">Oggetto <see cref="T:System.Data.Entity.Infrastructure.DbProviderInfo" /> che specifica il provider ADO.NET sottostante di destinazione.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbContextInfo.ConnectionProviderName">
      <summary>Ottiene il nome del provider ADO.NET della connessione utilizzata dal tipo <see cref="T:System.Data.Entity.DbContext" /> sottostante.</summary>
      <returns>Nome del provider ADO.NET della connessione utilizzata dal tipo <see cref="T:System.Data.Entity.DbContext" /> sottostante.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbContextInfo.ConnectionString">
      <summary>Ottiene la stringa di connessione utilizzata dal tipo <see cref="T:System.Data.Entity.DbContext" /> sottostante.</summary>
      <returns>Stringa di connessione utilizzata dal tipo <see cref="T:System.Data.Entity.DbContext" /> sottostante.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbContextInfo.ConnectionStringName">
      <summary>Ottiene il nome della stringa di connessione utilizzato dal tipo <see cref="T:System.Data.Entity.DbContext" /> sottostante.</summary>
      <returns>Nome della stringa di connessione utilizzato dal tipo <see cref="T:System.Data.Entity.DbContext" /> sottostante.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbContextInfo.ConnectionStringOrigin">
      <summary>Ottiene l'origine della stringa di connessione utilizzata dal tipo <see cref="T:System.Data.Entity.DbContext" /> sottostante.</summary>
      <returns>Origine della stringa di connessione utilizzata dal tipo <see cref="T:System.Data.Entity.DbContext" /> sottostante.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbContextInfo.ContextType">
      <summary>Ottiene il tipo <see cref="T:System.Data.Entity.DbContext" /> concreto.</summary>
      <returns>Tipo <see cref="T:System.Data.Entity.DbContext" /> concreto.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbContextInfo.CreateInstance">
      <summary>Crea un'istanza dell'oggetto <see cref="T:System.Data.Entity.Infrastructure.DbContextInfo" />.</summary>
      <returns>Istanza creata.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbContextInfo.IsConstructible">
      <summary>Ottiene un valore che indica se è possibile creare il tipo <see cref="T:System.Data.Entity.DbContext" /> sottostante.</summary>
      <returns>true se è possibile creare il tipo <see cref="T:System.Data.Entity.DbContext" /> sottostante. In caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbContextInfo.OnModelCreating">
      <summary>Ottiene o imposta un'azione da eseguire in DbModelBuilder dopo l'esecuzione di OnModelCreating nel contesto.</summary>
      <returns>Azione da eseguire in DbModelBuilder dopo l'esecuzione di OnModelCreating nel contesto.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbEntityEntry">
      <summary>Versione non generica della classe <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry.Cast``1">
      <summary>Restituisce una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> generica per il tipo generico specificato per l'entità rilevata rappresentata da questo oggetto.Si noti che il tipo dell'entità rilevata deve essere compatibile con il tipo generico. In caso contrario, verrà generata un'eccezione.</summary>
      <returns>Una versione generica.</returns>
      <typeparam name="TEntity">Tipo dell'entità.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry.Collection(System.String)">
      <summary>Ottiene un oggetto che rappresenta la proprietà di navigazione della raccolta da questa entità a una raccolta di entità correlate.</summary>
      <returns>Oggetto che rappresenta la proprietà di navigazione.</returns>
      <param name="navigationProperty">Nome della proprietà di navigazione.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry.ComplexProperty(System.String)">
      <summary>Ottiene un oggetto che rappresenta una proprietà complessa dell'entità.</summary>
      <returns>Oggetto che rappresenta la proprietà complessa.</returns>
      <param name="propertyName">Nome della proprietà complessa.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbEntityEntry.CurrentValues">
      <summary>Ottiene i valori di proprietà correnti per l'entità rilevata rappresentata da questo oggetto.</summary>
      <returns>Valori correnti.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbEntityEntry.Entity">
      <summary>Ottiene l'entità.</summary>
      <returns>Entità.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry.Equals(System.Data.Entity.Infrastructure.DbEntityEntry)">
      <summary>Determina se l'oggetto <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> specificato è uguale a questa istanza.Due istanze di <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> sono considerate uguali se sono entrambe voci della stessa entità nello stesso <see cref="T:System.Data.Entity.DbContext" />.</summary>
      <returns>true se l'oggetto specificato <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> è uguale a questa istanza; in caso contrario false.</returns>
      <param name="other">Oggetto <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> da confrontare con questa istanza.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry.Equals(System.Object)">
      <summary>Determina se l'oggetto <see cref="T:System.Object" /> specificato è uguale a questa istanza.Due istanze di <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> sono considerate uguali se sono entrambe voci della stessa entità nello stesso <see cref="T:System.Data.Entity.DbContext" />.</summary>
      <returns>true se l'oggetto specificato <see cref="T:System.Object" /> è uguale a questa istanza; in caso contrario false.</returns>
      <param name="obj">Oggetto <see cref="T:System.Object" /> da confrontare con questa istanza.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry.GetDatabaseValues">
      <summary>Consente di eseguire una query sul database per individuare copie dei valori dell'entità rilevata uguali a quelli attualmente presenti nel database.Si noti che la modifica dei valori nel dizionario restituito non determinerà l'aggiornamento dei valori nel database.Se l'entità non è presente nel database, viene restituito Null.</summary>
      <returns>Valori archivio.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry.GetDatabaseValuesAsync">
      <summary>Consente di eseguire query sul database in modo asincrono per trovare copie dei valori dell'entità rilevata uguali a quelli attualmente presenti nel database.Si noti che la modifica dei valori nel dizionario restituito non determinerà l'aggiornamento dei valori nel database.Se l'entità non è presente nel database, viene restituito Null.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene i valori dell'archivio.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry.GetDatabaseValuesAsync(System.Threading.CancellationToken)">
      <summary>Consente di eseguire query sul database in modo asincrono per trovare copie dei valori dell'entità rilevata uguali a quelli attualmente presenti nel database.Si noti che la modifica dei valori nel dizionario restituito non determinerà l'aggiornamento dei valori nel database.Se l'entità non è presente nel database, viene restituito Null.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene i valori dell'archivio.</returns>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry.GetHashCode">
      <summary>Restituisce un codice hash per questa istanza.</summary>
      <returns>Codice hash per questa istanza, adatto per l'utilizzo in algoritmi hash e in strutture di dati, ad esempio una tabella hash.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry.GetValidationResult">
      <summary>Convalida questa istanza di <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> e restituisce il risultato della convalida.</summary>
      <returns>Risultato della convalida dell'entità.Può essere Null se il metodo <see cref="M:System.Data.Entity.DbContext.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})" /> viene sottoposto a override.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry.Member(System.String)">
      <summary>Ottiene un oggetto che rappresenta un membro dell'entità.Il tipo di runtime dell'oggetto restituito varierà a seconda del tipo di membro richiesto.I tipi di membri attualmente supportati e i relativi tipi restituiti sono: Proprietà di navigazione di riferimento: <see cref="T:System.Data.Entity.Infrastructure.DbReferenceEntry" />.Proprietà di navigazione della raccolta: <see cref="T:System.Data.Entity.Infrastructure.DbCollectionEntry" />.Proprietà primitiva/scalare: <see cref="T:System.Data.Entity.Infrastructure.DbPropertyEntry" />.Proprietà complessa: <see cref="T:System.Data.Entity.Infrastructure.DbComplexPropertyEntry" />.</summary>
      <returns>Oggetto che rappresenta il membro.</returns>
      <param name="propertyName">Nome del membro.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbEntityEntry.OriginalValues">
      <summary>Ottiene i valori di proprietà originali per l'entità rilevata rappresentata da questo oggetto.I valori originali sono generalmente i valori di proprietà dell'entità al momento dell'esecuzione dell'ultima query dal database.</summary>
      <returns>Valori originali.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry.Property(System.String)">
      <summary>Ottiene un oggetto che rappresenta una proprietà scalare o complessa dell'entità.</summary>
      <returns>Oggetto che rappresenta la proprietà.</returns>
      <param name="propertyName">Nome della proprietà.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry.Reference(System.String)">
      <summary>Ottiene un oggetto che rappresenta la proprietà di navigazione di riferimento (cioènon di raccolta) da questa entità a un'altra entità.</summary>
      <returns>Oggetto che rappresenta la proprietà di navigazione.</returns>
      <param name="navigationProperty">Nome della proprietà di navigazione.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry.Reload">
      <summary>Ricarica l'entità dal database sovrascrivendo i valori di proprietà con i valori del database.Dopo aver chiamato questo metodo, lo stato dell'entità sarà Unchanged.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry.ReloadAsync">
      <summary>Ricarica in modo asincrono l'entità dal database sovrascrivendo i valori di proprietà con i valori del database.Dopo aver chiamato questo metodo, lo stato dell'entità sarà Unchanged.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry.ReloadAsync(System.Threading.CancellationToken)">
      <summary>Ricarica in modo asincrono l'entità dal database sovrascrivendo i valori di proprietà con i valori del database.Dopo aver chiamato questo metodo, lo stato dell'entità sarà Unchanged.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbEntityEntry.State">
      <summary>Ottiene o imposta lo stato dell'entità.</summary>
      <returns>Stato.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry.ToString">
      <summary>Restituisce una rappresentazione di stringa di <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" />.</summary>
      <returns>Rappresentazione di stringa di <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" />.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbEntityEntry`1">
      <summary>Le istanze di questa classe forniscono accesso alle informazioni sulle entità che vengono rilevate da <see cref="T:System.Data.Entity.DbContext" /> e sul relativo controllo.Utilizzare i metodi Entity o Entities del contesto per ottenere oggetti di questo tipo.</summary>
      <typeparam name="TEntity">Tipo dell'entità.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Collection``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.ICollection{``0}}})">
      <summary>Ottiene un oggetto che rappresenta la proprietà di navigazione della raccolta da questa entità a una raccolta di entità correlate.</summary>
      <returns>Oggetto che rappresenta la proprietà di navigazione.</returns>
      <param name="navigationProperty">Espressione che rappresenta la proprietà di navigazione.</param>
      <typeparam name="TElement">Tipo di elementi contenuti nella raccolta.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Collection``1(System.String)">
      <summary>Ottiene un oggetto che rappresenta la proprietà di navigazione della raccolta da questa entità a una raccolta di entità correlate.</summary>
      <returns>Oggetto che rappresenta la proprietà di navigazione.</returns>
      <param name="navigationProperty">Nome della proprietà di navigazione.</param>
      <typeparam name="TElement">Tipo di elementi contenuti nella raccolta.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Collection(System.String)">
      <summary>Ottiene un oggetto che rappresenta la proprietà di navigazione della raccolta da questa entità a una raccolta di entità correlate.</summary>
      <returns>Oggetto che rappresenta la proprietà di navigazione.</returns>
      <param name="navigationProperty">Nome della proprietà di navigazione.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.ComplexProperty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Ottiene un oggetto che rappresenta una proprietà complessa dell'entità.</summary>
      <returns>Oggetto che rappresenta la proprietà complessa.</returns>
      <param name="property">Espressione che rappresenta la proprietà complessa.</param>
      <typeparam name="TComplexProperty">Tipo della proprietà complessa.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.ComplexProperty``1(System.String)">
      <summary>Ottiene un oggetto che rappresenta una proprietà complessa dell'entità.</summary>
      <returns>Oggetto che rappresenta la proprietà complessa.</returns>
      <param name="propertyName">Nome della proprietà complessa.</param>
      <typeparam name="TComplexProperty">Tipo della proprietà complessa.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.ComplexProperty(System.String)">
      <summary>Ottiene un oggetto che rappresenta una proprietà complessa dell'entità.</summary>
      <returns>Oggetto che rappresenta la proprietà complessa.</returns>
      <param name="propertyName">Nome della proprietà complessa.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbEntityEntry`1.CurrentValues">
      <summary>Ottiene i valori di proprietà correnti per l'entità rilevata rappresentata da questo oggetto.</summary>
      <returns>Valori correnti.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbEntityEntry`1.Entity">
      <summary>Ottiene l'entità.</summary>
      <returns>Entità.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Equals(System.Data.Entity.Infrastructure.DbEntityEntry{`0})">
      <summary>Determina se l'oggetto <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> specificato è uguale a questa istanza.Due istanze di <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> sono considerate uguali se sono entrambe voci della stessa entità nello stesso <see cref="T:System.Data.Entity.DbContext" />.</summary>
      <returns>true se l'oggetto specificato <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> è uguale a questa istanza; in caso contrario false.</returns>
      <param name="other">Oggetto <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> da confrontare con questa istanza.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Equals(System.Object)">
      <summary>Determina se l'oggetto <see cref="T:System.Object" /> specificato è uguale a questa istanza.Due istanze di <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> sono considerate uguali se sono entrambe voci della stessa entità nello stesso <see cref="T:System.Data.Entity.DbContext" />.</summary>
      <returns>true se l'oggetto specificato <see cref="T:System.Object" /> è uguale a questa istanza; in caso contrario false.</returns>
      <param name="obj">Oggetto <see cref="T:System.Object" /> da confrontare con questa istanza.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.GetDatabaseValues">
      <summary>Consente di eseguire una query sul database per individuare copie dei valori dell'entità rilevata uguali a quelli attualmente presenti nel database.Si noti che la modifica dei valori nel dizionario restituito non determinerà l'aggiornamento dei valori nel database.Se l'entità non è presente nel database, viene restituito Null.</summary>
      <returns>Valori archivio.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.GetDatabaseValuesAsync">
      <summary>Consente di eseguire query sul database in modo asincrono per trovare copie dei valori dell'entità rilevata uguali a quelli attualmente presenti nel database.Si noti che la modifica dei valori nel dizionario restituito non determinerà l'aggiornamento dei valori nel database.Se l'entità non è presente nel database, viene restituito Null.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene i valori dell'archivio.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.GetDatabaseValuesAsync(System.Threading.CancellationToken)">
      <summary>Consente di eseguire query sul database in modo asincrono per trovare copie dei valori dell'entità rilevata uguali a quelli attualmente presenti nel database.Si noti che la modifica dei valori nel dizionario restituito non determinerà l'aggiornamento dei valori nel database.Se l'entità non è presente nel database, viene restituito Null.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene i valori dell'archivio.</returns>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.GetHashCode">
      <summary>Restituisce un codice hash per questa istanza.</summary>
      <returns>Codice hash per questa istanza, adatto per l'utilizzo in algoritmi hash e in strutture di dati, ad esempio una tabella hash.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.GetValidationResult">
      <summary>Convalida questa istanza di <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> e restituisce il risultato della convalida.</summary>
      <returns>Risultato della convalida dell'entità.Può essere Null se il metodo <see cref="M:System.Data.Entity.DbContext.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})" /> viene sottoposto a override.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Member``1(System.String)">
      <summary>Ottiene un oggetto che rappresenta un membro dell'entità.Il tipo di runtime dell'oggetto restituito varierà a seconda del tipo di membro richiesto.I tipi di membri attualmente supportati e i relativi tipi restituiti sono: Proprietà di navigazione di riferimento: <see cref="T:System.Data.Entity.Infrastructure.DbReferenceEntry`2" />.Proprietà di navigazione della raccolta: <see cref="T:System.Data.Entity.Infrastructure.DbCollectionEntry`2" />.Proprietà primitiva/scalare: <see cref="T:System.Data.Entity.Infrastructure.DbPropertyEntry`2" />.Proprietà complessa: <see cref="T:System.Data.Entity.Infrastructure.DbComplexPropertyEntry`2" />.</summary>
      <returns>Oggetto che rappresenta il membro.</returns>
      <param name="propertyName">Nome del membro.</param>
      <typeparam name="TMember">Tipo di membro.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Member(System.String)">
      <summary>Ottiene un oggetto che rappresenta un membro dell'entità.Il tipo di runtime dell'oggetto restituito varierà a seconda del tipo di membro richiesto.I tipi di membri attualmente supportati e i relativi tipi restituiti sono: Proprietà di navigazione di riferimento: <see cref="T:System.Data.Entity.Infrastructure.DbReferenceEntry" />.Proprietà di navigazione della raccolta: <see cref="T:System.Data.Entity.Infrastructure.DbCollectionEntry" />.Proprietà primitiva/scalare: <see cref="T:System.Data.Entity.Infrastructure.DbPropertyEntry" />.Proprietà complessa: <see cref="T:System.Data.Entity.Infrastructure.DbComplexPropertyEntry" />.</summary>
      <returns>Oggetto che rappresenta il membro.</returns>
      <param name="propertyName">Nome del membro.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.op_Implicit(System.Data.Entity.Infrastructure.DbEntityEntry{`0})~System.Data.Entity.Infrastructure.DbEntityEntry">
      <summary>Restituisce una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> non generica per l'entità rilevata rappresentata da questo oggetto.</summary>
      <returns>Versione non generica.</returns>
      <param name="entry">Oggetto che rappresenta l'entità rilevata.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbEntityEntry`1.OriginalValues">
      <summary>Ottiene i valori di proprietà originali per l'entità rilevata rappresentata da questo oggetto.I valori originali sono generalmente i valori di proprietà dell'entità al momento dell'esecuzione dell'ultima query dal database.</summary>
      <returns>Valori originali.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Ottiene un oggetto che rappresenta una proprietà scalare o complessa dell'entità.</summary>
      <returns>Oggetto che rappresenta la proprietà.</returns>
      <param name="property">Espressione che rappresenta la proprietà.</param>
      <typeparam name="TProperty">Tipo della proprietà.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Property(System.String)">
      <summary>Ottiene un oggetto che rappresenta una proprietà scalare o complessa dell'entità.</summary>
      <returns>Oggetto che rappresenta la proprietà.</returns>
      <param name="propertyName">Nome della proprietà.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Property``1(System.String)">
      <summary>Ottiene un oggetto che rappresenta una proprietà scalare o complessa dell'entità.</summary>
      <returns>Oggetto che rappresenta la proprietà.</returns>
      <param name="propertyName">Nome della proprietà.</param>
      <typeparam name="TProperty">Tipo della proprietà.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Reference``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Ottiene un oggetto che rappresenta la proprietà di navigazione di riferimento (cioènon di raccolta) da questa entità a un'altra entità.</summary>
      <returns>Oggetto che rappresenta la proprietà di navigazione.</returns>
      <param name="navigationProperty">Espressione che rappresenta la proprietà di navigazione.</param>
      <typeparam name="TProperty">Tipo della proprietà.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Reference(System.String)">
      <summary>Ottiene un oggetto che rappresenta la proprietà di navigazione di riferimento (cioènon di raccolta) da questa entità a un'altra entità.</summary>
      <returns>Oggetto che rappresenta la proprietà di navigazione.</returns>
      <param name="navigationProperty">Nome della proprietà di navigazione.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Reference``1(System.String)">
      <summary>Ottiene un oggetto che rappresenta la proprietà di navigazione di riferimento (cioènon di raccolta) da questa entità a un'altra entità.</summary>
      <returns>Oggetto che rappresenta la proprietà di navigazione.</returns>
      <param name="navigationProperty">Nome della proprietà di navigazione.</param>
      <typeparam name="TProperty">Tipo della proprietà.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Reload">
      <summary>Ricarica l'entità dal database sovrascrivendo i valori di proprietà con i valori del database.Dopo aver chiamato questo metodo, lo stato dell'entità sarà Unchanged.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.ReloadAsync">
      <summary>Ricarica in modo asincrono l'entità dal database sovrascrivendo i valori di proprietà con i valori del database.Dopo aver chiamato questo metodo, lo stato dell'entità sarà Unchanged.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.ReloadAsync(System.Threading.CancellationToken)">
      <summary>Ricarica in modo asincrono l'entità dal database sovrascrivendo i valori di proprietà con i valori del database.Dopo aver chiamato questo metodo, lo stato dell'entità sarà Unchanged.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbEntityEntry`1.State">
      <summary>Ottiene o imposta lo stato dell'entità.</summary>
      <returns>Stato.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.ToString">
      <summary>Restituisce una rappresentazione di stringa dei valori delle entità del database.</summary>
      <returns>Rappresentazione di stringa dei valori delle entità del database.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbExecutionStrategy">
      <summary>Fornisce l'implementazione di base del meccanismo di riesecuzione per le operazioni non affidabili e le condizioni temporanee che utilizza ritardi tra i tentativi che aumentano esponenzialmente.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbExecutionStrategy.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbExecutionStrategy" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbExecutionStrategy.#ctor(System.Int32,System.TimeSpan)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbExecutionStrategy" /> con i limiti specificati per il numero di tentativi e il ritardo tra i tentativi.</summary>
      <param name="maxRetryCount">Numero massimo di tentativi.</param>
      <param name="maxDelay">Ritardo massimo espresso in millisecondi tra i tentativi.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbExecutionStrategy.Execute(System.Action)">
      <summary>Esegue ripetutamente l'operazione specificata mentre soddisfa i criteri correnti per i tentativi.</summary>
      <param name="operation">Delegato che rappresenta un'operazione eseguibile che non restituisce risultati.</param>
      <exception cref="T:System.Data.Entity.Infrastructure.RetryLimitExceededException">Se la strategia di ritardo dei tentativi determina che l'operazione non deve essere più rieseguita</exception>
      <exception cref="T:System.InvalidOperationException">Se una transazione esistente viene rilevata e la strategia di esecuzione non la supporta.</exception>
      <exception cref="T:System.InvalidOperationException">Se questa istanza è già usata per eseguire un'operazione.</exception>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbExecutionStrategy.Execute``1(System.Func{``0})">
      <summary>Esegue ripetutamente l'operazione specificata mentre soddisfa i criteri correnti per i tentativi.</summary>
      <returns>Risultato dell'operazione.</returns>
      <param name="operation">Delegato che rappresenta un'operazione eseguibile che restituisce il risultato di tipo <paramref name="TResult" />.</param>
      <typeparam name="TResult">Tipo di risultato previsto dall'operazione eseguibile.</typeparam>
      <exception cref="T:System.Data.Entity.Infrastructure.RetryLimitExceededException">Se la strategia di ritardo dei tentativi determina che l'operazione non deve essere più rieseguita</exception>
      <exception cref="T:System.InvalidOperationException">Se una transazione esistente viene rilevata e la strategia di esecuzione non la supporta.</exception>
      <exception cref="T:System.InvalidOperationException">Se questa istanza è già usata per eseguire un'operazione.</exception>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbExecutionStrategy.ExecuteAsync``1(System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)">
      <summary>Esegue ripetutamente l'operazione asincrona specificata mentre soddisfa i criteri correnti per i tentativi.</summary>
      <returns>Attività che verrà eseguita fino al completamento se l'attività originale viene portata a termine correttamente (la prima volta o dopo più tentativi).Se l'attività ha esito negativo con un errore non temporaneo o viene raggiunto il numero massimo consentito di tentativi, l'attività restituita darà un errore e l'eccezione dovrà essere osservata.</returns>
      <param name="operation">Funzione che restituisce un'attività avviata di tipo <paramref name="TResult" />.</param>
      <param name="cancellationToken">Token di annullamento utilizzato per annullare l'operazione di ripetizione, ma non le operazioni che sono già in corso o che sono state completate correttamente.</param>
      <typeparam name="TResult">Tipo di risultato dell'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> restituito da <paramref name="operation" />.</typeparam>
      <exception cref="T:System.Data.Entity.Infrastructure.RetryLimitExceededException">Se la strategia di ritardo dei tentativi determina che l'operazione non deve essere più rieseguita</exception>
      <exception cref="T:System.InvalidOperationException">Se una transazione esistente viene rilevata e la strategia di esecuzione non la supporta.</exception>
      <exception cref="T:System.InvalidOperationException">Se questa istanza è già usata per eseguire un'operazione.</exception>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbExecutionStrategy.ExecuteAsync(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)">
      <summary>Esegue ripetutamente l'operazione asincrona specificata mentre soddisfa i criteri correnti per i tentativi.</summary>
      <returns>Attività che verrà eseguita fino al completamento se l'attività originale viene portata a termine correttamente (la prima volta o dopo più tentativi).Se l'attività ha esito negativo con un errore non temporaneo o viene raggiunto il numero massimo consentito di tentativi, l'attività restituita darà un errore e l'eccezione dovrà essere osservata.</returns>
      <param name="operation">Funzione che restituisce un'attività avviata.</param>
      <param name="cancellationToken">Token di annullamento utilizzato per annullare l'operazione di ripetizione, ma non le operazioni che sono già in corso o che sono state completate correttamente.</param>
      <exception cref="T:System.Data.Entity.Infrastructure.RetryLimitExceededException">Se la strategia di ritardo dei tentativi determina che l'operazione non deve essere più rieseguita</exception>
      <exception cref="T:System.InvalidOperationException">Se una transazione esistente viene rilevata e la strategia di esecuzione non la supporta.</exception>
      <exception cref="T:System.InvalidOperationException">Se questa istanza è già usata per eseguire un'operazione.</exception>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbExecutionStrategy.GetNextDelay(System.Exception)">
      <summary>Determina se l'operazione deve essere riprovata e stabilisce il ritardo prima del prossimo tentativo.</summary>
      <returns>Ritardo che indica il tempo di attesa prima del tentativo di esecuzione successivo se l'operazione deve essere rieseguita. In caso contrario, null.</returns>
      <param name="lastException">Eccezione generata durante l'ultimo tentativo di esecuzione.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbExecutionStrategy.RetriesOnFailure">
      <summary>Ottiene un valore che indica se <see cref="T:System.Data.Entity.Infrastructure.DbExecutionStrategy" /> può ripetere l'esecuzione dopo un errore.</summary>
      <returns>true se <see cref="T:System.Data.Entity.Infrastructure.DbExecutionStrategy" /> può ripetere l'esecuzione dopo un errore. In caso contrario, false.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbExecutionStrategy.ShouldRetryOn(System.Exception)">
      <summary>Determina se l'eccezione specificata rappresenta un errore temporaneo che può essere compensato con un tentativo.</summary>
      <returns>true se l'eccezione specificata viene considerata temporanea. In caso contrario, false.</returns>
      <param name="exception">Oggetto eccezione da verificare.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbExecutionStrategy.UnwrapAndHandleException``1(System.Exception,System.Func{System.Exception,``0})">
      <summary>Ottiene in modo ricorsivo InnerException da <paramref name="exception" /> purché si tratti di un oggetto <see cref="T:System.Data.Entity.Core.EntityException" />, <see cref="T:System.Data.Entity.Infrastructure.DbUpdateException" /> o <see cref="T:System.Data.Entity.Core.UpdateException" /> e lo passa a <paramref name="exceptionHandler" />.</summary>
      <returns>Risultato di <paramref name="exceptionHandler" />.</returns>
      <param name="exception">Eccezione di cui eseguire il wrapping.</param>
      <param name="exceptionHandler">Delegato che verrà chiamato con l'eccezione di cui è stato rimosso il wrapping.</param>
      <typeparam name="T">Il nome del tipo di eccezione sottoposta al wrapping.</typeparam>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbMemberEntry">
      <summary>Si tratta di un utilizzo della classe di base astratta per rappresentare una proprietà scalare o complessa o una proprietà di navigazione di un'entità.Nelle proprietà scalari e complesse viene utilizzata la classe derivata <see cref="T:System.Data.Entity.Infrastructure.DbPropertyEntry" />, nelle proprietà di navigazione di riferimento viene utilizzata la classe derivata <see cref="T:System.Data.Entity.Infrastructure.DbReferenceEntry" />e nelle proprietà di navigazione della raccolta viene utilizzata la classe derivata <see cref="T:System.Data.Entity.Infrastructure.DbCollectionEntry" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbMemberEntry.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbMemberEntry" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbMemberEntry.Cast``2">
      <summary>Restituisce l'oggetto <see cref="T:System.Data.Entity.Infrastructure.DbMemberEntry`2" /> generico equivalente.</summary>
      <returns>Oggetto generico equivalente.</returns>
      <typeparam name="TEntity">Tipo di entità in cui viene dichiarato il membro.</typeparam>
      <typeparam name="TProperty">Tipo della proprietà.</typeparam>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbMemberEntry.CurrentValue">
      <summary>Ottiene o imposta il valore corrente di questa proprietà.</summary>
      <returns>Valore corrente.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbMemberEntry.EntityEntry">
      <summary>Oggetto <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> a cui appartiene questo membro.</summary>
      <returns>Una voce per l'entità che possiede questo membro.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbMemberEntry.Equals(System.Object)">
      <summary>Determina se la voce specificata è uguale alla voce corrente.</summary>
      <returns>true se la voce specificata è uguale alla voce corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con la voce corrente.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbMemberEntry.GetHashCode">
      <summary>Restituisce la funzione hash per questa voce.</summary>
      <returns>Funzione hash per questa voce.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbMemberEntry.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbMemberEntry.GetValidationErrors">
      <summary>Convalida questa proprietà.</summary>
      <returns>Raccolta di oggetti <see cref="T:System.Data.Entity.Validation.DbValidationError" />.Mai Null.Se l'entità è valida, la raccolta sarà vuota.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbMemberEntry.Name">
      <summary>Ottiene il nome della proprietà.</summary>
      <returns>Nome della proprietà.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbMemberEntry.ToString">
      <summary>Restituisce una rappresentazione di stringa dei valori delle proprietà del database.</summary>
      <returns>Rappresentazione di stringa dei valori delle proprietà del database.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbMemberEntry`2">
      <summary>Si tratta di un utilizzo della classe di base astratta per rappresentare una proprietà scalare o complessa o una proprietà di navigazione di un'entità.Nelle proprietà scalari e complesse viene utilizzata la classe derivata <see cref="T:System.Data.Entity.Infrastructure.DbPropertyEntry`2" />, nelle proprietà di navigazione di riferimento viene utilizzata la classe derivata <see cref="T:System.Data.Entity.Infrastructure.DbReferenceEntry`2" />e nelle proprietà di navigazione della raccolta viene utilizzata la classe derivata <see cref="T:System.Data.Entity.Infrastructure.DbCollectionEntry`2" />.</summary>
      <typeparam name="TEntity">Tipo dell'entità a cui appartiene questa proprietà.</typeparam>
      <typeparam name="TProperty">Tipo della proprietà.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbMemberEntry`2.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbMemberEntry`2" />.</summary>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbMemberEntry`2.CurrentValue">
      <summary>Ottiene o imposta il valore corrente di questa proprietà.</summary>
      <returns>Valore corrente.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbMemberEntry`2.EntityEntry">
      <summary>Oggetto <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> a cui appartiene questo membro.</summary>
      <returns>Una voce per l'entità che possiede questo membro.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbMemberEntry`2.Equals(System.Object)">
      <summary>Specifica se l'oggetto è uguale all'oggetto specificato.</summary>
      <returns>true se l'oggetto è uguale all'oggetto specificato; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbMemberEntry`2.GetHashCode">
      <summary>Ottiene il codice hash associato all'oggetto.</summary>
      <returns>Codice hash associato all'oggetto.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbMemberEntry`2.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbMemberEntry`2.GetValidationErrors">
      <summary>Convalida questa proprietà.</summary>
      <returns>Raccolta di oggetti <see cref="T:System.Data.Entity.Validation.DbValidationError" />.Mai Null.Se l'entità è valida, la raccolta sarà vuota.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbMemberEntry`2.Name">
      <summary>Ottiene il nome della proprietà.</summary>
      <returns>Nome della proprietà.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbMemberEntry`2.op_Implicit(System.Data.Entity.Infrastructure.DbMemberEntry{`0,`1})~System.Data.Entity.Infrastructure.DbMemberEntry">
      <summary>Restituisce una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbMemberEntry" /> non generica per la proprietà rappresentata da questo oggetto.</summary>
      <returns>Versione non generica.</returns>
      <param name="entry">Oggetto che rappresenta la proprietà.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbMemberEntry`2.ToString">
      <summary>Restituisce una rappresentazione in forma di stringa di <see cref="T:System.Data.Entity.Infrastructure.DbMemberEntry`2" />.</summary>
      <returns>Rappresentazione in forma di stringa di <see cref="T:System.Data.Entity.Infrastructure.DbMemberEntry`2" />.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbModel">
      <summary>Rappresenta un oggetto Entity Data Model (EDM) creato da <see cref="T:System.Data.Entity.DbModelBuilder" />.Il metodo Compile può essere utilizzato per passare da questa rappresentazione EDM a <see cref="T:System.Data.Entity.Infrastructure.DbCompiledModel" />, ovvero uno snapshot compilato del modello adatto per la memorizzazione nella cache e la creazione di istanze di <see cref="T:System.Data.Entity.DbContext" /> o <see cref="T:System.Data.Objects.ObjectContext" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbModel.Compile">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Infrastructure.DbCompiledModel" /> per questa modalità che è uno snapshot compilato adatto per la memorizzazione nella cache e la creazione delle istanze dell'oggetto <see cref="T:System.Data.Entity.DbContext" />.</summary>
      <returns>Modello compilato.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbModel.ConceptualModel">
      <summary>Ottiene il modello concettuale.</summary>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbModel.ConceptualToStoreMapping">
      <summary>Ottiene il modello di mapping.</summary>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbModel.ProviderInfo">
      <summary>Ottiene le informazioni del provider.</summary>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbModel.ProviderManifest">
      <summary>Ottiene il manifesto del provider.</summary>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbModel.StoreModel">
      <summary>Ottiene il modello di archivio.</summary>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbPropertyEntry">
      <summary>Versione non generica della classe <see cref="T:System.Data.Entity.Infrastructure.DbPropertyEntry`2" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbPropertyEntry.Cast``2">
      <summary>Restituisce l'oggetto <see cref="T:System.Data.Entity.Infrastructure.DbPropertyEntry`2" /> generico equivalente.</summary>
      <returns>Oggetto generico equivalente.</returns>
      <typeparam name="TEntity">Tipo di entità in cui viene dichiarato il membro.</typeparam>
      <typeparam name="TProperty">Tipo della proprietà.</typeparam>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbPropertyEntry.CurrentValue">
      <summary>Ottiene o imposta il valore corrente di questa proprietà.</summary>
      <returns>Valore corrente.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbPropertyEntry.EntityEntry">
      <summary>Oggetto <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> a cui appartiene questa proprietà.</summary>
      <returns>Una voce per l'entità che possiede questa proprietà.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbPropertyEntry.IsModified">
      <summary>Ottiene o imposta un valore che indica se è stato modificato il valore di questa proprietà da quando è stato caricato dal database.</summary>
      <returns>true se questa istanza è modificata. In caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbPropertyEntry.Name">
      <summary>Ottiene il nome della proprietà.</summary>
      <returns>Nome della proprietà.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbPropertyEntry.OriginalValue">
      <summary>Ottiene o imposta il valore originale di questa proprietà.</summary>
      <returns>Valore originale.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbPropertyEntry.ParentProperty">
      <summary>Oggetto <see cref="T:System.Data.Entity.Infrastructure.DbPropertyEntry" /> della proprietà di cui questa è una proprietà annidata.Questo metodo restituirà solo una voce non Null per le proprietà di oggetti complessi, mentre restituirà null per le proprietà dell'entità stessa.</summary>
      <returns>Una voce per la proprietà complessa padre o null se si tratta di una proprietà dell'entità.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbPropertyEntry`2">
      <summary>Le istanze di questa classe vengono restituite dal metodo Property di <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> e consentono l'accesso allo stato della proprietà scalare o complessa.</summary>
      <typeparam name="TEntity">Tipo dell'entità a cui appartiene questa proprietà.</typeparam>
      <typeparam name="TProperty">Tipo della proprietà.</typeparam>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbPropertyEntry`2.CurrentValue">
      <summary>Ottiene o imposta il valore corrente di questa proprietà.</summary>
      <returns>Valore corrente.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbPropertyEntry`2.EntityEntry">
      <summary>Oggetto <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> a cui appartiene questa proprietà.</summary>
      <returns>Una voce per l'entità che possiede questa proprietà.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbPropertyEntry`2.IsModified">
      <summary>Ottiene o imposta un valore che indica se è stato modificato il valore di questa proprietà da quando è stato caricato dal database.</summary>
      <returns>true se questa istanza è modificata. In caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbPropertyEntry`2.Name">
      <summary>Ottiene il nome della proprietà.</summary>
      <returns>Nome della proprietà.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbPropertyEntry`2.op_Implicit(System.Data.Entity.Infrastructure.DbPropertyEntry{`0,`1})~System.Data.Entity.Infrastructure.DbPropertyEntry">
      <summary>Restituisce una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbPropertyEntry" /> non generica per la proprietà rappresentata da questo oggetto.</summary>
      <returns>Versione non generica.</returns>
      <param name="entry">Oggetto che rappresenta la proprietà.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbPropertyEntry`2.OriginalValue">
      <summary>Ottiene o imposta il valore originale di questa proprietà.</summary>
      <returns>Valore originale.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbPropertyEntry`2.ParentProperty">
      <summary>Oggetto <see cref="T:System.Data.Entity.Infrastructure.DbPropertyEntry" /> della proprietà di cui questa è una proprietà annidata.Questo metodo restituirà solo una voce non Null per le proprietà di oggetti complessi, mentre restituirà null per le proprietà dell'entità stessa.</summary>
      <returns>Una voce per la proprietà complessa padre o null se si tratta di una proprietà dell'entità.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbPropertyValues">
      <summary>Raccolta di tutte le proprietà per un'entità sottostante o un oggetto complesso.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbPropertyValues.Clone">
      <summary>Crea un nuovo dizionario contenente le copie di tutte le proprietà contenute in questo dizionario.Le modifiche apportate al nuovo dizionario non verranno riflesse in questo dizionario e viceversa.</summary>
      <returns>Clone del dizionario.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbPropertyValues.Equals(System.Object)">
      <summary>Specifica se <see cref="T:System.Data.Entity.Infrastructure.DbPropertyValues" /> è uguale a un oggetto specifico.</summary>
      <returns>true se <see cref="T:System.Data.Entity.Infrastructure.DbPropertyValues" /> è uguale a un oggetto specifico; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbPropertyValues.GetHashCode">
      <summary>Ottiene il codice hash associato al valore della proprietà.</summary>
      <returns>Codice hash associato al valore della proprietà.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbPropertyValues.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbPropertyValues.GetValue``1(System.String)">
      <summary>Ottiene il valore della proprietà come quando si utilizza il metodo Get della proprietà indicizzata, ma tipizzato in base al tipo del parametro generico.Ciò si rivela particolarmente utile con i dizionari annidati per evitare di scrivere espressioni con molti cast.</summary>
      <returns>Valore della proprietà.</returns>
      <param name="propertyName">Nome della proprietà.</param>
      <typeparam name="TValue">Tipo della proprietà.</typeparam>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbPropertyValues.Item(System.String)">
      <summary>Ottiene o imposta il valore della proprietà con il nome della proprietà specificato.Il valore può essere un'istanza annidata di questa classe.</summary>
      <returns>Valore della proprietà.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbPropertyValues.PropertyNames">
      <summary>Ottiene il set di nomi di tutte le proprietà contenute in questo dizionario come set di sola lettura.</summary>
      <returns>Nomi delle proprietà.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbPropertyValues.SetValues(System.Data.Entity.Infrastructure.DbPropertyValues)">
      <summary>Imposta i valori di questo dizionario leggendo i valori da un altro dizionario.L'altro dizionario deve essere basato sullo stesso tipo di questo dizionario o su un tipo derivato dal tipo di quest'ultimo.</summary>
      <param name="propertyValues">Dizionario da cui leggere i dati.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbPropertyValues.SetValues(System.Object)">
      <summary>Imposta i valori di questo dizionario leggendo i valori fuori dall'oggetto specificato.L'oggetto specificato può essere di qualsiasi tipo.Verrà letta qualsiasi proprietà sull'oggetto con un nome che corrisponde a un nome di proprietà nel dizionario che può essere letta.Le altre proprietà verranno ignorate.Questo consente, ad esempio, di copiare proprietà da oggetti DTO (Data Transfer Object) semplici.</summary>
      <param name="obj">Oggetto da cui leggere i dati.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbPropertyValues.ToObject">
      <summary>Crea un oggetto del tipo sottostante per questo dizionario e lo popola con i valori delle proprietà presenti in questo dizionario.</summary>
      <returns>Proprietà di questo dizionario copiate in un nuovo oggetto.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbPropertyValues.ToString">
      <summary>Restituisce una rappresentazione in forma di stringa di <see cref="T:System.Data.Entity.Infrastructure.DbPropertyValues" />.</summary>
      <returns>Rappresentazione in forma di stringa di <see cref="T:System.Data.Entity.Infrastructure.DbPropertyValues" />.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbProviderInfo">
      <summary>Raggruppa una coppia di stringhe tramite cui vengono identificati un provider e una versione server in un singolo oggetto.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbProviderInfo.#ctor(System.String,System.String)">
      <summary>Crea un nuovo oggetto per il nome invariante e il token del manifesto di un provider specifico.</summary>
      <param name="providerInvariantName">Stringa tramite cui viene identificato il provider.Ad esempio, nel provider SQL Server viene utilizzata la stringa "System.Data.SqlCient".</param>
      <param name="providerManifestToken">Stringa tramite cui viene identificata la versione del server di database utilizzata.Ad esempio, nel provider SQL Server viene utilizzata la stringa "2008" per SQL Server 2008.Non può essere Null, ma potrebbe essere vuota.Il token del manifesto viene talvolta indicato con il termine hint di versione.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbProviderInfo.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale a questo oggetto corrente.</summary>
      <returns>true se l'oggetto specificato è uguale a questo oggetto corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbProviderInfo.GetHashCode">
      <summary>Ottiene la funzione hash di questo oggetto corrente.</summary>
      <returns>Funzione hash di questo oggetto corrente.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbProviderInfo.ProviderInvariantName">
      <summary>Stringa tramite cui viene identificato il provider.Ad esempio, nel provider SQL Server viene utilizzata la stringa "System.Data.SqlCient".</summary>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbProviderInfo.ProviderManifestToken">
      <summary>Stringa tramite cui viene identificata la versione del server di database utilizzata.Ad esempio, nel provider SQL Server viene utilizzata la stringa "2008" per SQL Server 2008.Non può essere Null, ma potrebbe essere vuota.</summary>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbQuery">
      <summary>Rappresenta una query LINQ to Entities non generica su DbContext.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery.AsNoTracking">
      <summary>Restituisce una nuova query in cui le entità restituite non verranno memorizzate nella cache dell'oggetto <see cref="T:System.Data.Entity.DbContext" />.</summary>
      <returns>Nuova query a cui è stato applicato il valore NoTracking.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery.AsStreaming">
      <summary>Restituisce una nuova query che trasmetterà come flusso e non come buffer i risultati.</summary>
      <returns>Nuova query a cui è stato applicato il valore AsStreaming.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery.Cast``1">
      <summary>Restituisce l'oggetto <see cref="T:System.Data.Entity.Infrastructure.DbQuery`1" /> generico equivalente.</summary>
      <returns>Oggetto del set generico.</returns>
      <typeparam name="TElement">Tipo di elemento per cui è stata creata la query.</typeparam>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbQuery.ElementType">
      <summary>Tipo di elemento IQueryable.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery.Equals(System.Object)">
      <summary>Specifica se la query è uguale all'oggetto specificato.</summary>
      <returns>true se la query è uguale all'oggetto specificato; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery.GetHashCode">
      <summary>Ottiene il codice hash associato alla query.</summary>
      <returns>Codice hash associato alla query.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery.GetType">
      <summary>Ottiene il tipo associato alla query.</summary>
      <returns>Tipo associato alla query.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery.Include(System.String)">
      <summary>Specifica gli oggetti correlati da includere nei risultati della query.</summary>
      <returns>Nuovo oggetto DbQuery&amp;lt;T&amp;gt; con il percorso della query definito.</returns>
      <param name="path">Elenco di oggetti correlati separato da punti da restituire nei risultati della query.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un oggetto <see cref="T:System.Collections.IEnumerator" /> che, se enumerato, eseguirà la query nel database.</summary>
      <returns>Risultati di query.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbQuery.System#ComponentModel#IListSource#ContainsListCollection">
      <summary>Restituisce il valore false.</summary>
      <returns>false .</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery.System#ComponentModel#IListSource#GetList">
      <summary>Genera un'eccezione che indica che l'associazione diretta a una query dell'archivio non è supportata.In alternativa, popolare un DbSet con dati, ad esempio tramite il metodo di estensione Load, quindi eseguire l'associazione ai dati locali.Per l'associazione WPF a DbSet.Local.Per Windows Form eseguire l'associazione a DbSet.Local.ToBindingList().</summary>
      <returns>Non restituisce mai; genera sempre.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery.System#Data#Entity#Infrastructure#IDbAsyncEnumerable#GetAsyncEnumerator">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncEnumerator" /> che, se enumerato, eseguirà la query nel database.</summary>
      <returns>Risultati di query.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbQuery.System#Linq#IQueryable#Expression">
      <summary>Espressione LINQ IQueryable.</summary>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbQuery.System#Linq#IQueryable#Provider">
      <summary>Provider IQueryable.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery.ToString">
      <summary>Restituisce una rappresentazione <see cref="T:System.String" /> della query sottostante.</summary>
      <returns>Stringa di query.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbQuery`1">
      <summary>Rappresenta una query LINQ to Entities su DbContext.</summary>
      <typeparam name="TResult">Tipo di entità per cui eseguire una query.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery`1.AsNoTracking">
      <summary>Restituisce una nuova query in cui le entità restituite non verranno memorizzate nella cache dell'oggetto <see cref="T:System.Data.Entity.DbContext" />.</summary>
      <returns>Nuova query a cui è stato applicato il valore NoTracking.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery`1.AsStreaming">
      <summary>Restituisce una nuova query che trasmetterà come flusso e non come buffer i risultati.</summary>
      <returns>Nuova query a cui è stato applicato il valore AsStreaming.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery`1.Equals(System.Object)">
      <summary>Determina se la query corrente è uguale alla query specificata.</summary>
      <returns>true se la query corrente è uguale alla query specificata; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con la query corrente.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery`1.GetHashCode">
      <summary>Restituisce la funzione hash per questa query.</summary>
      <returns>Funzione hash per questa query.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery`1.GetType">
      <summary>Ottiene il tipo per la query corrente.</summary>
      <returns>Tipo per la query corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery`1.Include(System.String)">
      <summary>Specifica gli oggetti correlati da includere nei risultati della query.</summary>
      <returns>Nuovo oggetto <see cref="T:System.Data.Entity.Infrastructure.DbQuery`1" /> con il percorso della query definito.</returns>
      <param name="path">Elenco di oggetti correlati separato da punti da restituire nei risultati della query.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery`1.op_Implicit(System.Data.Entity.Infrastructure.DbQuery{`0})~System.Data.Entity.Infrastructure.DbQuery">
      <summary>Restituisce una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbQuery" /> non generica per questa query.</summary>
      <returns>Versione non generica.</returns>
      <param name="entry">Query.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Ottiene l'enumerazione di questa query facendo in modo che venga eseguita sull'archivio.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerator`1" /> per la query.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un oggetto <see cref="T:System.Collections.Generic.IEnumerator`1" /> che, se enumerato, eseguirà la query nel database.</summary>
      <returns>Risultati di query.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbQuery`1.System#ComponentModel#IListSource#ContainsListCollection">
      <summary>Restituisce il valore false.</summary>
      <returns>false .</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery`1.System#ComponentModel#IListSource#GetList">
      <summary>Genera un'eccezione che indica che l'associazione diretta a una query dell'archivio non è supportata.In alternativa, popolare un DbSet con dati, ad esempio tramite il metodo di estensione Load, quindi eseguire l'associazione ai dati locali.Per l'associazione WPF a DbSet.Local.Per Windows Form eseguire l'associazione a DbSet.Local.ToBindingList().</summary>
      <returns>Non restituisce mai; genera sempre.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery`1.System#Data#Entity#Infrastructure#IDbAsyncEnumerable#GetAsyncEnumerator">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncEnumerator" /> che, se enumerato, eseguirà la query nel database.</summary>
      <returns>Risultati di query.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery`1.System#Data#Entity#Infrastructure#IDbAsyncEnumerable{T}#GetAsyncEnumerator">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncEnumerator`1" /> che, se enumerato, eseguirà la query nel database.</summary>
      <returns>Risultati di query.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbQuery`1.System#Linq#IQueryable#ElementType">
      <summary>Tipo di elemento IQueryable.</summary>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbQuery`1.System#Linq#IQueryable#Expression">
      <summary>Espressione LINQ IQueryable.</summary>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbQuery`1.System#Linq#IQueryable#Provider">
      <summary>Provider IQueryable.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery`1.ToString">
      <summary>Restituisce una rappresentazione <see cref="T:System.String" /> della query sottostante.</summary>
      <returns>Stringa di query.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbRawSqlQuery">
      <summary>Rappresenta una query SQL per non entità create da un oggetto <see cref="T:System.Data.Entity.DbContext" /> e viene eseguita utilizzando la connessione da tale contesto.Le istanze di questa classe vengono ottenute dall'istanza di <see cref="P:System.Data.Entity.DbContext.Database" />.La query non viene eseguita quando viene creato questo oggetto; viene eseguita ogni volta che viene enumerata, ad esempio tramite foreach.Le query SQL per le entità vengono create utilizzando <see cref="M:System.Data.Entity.DbSet.SqlQuery(System.String,System.Object[])" />.Per una versione generica di questa classe, vedere <see cref="T:System.Data.Entity.Infrastructure.DbRawSqlQuery`1" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery.AsStreaming">
      <summary>Restituisce una nuova query che trasmetterà come flusso e non come buffer i risultati.</summary>
      <returns>Nuova query a cui è stato applicato il valore AsStreaming.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery.Equals(System.Object)">
      <summary>Specifica se la query è uguale all'oggetto specificato.</summary>
      <returns>true se la query è uguale all'oggetto specificato; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery.ForEachAsync(System.Action{System.Object})">
      <summary>Restituisce in modo asincrono i risultati della query ed esegue l'azione specificata su ogni elemento.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
      <param name="action">Azione da eseguire su ciascun elemento.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery.ForEachAsync(System.Action{System.Object},System.Threading.CancellationToken)">
      <summary>Restituisce in modo asincrono i risultati della query ed esegue l'azione specificata su ogni elemento.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
      <param name="action">Azione da eseguire su ciascun elemento.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery.GetEnumerator">
      <summary>Restituisce un oggetto <see cref="T:System.Collections.IEnumerator" /> che, se enumerato, eseguirà la query SQL nel database.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere utilizzato per scorrere gli elementi.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery.GetHashCode">
      <summary>Ottiene il codice hash associato alla query.</summary>
      <returns>Codice hash associato alla query.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery.GetType">
      <summary>Ottiene il tipo associato alla query.</summary>
      <returns>Tipo associato alla query.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbRawSqlQuery.System#ComponentModel#IListSource#ContainsListCollection">
      <summary>Restituisce il valore false.</summary>
      <returns>false .</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery.System#ComponentModel#IListSource#GetList">
      <summary>Genera un'eccezione che indica che l'associazione diretta a una query dell'archivio non è supportata.</summary>
      <returns>Non restituisce mai; genera sempre.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery.System#Data#Entity#Infrastructure#IDbAsyncEnumerable#GetAsyncEnumerator">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncEnumerable" /> che, se enumerato, eseguirà la query SQL nel database.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncEnumerable" /> che può essere utilizzato per scorrere gli elementi.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery.ToListAsync">
      <summary>Crea un oggetto <see cref="T:System.Collections.Generic.List`1" /> dalla query enumerandolo in modo asincrono.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene un oggetto <see cref="T:System.Collections.Generic.List`1" /> che contiene elementi della query.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery.ToListAsync(System.Threading.CancellationToken)">
      <summary>Crea un oggetto <see cref="T:System.Collections.Generic.List`1" /> dalla query enumerandolo in modo asincrono.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene un oggetto <see cref="T:System.Collections.Generic.List`1" /> che contiene elementi della query.</returns>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery.ToString">
      <summary>Restituisce un oggetto <see cref="T:System.String" /> che contiene la stringa SQL impostata alla creazione della query.I parametri non sono inclusi.</summary>
      <returns>
        <see cref="T:System.String" /> che rappresenta questa istanza.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbRawSqlQuery`1">
      <summary>Rappresenta una query SQL per non entità create da un oggetto <see cref="T:System.Data.Entity.DbContext" /> e viene eseguita utilizzando la connessione da tale contesto.Le istanze di questa classe vengono ottenute dall'istanza di <see cref="P:System.Data.Entity.DbContext.Database" />.La query non viene eseguita quando viene creato questo oggetto; viene eseguita ogni volta che viene enumerata, ad esempio tramite foreach.Le query SQL per le entità vengono create utilizzando <see cref="M:System.Data.Entity.DbSet`1.SqlQuery(System.String,System.Object[])" />.Per una versione non generica di questa classe, vedere <see cref="T:System.Data.Entity.Infrastructure.DbRawSqlQuery" />.</summary>
      <typeparam name="TElement">Tipo degli elementi restituiti dalla query.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.AllAsync(System.Func{`0,System.Boolean})">
      <summary>Determina in modo asincrono se tutti gli elementi della query soddisfano una condizione.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene true se ogni elemento del risultato della query supera il test nel predicato specificato; in caso contrario false.</returns>
      <param name="predicate">Funzione per testare ogni elemento per una condizione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="predicate" /> è null.</exception>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.AllAsync(System.Func{`0,System.Boolean},System.Threading.CancellationToken)">
      <summary>Determina in modo asincrono se tutti gli elementi della query soddisfano una condizione.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene true se ogni elemento del risultato della query supera il test nel predicato specificato; in caso contrario false.</returns>
      <param name="predicate">Funzione per testare ogni elemento per una condizione.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="predicate" /> è null.</exception>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.AnyAsync">
      <summary>Determina in modo asincrono se la query contiene elementi.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene true se il risultato della query contiene elementi; in caso contrario false.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.AnyAsync(System.Func{`0,System.Boolean})">
      <summary>Determina in modo asincrono se uno o più elementi della query soddisfano una condizione.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene true se un elemento del risultato della query supera il test nel predicato specificato; in caso contrario false.</returns>
      <param name="predicate">Funzione per testare ogni elemento per una condizione.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.AnyAsync(System.Func{`0,System.Boolean},System.Threading.CancellationToken)">
      <summary>Determina in modo asincrono se uno o più elementi della query soddisfano una condizione.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene true se un elemento del risultato della query supera il test nel predicato specificato; in caso contrario false.</returns>
      <param name="predicate">Funzione per testare ogni elemento per una condizione.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.AnyAsync(System.Threading.CancellationToken)">
      <summary>Determina in modo asincrono se la query contiene elementi.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene true se il risultato della query contiene elementi; in caso contrario false.</returns>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.AsStreaming">
      <summary>Restituisce una nuova query che trasmetterà come flusso e non come buffer i risultati.</summary>
      <returns>Nuova query a cui è stato applicato il valore AsStreaming.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.ContainsAsync(`0)">
      <summary>Determina in modo asincrono se la query contiene un elemento specificato utilizzando l'operatore di uguaglianza predefinito.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene true se il risultato della query contiene il valore specificato; in caso contrario false.</returns>
      <param name="value">Oggetto da individuare nel risultato della query.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.ContainsAsync(`0,System.Threading.CancellationToken)">
      <summary>Determina in modo asincrono se la query contiene un elemento specificato utilizzando l'operatore di uguaglianza predefinito.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene true se il risultato della query contiene il valore specificato; in caso contrario false.</returns>
      <param name="value">Oggetto da individuare nel risultato della query.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.CountAsync">
      <summary>Restituisce in modo asincrono il numero di elementi nella query.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il numero di elementi nel risultato della query.</returns>
      <exception cref="T:System.OverflowException">Il numero di elementi nel risultato della query è maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.CountAsync(System.Func{`0,System.Boolean})">
      <summary>Restituisce in modo asincrono il numero di elementi nella query che soddisfano una condizione.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il numero di elementi nel risultato della query che soddisfano la condizione nella funzione predicativa.</returns>
      <param name="predicate">Funzione per testare ogni elemento per una condizione.</param>
      <exception cref="T:System.OverflowException">Il numero di elementi nel risultato della query che soddisfano la condizione nella funzione predicativa è maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.CountAsync(System.Func{`0,System.Boolean},System.Threading.CancellationToken)">
      <summary>Restituisce in modo asincrono il numero di elementi nella query che soddisfano una condizione.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il numero di elementi nel risultato della query che soddisfano la condizione nella funzione predicativa.</returns>
      <param name="predicate">Funzione per testare ogni elemento per una condizione.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.OverflowException">Il numero di elementi nel risultato della query che soddisfano la condizione nella funzione predicativa è maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.CountAsync(System.Threading.CancellationToken)">
      <summary>Restituisce in modo asincrono il numero di elementi nella query.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il numero di elementi nel risultato della query.</returns>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.OverflowException">Il numero di elementi nel risultato della query è maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.Equals(System.Object)">
      <summary>Determina se la query corrente è uguale alla query specificata.</summary>
      <returns>true se la query corrente è uguale alla query specificata; in caso contrario, false.</returns>
      <param name="obj">Query da confrontare con la query corrente.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.FirstAsync">
      <summary>Restituisce in modo asincrono il primo elemento della query.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il primo elemento nel risultato della query.</returns>
      <exception cref="T:System.InvalidOperationException">Il risultato della query è vuoto.</exception>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.FirstAsync(System.Func{`0,System.Boolean})">
      <summary>Restituisce in modo asincrono il primo elemento della query che soddisfa una condizione specificata.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il primo elemento nel risultato della query che soddisfa una condizione specificata.</returns>
      <param name="predicate">Funzione per testare ogni elemento per una condizione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="predicate" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">Il risultato della query è vuoto.</exception>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.FirstAsync(System.Func{`0,System.Boolean},System.Threading.CancellationToken)">
      <summary>Restituisce in modo asincrono il primo elemento della query che soddisfa una condizione specificata.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il primo elemento nel risultato della query che soddisfa una condizione specificata.</returns>
      <param name="predicate">Funzione per testare ogni elemento per una condizione.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="predicate" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">Il risultato della query è vuoto.</exception>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.FirstAsync(System.Threading.CancellationToken)">
      <summary>Restituisce in modo asincrono il primo elemento della query.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il primo elemento nel risultato della query.</returns>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.InvalidOperationException">Il risultato della query è vuoto.</exception>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.FirstOrDefaultAsync">
      <summary>Restituisce in modo asincrono il primo elemento della query o un valore predefinito se il risultato della query non contiene elementi.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene default (<paramref name="TElement" />) se il risultato della query è vuoto; in caso contrario il primo elemento nel risultato della query.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.FirstOrDefaultAsync(System.Func{`0,System.Boolean})">
      <summary>Restituisce in modo asincrono il primo elemento della query che soddisfa una condizione specificata o un valore predefinito se non viene trovato un tale elemento.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene default (<paramref name="TElement" />) se il risultato della query è vuoto o se nessun elemento supera il test specificato da <paramref name="predicate" />; in caso contrario il primo elemento nel risultato della query che supera il test specificato da <paramref name="predicate" />.</returns>
      <param name="predicate">Funzione per testare ogni elemento per una condizione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="predicate" /> è null.</exception>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.FirstOrDefaultAsync(System.Func{`0,System.Boolean},System.Threading.CancellationToken)">
      <summary>Restituisce in modo asincrono il primo elemento della query che soddisfa una condizione specificata o un valore predefinito se non viene trovato un tale elemento.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene default (<paramref name="TElement" />) se il risultato della query è vuoto o se nessun elemento supera il test specificato da <paramref name="predicate" />; in caso contrario il primo elemento nel risultato della query che supera il test specificato da <paramref name="predicate" />.</returns>
      <param name="predicate">Funzione per testare ogni elemento per una condizione.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="predicate" /> è null.</exception>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.FirstOrDefaultAsync(System.Threading.CancellationToken)">
      <summary>Restituisce in modo asincrono il primo elemento della query o un valore predefinito se il risultato della query non contiene elementi.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene default (<paramref name="TElement" />) se il risultato della query è vuoto; in caso contrario il primo elemento nel risultato della query.</returns>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.ForEachAsync(System.Action{`0})">
      <summary>Restituisce in modo asincrono i risultati della query ed esegue l'azione specificata su ogni elemento.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
      <param name="action">Azione da eseguire.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.ForEachAsync(System.Action{`0},System.Threading.CancellationToken)">
      <summary>Restituisce in modo asincrono i risultati della query ed esegue l'azione specificata su ogni elemento.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
      <param name="action">Azione da eseguire.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.GetEnumerator">
      <summary>Restituisce un oggetto <see cref="T:System.Collections.Generic.IEnumerator`1" /> che, se enumerato, eseguirà la query SQL nel database.</summary>
      <returns>Oggetto <see cref="T:System.Collections.Generic.IEnumerator`1" /> che può essere utilizzato per scorrere gli elementi.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.GetHashCode">
      <summary>Restituisce la funzione hash per questa query.</summary>
      <returns>Funzione hash per questa query.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.GetType">
      <summary>Ottiene il tipo per la query corrente.</summary>
      <returns>Tipo per la query corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.LongCountAsync">
      <summary>Restituisce in modo asincrono un oggetto <see cref="T:System.Int64" /> che rappresenta il numero totale di elementi nella query.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il numero di elementi nel risultato della query.</returns>
      <exception cref="T:System.OverflowException">Il numero di elementi nel risultato della query è maggiore di <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.LongCountAsync(System.Func{`0,System.Boolean})">
      <summary>Restituisce in modo asincrono un oggetto <see cref="T:System.Int64" /> che rappresenta il numero di elementi nella query che soddisfano una condizione.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il numero di elementi nel risultato della query che soddisfano la condizione nella funzione predicativa.</returns>
      <param name="predicate">Funzione per testare ogni elemento per una condizione.</param>
      <exception cref="T:System.OverflowException">Il numero di elementi nel risultato della query che soddisfano la condizione nella funzione predicativa è maggiore di <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.LongCountAsync(System.Func{`0,System.Boolean},System.Threading.CancellationToken)">
      <summary>Restituisce in modo asincrono un oggetto <see cref="T:System.Int64" /> che rappresenta il numero di elementi nella query che soddisfano una condizione.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il numero di elementi nel risultato della query che soddisfano la condizione nella funzione predicativa.</returns>
      <param name="predicate">Funzione per testare ogni elemento per una condizione.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.OverflowException">Il numero di elementi nel risultato della query che soddisfano la condizione nella funzione predicativa è maggiore di <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.LongCountAsync(System.Threading.CancellationToken)">
      <summary>Restituisce in modo asincrono un oggetto <see cref="T:System.Int64" /> che rappresenta il numero totale di elementi nella query.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il numero di elementi nel risultato della query.</returns>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.OverflowException">Il numero di elementi nel risultato della query è maggiore di <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.MaxAsync">
      <summary>Restituisce in modo asincrono il valore massimo della query.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il valore massimo nel risultato della query.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.MaxAsync(System.Threading.CancellationToken)">
      <summary>Restituisce in modo asincrono il valore massimo della query.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il valore massimo nel risultato della query.</returns>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.MinAsync">
      <summary>Restituisce in modo asincrono il valore minimo della query.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il valore minimo nel risultato della query.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.MinAsync(System.Threading.CancellationToken)">
      <summary>Restituisce in modo asincrono il valore minimo della query.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il valore minimo nel risultato della query.</returns>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.SingleAsync">
      <summary>Restituisce in modo asincrono l'unico elemento della query e genera un'eccezione se nella sequenza non è presente esattamente un solo elemento.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il singolo elemento del risultato della query.</returns>
      <exception cref="T:System.InvalidOperationException">Il risultato della query include più elementi.</exception>
      <exception cref="T:System.InvalidOperationException">Il risultato della query è vuoto.</exception>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.SingleAsync(System.Func{`0,System.Boolean})">
      <summary>Restituisce in modo asincrono l'unico elemento della query che soddisfa una condizione specificata e genera un'eccezione se esistono più elementi di tale tipo.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il singolo elemento del risultato della query che soddisfa la condizione in <paramref name="predicate" />.</returns>
      <param name="predicate">Funzione per testare ogni elemento per una condizione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="predicate" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">Nessun elemento soddisfa la condizione in <paramref name="predicate" />.</exception>
      <exception cref="T:System.InvalidOperationException">Più elementi soddisfano la condizione in <paramref name="predicate" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.SingleAsync(System.Func{`0,System.Boolean},System.Threading.CancellationToken)">
      <summary>Restituisce in modo asincrono l'unico elemento della query che soddisfa una condizione specificata e genera un'eccezione se esistono più elementi di tale tipo.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il singolo elemento del risultato della query che soddisfa la condizione in <paramref name="predicate" />.</returns>
      <param name="predicate">Funzione per testare ogni elemento per una condizione.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="predicate" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">Nessun elemento soddisfa la condizione in <paramref name="predicate" />.</exception>
      <exception cref="T:System.InvalidOperationException">Più elementi soddisfano la condizione in <paramref name="predicate" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.SingleAsync(System.Threading.CancellationToken)">
      <summary>Restituisce in modo asincrono l'unico elemento della query e genera un'eccezione se nella sequenza non è presente esattamente un solo elemento.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il singolo elemento del risultato della query.</returns>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.InvalidOperationException">Il risultato della query include più elementi.</exception>
      <exception cref="T:System.InvalidOperationException">Il risultato della query è vuoto.</exception>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.SingleOrDefaultAsync">
      <summary>Restituisce in modo asincrono l'unico elemento di una sequenza o un valore predefinito se la sequenza è vuota. Questo metodo genera un'eccezione se esistono più elementi nella sequenza.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il singolo elemento del risultato della query o default (<paramref name="TElement" />) se la sequenza non contiene elementi.</returns>
      <exception cref="T:System.InvalidOperationException">Il risultato della query include più elementi.</exception>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.SingleOrDefaultAsync(System.Func{`0,System.Boolean})">
      <summary>Restituisce in modo asincrono il singolo elemento della query che soddisfa una condizione specificata o un valore predefinito se tale elemento esiste. Questo metodo genera un'eccezione se più elementi soddisfano la condizione.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il singolo elemento del risultato della query che soddisfa la condizione in <paramref name="predicate" /> o default (<paramref name="TElement" />) se non viene trovato un elemento di tale tipo.</returns>
      <param name="predicate">Funzione per testare ogni elemento per una condizione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="predicate" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">Più elementi soddisfano la condizione in <paramref name="predicate" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.SingleOrDefaultAsync(System.Func{`0,System.Boolean},System.Threading.CancellationToken)">
      <summary>Restituisce in modo asincrono il singolo elemento della query che soddisfa una condizione specificata o un valore predefinito se tale elemento esiste. Questo metodo genera un'eccezione se più elementi soddisfano la condizione.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il singolo elemento del risultato della query che soddisfa la condizione in <paramref name="predicate" /> o default (<paramref name="TElement" />) se non viene trovato un elemento di tale tipo.</returns>
      <param name="predicate">Funzione per testare ogni elemento per una condizione.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="predicate" /> è null.</exception>
      <exception cref="T:System.InvalidOperationException">Più elementi soddisfano la condizione in <paramref name="predicate" />.</exception>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.SingleOrDefaultAsync(System.Threading.CancellationToken)">
      <summary>Restituisce in modo asincrono l'unico elemento di una sequenza o un valore predefinito se la sequenza è vuota. Questo metodo genera un'eccezione se esistono più elementi nella sequenza.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il singolo elemento del risultato della query o default (<paramref name="TElement" />) se la sequenza non contiene elementi.</returns>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <exception cref="T:System.InvalidOperationException">Il risultato della query include più elementi.</exception>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un oggetto <see cref="T:System.Collections.IEnumerator" /> che, se enumerato, eseguirà la query SQL nel database.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere utilizzato per scorrere gli elementi.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.System#ComponentModel#IListSource#ContainsListCollection">
      <summary>Restituisce il valore false.</summary>
      <returns>false .</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.System#ComponentModel#IListSource#GetList">
      <summary>Genera un'eccezione che indica che l'associazione diretta a una query dell'archivio non è supportata.</summary>
      <returns>Non restituisce mai; genera sempre.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.System#Data#Entity#Infrastructure#IDbAsyncEnumerable#GetAsyncEnumerator">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncEnumerable" /> che, se enumerato, eseguirà la query SQL nel database.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncEnumerable" /> che può essere utilizzato per scorrere gli elementi.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.System#Data#Entity#Infrastructure#IDbAsyncEnumerable{T}#GetAsyncEnumerator">
      <summary>Restituisce un oggetto <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncEnumerator`1" /> che, se enumerato, eseguirà la query SQL nel database.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Infrastructure.IDbAsyncEnumerator`1" /> che può essere utilizzato per scorrere gli elementi.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.ToArrayAsync">
      <summary>Crea una matrice dalla query enumerandola in modo asincrono.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene una matrice che contiene elementi della sequenza di input.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.ToArrayAsync(System.Threading.CancellationToken)">
      <summary>Crea una matrice dalla query enumerandola in modo asincrono.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene una matrice che contiene elementi della sequenza di input.</returns>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.ToDictionaryAsync``1(System.Func{`0,``0})">
      <summary>Crea un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> dalla query enumerandolo in modo asincrono in base a una funzione del selettore di chiave specificata.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> che contiene le chiavi e i valori selezionati.</returns>
      <param name="keySelector">Funzione per estrarre una chiave da ogni elemento.</param>
      <typeparam name="TKey">Tipo della chiave restituita da <paramref name="keySelector" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.ToDictionaryAsync``1(System.Func{`0,``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>Crea un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> dalla query enumerandolo in modo asincrono in base a una funzione del selettore di chiave specificata e a un operatore di confronto.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> che contiene le chiavi e i valori selezionati.</returns>
      <param name="keySelector">Funzione per estrarre una chiave da ogni elemento.</param>
      <param name="comparer">Oggetto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> per confrontare le chiavi.</param>
      <typeparam name="TKey">Tipo della chiave restituita da <paramref name="keySelector" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.ToDictionaryAsync``1(System.Func{`0,``0},System.Collections.Generic.IEqualityComparer{``0},System.Threading.CancellationToken)">
      <summary>Crea un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> dalla query enumerandolo in modo asincrono in base a una funzione del selettore di chiave specificata e a un operatore di confronto.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> che contiene le chiavi e i valori selezionati.</returns>
      <param name="keySelector">Funzione per estrarre una chiave da ogni elemento.</param>
      <param name="comparer">Oggetto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> per confrontare le chiavi.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TKey">Tipo della chiave restituita da <paramref name="keySelector" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.ToDictionaryAsync``2(System.Func{`0,``0},System.Func{`0,``1})">
      <summary>Crea un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> dalla query enumerandolo in modo asincrono in base a una funzione del selettore di chiave specificata e a una funzione del selettore di elemento.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> che contiene i valori di tipo <paramref name="TResult" /> selezionati dalla query.</returns>
      <param name="keySelector">Funzione per estrarre una chiave da ogni elemento.</param>
      <param name="elementSelector">Funzione di trasformazione per produrre un valore dell'elemento di risultato da ogni elemento.</param>
      <typeparam name="TKey">Tipo della chiave restituita da <paramref name="keySelector" />.</typeparam>
      <typeparam name="TResult">Tipo del valore restituito da <paramref name="elementSelector" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.ToDictionaryAsync``2(System.Func{`0,``0},System.Func{`0,``1},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>Crea un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> dalla query enumerandolo in modo asincrono in base a una funzione del selettore di chiave specificata, a un operatore di confronto e a una funzione del selettore di elemento.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> che contiene i valori di tipo <paramref name="TResult" /> selezionati dalla sequenza di input.</returns>
      <param name="keySelector">Funzione per estrarre una chiave da ogni elemento.</param>
      <param name="elementSelector">Funzione di trasformazione per produrre un valore dell'elemento di risultato da ogni elemento.</param>
      <param name="comparer">Oggetto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> per confrontare le chiavi.</param>
      <typeparam name="TKey">Tipo della chiave restituita da <paramref name="keySelector" />.</typeparam>
      <typeparam name="TResult">Tipo del valore restituito da <paramref name="elementSelector" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.ToDictionaryAsync``2(System.Func{`0,``0},System.Func{`0,``1},System.Collections.Generic.IEqualityComparer{``0},System.Threading.CancellationToken)">
      <summary>Crea un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> dalla query enumerandolo in modo asincrono in base a una funzione del selettore di chiave specificata, a un operatore di confronto e a una funzione del selettore di elemento.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> che contiene i valori di tipo <paramref name="TResult" /> selezionati dalla sequenza di input.</returns>
      <param name="keySelector">Funzione per estrarre una chiave da ogni elemento.</param>
      <param name="elementSelector">Funzione di trasformazione per produrre un valore dell'elemento di risultato da ogni elemento.</param>
      <param name="comparer">Oggetto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> per confrontare le chiavi.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TKey">Tipo della chiave restituita da <paramref name="keySelector" />.</typeparam>
      <typeparam name="TResult">Tipo del valore restituito da <paramref name="elementSelector" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.ToDictionaryAsync``2(System.Func{`0,``0},System.Func{`0,``1},System.Threading.CancellationToken)">
      <summary>Crea un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> dalla query enumerandolo in modo asincrono in base a una funzione del selettore di chiave specificata e a una funzione del selettore di elemento.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> che contiene i valori di tipo <paramref name="TResult" /> selezionati dalla query.</returns>
      <param name="keySelector">Funzione per estrarre una chiave da ogni elemento.</param>
      <param name="elementSelector">Funzione di trasformazione per produrre un valore dell'elemento di risultato da ogni elemento.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TKey">Tipo della chiave restituita da <paramref name="keySelector" />.</typeparam>
      <typeparam name="TResult">Tipo del valore restituito da <paramref name="elementSelector" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.ToDictionaryAsync``1(System.Func{`0,``0},System.Threading.CancellationToken)">
      <summary>Crea un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> dalla query enumerandolo in modo asincrono in base a una funzione del selettore di chiave specificata.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> che contiene le chiavi e i valori selezionati.</returns>
      <param name="keySelector">Funzione per estrarre una chiave da ogni elemento.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TKey">Tipo della chiave restituita da <paramref name="keySelector" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.ToListAsync">
      <summary>Crea un oggetto <see cref="T:System.Collections.Generic.List`1" /> dalla query enumerandolo in modo asincrono.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene un oggetto <see cref="T:System.Collections.Generic.List`1" /> che contiene elementi della sequenza di input.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.ToListAsync(System.Threading.CancellationToken)">
      <summary>Crea un oggetto <see cref="T:System.Collections.Generic.List`1" /> dalla query enumerandolo in modo asincrono.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene un oggetto <see cref="T:System.Collections.Generic.List`1" /> che contiene elementi della sequenza di input.</returns>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbRawSqlQuery`1.ToString">
      <summary>Restituisce un oggetto <see cref="T:System.String" /> che contiene la stringa SQL impostata alla creazione della query.I parametri non sono inclusi.</summary>
      <returns>
        <see cref="T:System.String" /> che rappresenta questa istanza.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbReferenceEntry">
      <summary>Versione non generica della classe <see cref="T:System.Data.Entity.Infrastructure.DbReferenceEntry`2" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbReferenceEntry.Cast``2">
      <summary>Restituisce l'oggetto <see cref="T:System.Data.Entity.Infrastructure.DbReferenceEntry`2" /> generico equivalente.</summary>
      <returns>Oggetto generico equivalente.</returns>
      <typeparam name="TEntity">Tipo di entità in cui viene dichiarato il membro.</typeparam>
      <typeparam name="TProperty">Tipo della proprietà.</typeparam>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbReferenceEntry.CurrentValue">
      <summary>Ottiene o imposta il valore corrente della proprietà di navigazione.Il valore corrente è costituito dall'entità a cui fa riferimento la proprietà di navigazione.</summary>
      <returns>Valore corrente.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbReferenceEntry.EntityEntry">
      <summary>Oggetto <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> a cui appartiene questa proprietà di navigazione.</summary>
      <returns>Una voce per l'entità che possiede questa proprietà di navigazione.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbReferenceEntry.IsLoaded">
      <summary>Ottiene o imposta un valore che indica se l'entità è stata caricata dal database.</summary>
      <returns>true se l'entità viene caricata o se IsLoaded è stato impostato in modo esplicito su true; in caso contrario false.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbReferenceEntry.Load">
      <summary>Carica l'entità dal database.Notare che se l'entità esiste già nel contesto, non verrà sovrascritta con i valori del database.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbReferenceEntry.LoadAsync">
      <summary>Carica in modo asincrono l'entità dal database.Notare che se l'entità esiste già nel contesto, non verrà sovrascritta con i valori del database.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbReferenceEntry.LoadAsync(System.Threading.CancellationToken)">
      <summary>Carica in modo asincrono l'entità dal database.Notare che se l'entità esiste già nel contesto, non verrà sovrascritta con i valori del database.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbReferenceEntry.Name">
      <summary>Ottiene il nome della proprietà.</summary>
      <returns>Nome della proprietà.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbReferenceEntry.Query">
      <summary>Restituisce la query che verrà utilizzata per caricare questa entità dal database.È possibile modificare la query restituita utilizzando LINQ per applicare filtri o eseguire operazioni nel database.</summary>
      <returns>Query per l'entità.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbReferenceEntry`2">
      <summary>Le istanze di questa classe vengono restituite dal metodo Reference di <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> e consentono l'esecuzione di operazioni come il caricamento sulle proprietà di navigazione di riferimento di un'entità.</summary>
      <typeparam name="TEntity">Tipo dell'entità a cui appartiene questa proprietà.</typeparam>
      <typeparam name="TProperty">Tipo della proprietà.</typeparam>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbReferenceEntry`2.CurrentValue">
      <summary>Ottiene o imposta il valore corrente della proprietà di navigazione.Il valore corrente è costituito dall'entità a cui fa riferimento la proprietà di navigazione.</summary>
      <returns>Valore corrente.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbReferenceEntry`2.EntityEntry">
      <summary>Oggetto <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> a cui appartiene questa proprietà di navigazione.</summary>
      <returns>Una voce per l'entità che possiede questa proprietà di navigazione.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbReferenceEntry`2.IsLoaded">
      <summary>Ottiene o imposta un valore che indica se l'entità è stata caricata dal database.</summary>
      <returns>true se l'entità viene caricata o se IsLoaded è stato impostato in modo esplicito su true; in caso contrario false.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbReferenceEntry`2.Load">
      <summary>Carica l'entità dal database.Notare che se l'entità esiste già nel contesto, non verrà sovrascritta con i valori del database.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbReferenceEntry`2.LoadAsync">
      <summary>Carica in modo asincrono l'entità dal database.Notare che se l'entità esiste già nel contesto, non verrà sovrascritta con i valori del database.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbReferenceEntry`2.LoadAsync(System.Threading.CancellationToken)">
      <summary>Carica in modo asincrono l'entità dal database.Notare che se l'entità esiste già nel contesto, non verrà sovrascritta con i valori del database.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.</returns>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbReferenceEntry`2.Name">
      <summary>Ottiene il nome della proprietà.</summary>
      <returns>Nome della proprietà.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbReferenceEntry`2.op_Implicit(System.Data.Entity.Infrastructure.DbReferenceEntry{`0,`1})~System.Data.Entity.Infrastructure.DbReferenceEntry">
      <summary>Restituisce una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbReferenceEntry" /> non generica per la proprietà di navigazione rappresentata da questo oggetto.</summary>
      <returns>Versione non generica.</returns>
      <param name="entry">Oggetto che rappresenta la proprietà di navigazione.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbReferenceEntry`2.Query">
      <summary>Restituisce la query che verrà utilizzata per caricare questa entità dal database.È possibile modificare la query restituita utilizzando LINQ per applicare filtri o eseguire operazioni nel database.</summary>
      <returns>Query per l'entità.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbSqlQuery">
      <summary>Rappresenta una query SQL per entità create da un <see cref="T:System.Data.Entity.DbContext" /> e viene eseguita utilizzando la connessione da tale contesto.Le istanze di questa classe sono ottenute dall'istanza di <see cref="T:System.Data.Entity.DbSet" /> per il tipo di entità.La query non viene eseguita quando viene creato questo oggetto; viene eseguita ogni volta che viene enumerata, ad esempio tramite foreach.Le query SQL per le non entità vengono create utilizzando <see cref="M:System.Data.Entity.Database.SqlQuery(System.Type,System.String,System.Object[])" />.Per una versione generica di questa classe, vedere <see cref="T:System.Data.Entity.Infrastructure.DbSqlQuery`1" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbSqlQuery.#ctor">
      <summary>Crea un'istanza di un oggetto <see cref="T:System.Data.Entity.Infrastructure.DbSqlQuery" /> quando chiamato dal costruttore di un tipo derivato che verrà utilizzato come copia di test per il metodo <see cref="M:System.Data.Entity.DbSet.SqlQuery(System.String,System.Object[])" />.I metodi e le proprietà che verranno utilizzati dalla copia di test devono essere implementati da quest'ultima, ad eccezione di AsNoTracking e AsStreaming in cui l'implementazione predefinita non prevede alcuna operazione.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbSqlQuery.AsNoTracking">
      <summary>Restituisce una nuova query i cui risultati non verranno rilevati dall'oggetto <see cref="T:System.Data.Entity.DbContext" /> associato.</summary>
      <returns>Nuova query a cui è stato applicato il valore NoTracking.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbSqlQuery.AsStreaming">
      <summary>Restituisce una nuova query che trasmetterà come flusso e non come buffer i risultati.</summary>
      <returns>Nuova query a cui è stato applicato il valore AsStreaming.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbSqlQuery.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'istanza corrente.</summary>
      <returns>true se l'oggetto specificato è uguale all'istanza corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'istanza corrente.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbSqlQuery.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza corrente.</summary>
      <returns>Codice hash per l'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbSqlQuery.GetType">
      <summary>Ottiene il tipo associato alla query.</summary>
      <returns>Tipo associato alla query.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbSqlQuery.ToString">
      <summary>Restituisce un oggetto <see cref="T:System.String" /> che contiene la stringa SQL impostata alla creazione della query.I parametri non sono inclusi.</summary>
      <returns>
        <see cref="T:System.String" /> che rappresenta questa istanza.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbSqlQuery`1">
      <summary>Rappresenta una query SQL per entità create da un <see cref="T:System.Data.Entity.DbContext" /> e viene eseguita utilizzando la connessione da tale contesto.Le istanze di questa classe sono ottenute dall'istanza di <see cref="T:System.Data.Entity.DbSet`1" /> per il tipo di entità.La query non viene eseguita quando viene creato questo oggetto; viene eseguita ogni volta che viene enumerata, ad esempio tramite foreach.Le query SQL per le non entità vengono create utilizzando <see cref="M:System.Data.Entity.Database.SqlQuery``1(System.String,System.Object[])" />.Per una versione non generica di questa classe, vedere <see cref="T:System.Data.Entity.Infrastructure.DbSqlQuery" />.</summary>
      <typeparam name="TEntity">Tipo delle entità restituite dalla query.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbSqlQuery`1.#ctor">
      <summary>Crea un'istanza di un oggetto <see cref="T:System.Data.Entity.Infrastructure.DbSqlQuery`1" /> quando chiamato dal costruttore di un tipo derivato che verrà utilizzato come copia di test per il metodo <see cref="M:System.Data.Entity.DbSet`1.SqlQuery(System.String,System.Object[])" />.I metodi e le proprietà che verranno utilizzati dalla copia di test devono essere implementati da quest'ultima, ad eccezione di AsNoTracking e AsStreaming in cui l'implementazione predefinita non prevede alcuna operazione.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbSqlQuery`1.AsNoTracking">
      <summary>Restituisce una nuova query in cui le entità restituite non verranno memorizzate nella cache dell'oggetto <see cref="T:System.Data.Entity.DbContext" />.</summary>
      <returns>Nuova query a cui è stato applicato il valore NoTracking.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbSqlQuery`1.AsStreaming">
      <summary>Restituisce una nuova query che trasmetterà come flusso e non come buffer i risultati.</summary>
      <returns>Nuova query a cui è stato applicato il valore AsStreaming.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbSqlQuery`1.Equals(System.Object)">
      <summary>Specifica se questa istanza è uguale a un oggetto specificato.</summary>
      <returns>true se questa istanza è uguale a un oggetto specificato. In caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbSqlQuery`1.GetHashCode">
      <summary>Ottiene il codice hash associato a questa istanza.</summary>
      <returns>Codice hash associato a questa istanza.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbSqlQuery`1.GetType">
      <summary>Ottiene il tipo associato a questa istanza.</summary>
      <returns>Tipo associato a questa istanza.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbSqlQuery`1.ToString">
      <summary>Restituisce una rappresentazione di stringa di questa istanza.</summary>
      <returns>Rappresentazione di stringa di questa istanza.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbUpdateConcurrencyException">
      <summary>Eccezione generata da <see cref="T:System.Data.Entity.DbContext" /> quando era previsto che SaveChanges per un'entità comportasse un aggiornamento del database, ma in realtà nessuna riga del database è stata interessata dall'operazione.Questo di solito indica che il database è stato aggiornato simultaneamente e che non è stata trovata una corrispondenza per un token di concorrenza di cui si prevedeva di trovarne una.Si noti che le voci di stato a cui fa riferimento questa eccezione non sono serializzate a causa della sicurezza e dell'accesso a tali voci di stato dopo la restituzione di Null da parte della serializzazione.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbUpdateConcurrencyException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbUpdateException" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbUpdateConcurrencyException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbUpdateException" />.</summary>
      <param name="message">Messaggio.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbUpdateConcurrencyException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbUpdateException" />.</summary>
      <param name="message">Messaggio.</param>
      <param name="innerException">Eccezione interna.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbUpdateException">
      <summary>Eccezione generata dall'oggetto <see cref="T:System.Data.Entity.DbContext" /> quando il salvataggio delle modifiche al database non viene completato.Si noti che le voci di stato a cui fa riferimento questa eccezione non sono serializzate a causa della sicurezza e dell'accesso a tali voci di stato dopo la restituzione di Null da parte della serializzazione.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbUpdateException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbUpdateException" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbUpdateException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbUpdateException" />.</summary>
      <param name="message">Messaggio.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbUpdateException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbUpdateException" />.</summary>
      <param name="message">Messaggio.</param>
      <param name="innerException">Eccezione interna.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbUpdateException.Entries">
      <summary>Ottiene oggetti <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> che rappresentano le entità che non sono state salvate nel database.</summary>
      <returns>Voci che rappresentano le entità che non sono state salvate nel database.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DefaultExecutionStrategy">
      <summary>Rappresenta l'oggetto <see cref="T:System.Data.Entity.Infrastructure.IDbExecutionStrategy" /> predefinito che non ripete operazioni quando hanno esito negativo.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DefaultExecutionStrategy.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DefaultExecutionStrategy" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DefaultExecutionStrategy.Execute(System.Action)">
      <summary>Esegue una volta l'operazione specificata.</summary>
      <param name="operation">Delegato che rappresenta un'operazione eseguibile che non restituisce risultati.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DefaultExecutionStrategy.Execute``1(System.Func{``0})">
      <summary>Esegue una volta l'operazione specificata e restituisce il risultato.</summary>
      <returns>Risultato dell'operazione.</returns>
      <param name="operation">Delegato che rappresenta un'operazione eseguibile che restituisce il risultato di tipo <paramref name="TResult" />.</param>
      <typeparam name="TResult">Tipo restituito di <paramref name="operation" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DefaultExecutionStrategy.ExecuteAsync``1(System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)">
      <summary>Esegue una volta l'operazione asincrona specificata, senza ripeterla in caso di errore.</summary>
      <returns>Attività che verrà completata se l'attività originale è stato completata correttamente.</returns>
      <param name="operation">Funzione che restituisce un'attività avviata.</param>
      <param name="cancellationToken">Token di annullamento utilizzato per annullare l'operazione di ripetizione, ma non le operazioni che sono già in corso o che sono state completate correttamente.</param>
      <typeparam name="TResult">Tipo di risultato dell'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> restituito da <paramref name="operation" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DefaultExecutionStrategy.ExecuteAsync(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)">
      <summary>Esegue una volta l'operazione asincrona specificata, senza ripeterla in caso di errore.</summary>
      <returns>Attività che verrà completata se l'attività originale è stato completata correttamente.</returns>
      <param name="operation">Funzione che restituisce un'attività avviata.</param>
      <param name="cancellationToken">Token di annullamento utilizzato per annullare l'operazione di ripetizione, ma non le operazioni che sono già in corso o che sono state completate correttamente.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DefaultExecutionStrategy.RetriesOnFailure">
      <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Data.Entity.Infrastructure.DefaultExecutionStrategy" /> ripeterà l'esecuzione dopo un errore.</summary>
      <returns>true se questo oggetto <see cref="T:System.Data.Entity.Infrastructure.DefaultExecutionStrategy" /> ripeterà l'esecuzione dopo un errore. In caso contrario, false.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DefaultManifestTokenResolver">
      <summary>Rappresenta un'implementazione predefinita di <see cref="T:System.Data.Entity.Infrastructure.IManifestTokenResolver" /> che utilizza il provider sottostante per ottenere il token del manifesto.Si noti che per evitare più query, questa implementazione utilizza la memorizzazione nella cache in base al tipo di istanza di <see cref="T:System.Data.Common.DbConnection" />, della proprietà <see cref="P:System.Data.Common.DbConnection.DataSource" /> e della proprietà <see cref="P:System.Data.Common.DbConnection.Database" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DefaultManifestTokenResolver.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DefaultManifestTokenResolver" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DefaultManifestTokenResolver.ResolveManifestToken(System.Data.Common.DbConnection)">
      <summary>Restituisce il token del manifesto da utilizzare per la connessione specificata.</summary>
      <returns>Token del manifesto da utilizzare.</returns>
      <param name="connection">Connessione per cui è richiesto un token del manifesto.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.EdmMetadata">
      <summary>Rappresenta un'entità utilizzata per archiviare i metadati relativi a un EDM nel database.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.EdmMetadata.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.EdmMetadata" />.</summary>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.EdmMetadata.Id">
      <summary>Ottiene o imposta l'ID dell'entità di metadati che attualmente è sempre 1.</summary>
      <returns>ID.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.EdmMetadata.ModelHash">
      <summary>Ottiene o imposta l'hash del modello utilizzato per controllare se il modello è stato modificato dalla creazione del database dal medesimo.</summary>
      <returns>Hash del modello.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.EdmMetadata.TryGetModelHash(System.Data.Entity.DbContext)">
      <summary>Tenta di ottenere l'hash del modello calcolato da Code First per il contesto specificato.Questo metodo restituirà null se il contesto non viene utilizzato in modalità Code First.</summary>
      <returns>Stringa di hash.</returns>
      <param name="context">Contesto.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.EdmxWriter">
      <summary>Contiene i metodi utilizzati per accedere a Entity Data Model creato da Code First nel modulo EDMX.Questi metodi vengono in genere utilizzati per il debug quando esiste la necessità di analizzare il modello creato da Code First internamente.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.EdmxWriter.WriteEdmx(System.Data.Entity.DbContext,System.Xml.XmlWriter)">
      <summary>Utilizza Code First insieme al contesto specificato e scrive l'Entity Data Model risultante nel writer specificato del modulo EDMX.Questo metodo può essere utilizzato solo con istanze del contesto che utilizzano Code First e che creano il modello internamente.Il metodo non può essere utilizzato per i contesti creati utilizzando Database First o Model First, per i contesti creati utilizzando un oggetto <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" /> preesistente o per i contesti creati utilizzando un oggetto <see cref="T:System.Data.Entity.Infrastructure.DbCompiledModel" /> preesistente.</summary>
      <param name="context">Contesto.</param>
      <param name="writer">Writer.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.EdmxWriter.WriteEdmx(System.Data.Entity.Infrastructure.DbModel,System.Xml.XmlWriter)">
      <summary>Scrive l'Entity Data Model rappresentato dall'oggetto <see cref="T:System.Data.Entity.Infrastructure.DbModel" /> specificato nel writer specificato nel modulo EDMX.</summary>
      <param name="model">Oggetto che rappresenta il modello EDM.</param>
      <param name="writer">Writer.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.ExecutionStrategyKey">
      <summary>Chiave utilizzata per risolvere <see cref="T:System.Func`1" />.È data dal nome invariante del provider ADO.NET e dal nome del server di database specificati nella stringa di connessione.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.ExecutionStrategyKey.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza di <see cref="T:System.Data.Entity.Infrastructure.ExecutionStrategyKey" /></summary>
      <param name="providerInvariantName">Nome invariante del provider ADO.NET che indica il tipo di connessione ADO.NET per cui verrà utilizzata questa strategia di esecuzione.</param>
      <param name="serverName">Stringa che sarà confrontata al nome del server nella stringa di connessione.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.ExecutionStrategyKey.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale a questa chiave.</summary>
      <returns>true se l'oggetto specificato è uguale a questa chiave; in caso contrario, false.</returns>
      <param name="obj">Oggetto con cui eseguire il confronto.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.ExecutionStrategyKey.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza corrente.</summary>
      <returns>Codice hash per l'istanza corrente.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.ExecutionStrategyKey.ProviderInvariantName">
      <summary>Nome invariante del provider ADO.NET che indica il tipo di connessione ADO.NET per cui verrà utilizzata questa strategia di esecuzione.</summary>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.ExecutionStrategyKey.ServerName">
      <summary>Stringa che sarà confrontata al nome del server nella stringa di connessione.</summary>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.IDbAsyncEnumerable">
      <summary>Versione asincrona dell'interfaccia <see cref="T:System.Collections.IEnumerable" /> che consente il recupero asincrono degli elementi.Questa interfaccia viene utilizzata per interagire con le query di Entity Framework e non deve essere implementata da classi personalizzate.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.IDbAsyncEnumerable.GetAsyncEnumerator">
      <summary>Ottiene un enumeratore che può essere utilizzato per enumerare in modo asincrono la sequenza.</summary>
      <returns>Enumeratore per l'enumerazione asincrona sulla sequenza.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.IDbAsyncEnumerable`1">
      <summary>Versione asincrona dell'interfaccia <see cref="T:System.Collections.Generic.IEnumerable`1" /> che consente agli elementi della sequenza enumerabile di essere recuperati in modo asincrono.Questa interfaccia viene utilizzata per interagire con le query di Entity Framework e non deve essere implementata da classi personalizzate.</summary>
      <typeparam name="T">Tipo degli oggetti da enumerare.Il parametro di questo tipo è covariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo più derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere .</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.IDbAsyncEnumerable`1.GetAsyncEnumerator">
      <summary>Ottiene un enumeratore che può essere utilizzato per enumerare in modo asincrono la sequenza.</summary>
      <returns>Enumeratore per l'enumerazione asincrona sulla sequenza.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.IDbAsyncEnumerator">
      <summary>Versione asincrona dell'interfaccia <see cref="T:System.Collections.IEnumerator" /> che consente il recupero asincrono degli elementi.Questa interfaccia viene utilizzata per interagire con le query di Entity Framework e non deve essere implementata da classi personalizzate.</summary>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.IDbAsyncEnumerator.Current">
      <summary>Ottiene l'elemento corrente nell'iterazione.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.IDbAsyncEnumerator.MoveNextAsync(System.Threading.CancellationToken)">
      <summary>Sposta l'enumeratore all'elemento successivo nella sequenza, restituendo il risultato in modo asincrono.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene true se l'enumeratore è stato spostato correttamente all'elemento successivo; false, se l'enumeratore ha superato la fine della sequenza.</returns>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.IDbAsyncEnumerator`1">
      <summary>Versione asincrona dell'interfaccia <see cref="T:System.Collections.Generic.IEnumerator`1" /> che consente il recupero asincrono degli elementi.Questa interfaccia viene utilizzata per interagire con le query di Entity Framework e non deve essere implementata da classi personalizzate.</summary>
      <typeparam name="T">Tipo degli oggetti da enumerare.Il parametro di questo tipo è covariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo più derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere .</typeparam>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.IDbAsyncEnumerator`1.Current">
      <summary>Ottiene l'elemento corrente nell'iterazione.</summary>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider">
      <summary>Definisce metodi per creare ed eseguire query in modo asincrono descritte da un oggetto <see cref="T:System.Linq.IQueryable" />.Questa interfaccia viene utilizzata per interagire con le query di Entity Framework e non deve essere implementata da classi personalizzate.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider.ExecuteAsync``1(System.Linq.Expressions.Expression,System.Threading.CancellationToken)">
      <summary>Esegue in modo asincrono la query fortemente tipizzata rappresentata da un albero delle espressioni specificato.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il valore risultante dall'esecuzione della query specificata.</returns>
      <param name="expression">Albero delle espressioni che rappresenta una query LINQ.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
      <typeparam name="TResult">Tipo di valore risultante dall'esecuzione della query.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.IDbAsyncQueryProvider.ExecuteAsync(System.Linq.Expressions.Expression,System.Threading.CancellationToken)">
      <summary>Esegue in modo asincrono la query rappresentata da un albero delle espressioni specificato.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene il valore risultante dall'esecuzione della query specificata.</returns>
      <param name="expression">Albero delle espressioni che rappresenta una query LINQ.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.IDbConnectionFactory">
      <summary>Le implementazioni di questa interfaccia vengono utilizzate per creare oggetti DbConnection per un tipo di server di database in base a un nome di database specificato.Viene impostata un'istanza sulla classe <see cref="T:System.Data.Entity.Database" /> per fare in modo che tutti gli oggetti DbContext vengano creati senza informazioni di connessione o solo con un nome di database o una stringa di connessione in modo che venga utilizzato per impostazione predefinita un determinato tipo di server di database.Sono disponibili due implementazioni di questa interfaccia: <see cref="T:System.Data.Entity.Infrastructure.SqlConnectionFactory" /> viene usata per creare connessioni a Microsoft SQL Server, incluse le edizioni EXPRESS.<see cref="T:System.Data.Entity.Infrastructure.SqlCeConnectionFactory" /> viene utilizzata per creare connessioni a Microsoft SQL Server Compact Editions.È possibile aggiungere altre implementazioni per altri server di database in base alle necessità.Si noti che le implementazioni devono essere thread-safe o non modificabili in quanto sono accessibili da più thread contemporaneamente.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.IDbConnectionFactory.CreateConnection(System.String)">
      <summary>Crea una connessione basata sul nome di database o sulla stringa di connessione specificati.</summary>
      <returns>Oggetto DbConnection inizializzato.</returns>
      <param name="nameOrConnectionString">Nome di database o stringa di connessione.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.IDbContextFactory`1">
      <summary>Factory per la creazione di istanze <see cref="T:System.Data.Entity.DbContext" /> derivate.Implementare questa interfaccia per abilitare i servizi per la fase di progettazione per i tipi di contesto che non dispongono di un costruttore predefinito pubblico.In fase di progettazione, è possibile creare istanze <see cref="T:System.Data.Entity.DbContext" /> derivate per abilitare fasi di progettazione specifiche, ad esempio rendering del modello, generazione DDL e così via.Per abilitare la creazione di istanze in fase di progettazione per i tipi <see cref="T:System.Data.Entity.DbContext" /> che non dispongono di un costruttore predefinito pubblico, implementare questa interfaccia.I servizi in fase di progettazione individueranno automaticamente le implementazioni di questa interfaccia che si trovano nello stesso assembly del tipo <see cref="T:System.Data.Entity.DbContext" /> derivato.</summary>
      <typeparam name="TContext">Tipo di contesto.Il parametro di questo tipo è covariante. Ciò significa che è possibile usare il tipo specificato o qualsiasi tipo più derivato. Per altre informazioni sulla covarianza e la controvarianza, vedere .</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.IDbContextFactory`1.Create">
      <summary>Crea una nuova istanza di un tipo <see cref="T:System.Data.Entity.DbContext" /> derivato.</summary>
      <returns>Istanza di TContext</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.IDbExecutionStrategy">
      <summary>Strategia utilizzata per eseguire un comando o una query sul database, possibilmente con la logica dei tentativi quando si verifica un errore.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.IDbExecutionStrategy.Execute(System.Action)">
      <summary>Esegue l'operazione specificata.</summary>
      <param name="operation">Delegato che rappresenta un'operazione eseguibile che non restituisce risultati.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.IDbExecutionStrategy.Execute``1(System.Func{``0})">
      <summary>Esegue l'operazione specificata e restituisce il risultato.</summary>
      <returns>Risultato dell'operazione.</returns>
      <param name="operation">Delegato che rappresenta un'operazione eseguibile che restituisce il risultato di tipo <paramref name="TResult" />.</param>
      <typeparam name="TResult">Tipo restituito di <paramref name="operation" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.IDbExecutionStrategy.ExecuteAsync``1(System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)">
      <summary>Esegue l'operazione asincrona specificata e restituisce il risultato.</summary>
      <returns>Attività che verrà eseguita fino al completamento se l'attività originale viene portata a termine correttamente (la prima volta o dopo più tentativi).Se l'attività ha esito negativo con un errore non temporaneo o viene raggiunto il numero massimo consentito di tentativi, l'attività restituita darà un errore e l'eccezione dovrà essere osservata.</returns>
      <param name="operation">Funzione che restituisce un'attività avviata di tipo <paramref name="TResult" />.</param>
      <param name="cancellationToken">Token di annullamento utilizzato per annullare l'operazione di ripetizione, ma non le operazioni che sono già in corso o che sono state completate correttamente.</param>
      <typeparam name="TResult">Tipo di risultato dell'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> restituito da <paramref name="operation" />.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.IDbExecutionStrategy.ExecuteAsync(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)">
      <summary>Esegue l'operazione asincrona specificata.</summary>
      <returns>Attività che verrà eseguita fino al completamento se l'attività originale viene portata a termine correttamente (la prima volta o dopo più tentativi).Se l'attività ha esito negativo con un errore non temporaneo o viene raggiunto il numero massimo consentito di tentativi, l'attività restituita darà un errore e l'eccezione dovrà essere osservata.</returns>
      <param name="operation">Funzione che restituisce un'attività avviata.</param>
      <param name="cancellationToken">Token di annullamento utilizzato per annullare l'operazione di ripetizione, ma non le operazioni che sono già in corso o che sono state completate correttamente.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.IDbExecutionStrategy.RetriesOnFailure">
      <summary>Indica se l'oggetto <see cref="T:System.Data.Entity.Infrastructure.IDbExecutionStrategy" /> può ripetere l'esecuzione dopo un errore.</summary>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.IDbModelCacheKey">
      <summary>Rappresenta un valore chiave tramite cui viene identificato in modo univoco un modello Entity Framework caricato in memoria.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.IDbModelCacheKey.Equals(System.Object)">
      <summary>Determina se la chiave del modello memorizzata nella cache corrente è uguale alla chiave del modello memorizzata nella cache specificata.</summary>
      <returns>true se la chiave del modello memorizzata nella cache corrente è uguale alla chiave del modello memorizzata nella cache specificata; in caso contrario, false.</returns>
      <param name="other">Chiave del modello memorizzata nella cache da confrontare con la chiave del modello memorizzata nella cache corrente.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.IDbModelCacheKey.GetHashCode">
      <summary>Restituisce la funzione hash per questa chiave del modello memorizzata nella cache.</summary>
      <returns>Funzione hash per questa chiave del modello memorizzata nella cache.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.IDbModelCacheKeyProvider">
      <summary>Implementare questa interfaccia nel contesto per utilizzare la logica personalizzata per calcolare la chiave utilizzata per cercare un modello già creato nella cache.Questa interfaccia consente di disporre di un singolo tipo di contesto che può essere utilizzato con modelli diversi nello stesso oggetto AppDomain o più tipi di contesto in cui viene utilizzato lo stesso modello.</summary>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.IDbModelCacheKeyProvider.CacheKey">
      <summary>Ottiene la chiave memorizzata nella cache associata al provider.</summary>
      <returns>Chiave memorizzata nella cache associata al provider.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.IDbProviderFactoryResolver">
      <summary>Servizio per ottenere l'oggetto <see cref="T:System.Data.Common.DbProviderFactory" /> corretto da un oggetto <see cref="T:System.Data.Common.DbConnection" /> specificato.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.IDbProviderFactoryResolver.ResolveProviderFactory(System.Data.Common.DbConnection)">
      <summary>Restituisce l'oggetto <see cref="T:System.Data.Common.DbProviderFactory" /> per la connessione specificata.</summary>
      <returns>Factory del provider per la connessione.</returns>
      <param name="connection">Connessione.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.IManifestTokenResolver">
      <summary>Servizio per ottenere un token del manifesto del provider data una connessione.La classe <see cref="T:System.Data.Entity.Infrastructure.DefaultManifestTokenResolver" /> viene utilizzata per impostazione predefinita e utilizza il provider sottostante per ottenere il token che spesso implica l'apertura della connessione.In alternativa, è possibile utilizzare un'implementazione diversa aggiungendo <see cref="T:System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver" /> a <see cref="T:System.Data.Entity.DbConfiguration" /> che può utilizzare qualsiasi informazione nella connessione per restituire il token.Ad esempio, se la connessione fa riferimento a un database SQL Server 2008, "2008" può essere restituito senza aprire la connessione.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.IManifestTokenResolver.ResolveManifestToken(System.Data.Common.DbConnection)">
      <summary>Restituisce il token del manifesto da utilizzare per la connessione specificata.</summary>
      <returns>Token del manifesto da utilizzare.</returns>
      <param name="connection">Connessione per cui è richiesto un token del manifesto.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.IMetadataAnnotationSerializer">
      <summary>Implementare questa interfaccia per consentire la serializzazione delle annotazioni personalizzate rappresentate dalle istanze di <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataProperty" /> da e verso EDMX XML.Di norma, un'istanza del serializzatore è impostata tramite il metodo <see cref="M:System.Data.Entity.DbConfiguration.SetMetadataAnnotationSerializer(System.String,System.Func{System.Data.Entity.Infrastructure.IMetadataAnnotationSerializer})" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.IMetadataAnnotationSerializer.Deserialize(System.String,System.String)">
      <summary>Deserializza la stringa specificata nuovamente nel valore di annotazione previsto.</summary>
      <returns>Valore dell'annotazione deserializzata.</returns>
      <param name="name">Nome dell'annotazione che viene deserializzata.</param>
      <param name="value">Stringa da deserializzare.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.IMetadataAnnotationSerializer.Serialize(System.String,System.Object)">
      <summary>Serializza il valore di annotazione specificato in una stringa per l'archiviazione in EDMX XML.</summary>
      <returns>Valore serializzato.</returns>
      <param name="name">Nome dell'annotazione che viene serializzata.</param>
      <param name="value">Valore da serializzare.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.IncludeMetadataConvention">
      <summary>Questa convenzione <see cref="T:System.Data.Entity.DbModelBuilder" /> fa in modo che DbModelBuilder includa i metadati sul modello durante la compilazione di quest'ultimo.Quando <see cref="T:System.Data.Entity.DbContext" /> crea un modello in base alla convenzione, la aggiunge all'elenco di quelle utilizzate da DbModelBuilder.Questo determinerà la scrittura di metadati del modello nel database se DbContext viene utilizzato per creare il database.Questo può essere utilizzato per verificare rapidamente se il modello è stato modificato dall'ultima volta che è stato utilizzato sul database.Questa convenzione può essere rimossa dalle convenzioni <see cref="T:System.Data.Entity.DbModelBuilder" /> eseguendo l'override del metodo OnModelCreating in una classe DbContext derivata.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.IncludeMetadataConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.IncludeMetadataConvention" />.</summary>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.IObjectContextAdapter">
      <summary>Interfaccia implementata da oggetti che possono fornire un'istanza <see cref="P:System.Data.Entity.Infrastructure.IObjectContextAdapter.ObjectContext" />.La classe <see cref="T:System.Data.Entity.DbContext" /> implementa questa interfaccia per fornire l'accesso a ObjectContext sottostante.</summary>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.IObjectContextAdapter.ObjectContext">
      <summary>Ottiene il contesto dell’oggetto.</summary>
      <returns>Contesto dell'oggetto.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.IProviderInvariantName">
      <summary>Utilizzato da <see cref="T:System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver" /> e <see cref="T:System.Data.Entity.DbConfiguration" /> per risolvere un nome invariante del provider da <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.IProviderInvariantName.Name">
      <summary>Ottiene il nome del provider.</summary>
      <returns>Nome del provider.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.LocalDbConnectionFactory">
      <summary>Le istanze di questa classe vengono utilizzate per creare oggetti DbConnection per SQL Server LocalDb basati su un nome di database o su una stringa di connessione specificati.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.LocalDbConnectionFactory.#ctor(System.String)">
      <summary>Crea una nuova istanza della factory di connessione per la versione specificata di LocalDb.Per SQL Server 2012 LocalDb utilizzare "v11.0".Per LocalDb di SQL Server 2014 e versioni successive usa "mssqllocaldb".</summary>
      <param name="localDbVersion">Versione di LocalDb da utilizzare.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.LocalDbConnectionFactory.#ctor(System.String,System.String)">
      <summary>Crea una nuova istanza della factory di connessione per la versione specificata di LocalDb.Per SQL Server 2012 LocalDb utilizzare "v11.0".Per LocalDb di SQL Server 2014 e versioni successive usa "mssqllocaldb".</summary>
      <param name="localDbVersion">Versione di LocalDb da utilizzare.</param>
      <param name="baseConnectionString">Stringa di connessione da utilizzare per le opzioni del database diverse da 'Initial Catalog', 'Data Source' e 'AttachDbFilename'.'Initial Catalog' e 'AttachDbFilename' verranno anteposti a questa stringa in base al nome del database quando viene chiamato CreateConnection.'Data Source' verrà impostato in base all'argomento LocalDbVersion.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.LocalDbConnectionFactory.BaseConnectionString">
      <summary>Stringa di connessione da utilizzare per le opzioni del database diverse da 'Initial Catalog', 'Data Source' e 'AttachDbFilename'.'Initial Catalog' e 'AttachDbFilename' verranno anteposti a questa stringa in base al nome del database quando viene chiamato CreateConnection.'Data Source' verrà impostato in base all'argomento LocalDbVersion.L'impostazione predefinita è 'Integrated Security=True;'.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.LocalDbConnectionFactory.CreateConnection(System.String)">
      <summary>Crea una connessione per SQL Server LocalDb basata sul nome di database o sulla stringa di connessione specificato.Se la stringa specificata contiene un carattere '=', viene trattata come una stringa di connessione completa; in caso contrario, viene trattata solo come un nome di database.</summary>
      <returns>Oggetto DbConnection inizializzato.</returns>
      <param name="nameOrConnectionString">Nome di database o stringa di connessione.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.ModelContainerConvention">
      <summary>Questa convenzione <see cref="T:System.Data.Entity.DbModelBuilder" /> utilizza il nome della classe <see cref="T:System.Data.Entity.DbContext" /> derivata come contenitore per il modello concettuale compilato da Code First.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.ModelContainerConvention.Apply(System.Data.Entity.Core.Metadata.Edm.EntityContainer,System.Data.Entity.Infrastructure.DbModel)">
      <summary>Applica la convenzione al modello specificato.</summary>
      <param name="item">Contenitore a cui applicare la convenzione.</param>
      <param name="model">Modello.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.ModelNamespaceConvention">
      <summary>Questa convenzione <see cref="T:System.Data.Entity.DbModelBuilder" /> utilizza lo spazio dei nomi della classe <see cref="T:System.Data.Entity.DbContext" /> derivata come spazio dei nomi del modello concettuale compilato da Code First.</summary>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.ObjectReferenceEqualityComparer">
      <summary>Confronta gli oggetti utilizzando l'uguaglianza dei riferimenti.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.ObjectReferenceEqualityComparer.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.ObjectReferenceEqualityComparer" />.</summary>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.ObjectReferenceEqualityComparer.Default">
      <summary>Ottiene l'istanza predefinita.</summary>
      <returns>Istanza predefinita.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.ObjectReferenceEqualityComparer.System#Collections#Generic#IEqualityComparer{T}#Equals(System.Object,System.Object)">
      <summary>Determina se le istanze dell'oggetto specificato sono considerate uguali.</summary>
      <returns>true se gli oggetti sono considerati uguali. In caso contrario, false.</returns>
      <param name="x">Primo oggetto da confrontare.</param>
      <param name="y">Secondo oggetto da confrontare.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.ObjectReferenceEqualityComparer.System#Collections#Generic#IEqualityComparer{T}#GetHashCode(System.Object)">
      <summary>Ottiene il codice hash per l'oggetto specificato.</summary>
      <returns>Codice hash per l'oggetto specificato.</returns>
      <param name="obj">Oggetto.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.ReplacementDbQueryWrapper`1">
      <summary>Le istanze di questa classe vengono utilizzate internamente per creare espressioni costanti per <see cref="T:System.Data.Entity.Core.Objects.ObjectQuery`1" /> da inserire nell'albero delle espressioni in sostituzione dei riferimenti a <see cref="T:System.Data.Entity.Infrastructure.DbQuery`1" /> e <see cref="T:System.Data.Entity.Infrastructure.DbQuery" />.</summary>
      <typeparam name="TElement">Tipo dell'elemento.</typeparam>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.ReplacementDbQueryWrapper`1.Query">
      <summary>Proprietà pubblica prevista nell'albero delle espressioni LINQ.</summary>
      <returns>Query.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.RetryLimitExceededException">
      <summary>Eccezione che viene generata quando l'azione ha nuovamente esito negativo dopo essere stata riprovata un numero configurato di volte.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.RetryLimitExceededException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.RetryLimitExceededException" /> con nessun messaggio di errore.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.RetryLimitExceededException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.RetryLimitExceededException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio in cui viene descritto l'errore.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.RetryLimitExceededException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.RetryLimitExceededException" />.</summary>
      <param name="message">Messaggio in cui viene descritto l'errore.</param>
      <param name="innerException">Eccezione che ha determinato l'eccezione corrente.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.SqlCeConnectionFactory">
      <summary>Le istanze di questa classe vengono utilizzate per creare oggetti DbConnection per SQL Server Compact Edition basati su un nome di database o su una stringa di connessione specificati.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.SqlCeConnectionFactory.#ctor(System.String)">
      <summary>Crea una nuova factory di connessione con le proprietà DatabaseDirectory e BaseConnectionString vuote (impostazione predefinita).</summary>
      <param name="providerInvariantName">Nome invariante del provider che specifica la versione di SQL Server Compact Edition da utilizzare.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.SqlCeConnectionFactory.#ctor(System.String,System.String,System.String)">
      <summary>Crea una nuova factory di connessione con le proprietà DatabaseDirectory e BaseConnectionString specificate.</summary>
      <param name="providerInvariantName">Nome invariante del provider che specifica la versione di SQL Server Compact Edition da utilizzare.</param>
      <param name="databaseDirectory">Percorso da anteporre al nome del database che formerà il nome file utilizzato da SQL Server Compact Edition durante la creazione o la lettura del file di database.Una stringa vuota indica che SQL Server Compact Edition utilizzerà l'impostazione predefinita per il percorso del file di database.</param>
      <param name="baseConnectionString">Stringa di connessione da utilizzare per le opzioni nel database diverse da 'Origine dati'.L'origine dati verrà anteposta a questa stringa basata sul nome del database quando viene chiamato CreateConnection.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.SqlCeConnectionFactory.BaseConnectionString">
      <summary>Stringa di connessione da utilizzare per le opzioni nel database diverse da 'Origine dati'.L'origine dati verrà anteposta a questa stringa basata sul nome del database quando viene chiamato CreateConnection.L'impostazione predefinita è una stringa vuota, che indica non verranno utilizzate altre opzioni.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.SqlCeConnectionFactory.CreateConnection(System.String)">
      <summary>Crea una connessione per SQL Server Compact Edition basata sul nome di database o sulla stringa di connessione specificati.Se la stringa specificata contiene un carattere '=', viene trattata come una stringa di connessione completa; in caso contrario, viene trattata solo come un nome di database.</summary>
      <returns>Oggetto DbConnection inizializzato.</returns>
      <param name="nameOrConnectionString">Nome di database o stringa di connessione.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.SqlCeConnectionFactory.DatabaseDirectory">
      <summary>Percorso da anteporre al nome del database che formerà il nome file utilizzato da SQL Server Compact Edition durante la creazione o la lettura del file di database.Il valore predefinito è" | DataDirectory |", che indica che il file verrà inserito nella directory dei dati designata.</summary>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.SqlCeConnectionFactory.ProviderInvariantName">
      <summary>Nome invariante del provider che specifica la versione di SQL Server Compact Edition da utilizzare.</summary>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.SqlConnectionFactory">
      <summary>Le istanze di questa classe vengono utilizzate per creare oggetti DbConnection per SQL Server basati su un nome di database o su una stringa di connessione specificati.Per impostazione predefinita, la connessione viene effettuata a '.\SQLEXPRESS'.Ciò può essere modificato modificando la stringa di connessione quando si costruisce un'istanza della factory.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.SqlConnectionFactory.#ctor">
      <summary>Crea una nuova factory di connessione con la proprietà BaseConnectionString predefinita di 'Data Source=.\SQLEXPRESS; Integrated Security=True; MultipleActiveResultSets=True;'.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.SqlConnectionFactory.#ctor(System.String)">
      <summary>Crea una nuova factory di connessione con la proprietà BaseConnectionString specificata.</summary>
      <param name="baseConnectionString">Stringa di connessione da utilizzare per le opzioni del database diverse da 'Catalogo iniziale'.Il 'Catalogo iniziale' verrà anteposto a questa stringa basata sul nome del database quando viene chiamato CreateConnection.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.SqlConnectionFactory.BaseConnectionString">
      <summary>Stringa di connessione da utilizzare per le opzioni del database diverse da 'Catalogo iniziale'.Il 'Catalogo iniziale' verrà anteposto a questa stringa basata sul nome del database quando viene chiamato CreateConnection.L'impostazione predefinita è 'Data Source=.\SQLEXPRESS; Integrated Security=True;'.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.SqlConnectionFactory.CreateConnection(System.String)">
      <summary>Crea una connessione per SQL Server basata sul nome di database o sulla stringa di connessione specificati.Se la stringa specificata contiene un carattere '=', viene trattata come una stringa di connessione completa; in caso contrario, viene trattata solo come un nome di database.</summary>
      <returns>Oggetto DbConnection inizializzato.</returns>
      <param name="nameOrConnectionString">Nome di database o stringa di connessione.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.SuppressDbSetInitializationAttribute">
      <summary>Questo attributo può essere applicato a un'intera classe <see cref="T:System.Data.Entity.DbContext" /> derivata, a singole proprietà <see cref="T:System.Data.Entity.DbSet`1" /> o alle proprietà <see cref="T:System.Data.Entity.IDbSet`1" /> di tale classe.Quando vengono applicate, eventuali proprietà <see cref="T:System.Data.Entity.DbSet`1" /> o <see cref="T:System.Data.Entity.IDbSet`1" /> individuate verranno comunque incluse nel modello, ma non verranno inizializzate automaticamente.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.SuppressDbSetInitializationAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.SuppressDbSetInitializationAttribute" />.</summary>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.TableExistenceChecker">
      <summary>Implementato dai provider di Entity Framework e usato per verificare se le tabelle esistono o meno in un determinato database.Viene usato dagli inizializzatori di database per determinare se considerare o meno vuoto un database esistente e, se necessario, creare le tabelle.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TableExistenceChecker.#ctor"></member>
    <member name="M:System.Data.Entity.Infrastructure.TableExistenceChecker.AnyModelTableExistsInDatabase(System.Data.Entity.Core.Objects.ObjectContext,System.Data.Common.DbConnection,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.EntitySet},System.String)">
      <summary>Quando sottoposto a override in una classe derivata, verifica la posizione delle tabelle specificate nel database per la connessione specificata.</summary>
      <returns>True se esiste una qualsiasi delle tabelle modello o la tabella EdmMetadata.</returns>
      <param name="context">Contesto per cui viene eseguita la verifica delle tabelle, usato in genere per ottenere un oggetto <see cref="T:System.Data.Entity.Infrastructure.Interception.DbInterceptionContext" /> appropriato.</param>
      <param name="connection">Connessione al database.Può essere aperta o chiusa; deve essere richiusa se è aperta.Non eliminare.</param>
      <param name="modelTables">Tabelle di cui verificare l'esistenza.</param>
      <param name="edmMetadataContextTableName">Nome della tabella EdmMetadata di cui verificare l'esistenza.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TableExistenceChecker.GetTableName(System.Data.Entity.Core.Metadata.Edm.EntitySet)">
      <summary>Metodo helper per ottenere il nome della tabella dello spazio S <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySet" /> specificato.</summary>
      <returns>Nome della tabella.</returns>
      <param name="modelTable">Set di entità dello spazio S per la tabella.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.TransactionContext">
      <summary>Questa classe viene utilizzata da <see cref="T:System.Data.Entity.Infrastructure.CommitFailureHandler" /> per leggere e scrivere le informazioni di traccia delle transazioni dal database.Per personalizzare la definizione della tabella delle transazioni è possibile derivare da questa classe ed eseguire l'override di <see cref="M:System.Data.Entity.Infrastructure.TransactionContext.OnModelCreating(System.Data.Entity.DbModelBuilder)" />.Le classi derivate possono essere registrate utilizzando <see cref="T:System.Data.Entity.DbConfiguration" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionContext.#ctor(System.Data.Common.DbConnection)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.TransactionContext" />.</summary>
      <param name="existingConnection">Connessione utilizzata dal contesto per cui verranno registrate le transazioni.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionContext.OnModelCreating(System.Data.Entity.DbModelBuilder)">
      <summary>Questo metodo viene chiamato quando il modello per un contesto derivato è stato inizializzato.</summary>
      <param name="modelBuilder">Generatore che definisce il modello per il contesto creato.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.TransactionContext.Transactions">
      <summary>Ottiene o imposta un oggetto <see cref="T:System.Data.Entity.DbSet`1" /> da utilizzare per leggere e scrivere istanze di <see cref="T:System.Data.Entity.Infrastructure.TransactionRow" />.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.DbSet`1" /> che può essere usato per leggere e scrivere nelle istanze di <see cref="T:System.Data.Entity.Infrastructure.TransactionRow" />.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.TransactionHandler">
      <summary>Rappresenta la classe di base per gli intercettori che gestiscono le operazioni di transazione.Le classi derivate possono essere registrate utilizzando <see cref="M:System.Data.Entity.DbConfiguration.SetDefaultTransactionHandler(System.Func{System.Data.Entity.Infrastructure.TransactionHandler})" /> o  <see cref="M:System.Data.Entity.DbConfiguration.SetTransactionHandler(System.String,System.Func{System.Data.Entity.Infrastructure.TransactionHandler},System.String)" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.TransactionHandler" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.BeganTransaction(System.Data.Common.DbConnection,System.Data.Entity.Infrastructure.Interception.BeginTransactionInterceptionContext)">
      <summary>Può essere implementato in una classe derivata.</summary>
      <param name="connection">Connessione che ha avviato la transazione.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.BeginningTransaction(System.Data.Common.DbConnection,System.Data.Entity.Infrastructure.Interception.BeginTransactionInterceptionContext)">
      <summary>Può essere implementato in una classe derivata.</summary>
      <param name="connection">Connessione che avvia la transazione.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.BuildDatabaseInitializationScript">
      <summary>Quando viene implementato in una classe derivata, restituisce lo script per preparare il database per il gestore delle transazioni.</summary>
      <returns>Script per modificare lo schema del database per il gestore delle transazioni.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.Closed(System.Data.Common.DbConnection,System.Data.Entity.Infrastructure.Interception.DbConnectionInterceptionContext)">
      <summary>Può essere implementato in una classe derivata.</summary>
      <param name="connection">Connessione che è stata chiusa.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.Closing(System.Data.Common.DbConnection,System.Data.Entity.Infrastructure.Interception.DbConnectionInterceptionContext)">
      <summary>Può essere implementato in una classe derivata.</summary>
      <param name="connection">Connessione che viene chiusa.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.Committed(System.Data.Common.DbTransaction,System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext)">
      <summary>Può essere implementato in una classe derivata.</summary>
      <param name="transaction">Transazione che è stata sottoposta al commit.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.Committing(System.Data.Common.DbTransaction,System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext)">
      <summary>Può essere implementato in una classe derivata.</summary>
      <param name="transaction">Transazione che viene sottoposta al commit.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.TransactionHandler.Connection">
      <summary>Ottiene la connessione per cui verranno gestite le operazioni di transazione.</summary>
      <returns>Oggetto <see cref="T:System.Data.Common.DbConnection" /> per cui verranno gestite le operazioni di transazione.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.ConnectionGetting(System.Data.Common.DbTransaction,System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext{System.Data.Common.DbConnection})">
      <summary>Può essere implementato in una classe derivata.</summary>
      <param name="transaction">Transazione.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.ConnectionGot(System.Data.Common.DbTransaction,System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext{System.Data.Common.DbConnection})">
      <summary>Può essere implementato in una classe derivata.</summary>
      <param name="transaction">Transazione.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.ConnectionStringGetting(System.Data.Common.DbConnection,System.Data.Entity.Infrastructure.Interception.DbConnectionInterceptionContext{System.String})">
      <summary>Può essere implementato in una classe derivata.</summary>
      <param name="connection">Connessione.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.ConnectionStringGot(System.Data.Common.DbConnection,System.Data.Entity.Infrastructure.Interception.DbConnectionInterceptionContext{System.String})">
      <summary>Può essere implementato in una classe derivata.</summary>
      <param name="connection">Connessione.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.ConnectionStringSet(System.Data.Common.DbConnection,System.Data.Entity.Infrastructure.Interception.DbConnectionPropertyInterceptionContext{System.String})">
      <summary>Può essere implementato in una classe derivata.</summary>
      <param name="connection">Connessione.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.ConnectionStringSetting(System.Data.Common.DbConnection,System.Data.Entity.Infrastructure.Interception.DbConnectionPropertyInterceptionContext{System.String})">
      <summary>Può essere implementato in una classe derivata.</summary>
      <param name="connection">Connessione.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.ConnectionTimeoutGetting(System.Data.Common.DbConnection,System.Data.Entity.Infrastructure.Interception.DbConnectionInterceptionContext{System.Int32})">
      <summary>Può essere implementato in una classe derivata.</summary>
      <param name="connection">Connessione.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.ConnectionTimeoutGot(System.Data.Common.DbConnection,System.Data.Entity.Infrastructure.Interception.DbConnectionInterceptionContext{System.Int32})">
      <summary>Può essere implementato in una classe derivata.</summary>
      <param name="connection">Connessione.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.DatabaseGetting(System.Data.Common.DbConnection,System.Data.Entity.Infrastructure.Interception.DbConnectionInterceptionContext{System.String})">
      <summary>Può essere implementato in una classe derivata.</summary>
      <param name="connection">Connessione.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.DatabaseGot(System.Data.Common.DbConnection,System.Data.Entity.Infrastructure.Interception.DbConnectionInterceptionContext{System.String})">
      <summary>Può essere implementato in una classe derivata.</summary>
      <param name="connection">Connessione.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.DataSourceGetting(System.Data.Common.DbConnection,System.Data.Entity.Infrastructure.Interception.DbConnectionInterceptionContext{System.String})">
      <summary>Può essere implementato in una classe derivata.</summary>
      <param name="connection">Connessione.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.DataSourceGot(System.Data.Common.DbConnection,System.Data.Entity.Infrastructure.Interception.DbConnectionInterceptionContext{System.String})">
      <summary>Può essere implementato in una classe derivata.</summary>
      <param name="connection">Connessione.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.TransactionHandler.DbContext">
      <summary>Ottiene il contesto per cui verranno gestite le operazioni di transazione.</summary>
      <returns>Oggetto <see cref="P:System.Data.Entity.Infrastructure.TransactionHandler.DbContext" /> per cui verranno gestite le operazioni di transazione.Può essere null.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.Dispose">
      <summary>Rilascia le risorse utilizzate da questo gestore delle transazioni.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.Dispose(System.Boolean)">
      <summary>Rilascia le risorse utilizzate da questo gestore delle transazioni.</summary>
      <param name="disposing">true per rilasciare sia le risorse gestite sia quelle non gestite; false per rilasciare solo quelle non gestite.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.Disposed(System.Data.Common.DbConnection,System.Data.Entity.Infrastructure.Interception.DbConnectionInterceptionContext)">
      <summary>Può essere implementato in una classe derivata.</summary>
      <param name="connection">Connessione che è stata eliminata.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.Disposed(System.Data.Common.DbTransaction,System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext)">
      <summary>Può essere implementato in una classe derivata.</summary>
      <param name="transaction">Transazione che è stata eliminata.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.Disposing(System.Data.Common.DbConnection,System.Data.Entity.Infrastructure.Interception.DbConnectionInterceptionContext)">
      <summary>Può essere implementato in una classe derivata.</summary>
      <param name="connection">Connessione che viene eliminata.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.Disposing(System.Data.Common.DbTransaction,System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext)">
      <summary>Può essere implementato in una classe derivata.</summary>
      <param name="transaction">Transazione che viene eliminata.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.EnlistedTransaction(System.Data.Common.DbConnection,System.Data.Entity.Infrastructure.Interception.EnlistTransactionInterceptionContext)">
      <summary>Può essere implementato in una classe derivata.</summary>
      <param name="connection">Connessione.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.EnlistingTransaction(System.Data.Common.DbConnection,System.Data.Entity.Infrastructure.Interception.EnlistTransactionInterceptionContext)">
      <summary>Può essere implementato in una classe derivata.</summary>
      <param name="connection">Connessione.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.Initialize(System.Data.Entity.Core.Objects.ObjectContext)">
      <summary>Inizializza l'istanza utilizzando il contesto specificato.</summary>
      <param name="context">Contesto per cui verranno gestite le operazioni di transazione.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.Initialize(System.Data.Entity.DbContext,System.Data.Common.DbConnection)">
      <summary>Inizializza l'istanza utilizzando il contesto specificato.</summary>
      <param name="context">Contesto per cui verranno gestite le operazioni di transazione.</param>
      <param name="connection">Connessione da utilizzare per l'inizializzazione.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.TransactionHandler.IsDisposed">
      <summary>Ottiene o imposta un valore che indica se questo gestore delle transazioni è eliminato.</summary>
      <returns>true se il gestore delle transazioni è eliminato. In caso contrario,  false.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.IsolationLevelGetting(System.Data.Common.DbTransaction,System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext{System.Data.IsolationLevel})">
      <summary>Può essere implementato in una classe derivata.</summary>
      <param name="transaction">Transazione.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.IsolationLevelGot(System.Data.Common.DbTransaction,System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext{System.Data.IsolationLevel})">
      <summary>Può essere implementato in una classe derivata.</summary>
      <param name="transaction">Transazione.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.MatchesParentContext(System.Data.Common.DbConnection,System.Data.Entity.Infrastructure.Interception.DbInterceptionContext)">
      <summary>Controlla se il contesto di intersezione specificato contiene il contesto di destinazione o se la connessione fornita è uguale a quella utilizzata dal contesto di destinazione.</summary>
      <returns>true se il contesto di intersezione specificato contiene il contesto di destinazione o se la connessione specificata è uguale a quella utilizzato dal contesto di destinazione qualora il contesto specificato di intersezione non contenga alcun contesto. In caso contrario false.</returns>
      <param name="connection">Connessione.</param>
      <param name="interceptionContext">Contesto di intersezione.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.TransactionHandler.ObjectContext">
      <summary>Ottiene il contesto per cui verranno gestite le operazioni di transazione.</summary>
      <returns>Oggetto <see cref="P:System.Data.Entity.Infrastructure.TransactionHandler.ObjectContext" /> per cui verranno gestite le operazioni di transazione.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.Opened(System.Data.Common.DbConnection,System.Data.Entity.Infrastructure.Interception.DbConnectionInterceptionContext)">
      <summary>Può essere implementato in una classe derivata.</summary>
      <param name="connection">Connessione che è stata aperta.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.Opening(System.Data.Common.DbConnection,System.Data.Entity.Infrastructure.Interception.DbConnectionInterceptionContext)">
      <summary>Può essere implementato in una classe derivata.</summary>
      <param name="connection">Connessione che viene aperta.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.RolledBack(System.Data.Common.DbTransaction,System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext)">
      <summary>Può essere implementato in una classe derivata.</summary>
      <param name="transaction">Transazione che è stata sottoposta al rollback.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.RollingBack(System.Data.Common.DbTransaction,System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext)">
      <summary>Può essere implementato in una classe derivata.</summary>
      <param name="transaction">Transazione che viene sottoposta al rollback.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.ServerVersionGetting(System.Data.Common.DbConnection,System.Data.Entity.Infrastructure.Interception.DbConnectionInterceptionContext{System.String})">
      <summary>Può essere implementato in una classe derivata.</summary>
      <param name="connection">Connessione.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.ServerVersionGot(System.Data.Common.DbConnection,System.Data.Entity.Infrastructure.Interception.DbConnectionInterceptionContext{System.String})">
      <summary>Può essere implementato in una classe derivata.</summary>
      <param name="connection">Connessione.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.StateGetting(System.Data.Common.DbConnection,System.Data.Entity.Infrastructure.Interception.DbConnectionInterceptionContext{System.Data.ConnectionState})">
      <summary>Può essere implementato in una classe derivata.</summary>
      <param name="connection">Connessione.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionHandler.StateGot(System.Data.Common.DbConnection,System.Data.Entity.Infrastructure.Interception.DbConnectionInterceptionContext{System.Data.ConnectionState})">
      <summary>Può essere implementato in una classe derivata.</summary>
      <param name="connection">Connessione.</param>
      <param name="interceptionContext">Informazioni contestuali associate alla chiamata.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.TransactionRow">
      <summary>Rappresenta una transazione.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionRow.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.TransactionRow" />.</summary>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.TransactionRow.CreationTime">
      <summary>Ottiene o imposta l'ora locale dell'avvio della transazione.</summary>
      <returns>L'ora locale dell'avvio della transazione.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionRow.Equals(System.Object)">
      <summary>Indica un valore che specifica se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se l'oggetto specificato è uguale all'oggetto corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.TransactionRow.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash per l'istanza.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.TransactionRow.Id">
      <summary>Ottiene o imposta un ID univoco assegnato a un oggetto transazione.</summary>
      <returns>ID univoco assegnato a un oggetto transazione.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.UnintentionalCodeFirstException">
      <summary>Generata quando un contesto viene generato dai modelli <see cref="T:System.Data.Entity.DbContext" /> in modalità Database First o Model First e viene utilizzato in modalità Code First.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.UnintentionalCodeFirstException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.UnintentionalCodeFirstException" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.UnintentionalCodeFirstException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.UnintentionalCodeFirstException" />.</summary>
      <param name="info">Oggetto contenente i dati serializzati dell'oggetto.</param>
      <param name="context">Informazioni contestuali sull'origine o sulla destinazione.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.UnintentionalCodeFirstException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.UnintentionalCodeFirstException" />.</summary>
      <param name="message">Messaggio.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.UnintentionalCodeFirstException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.UnintentionalCodeFirstException" />.</summary>
      <param name="message">Messaggio.</param>
      <param name="innerException">Eccezione interna.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.Annotations.AnnotationCodeGenerator">
      <summary>Rappresenta la creazione di un servizio che permette la generazione del codice delle annotazioni personalizzate come parte dello scaffolding delle migrazioni.La classe derivata deve essere impostata su <see cref="T:System.Data.Entity.Migrations.Design.MigrationCodeGenerator" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.Annotations.AnnotationCodeGenerator.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.Annotations.AnnotationCodeGenerator" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.Annotations.AnnotationCodeGenerator.Generate(System.String,System.Object,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per il valore di annotazione specificato.</summary>
      <param name="annotationName">Nome dell'annotazione per cui il valore viene generato.</param>
      <param name="annotation">Valore dell'annotazione.</param>
      <param name="writer">Writer in cui deve essere scritto il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.Annotations.AnnotationCodeGenerator.GetExtraNamespaces(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Restituisce gli spazi dei nomi aggiuntivi che devono essere inclusi nel codice generato per la migrazione sottoposta a scaffolding.L'implementazione predefinita restituisce un'enumerazione vuota.</summary>
      <returns>Elenco degli spazi dei nomi aggiuntivi da includere.</returns>
      <param name="annotationNames">Nomi delle annotazioni che vengono incluse nel codice generato.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.Annotations.AnnotationValues">
      <summary>Rappresenta una coppia di valori di annotazione nell'oggetto <see cref="T:System.Data.Entity.Migrations.DbMigration" /> sottoposto a scaffolding o codificato manualmente.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.Annotations.AnnotationValues.#ctor(System.Object,System.Object)">
      <summary>Crea una nuova coppia di valori di annotazione.</summary>
      <param name="oldValue">Valore precedente dell'annotazione, che può essere null se l'annotazione è appena stata creata.</param>
      <param name="newValue">Valore nuovo dell'annotazione, che può essere null se l'annotazione è appena stata eliminata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.Annotations.AnnotationValues.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale a questa istanza dell'oggetto.</summary>
      <returns>true se l'oggetto specificato è uguale a questa istanza. In caso contrario, false.</returns>
      <param name="obj">Oggetto con cui eseguire il confronto.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.Annotations.AnnotationValues.GetHashCode">
      <summary>Recupera il codice hash.</summary>
      <returns>Codice hash.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.Annotations.AnnotationValues.NewValue">
      <summary>Ottiene il valore nuovo dell'annotazione, che può essere null se l'annotazione è appena stata eliminata.</summary>
      <returns>Valore nuovo dell'annotazione, che può essere null se l'annotazione è appena stata eliminata.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.Annotations.AnnotationValues.OldValue">
      <summary>Ottiene il valore precedente dell'annotazione, che può essere null se l'annotazione è appena stata creata.</summary>
      <returns>Valore precedente dell'annotazione, che può essere null se l'annotazione è appena stata creata.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.Annotations.AnnotationValues.op_Equality(System.Data.Entity.Infrastructure.Annotations.AnnotationValues,System.Data.Entity.Infrastructure.Annotations.AnnotationValues)">
      <summary>Restituisce true se entrambe le coppie di annotazioni contengono gli stessi valori; in caso contrario, false.</summary>
      <returns>true se entrambe le coppie contengono gli stessi valori.</returns>
      <param name="left">Coppia di valori di annotazione.</param>
      <param name="right">Coppia di valori di annotazione.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.Annotations.AnnotationValues.op_Inequality(System.Data.Entity.Infrastructure.Annotations.AnnotationValues,System.Data.Entity.Infrastructure.Annotations.AnnotationValues)">
      <summary>Restituisce true se le due coppie di annotazioni contengono valori differenti; in caso contrario, false.</summary>
      <returns>true se le coppie contengono valori differenti.</returns>
      <param name="left">Coppia di valori di annotazione.</param>
      <param name="right">Coppia di valori di annotazione.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.Annotations.CompatibilityResult">
      <summary>Restituito da <see cref="M:System.Data.Entity.Infrastructure.Annotations.IMergeableAnnotation.IsCompatibleWith(System.Object)" /> e dai metodi correlati per indicare se un oggetto non è in conflitto con un altro in modo che i due oggetti possano essere combinati in un unico oggetto.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.Annotations.CompatibilityResult.#ctor(System.Boolean,System.String)">
      <summary>Crea una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.Annotations.CompatibilityResult" />.</summary>
      <param name="isCompatible">Indica se i due oggetti testati sono compatibili.</param>
      <param name="errorMessage">Messaggio di errore che indica i motivi per cui gli oggetti non sono compatibili.Previsto null se isCompatible è true.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.Annotations.CompatibilityResult.ErrorMessage">
      <summary>Se <see cref="P:System.Data.Entity.Infrastructure.Annotations.CompatibilityResult.IsCompatible" /> è true, restituisce un messaggio di errore che indica i motivi per cui i due oggetti non sono compatibili.</summary>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.Annotations.CompatibilityResult.IsCompatible">
      <summary>True se i due oggetti testati non sono compatibili; in caso contrario, false.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.Annotations.CompatibilityResult.op_Implicit(System.Data.Entity.Infrastructure.Annotations.CompatibilityResult)~System.Boolean">
      <summary>Conversione implicita a un valore booleano per consentire l'utilizzo dell'oggetto risultato direttamente nei controlli.</summary>
      <returns>True se il risultato è compatibili; in caso contrario, false.</returns>
      <param name="result">Oggetto da convertire.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.Annotations.IMergeableAnnotation">
      <summary>I tipi utilizzati come annotazioni personalizzate possono implementare questa interfaccia per indicare che un tentativo di utilizzare più annotazioni con lo stesso nome in una tabella o colonna specificata è possibile eseguendo il merge delle diverse annotazioni in una sola.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.Annotations.IMergeableAnnotation.IsCompatibleWith(System.Object)">
      <summary>Restituisce true se l'annotazione non è in conflitto con l'annotazione specificata in modo che le due possano essere combinate insieme utilizzando il metodo <see cref="M:System.Data.Entity.Infrastructure.Annotations.IMergeableAnnotation.MergeWith(System.Object)" />.</summary>
      <returns>Oggetto CompatibilityResult che indica se questa annotazione è compatibile con l'altra.</returns>
      <param name="other">Annotazione da confrontare.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.Annotations.IMergeableAnnotation.MergeWith(System.Object)">
      <summary>Esegue il merge dell'annotazione con l'annotazione specificata e restituisce una nuova annotazione sottoposta al merge.Il metodo riesce solo se <see cref="M:System.Data.Entity.Infrastructure.Annotations.IMergeableAnnotation.IsCompatibleWith(System.Object)" /> restituisce true.</summary>
      <returns>Nuova annotazione sottoposta al merge.</returns>
      <param name="other">Annotazione da sottoporre al merge con questa.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.Annotations.IndexAnnotation">
      <summary>Rappresenta le annotazioni personalizzate per la rappresentazione degli indici del database in un modello di Entity Framework.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.Annotations.IndexAnnotation.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.Schema.IndexAttribute})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.Annotations.IndexAnnotation" /> usando la raccolta specificata di indici.</summary>
      <param name="indexAttributes">Attributi dell'indice che rappresentano uno o più indici.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.Annotations.IndexAnnotation.#ctor(System.ComponentModel.DataAnnotations.Schema.IndexAttribute)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.Annotations.IndexAnnotation" /> usando la raccolta specificata di indici.</summary>
      <param name="indexAttribute">Attributo dell'indice che rappresenta un indice.</param>
    </member>
    <member name="F:System.Data.Entity.Infrastructure.Annotations.IndexAnnotation.AnnotationName">
      <summary>Nome utilizzato quando l'annotazione viene archiviata nei metadati di Entity Framework o serializzata in un file SSDL/EDMX.</summary>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.Annotations.IndexAnnotation.Indexes">
      <summary>Ottiene gli indici rappresentati dall'annotazione.</summary>
      <returns>Indici rappresentati dall'annotazione.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.Annotations.IndexAnnotation.IsCompatibleWith(System.Object)">
      <summary>Restituisce true se l'annotazione non è in conflitto con l'annotazione specificata in modo che le due possano essere combinate insieme utilizzando il metodo <see cref="M:System.Data.Entity.Infrastructure.Annotations.IndexAnnotation.MergeWith(System.Object)" />.</summary>
      <returns>Oggetto CompatibilityResult che indica se questa annotazione è compatibile con l'altra.</returns>
      <param name="other">Annotazione da confrontare.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.Annotations.IndexAnnotation.MergeWith(System.Object)">
      <summary>Esegue il merge dell'annotazione con l'annotazione specificata e restituisce una nuova annotazione contenente gli indici sottoposti al merge.</summary>
      <returns>Nuova annotazione con gli indici sottoposti al merge da entrambe le annotazioni.</returns>
      <param name="other">Annotazione da sottoporre al merge con questa.</param>
      <exception cref="T:System.InvalidOperationException">L'altra annotazione contiene gli indici non compatibili con gli indici di questa annotazione.</exception>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.Annotations.IndexAnnotation.ToString">
      <summary>Restituisce una rappresentazione in forma di stringa dell'oggetto <see cref="T:System.Data.Entity.Infrastructure.Annotations.IndexAnnotation" />.</summary>
      <returns>Rappresentazione in forma di stringa dell'oggetto <see cref="T:System.Data.Entity.Infrastructure.Annotations.IndexAnnotation" />.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.Annotations.IndexAnnotationSerializer">
      <summary>Questa classe viene utilizzata per la serializzazione e la deserializzazione degli oggetti <see cref="T:System.Data.Entity.Infrastructure.Annotations.IndexAnnotation" /> affinché sia possibile archiviarli nel modulo EDMX del modello di Entity Framework.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.Annotations.IndexAnnotationSerializer.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.Annotations.IndexAnnotationSerializer" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.Annotations.IndexAnnotationSerializer.Deserialize(System.String,System.String)">
      <summary>Deserializza la stringa specificata nuovamente in un oggetto <see cref="T:System.Data.Entity.Infrastructure.Annotations.IndexAnnotation" />.</summary>
      <returns>Valore dell'annotazione deserializzata.</returns>
      <param name="name">Nome dell'annotazione che viene deserializzata.</param>
      <param name="value">Stringa da deserializzare.</param>
      <exception cref="T:System.FormatException">Se si verifica un errore durante la lettura del valore serializzato.</exception>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.Annotations.IndexAnnotationSerializer.Serialize(System.String,System.Object)">
      <summary>Serializza l'oggetto <see cref="T:System.Data.Entity.Infrastructure.Annotations.IndexAnnotation" /> specificato in una stringa per l'archiviazione in EDMX XML.</summary>
      <returns>Valore serializzato.</returns>
      <param name="name">Nome dell'annotazione che viene serializzata.</param>
      <param name="value">Valore da serializzare che deve essere un oggetto IndexAnnotation.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DependencyResolution.DbConfigurationLoadedEventArgs">
      <summary>Rappresenta gli argomenti evento passati ai gestori di eventi <see cref="E:System.Data.Entity.DbConfiguration.Loaded" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.DbConfigurationLoadedEventArgs.AddDefaultResolver(System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver)">
      <summary>Aggiunge un'istanza di <see cref="T:System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver" /> alla catena di responsabilità dei sistemi di risoluzione utilizzati per risolvere le dipendenze necessarie a Entity Framework.A differenza del metodo AddDependencyResolver, questo metodo pone il sistema di risoluzione alla base della catena di responsabilità in modo che venga utilizzato unicamente per risolvere una dipendenza che non potrebbe essere risolta mediante nessuno degli altri sistemi di risoluzione.</summary>
      <param name="resolver">Sistema di risoluzione da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.DbConfigurationLoadedEventArgs.AddDependencyResolver(System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver,System.Boolean)">
      <summary>Aggiunge un'istanza di <see cref="T:System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver" /> alla catena di responsabilità dei sistemi di risoluzione utilizzati per risolvere le dipendenze necessarie a Entity Framework.</summary>
      <param name="resolver">Sistema di risoluzione da aggiungere.</param>
      <param name="overrideConfigFile">Se true, il sistema di risoluzione aggiunto avrà la precedenza sulle impostazioni nel file di configurazione.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DependencyResolution.DbConfigurationLoadedEventArgs.DependencyResolver">
      <summary>Ottiene uno snapshot dell'oggetto <see cref="T:System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver" /> che sta per essere bloccato.Utilizzare i metodi GetService su questo oggetto per ottenere i servizi che sono stati registrati.</summary>
      <returns>Snapshot dell'oggetto <see cref="T:System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver" /> che sta per essere bloccato.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.DbConfigurationLoadedEventArgs.Equals(System.Object)">
      <summary>Specifica se questa istanza è uguale a un oggetto specifico.</summary>
      <returns>true se questa istanza è uguale a un oggetto specifico. In caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.DbConfigurationLoadedEventArgs.GetHashCode">
      <summary>Ottiene il codice hash associato a questa istanza.</summary>
      <returns>Codice hash associato a questa istanza.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.DbConfigurationLoadedEventArgs.GetType">
      <summary>Ottiene il tipo dell'istanza.</summary>
      <returns>Tipo dell'istanza.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.DbConfigurationLoadedEventArgs.ReplaceService``1(System.Func{``0,System.Object,``0})">
      <summary>Aggiunge un sistema di risoluzione di wrapping alla configurazione che sta per essere bloccata.Un sistema di risoluzione di wrapping avvia un servizio restituito dalla catena di sistemi di risoluzione e lo sostituisce o ne esegue il wrapping con un altro servizio dello stesso tipo.</summary>
      <param name="serviceInterceptor">Delegato che accetta il servizio non sottoposto a wrapping e la chiave e restituisce il servizio sostituito o sottoposto a wrapping.</param>
      <typeparam name="TService">Tipo di servizio da restituire o di cui eseguire il wrapping.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.DbConfigurationLoadedEventArgs.ToString">
      <summary>Restituisce una rappresentazione in forma di stringa di <see cref="T:System.Data.Entity.Infrastructure.DependencyResolution.DbConfigurationLoadedEventArgs" />.</summary>
      <returns>Rappresentazione in forma di stringa di <see cref="T:System.Data.Entity.Infrastructure.DependencyResolution.DbConfigurationLoadedEventArgs" />.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DependencyResolution.DbDependencyResolverExtensions">
      <summary>Metodi di estensione per chiamare il metodo <see cref="M:System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver.GetService(System.Type,System.Object)" /> utilizzando un parametro di tipo generico e/o nessun nome.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.DbDependencyResolverExtensions.GetService``1(System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver)">
      <summary>Chiama <see cref="M:System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver.GetService(System.Type,System.Object)" /> che passa il tipo generico del metodo come argomento di tipo e Null come argomento nome.</summary>
      <returns>Dipendenza risolta o Null se il sistema di risoluzione non l'ha risolta.</returns>
      <param name="resolver">Sistema di risoluzione da utilizzare.</param>
      <typeparam name="T">Tipo di contratto da risolvere.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.DbDependencyResolverExtensions.GetService``1(System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver,System.Object)">
      <summary>Chiama <see cref="M:System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver.GetService(System.Type,System.Object)" /> che passa il tipo generico del metodo e il nome specificato come argomenti.</summary>
      <returns>Dipendenza risolta o Null se il sistema di risoluzione non l'ha risolta.</returns>
      <param name="resolver">Sistema di risoluzione da utilizzare.</param>
      <param name="key">Chiave della dipendenza da risolvere.</param>
      <typeparam name="T">Tipo di contratto da risolvere.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.DbDependencyResolverExtensions.GetService(System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver,System.Type)">
      <summary>Chiama <see cref="M:System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver.GetService(System.Type,System.Object)" /> che passa l'argomento di tipo specificato e utilizza Null come argomento nome.</summary>
      <returns>Dipendenza risolta o Null se il sistema di risoluzione non l'ha risolta.</returns>
      <param name="resolver">Sistema di risoluzione da utilizzare.</param>
      <param name="type">Tipo di contratto da risolvere.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.DbDependencyResolverExtensions.GetServices``1(System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver)">
      <summary>Chiama <see cref="M:System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver.GetServices(System.Type,System.Object)" /> che passa il tipo generico del metodo come argomento di tipo e Null come argomento nome.</summary>
      <returns>Tutte le dipendenze risolte o <see cref="T:System.Collections.Generic.IEnumerable`1" /> se nessun servizio viene risolto.</returns>
      <param name="resolver">Sistema di risoluzione da utilizzare.</param>
      <typeparam name="T">Tipo di contratto da risolvere.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.DbDependencyResolverExtensions.GetServices``1(System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver,System.Object)">
      <summary>Chiama <see cref="M:System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver.GetServices(System.Type,System.Object)" /> che passa il tipo generico del metodo e il nome specificato come argomenti.</summary>
      <returns>Tutte le dipendenze risolte o <see cref="T:System.Collections.Generic.IEnumerable`1" /> se nessun servizio viene risolto.</returns>
      <param name="resolver">Sistema di risoluzione da utilizzare.</param>
      <param name="key">Chiave della dipendenza da risolvere.</param>
      <typeparam name="T">Tipo di contratto da risolvere.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.DbDependencyResolverExtensions.GetServices(System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver,System.Type)">
      <summary>Chiama <see cref="M:System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver.GetServices(System.Type,System.Object)" /> che passa l'argomento di tipo specificato e utilizza Null come argomento nome.</summary>
      <returns>Tutte le dipendenze risolte o <see cref="T:System.Collections.Generic.IEnumerable`1" /> se nessun servizio viene risolto.</returns>
      <param name="resolver">Sistema di risoluzione da utilizzare.</param>
      <param name="type">Tipo di contratto da risolvere.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DependencyResolution.ExecutionStrategyResolver`1">
      <summary>Implementazione di <see cref="T:System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver" /> utilizzata per risolvere le factory <see cref="T:System.Data.Entity.Infrastructure.IDbExecutionStrategy" />.</summary>
      <typeparam name="T">Tipo di strategia di esecuzione che viene risolta.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.ExecutionStrategyResolver`1.#ctor(System.String,System.String,System.Func{`0})">
      <summary>Inizializza una nuova istanza di <see cref="T:System.Data.Entity.Infrastructure.DependencyResolution.ExecutionStrategyResolver`1" /></summary>
      <param name="providerInvariantName">Nome invariante del provider ADO.NET che indica il tipo di connessione ADO.NET per cui verrà utilizzata questa strategia di esecuzione.</param>
      <param name="serverName">Stringa che sarà confrontata al nome del server nella stringa di connessione.null non corrisponderà a niente.</param>
      <param name="getExecutionStrategy">Funzione che restituisce una nuova istanza di una strategia di esecuzione.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.ExecutionStrategyResolver`1.GetService(System.Type,System.Object)">
      <summary>Se il tipo specificato è <see cref="T:System.Func`1" />, questo sistema di risoluzione tenterà di restituire il servizio da utilizzare, in caso contrario restituirà Null.Se il tipo specificato è Func{IExecutionStrategy}, si prevede che la chiave corrisponda a un oggetto <see cref="T:System.Data.Entity.Infrastructure.ExecutionStrategyKey" />.</summary>
      <returns>
        <see cref="T:System.Func`1" /> o Null.</returns>
      <param name="type">Tipo di servizio da risolvere.</param>
      <param name="key">Chiave utilizzata per determinare il servizio da restituire.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.ExecutionStrategyResolver`1.GetServices(System.Type,System.Object)">
      <summary>Se il tipo specificato è <see cref="T:System.Func`1" />, questo sistema di risoluzione tenterà di restituire il servizio da utilizzare, in caso contrario restituirà un'enumerazione vuota.Se il tipo specificato è Func{IExecutionStrategy}, si prevede che la chiave corrisponda a un oggetto <see cref="T:System.Data.Entity.Infrastructure.ExecutionStrategyKey" />.</summary>
      <returns>Oggetto enumerabile di <see cref="T:System.Func`1" /> o enumerazione vuota.</returns>
      <param name="type">Tipo di servizio da risolvere.</param>
      <param name="key">Chiave utilizzata per determinare il servizio da restituire.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver">
      <summary>Questa interfaccia è implementata da qualsiasi oggetto che può risolvere una dipendenza, direttamente o tramite l'utilizzo di un contenitore esterno.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver.GetService(System.Type,System.Object)">
      <summary>Tenta di risolvere una dipendenza per un tipo di contratto specificato e facoltativamente per una determinata chiave.Se il sistema di risoluzione non è in grado di risolvere la dipendenza, deve restituire Null e non generare nulla.In questo modo i sistemi di risoluzione possono essere utilizzati in un modello di catena di responsabilità in modo che vengano contattati più sistemi di risoluzione per risolvere una dipendenza finché uno non esegue l'operazione.</summary>
      <returns>Dipendenza risolta, che deve essere un'istanza del tipo di contratto specificato, o Null se la dipendenza non è stata risolta.</returns>
      <param name="type">Interfaccia o classe di base astratta che definisce la dipendenza da risolvere.L'oggetto restituito deve essere un'istanza di questo tipo.</param>
      <param name="key">Facoltativamente, la chiave della dipendenza da risolvere.Può essere Null per le dipendenze non differenziate dalla chiave.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver.GetServices(System.Type,System.Object)">
      <summary>Tenta di risolvere una dipendenza per un tipo di contratto specificato e facoltativamente per una determinata chiave.Se il sistema di risoluzione non è in grado di risolvere la dipendenza, deve restituire un'enumerazione vuota e non generare nulla.Questo metodo è diverso da <see cref="M:System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver.GetService(System.Type,System.Object)" /> in quanto restituisce tutti i servizi registrati per la combinazione di chiave e tipo specificata.</summary>
      <returns>Tutti i servizi che risolvono la dipendenza, che deve essere un'istanza del tipo di contratto specificato, o enumerazione vuota se la dipendenza non è stata risolta.</returns>
      <param name="type">Interfaccia o classe di base astratta che definisce la dipendenza da risolvere.Ogni oggetto restituito deve essere un'istanza di questo tipo.</param>
      <param name="key">Facoltativamente, la chiave della dipendenza da risolvere.Può essere Null per le dipendenze non differenziate dalla chiave.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DependencyResolution.SingletonDependencyResolver`1">
      <summary>Implementa <see cref="T:System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver" /> per risolvere una dipendenza in modo che restituisca sempre la stessa istanza.</summary>
      <typeparam name="T">Tipo che definisce il contratto per la dipendenza che verrà risolta.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.SingletonDependencyResolver`1.#ctor(`0)">
      <summary>Costruisce un nuovo sistema di risoluzione che restituirà l'istanza specificata per il tipo di contratto, indipendentemente dalla chiave passata al metodo Get.</summary>
      <param name="singletonInstance">Istanza da restituire.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.SingletonDependencyResolver`1.#ctor(`0,System.Func{System.Object,System.Boolean})">
      <summary>Costruisce un nuovo sistema di risoluzione che restituirà l'istanza specificata per il tipo di contratto se la chiave specificata corrisponde alla chiave passata al metodo Get sulla base del predicato specificato.</summary>
      <param name="singletonInstance">Istanza da restituire.</param>
      <param name="keyPredicate">Predicato che utilizza l'oggetto chiave e restituisce true solo se corrisponde.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.SingletonDependencyResolver`1.#ctor(`0,System.Object)">
      <summary>Costruisce un nuovo sistema di risoluzione che restituirà l'istanza specificata per il tipo di contratto se la chiave specificata corrisponde esattamente alla chiave passata al metodo Get.</summary>
      <param name="singletonInstance">Istanza da restituire.</param>
      <param name="key">Facoltativamente, la chiave della dipendenza da risolvere.Può essere Null per le dipendenze non differenziate dalla chiave.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.SingletonDependencyResolver`1.GetService(System.Type,System.Object)">
      <summary>Tenta di risolvere una dipendenza per un tipo di contratto specificato e facoltativamente per una determinata chiave.Se il sistema di risoluzione non è in grado di risolvere la dipendenza, deve restituire Null e non generare nulla.In questo modo i sistemi di risoluzione possono essere utilizzati in un modello di catena di responsabilità in modo che vengano contattati più sistemi di risoluzione per risolvere una dipendenza finché uno non esegue l'operazione.</summary>
      <returns>Dipendenza risolta, che deve essere un'istanza del tipo di contratto specificato, o Null se la dipendenza non è stata risolta.</returns>
      <param name="type">Interfaccia o classe di base astratta che definisce la dipendenza da risolvere.L'oggetto restituito deve essere un'istanza di questo tipo.</param>
      <param name="key">Facoltativamente, la chiave della dipendenza da risolvere.Può essere Null per le dipendenze non differenziate dalla chiave.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.SingletonDependencyResolver`1.GetServices(System.Type,System.Object)">
      <summary>Tenta di risolvere una dipendenza per un tipo di contratto specificato e facoltativamente per una determinata chiave.Se il sistema di risoluzione non è in grado di risolvere la dipendenza, deve restituire un'enumerazione vuota e non generare nulla.</summary>
      <returns>Tutti i servizi che risolvono la dipendenza, che deve essere un'istanza del tipo di contratto specificato, o enumerazione vuota se la dipendenza non è stata risolta.</returns>
      <param name="type">Interfaccia o classe di base astratta che definisce la dipendenza da risolvere.Ogni oggetto restituito deve essere un'istanza di questo tipo.</param>
      <param name="key">Facoltativamente, la chiave della dipendenza da risolvere.Può essere Null per le dipendenze non differenziate dalla chiave.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DependencyResolution.TransactionHandlerResolver">
      <summary>Rappresenta un'implementazione di <see cref="T:System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver" /> usata per risolvere le factory <see cref="T:System.Data.Entity.Infrastructure.TransactionHandler" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.TransactionHandlerResolver.#ctor(System.Func{System.Data.Entity.Infrastructure.TransactionHandler},System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DependencyResolution.TransactionHandlerResolver" />.</summary>
      <param name="transactionHandlerFactory">Funzione che restituisce una nuova istanza di un gestore delle transazioni.</param>
      <param name="providerInvariantName">Nome invariante del provider ADO.NET che indica il tipo di connessione ADO.NET per cui verrà utilizzato il gestore delle transazioni.null non corrisponderà a niente.</param>
      <param name="serverName">Stringa che sarà confrontata al nome del server nella stringa di connessione.null non corrisponderà a niente.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.TransactionHandlerResolver.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se l'oggetto specificato è uguale all'oggetto corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto con cui eseguire il confronto.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.TransactionHandlerResolver.GetHashCode">
      <summary>Recupera il codice hash per l'istanza dell'oggetto.</summary>
      <returns>Codice hash per l'istanza dell'oggetto.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.TransactionHandlerResolver.GetService(System.Type,System.Object)">
      <summary>Se il tipo specificato è <see cref="T:System.Func`1" />, questo metodo tenterà di restituire il servizio da utilizzare, in caso contrario restituirà null.Se il tipo specificato è <see cref="T:System.Func`1" />, si prevede che la chiave corrisponda a un oggetto <see cref="T:System.Data.Entity.Infrastructure.ExecutionStrategyKey" />.</summary>
      <returns>
        <see cref="T:System.Func`1" /> o Null.</returns>
      <param name="type">Tipo di servizio da risolvere.</param>
      <param name="key">Chiave utilizzata per determinare il servizio da restituire.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DependencyResolution.TransactionHandlerResolver.GetServices(System.Type,System.Object)">
      <summary>Se il tipo specificato è <see cref="T:System.Func`1" />, questo sistema di risoluzione tenterà di restituire il servizio da utilizzare, in caso contrario restituirà un'enumerazione vuota.Se il tipo specificato è <see cref="T:System.Func`1" />, si prevede che la chiave corrisponda a un oggetto <see cref="T:System.Data.Entity.Infrastructure.ExecutionStrategyKey" />.</summary>
      <returns>Oggetto enumerabile di <see cref="T:System.Func`1" /> o enumerazione vuota.</returns>
      <param name="type">Tipo di servizio da risolvere.</param>
      <param name="key">Chiave utilizzata per determinare il servizio da restituire.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.Design.AppConfigReader">
      <summary>Fornisce metodi di utilità per la lettura da un file App.config o Web.config.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.Design.AppConfigReader.#ctor(System.Configuration.Configuration)">
      <summary>Inizializza una nuova istanza di <see cref="T:System.Data.Entity.Infrastructure.Design.AppConfigReader" />.</summary>
      <param name="configuration">Configurazione da cui leggere.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.Design.AppConfigReader.GetProviderServices(System.String)">
      <summary>Ottiene i servizi specificati del provider dalla configurazione.</summary>
      <returns>Nome del tipo dei servizi del provider oppure Null se non viene trovato.</returns>
      <param name="invariantName">Nome invariante dei servizi del provider.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.MappingViews.DbMappingView">
      <summary>Rappresenta una visualizzazione di mapping.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.MappingViews.DbMappingView.#ctor(System.String)">
      <summary>Crea un'istanza di <see cref="T:System.Data.Entity.Infrastructure.MappingViews.DbMappingView" /> che dispone del codice SQL dell'entità specificata.</summary>
      <param name="entitySql">Stringa che specifica il codice SQL dell'entità.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.MappingViews.DbMappingView.EntitySql">
      <summary>Ottiene il codice SQL dell'entità.</summary>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.MappingViews.DbMappingViewCache">
      <summary>Rappresenta la classe di base astratta per le implementazioni della cache di visualizzazione di mapping.Le classi derivate devono avere un costruttore senza parametri se utilizzate con <see cref="T:System.Data.Entity.Infrastructure.MappingViews.DbMappingViewCacheTypeAttribute" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.MappingViews.DbMappingViewCache.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.MappingViews.DbMappingViewCache" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.MappingViews.DbMappingViewCache.GetView(System.Data.Entity.Core.Metadata.Edm.EntitySetBase)">
      <summary>Ottiene una visualizzazione corrispondente alla misura specificata.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Infrastructure.MappingViews.DbMappingView" /> che specifica la visualizzazione di mapping o null se la misura non è associata a una visualizzazione di mapping.</returns>
      <param name="extent">Oggetto <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySetBase" /> che specifica la misura.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.MappingViews.DbMappingViewCache.MappingHashValue">
      <summary>Ottiene un valore hash calcolato sulla chiusura del mapping.</summary>
      <returns>Valore hash calcolato sulla chiusura del mapping.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.MappingViews.DbMappingViewCacheFactory">
      <summary>Specifica un metodo per creare istanze concrete di <see cref="T:System.Data.Entity.Infrastructure.MappingViews.DbMappingViewCache" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.MappingViews.DbMappingViewCacheFactory.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.MappingViews.DbMappingViewCacheFactory" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.MappingViews.DbMappingViewCacheFactory.Create(System.String,System.String)">
      <summary>Crea un'istanza della cache di visualizzazione generata per il mapping del contenitore specificato dai nomi dei contenitori di cui è stato eseguito il mapping.</summary>
      <returns>
        <see cref="T:System.Data.Entity.Infrastructure.MappingViews.DbMappingViewCache" /> che specifica la cache di visualizzazione generata.</returns>
      <param name="conceptualModelContainerName">Nome di un contenitore nel modello concettuale.</param>
      <param name="storeModelContainerName">Nome di un contenitore nel modello di archivio.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.MappingViews.DbMappingViewCacheTypeAttribute">
      <summary>Definisce un attributo personalizzato che specifica il tipo di cache di visualizzazione di mapping (sottoclasse di <see cref="T:System.Data.Entity.Infrastructure.MappingViews.DbMappingViewCache" /> ) associato a un tipo di contesto (sottoclasse di <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" /> o <see cref="T:System.Data.Entity.DbContext" /> ).Viene create un'istanza del tipo di cache in fase di esecuzione e viene utilizzata per recuperare le visualizzazioni pregenerate nel contesto corrispondente.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.MappingViews.DbMappingViewCacheTypeAttribute.#ctor(System.Type,System.String)">
      <summary>Crea un'istanza di <see cref="T:System.Data.Entity.Infrastructure.MappingViews.DbMappingViewCacheTypeAttribute" /> che associa un tipo di contesto a un tipo di cache di visualizzazione di mapping.</summary>
      <param name="contextType">Sottoclasse di <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" /> o <see cref="T:System.Data.Entity.DbContext" />.</param>
      <param name="cacheTypeName">Nome completo dell'assembly del tipo di cache.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.MappingViews.DbMappingViewCacheTypeAttribute.#ctor(System.Type,System.Type)">
      <summary>Crea un'istanza di <see cref="T:System.Data.Entity.Infrastructure.MappingViews.DbMappingViewCacheTypeAttribute" /> che associa un tipo di contesto a un tipo di cache di visualizzazione di mapping.</summary>
      <param name="contextType">Sottoclasse di <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" /> o <see cref="T:System.Data.Entity.DbContext" />.</param>
      <param name="cacheType">Sottoclasse di <see cref="T:System.Data.Entity.Infrastructure.MappingViews.DbMappingViewCache" />.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.Pluralization.CustomPluralizationEntry">
      <summary>Rappresenta un termine di pluralizzazione personalizzato che verrà utilizzato dall'oggetto <see cref="T:System.Data.Entity.Infrastructure.Pluralization.EnglishPluralizationService" /></summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.Pluralization.CustomPluralizationEntry.#ctor(System.String,System.String)">
      <summary>Creare una nuova istanza</summary>
      <param name="singular">Stringa non Null o vuota che rappresenta la forma singolare.</param>
      <param name="plural">Stringa non Null o vuota che rappresenta la forma plurale.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.Pluralization.CustomPluralizationEntry.Plural">
      <summary>Ottiene la forma plurale.</summary>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.Pluralization.CustomPluralizationEntry.Singular">
      <summary>Ottiene la forma singolare.</summary>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.Pluralization.EnglishPluralizationService">
      <summary>Implementazione predefinita del servizio di pluralizzazione che verrà utilizzato da Entity Framework.Questo servizio di pluralizzazione è basato sulle impostazioni locali della lingua inglese.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.Pluralization.EnglishPluralizationService.#ctor">
      <summary>Costruisce una nuova istanza del servizio di pluralizzazione predefinito utilizzato in Entity Framework.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.Pluralization.EnglishPluralizationService.#ctor(System.Collections.Generic.IEnumerable{System.Data.Entity.Infrastructure.Pluralization.CustomPluralizationEntry})">
      <summary>Costruisce una nuova istanza del servizio di pluralizzazione predefinito utilizzato in Entity Framework.</summary>
      <param name="userDictionaryEntries">Raccolta di voci di dizionario dell'utente che verranno utilizzate da questo servizio. Questi input possono personalizzare il servizio in base alle esigenze dell'utente.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.Pluralization.EnglishPluralizationService.Pluralize(System.String)">
      <summary>Restituisce la forma plurale della parola specificata.</summary>
      <returns>Forma plurale del parametro di input.</returns>
      <param name="word">Parola da rendere al plurale.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.Pluralization.EnglishPluralizationService.Singularize(System.String)">
      <summary>Restituisce la forma singolare della parola specificata.</summary>
      <returns>Forma singolare del parametro di input.</returns>
      <param name="word">Parola da rendere al singolare.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.Pluralization.IPluralizationService">
      <summary>Servizi di pluralizzazione che il runtime EF utilizza per implementare questa interfaccia.Per impostazione predefinita viene utilizzato l'oggetto <see cref="T:System.Data.Entity.Infrastructure.Pluralization.EnglishPluralizationService" />, ma il servizio di pluralizzazione da utilizzare può essere impostato in una classe che deriva da <see cref="T:System.Data.Entity.DbConfiguration" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.Pluralization.IPluralizationService.Pluralize(System.String)">
      <summary>Pluralizzare una parola utilizzando il servizio.</summary>
      <returns>Parola pluralizzata</returns>
      <param name="word">Parola da pluralizzare.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.Pluralization.IPluralizationService.Singularize(System.String)">
      <summary>Singolarizzare una parola utilizzando il servizio.</summary>
      <returns>Parola singolarizzata.</returns>
      <param name="word">Parola da singolarizzare.</param>
    </member>
    <member name="T:System.Data.Entity.Migrations.DbMigration">
      <summary>Rappresenta la classe base per le migrazioni basate sul codice.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.DbMigration" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.AddColumn(System.String,System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,System.Data.Entity.Migrations.Model.ColumnModel},System.Object)">
      <summary>Aggiunge un'operazione per l'aggiunta di una colonna a una tabella esistente.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="table">Nome della tabella a cui aggiungere la colonna.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="name">Nome della colonna da aggiungere.</param>
      <param name="columnAction">Azione che specifica la colonna da aggiungere.Ad esempio,c =&amp;gt; c.Int(nullable: false, defaultValue: 3)</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.AddForeignKey(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Object)">
      <summary>Aggiunge un'operazione per creare un nuovo vincolo di chiave esterna.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="dependentTable">Tabella che contiene la colonna di chiave esterna.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="dependentColumn">Colonna di chiave esterna.</param>
      <param name="principalTable">Tabella che contiene la colonna a cui fa riferimento la chiave esterna.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="principalColumn">Colonna a cui fa riferimento la chiave esterna.Se non si fornisce un valore, verrà fatto riferimento alla chiave primaria della tabella principale.</param>
      <param name="cascadeDelete">Valore che indica se è necessario configurare l'eliminazione a catena per la relazione di chiave esterna.Se non si specifica un valore, l'eliminazione a catena sarà disattivata.</param>
      <param name="name">Nome del vincolo di chiave esterna del database.Se non si specifica un valore, verrà generato un nome univoco.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.AddForeignKey(System.String,System.String[],System.String,System.String[],System.Boolean,System.String,System.Object)">
      <summary>Aggiunge un'operazione per creare un nuovo vincolo di chiave esterna.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="dependentTable">Tabella che contiene le colonne di chiavi esterne.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="dependentColumns">Colonne di chiavi esterne.</param>
      <param name="principalTable">Tabella che contiene le colonne a cui fa riferimento la chiave esterna.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="principalColumns">Colonne a cui fa riferimento la chiave esterna.Se non si fornisce un valore, verrà fatto riferimento alla chiave primaria della tabella principale.</param>
      <param name="cascadeDelete">Valore che indica se è necessario configurare l'eliminazione a catena per la relazione di chiave esterna.Se non si specifica un valore, l'eliminazione a catena sarà disattivata.</param>
      <param name="name">Nome del vincolo di chiave esterna del database.Se non si specifica un valore, verrà generato un nome univoco.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.AddPrimaryKey(System.String,System.String,System.String,System.Boolean,System.Object)">
      <summary>Aggiunge un'operazione per creare una nuova chiave primaria.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="table">Tabella che contiene la colonna di chiave primaria.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="column">Colonna di chiave primaria.</param>
      <param name="name">Nome della chiave primaria del database.Se non si specifica un valore, verrà generato un nome univoco.</param>
      <param name="clustered">Valore che indica se si tratta di una chiave primaria cluster.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.AddPrimaryKey(System.String,System.String[],System.String,System.Boolean,System.Object)">
      <summary>Aggiunge un'operazione per creare una nuova chiave primaria basata su più colonne.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="table">Tabella che contiene le colonne di chiavi primarie.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="columns">Colonne di chiavi primarie.</param>
      <param name="name">Nome della chiave primaria del database.Se non si specifica un valore, verrà generato un nome univoco.</param>
      <param name="clustered">Valore che indica se si tratta di una chiave primaria cluster.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.AlterColumn(System.String,System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,System.Data.Entity.Migrations.Model.ColumnModel},System.Object)">
      <summary>Aggiunge un'operazione per modificare la definizione di una colonna esistente.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="table">Nome della tabella in cui esiste la colonna.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="name">Nome della colonna da modificare.</param>
      <param name="columnAction">Azione che specifica la nuova definizione per la colonna.Ad esempio,c =&amp;gt; c.String(nullable: false, defaultValue: "none")</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.AlterStoredProcedure``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ParameterBuilder,``0},System.String,System.Object)">
      <summary>Aggiunge un'operazione per modificare una stored procedure.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="name">Nome della stored procedure.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="parametersAction">Azione che specifica i parametri della stored procedure.</param>
      <param name="body">Corpo della stored procedure.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti.Ad esempio, 'new { SampleArgument = "MyValue" }'.</param>
      <typeparam name="TParameters">Parametri di questa operazione di modifica di stored procedure.Non è necessario specificare il tipo. Verrà dedotto dal parametro <paramref name="parametersAction" /> fornito.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.AlterStoredProcedure(System.String,System.String,System.Object)">
      <summary>Aggiunge un'operazione per modificare una stored procedure.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="name">Nome della stored procedure.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="body">Corpo della stored procedure.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti.Ad esempio, 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.AlterTableAnnotations``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,``0},System.Collections.Generic.IDictionary{System.String,System.Data.Entity.Infrastructure.Annotations.AnnotationValues},System.Object)">
      <summary>Aggiunge un'operazione per gestire le modifiche nelle annotazioni definite nelle tabelle.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="name">Nome della tabella.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="columnsAction">Azione che specifica le colonne da includere nella tabella.Ad esempio,t =&amp;gt; new { Id = t.Int(identity: true), Name = t.String() }</param>
      <param name="annotations">Annotazioni personalizzate modificate nella tabella.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
      <typeparam name="TColumns">Colonne in questa operazione.Non è necessario specificare il tipo. Verrà dedotto dal parametro columnsAction specificato.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.CreateIndex(System.String,System.String,System.Boolean,System.String,System.Boolean,System.Object)">
      <summary>Aggiunge un'operazione per creare un indice in una singola colonna.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="table">Nome della tabella in cui creare l'indice.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="column">Nome della colonna in cui creare l'indice.</param>
      <param name="unique">Valore che indica se si tratta di un indice univoco.Se non si specifica un valore, verrà creato un indice non univoco.</param>
      <param name="name">Nome da usare per l'indice nel database.Se non si specifica un valore, verrà generato un nome univoco.</param>
      <param name="clustered">Valore che indica se si tratta di un indice cluster.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.CreateIndex(System.String,System.String[],System.Boolean,System.String,System.Boolean,System.Object)">
      <summary>Aggiunge un'operazione per creare un indice in più colonne.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="table">Nome della tabella in cui creare l'indice.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="columns">Nome delle colonne in cui creare l'indice.</param>
      <param name="unique">Valore che indica se si tratta di un indice univoco.Se non si specifica un valore, verrà creato un indice non univoco.</param>
      <param name="name">Nome da usare per l'indice nel database.Se non si specifica un valore, verrà generato un nome univoco.</param>
      <param name="clustered">Valore che indica se si tratta di un indice cluster.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.CreateStoredProcedure``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ParameterBuilder,``0},System.String,System.Object)">
      <summary>Aggiunge un'operazione per creare una nuova stored procedure.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="name">Nome della stored procedure.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="parametersAction">Azione che specifica i parametri della stored procedure.</param>
      <param name="body">Corpo della stored procedure.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti.Ad esempio, 'new { SampleArgument = "MyValue" }'.</param>
      <typeparam name="TParameters">Parametri di questa operazione di creazione di stored procedure.Non è necessario specificare il tipo. Verrà dedotto dal parametro <paramref name="parametersAction" /> fornito.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.CreateStoredProcedure(System.String,System.String,System.Object)">
      <summary>Aggiunge un'operazione per creare una nuova stored procedure.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="name">Nome della stored procedure.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="body">Corpo della stored procedure.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti.Ad esempio, 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.CreateTable``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,``0},System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)">
      <summary>Aggiunge un'operazione per creare una nuova tabella.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <returns>Oggetto che consente l'ulteriore configurazione dell'operazione di creazione della tabella.</returns>
      <param name="name">Nome della tabella.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="columnsAction">Azione che specifica le colonne da includere nella tabella.Ad esempio,t =&amp;gt; new { Id = t.Int(identity: true), Name = t.String() }</param>
      <param name="annotations">Annotazioni personalizzate presenti nella tabella da creare.Può essere Null o vuoto.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
      <typeparam name="TColumns">Colonne in questa operazione di creazione della tabella.Non è necessario specificare il tipo. Verrà dedotto dal parametro columnsAction specificato.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.CreateTable``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,``0},System.Object)">
      <summary>Aggiunge un'operazione per creare una nuova tabella.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <returns>Oggetto che consente l'ulteriore configurazione dell'operazione di creazione della tabella.</returns>
      <param name="name">Nome della tabella.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="columnsAction">Azione che specifica le colonne da includere nella tabella.Ad esempio,t =&amp;gt; new { Id = t.Int(identity: true), Name = t.String() }</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
      <typeparam name="TColumns">Colonne in questa operazione di creazione della tabella.Non è necessario specificare il tipo. Verrà dedotto dal parametro columnsAction specificato.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.Down">
      <summary>Operazioni da eseguire durante il processo di downgrade.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.DropColumn(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)">
      <summary>Aggiunge un'operazione per l'eliminazione di una colonna esistente.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="table">Nome della tabella da cui eliminare la colonna.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="name">Nome della colonna da eliminare.</param>
      <param name="removedAnnotations">Annotazioni personalizzate presenti nella colonna che viene eliminata.Può essere Null o vuoto.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.DropColumn(System.String,System.String,System.Object)">
      <summary>Aggiunge un'operazione per l'eliminazione di una colonna esistente.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="table">Nome della tabella da cui eliminare la colonna.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="name">Nome della colonna da eliminare.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.DropForeignKey(System.String,System.String,System.Object)">
      <summary>Aggiunge un'operazione per eliminare un vincolo di chiave esterna in base al nome.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="dependentTable">Tabella che contiene la colonna di chiave esterna.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="name">Nome del vincolo di chiave esterna del database.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.DropForeignKey(System.String,System.String,System.String,System.Object)">
      <summary>Aggiunge un'operazione per eliminare un vincolo di chiave esterna in base alla colonna di destinazione.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="dependentTable">Tabella che contiene la colonna di chiave esterna.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="dependentColumn">Colonna di chiave esterna.</param>
      <param name="principalTable">Tabella che contiene la colonna a cui fa riferimento la chiave esterna.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.DropForeignKey(System.String,System.String,System.String,System.String,System.Object)">
      <summary>Aggiunge un'operazione per eliminare un vincolo di chiave esterna in base alla colonna di destinazione.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="dependentTable">Tabella che contiene la colonna di chiave esterna.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="dependentColumn">Colonna di chiave esterna.</param>
      <param name="principalTable">Tabella che contiene la colonna a cui fa riferimento la chiave esterna.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="principalColumn">Colonne a cui fa riferimento la chiave esterna.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.DropForeignKey(System.String,System.String[],System.String,System.Object)">
      <summary>Aggiunge un'operazione per eliminare un vincolo di chiave esterna in base alle colonne di destinazione.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="dependentTable">Tabella che contiene le colonne di chiavi esterne.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="dependentColumns">Colonne di chiavi esterne.</param>
      <param name="principalTable">Tabella che contiene le colonne a cui fa riferimento la chiave esterna.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.DropIndex(System.String,System.String,System.Object)">
      <summary>Aggiunge un'operazione per eliminare un indice in base al nome.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="table">Nome della tabella da cui eliminare l'indice.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="name">Nome dell'indice da eliminare.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.DropIndex(System.String,System.String[],System.Object)">
      <summary>Aggiunge un'operazione per eliminare un indice in base alle colonne di destinazione.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="table">Nome della tabella da cui eliminare l'indice.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="columns">Nome della colonna o delle colonne di destinazione dell'indice.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.DropPrimaryKey(System.String,System.Object)">
      <summary>Aggiunge un'operazione per eliminare una chiave primaria esistente creata con il nome predefinito.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="table">Tabella che contiene la colonna di chiave primaria.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.DropPrimaryKey(System.String,System.String,System.Object)">
      <summary>Aggiunge un'operazione per eliminare una chiave primaria esistente a cui non è assegnato il nome predefinito.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="table">Tabella che contiene la colonna di chiave primaria.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="name">Nome della chiave primaria da eliminare.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.DropStoredProcedure(System.String,System.Object)">
      <summary>Aggiunge un'operazione per eliminare una stored procedure esistente con il nome specificato.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="name">Nome della stored procedure da eliminare.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti.Ad esempio, 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.DropTable(System.String,System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IDictionary{System.String,System.Object}},System.Object)">
      <summary>Aggiunge un'operazione per eliminare la tabella.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="name">Nome della tabella da eliminare.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="removedColumnAnnotations">Annotazioni personalizzate presenti nelle colonne della tabella che viene eliminata.Può essere Null o vuoto.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.DropTable(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IDictionary{System.String,System.Object}},System.Object)">
      <summary>Aggiunge un'operazione per eliminare la tabella.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="name">Nome della tabella da eliminare.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="removedAnnotations">Annotazioni personalizzate presenti nella tabella che viene eliminata.Può essere Null o vuoto.</param>
      <param name="removedColumnAnnotations">Annotazioni personalizzate presenti nelle colonne della tabella che viene eliminata.Può essere Null o vuoto.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.DropTable(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)">
      <summary>Aggiunge un'operazione per eliminare la tabella.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="name">Nome della tabella da eliminare.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="removedAnnotations">Annotazioni personalizzate presenti nella tabella che viene eliminata.Può essere Null o vuoto.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.DropTable(System.String,System.Object)">
      <summary>Aggiunge un'operazione per eliminare la tabella.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="name">Nome della tabella da eliminare.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.Equals(System.Object)">
      <summary>Determina se questa istanza è uguale a un oggetto specificato.</summary>
      <returns>true se l'oggetto specificato è uguale all'istanza corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'istanza corrente.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.GetHashCode">
      <summary>Restituisce la funzione hash per l'oggetto corrente.</summary>
      <returns>Funzione hash per l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.GetType">
      <summary>Restituisce il tipo in fase di esecuzione dell'istanza corrente.</summary>
      <returns>Tipo di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.MemberwiseClone">
      <summary>Crea una copia superficiale dell'oggetto corrente.</summary>
      <returns>Copia superficiale dell'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.MoveStoredProcedure(System.String,System.String,System.Object)">
      <summary>Aggiunge un'operazione per spostare una stored procedure in un nuovo schema.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="name">Nome della stored procedure da spostare.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="newSchema">Schema in cui spostare la stored procedure.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.MoveTable(System.String,System.String,System.Object)">
      <summary>Aggiunge un'operazione per spostare una tabella in un nuovo schema.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="name">Nome della tabella da spostare.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="newSchema">Schema in cui deve essere spostata la tabella.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.RenameColumn(System.String,System.String,System.String,System.Object)">
      <summary>Aggiunge un'operazione per rinominare una colonna.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="table">Nome della tabella che contiene la colonna da rinominare.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="name">Nome della colonna da rinominare.</param>
      <param name="newName">Nuovo nome della colonna.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.RenameIndex(System.String,System.String,System.String,System.Object)">
      <summary>Aggiunge un'operazione per rinominare un indice.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="table">Nome della tabella che contiene l'indice da rinominare.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="name">Nome dell'indice da rinominare.</param>
      <param name="newName">Nuovo nome dell'indice.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.RenameStoredProcedure(System.String,System.String,System.Object)">
      <summary>Aggiunge un'operazione per rinominare una stored procedure.Per modificare lo schema di una stored procedure usare MoveStoredProcedure. Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="name">Nome della stored procedure da rinominare.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="newName">Nuovo nome per la stored procedure.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.RenameTable(System.String,System.String,System.Object)">
      <summary>Aggiunge un'operazione per rinominare una tabella.Per modificare lo schema di una tabella, usare MoveTable.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="name">Nome della tabella da rinominare.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="newName">Nuovo nome della tabella.Il nome dello schema è facoltativo. Se non si specifica uno schema, viene usato dbo.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.Sql(System.String,System.Boolean,System.Object)">
      <summary>Aggiunge un'operazione per eseguire un comando SQL.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="sql">Comando SQL da eseguire.</param>
      <param name="suppressTransaction">Valore che indica se il comando SQL deve essere eseguito all'esterno della transazione usata per il processo di migrazione.Se non si specifica un valore, il comando SQL verrà eseguito all'interno della transazione.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.SqlFile(System.String,System.Boolean,System.Object)">
      <summary>Aggiunge un'operazione per eseguire un file SQL.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="sqlFile">File SQL da eseguire.Si presuppone che i percorsi relativi siano relativi alla directory di base dell'istanza corrente di AppDomain.</param>
      <param name="suppressTransaction">Valore che indica se il comando SQL deve essere eseguito all'esterno della transazione usata per il processo di migrazione.Se non si specifica un valore, il comando SQL verrà eseguito all'interno della transazione.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.SqlResource(System.String,System.Reflection.Assembly,System.Boolean,System.Object)">
      <summary>Aggiunge un'operazione per eseguire un file di risorse SQL.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="sqlResource">Nome della risorsa del manifesto del file di risorse SQL da eseguire.</param>
      <param name="resourceAssembly">Assembly che contiene il file di risorse.Se non viene specificato, si presuppone che sia l'assembly chiamante.</param>
      <param name="suppressTransaction">Valore che indica se il comando SQL deve essere eseguito all'esterno della transazione usata per il processo di migrazione.Se non si specifica un valore, il comando SQL verrà eseguito all'interno della transazione.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Usare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.System#Data#Entity#Migrations#Infrastructure#IDbMigration#AddOperation(System.Data.Entity.Migrations.Model.MigrationOperation)">
      <summary>Aggiunge un'operazione di migrazione.</summary>
      <param name="migrationOperation">Operazione di migrazione da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.Up">
      <summary>Operazioni da eseguire durante il processo di aggiornamento.</summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.DbMigrationsConfiguration">
      <summary>Configurazione relativa all'utilizzo di migrazioni per un modello specificato.Anziché utilizzare questa classe, viene solitamente creata una classe di configurazione che deriva da <see cref="T:System.Data.Entity.Migrations.DbMigrationsConfiguration`1" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigrationsConfiguration.#ctor">
      <summary>Inizializza una nuova istanza della classe DbMigrationsConfiguration.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.DbMigrationsConfiguration.AutomaticMigrationDataLossAllowed">
      <summary>Ottiene o imposta un valore che indica se durante la migrazione automatica è accettabile una perdita di dati.Se impostato su false, verrà generata un'eccezione in caso di perdita di dati come parte di una migrazione automatica.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.DbMigrationsConfiguration.AutomaticMigrationsEnabled">
      <summary>Ottiene o imposta un valore che indica se è ammesso l'uso di migrazioni automatiche quando si esegue la migrazione del database.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.DbMigrationsConfiguration.CodeGenerator">
      <summary>Ottiene o imposta il generatore di codice da utilizzare durante lo scaffolding delle migrazioni.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.DbMigrationsConfiguration.CommandTimeout">
      <summary>Ottiene o imposta il valore di timeout per i singoli comandi in una migrazione.Il valore Null indica che verrà utilizzato il valore predefinito del provider sottostante.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.DbMigrationsConfiguration.ContextKey">
      <summary>Ottiene o imposta la stringa utilizzata per distinguere le migrazioni appartenenti a questa configurazione dalle migrazioni appartenenti alle altre configurazioni che utilizzano lo stesso database.Questa proprietà consente l'applicazione di migrazioni provenienti da più modelli diversi a un singolo database.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.DbMigrationsConfiguration.ContextType">
      <summary>Ottiene o imposta l'oggetto DbContext derivato che rappresenta il modello di cui deve essere eseguita la migrazione.</summary>
    </member>
    <member name="F:System.Data.Entity.Migrations.DbMigrationsConfiguration.DefaultMigrationsDirectory">
      <summary>Directory predefinita in cui sono archiviate le migrazioni.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigrationsConfiguration.GetHistoryContextFactory(System.String)">
      <summary>Ottiene la factory del contesto di cronologia impostato per l'utilizzo con un provider di database specificato.</summary>
      <returns>Factory del contesto di cronologia impostato per il provider di database.</returns>
      <param name="providerInvariantName">Nome del provider di database per cui ottenere la factory.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigrationsConfiguration.GetSqlGenerator(System.String)">
      <summary>Ottiene il generatore SQL impostato per l'utilizzo con un provider di database specificato.</summary>
      <returns>Generatore SQL impostato per il provider di database.</returns>
      <param name="providerInvariantName">Nome del provider di database per cui ottenere il generatore SQL.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.DbMigrationsConfiguration.MigrationsAssembly">
      <summary>Ottiene o imposta l'assembly contenente le migrazioni basate sul codice.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.DbMigrationsConfiguration.MigrationsDirectory">
      <summary>Ottiene o imposta la sottodirectory in cui sono archiviate le migrazioni basate sul codice.Si noti che questa proprietà deve essere impostata su un percorso relativo per una sottodirectory nella radice del progetto di Visual Studio. Non può essere impostata su un percorso assoluto.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.DbMigrationsConfiguration.MigrationsNamespace">
      <summary>Ottiene o imposta lo spazio dei nomi utilizzato per le migrazioni basate sul codice.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigrationsConfiguration.SetHistoryContextFactory(System.String,System.Func{System.Data.Common.DbConnection,System.String,System.Data.Entity.Migrations.History.HistoryContext})">
      <summary>Aggiunge una nuova factory per la creazione dell'oggetto <see cref="T:System.Data.Entity.Migrations.History.HistoryContext" /> da utilizzare per un provider di database specificato.</summary>
      <param name="providerInvariantName">Nome del provider di database per cui impostare il generatore SQL.</param>
      <param name="factory">Factory per la creazione di istanze dell'oggetto <see cref="T:System.Data.Entity.Migrations.History.HistoryContext" /> per gli <see cref="T:System.Data.Common.DbConnection" /> e <see cref="T:System.String" /> specificati che rappresentano lo schema predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigrationsConfiguration.SetSqlGenerator(System.String,System.Data.Entity.Migrations.Sql.MigrationSqlGenerator)">
      <summary>Aggiunge un nuovo generatore SQL da utilizzare per un provider di database specificato.</summary>
      <param name="providerInvariantName">Nome del provider di database per cui impostare il generatore SQL.</param>
      <param name="migrationSqlGenerator">Generatore SQL da utilizzare.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.DbMigrationsConfiguration.TargetDatabase">
      <summary>Ottiene o imposta un valore per eseguire l'override della connessione del database di cui eseguire la migrazione.</summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.DbMigrationsConfiguration`1">
      <summary>Configurazione relativa all'utilizzo di migrazioni per un modello specificato.</summary>
      <typeparam name="TContext">Contesto che rappresenta il modello a cui si applica la configurazione.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigrationsConfiguration`1.#ctor">
      <summary>Inizializza una nuova istanza della classe DbMigrationsConfiguration.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigrationsConfiguration`1.Equals(System.Object)">
      <summary>Determina se la configurazione corrente è uguale all'oggetto specificato.</summary>
      <returns>true se la configurazione corrente è uguale all'oggetto specificato; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con la configurazione corrente.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigrationsConfiguration`1.GetHashCode">
      <summary>Ottiene la funzione hash per questa istanza.</summary>
      <returns>Funzione hash per questa istanza.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigrationsConfiguration`1.GetType">
      <summary>Restituisce il tipo in fase di esecuzione dell'istanza corrente.</summary>
      <returns>Tipo di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigrationsConfiguration`1.MemberwiseClone">
      <summary>Crea una copia superficiale dell'oggetto corrente.</summary>
      <returns>Copia superficiale dell'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigrationsConfiguration`1.Seed(`0)">
      <summary>Eseguito dopo l'aggiornamento della migrazione più recente per consentire l'aggiornamento dei dati di inizializzazione.</summary>
      <param name="context">Contesto da utilizzare per l'aggiornamento dei dati di inizializzazione.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigrationsConfiguration`1.ToString">
      <summary>Restituisce la rappresentazione di stringa di questa configurazione.</summary>
      <returns>Rappresentazione di stringa di questa configurazione.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.DbMigrator">
      <summary>DbMigrator viene utilizzato per applicare le migrazioni esistenti a un database.DbMigrator può essere utilizzato per eseguire l'aggiornamento e il downgrade a una qualsiasi migrazione specificata.Per eseguire lo scaffolding delle migrazioni in base alle modifiche apportate al modello, utilizzare <see cref="T:System.Data.Entity.Migrations.Design.MigrationScaffolder" /></summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigrator.#ctor(System.Data.Entity.Migrations.DbMigrationsConfiguration)">
      <summary>Inizializza una nuova istanza della classe DbMigrator.</summary>
      <param name="configuration">Configurazione da utilizzare per il processo di migrazione.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.DbMigrator.Configuration">
      <summary>Ottiene la configurazione utilizzata per il processo di migrazione.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigrator.GetDatabaseMigrations">
      <summary>Ottiene tutte le migrazioni applicate al database di destinazione.</summary>
      <returns>Elenco di migrazioni.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigrator.GetLocalMigrations">
      <summary>Ottiene tutte le migrazioni definite nell'assembly delle migrazioni configurate.</summary>
      <returns>Elenco di migrazioni.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigrator.GetPendingMigrations">
      <summary>Ottiene tutte le migrazioni definite nell'assembly ma non applicate al database di destinazione.</summary>
      <returns>Elenco di migrazioni.</returns>
    </member>
    <member name="F:System.Data.Entity.Migrations.DbMigrator.InitialDatabase">
      <summary>ID migrazione che rappresenta lo stato del database prima che venga applicata qualsiasi migrazione.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigrator.Update(System.String)">
      <summary>Aggiorna il database di destinazione a una determinata migrazione.</summary>
      <param name="targetMigration">Migrazione a cui effettuare l'aggiornamento/il downgrade.</param>
    </member>
    <member name="T:System.Data.Entity.Migrations.DbSetMigrationsExtensions">
      <summary>Set di metodi di estensione per <see cref="T:System.Data.Entity.IDbSet`1" /></summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbSetMigrationsExtensions.AddOrUpdate``1(System.Data.Entity.IDbSet{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},``0[])">
      <summary>Aggiunge o aggiorna entità in base a un'espressione di identificazione personalizzata quando si chiama SaveChanges.Equivalente a un'operazione "upsert" dalla terminologia del database.Questo metodo può essere utile durante il seeding dei dati tramite migrazioni.</summary>
      <param name="set">Set a cui appartengono le entità.</param>
      <param name="identifierExpression">Espressione che specifica le proprietà da utilizzare quando si determina se dovrà essere eseguita un'operazione Add o Update.</param>
      <param name="entities">Entità da aggiungere o aggiornare.</param>
      <typeparam name="TEntity">Tipo di entità da aggiungere o aggiornare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbSetMigrationsExtensions.AddOrUpdate``1(System.Data.Entity.IDbSet{``0},``0[])">
      <summary>Aggiunge o aggiorna entità in base alla chiave quando si chiama SaveChanges.Equivalente a un'operazione "upsert" dalla terminologia del database.Questo metodo può essere utile durante il seeding dei dati tramite migrazioni.</summary>
      <param name="set">Set a cui appartengono le entità.</param>
      <param name="entities">Entità da aggiungere o aggiornare.</param>
      <typeparam name="TEntity">Tipo di entità da aggiungere o aggiornare.</typeparam>
    </member>
    <member name="T:System.Data.Entity.Migrations.Builders.ColumnBuilder">
      <summary>Classe helper utilizzata per configurare una colonna.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Builders.ColumnBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Binary(System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Byte[],System.String,System.Boolean,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Data.Entity.Infrastructure.Annotations.AnnotationValues})">
      <summary>Crea una nuova definizione di colonna per archiviare i dati Binary.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <returns>Definizione di colonna appena creata.</returns>
      <param name="nullable">Valore che indica se la colonna ammette o meno valori Null.</param>
      <param name="maxLength">Lunghezza massima consentita dei dati di tipo matrice.</param>
      <param name="fixedLength">Valore che indica se è necessario aggiungere tutti i dati fino alla lunghezza massima.</param>
      <param name="defaultValue">Valore costante da utilizzare come valore predefinito per questa colonna.</param>
      <param name="defaultValueSql">Espressione SQL utilizzata come valore predefinito per questa colonna.</param>
      <param name="timestamp">Valore che indica se questa colonna deve essere configurata o meno come timestamp.</param>
      <param name="name">Nome della colonna.</param>
      <param name="storeType">Tipo di dati specifici del provider da utilizzare per questa colonna.</param>
      <param name="annotations">Annotazioni personalizzate in genere dal modello Code First.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Boolean(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Data.Entity.Infrastructure.Annotations.AnnotationValues})">
      <summary>Crea una nuova definizione di colonna per archiviare i dati Boolean.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <returns>Definizione di colonna appena creata.</returns>
      <param name="nullable">Valore che indica se la colonna ammette o meno valori Null.</param>
      <param name="defaultValue">Valore costante da utilizzare come valore predefinito per questa colonna.</param>
      <param name="defaultValueSql">Espressione SQL utilizzata come valore predefinito per questa colonna.</param>
      <param name="name">Nome della colonna.</param>
      <param name="storeType">Tipo di dati specifici del provider da utilizzare per questa colonna.</param>
      <param name="annotations">Annotazioni personalizzate in genere dal modello Code First.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Byte(System.Nullable{System.Boolean},System.Boolean,System.Nullable{System.Byte},System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Data.Entity.Infrastructure.Annotations.AnnotationValues})">
      <summary>Crea una nuova definizione di colonna per archiviare i dati Byte.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <returns>Definizione di colonna appena creata.</returns>
      <param name="nullable">Valore che indica se la colonna ammette o meno valori Null.</param>
      <param name="identity">Valore che indica se nel database verranno o meno generati valori per questa colonna durante l'inserimento.</param>
      <param name="defaultValue">Valore costante da utilizzare come valore predefinito per questa colonna.</param>
      <param name="defaultValueSql">Espressione SQL utilizzata come valore predefinito per questa colonna.</param>
      <param name="name">Nome della colonna.</param>
      <param name="storeType">Tipo di dati specifici del provider da utilizzare per questa colonna.</param>
      <param name="annotations">Annotazioni personalizzate in genere dal modello Code First.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.DateTime(System.Nullable{System.Boolean},System.Nullable{System.Byte},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Data.Entity.Infrastructure.Annotations.AnnotationValues})">
      <summary>Crea una nuova definizione di colonna per archiviare i dati DateTime.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <returns>Definizione di colonna appena creata.</returns>
      <param name="nullable">Valore che indica se la colonna ammette o meno valori Null.</param>
      <param name="precision">Precisione della colonna.</param>
      <param name="defaultValue">Valore costante da utilizzare come valore predefinito per questa colonna.</param>
      <param name="defaultValueSql">Espressione SQL utilizzata come valore predefinito per questa colonna.</param>
      <param name="name">Nome della colonna.</param>
      <param name="storeType">Tipo di dati specifici del provider da utilizzare per questa colonna.</param>
      <param name="annotations">Annotazioni personalizzate in genere dal modello Code First.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.DateTimeOffset(System.Nullable{System.Boolean},System.Nullable{System.Byte},System.Nullable{System.DateTimeOffset},System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Data.Entity.Infrastructure.Annotations.AnnotationValues})">
      <summary>Crea una nuova definizione di colonna per archiviare i dati DateTimeOffset.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <returns>Definizione di colonna appena creata.</returns>
      <param name="nullable">Valore che indica se la colonna ammette o meno valori Null.</param>
      <param name="precision">Precisione della colonna.</param>
      <param name="defaultValue">Valore costante da utilizzare come valore predefinito per questa colonna.</param>
      <param name="defaultValueSql">Espressione SQL utilizzata come valore predefinito per questa colonna.</param>
      <param name="name">Nome della colonna.</param>
      <param name="storeType">Tipo di dati specifici del provider da utilizzare per questa colonna.</param>
      <param name="annotations">Annotazioni personalizzate in genere dal modello Code First.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Decimal(System.Nullable{System.Boolean},System.Nullable{System.Byte},System.Nullable{System.Byte},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Data.Entity.Infrastructure.Annotations.AnnotationValues})">
      <summary>Crea una nuova definizione di colonna per archiviare i dati Decimal.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <returns>Definizione di colonna appena creata.</returns>
      <param name="nullable">Valore che indica se la colonna ammette o meno valori Null.</param>
      <param name="precision">Precisione numerica della colonna.</param>
      <param name="scale">Scala numerica della colonna.</param>
      <param name="defaultValue">Valore costante da utilizzare come valore predefinito per questa colonna.</param>
      <param name="defaultValueSql">Espressione SQL utilizzata come valore predefinito per questa colonna.</param>
      <param name="name">Nome della colonna.</param>
      <param name="storeType">Tipo di dati specifici del provider da utilizzare per questa colonna.</param>
      <param name="identity">Valore che indica se nel database verranno o meno generati valori per questa colonna durante l'inserimento.</param>
      <param name="annotations">Annotazioni personalizzate in genere dal modello Code First.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Double(System.Nullable{System.Boolean},System.Nullable{System.Double},System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Data.Entity.Infrastructure.Annotations.AnnotationValues})">
      <summary>Crea una nuova definizione di colonna per archiviare i dati Double.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <returns>Definizione di colonna appena creata.</returns>
      <param name="nullable">Valore che indica se la colonna ammette o meno valori Null.</param>
      <param name="defaultValue">Valore costante da utilizzare come valore predefinito per questa colonna.</param>
      <param name="defaultValueSql">Espressione SQL utilizzata come valore predefinito per questa colonna.</param>
      <param name="name">Nome della colonna.</param>
      <param name="storeType">Tipo di dati specifici del provider da utilizzare per questa colonna.</param>
      <param name="annotations">Annotazioni personalizzate in genere dal modello Code First.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Equals(System.Object)">
      <summary>Indica se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se l'oggetto specificato è uguale all'oggetto corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Geography(System.Nullable{System.Boolean},System.Data.Entity.Spatial.DbGeography,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Data.Entity.Infrastructure.Annotations.AnnotationValues})">
      <summary>Crea una nuova definizione di colonna per archiviare i dati geografici.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <returns>Definizione di colonna appena creata.</returns>
      <param name="nullable">Valore che indica se la colonna ammette o meno valori Null.</param>
      <param name="defaultValue">Valore costante da utilizzare come valore predefinito per questa colonna.</param>
      <param name="defaultValueSql">Espressione SQL utilizzata come valore predefinito per questa colonna.</param>
      <param name="name">Nome della colonna.</param>
      <param name="storeType">Tipo di dati specifici del provider da utilizzare per questa colonna.</param>
      <param name="annotations">Annotazioni personalizzate in genere dal modello Code First.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Geometry(System.Nullable{System.Boolean},System.Data.Entity.Spatial.DbGeometry,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Data.Entity.Infrastructure.Annotations.AnnotationValues})">
      <summary>Crea una nuova definizione di colonna per archiviare i dati geometrici.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <returns>Definizione di colonna appena creata.</returns>
      <param name="nullable">Valore che indica se la colonna ammette o meno valori Null.</param>
      <param name="defaultValue">Valore costante da utilizzare come valore predefinito per questa colonna.</param>
      <param name="defaultValueSql">Espressione SQL utilizzata come valore predefinito per questa colonna.</param>
      <param name="name">Nome della colonna.</param>
      <param name="storeType">Tipo di dati specifici del provider da utilizzare per questa colonna.</param>
      <param name="annotations">Annotazioni personalizzate in genere dal modello Code First.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash per l'istanza.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Guid(System.Nullable{System.Boolean},System.Boolean,System.Nullable{System.Guid},System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Data.Entity.Infrastructure.Annotations.AnnotationValues})">
      <summary>Crea una nuova definizione di colonna per archiviare i dati GUID.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <returns>Definizione di colonna appena creata.</returns>
      <param name="nullable">Valore che indica se la colonna ammette o meno valori Null.</param>
      <param name="identity">Valore che indica se nel database verranno o meno generati valori per questa colonna durante l'inserimento.</param>
      <param name="defaultValue">Valore costante da utilizzare come valore predefinito per questa colonna.</param>
      <param name="defaultValueSql">Espressione SQL utilizzata come valore predefinito per questa colonna.</param>
      <param name="name">Nome della colonna.</param>
      <param name="storeType">Tipo di dati specifici del provider da utilizzare per questa colonna.</param>
      <param name="annotations">Annotazioni personalizzate in genere dal modello Code First.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Int(System.Nullable{System.Boolean},System.Boolean,System.Nullable{System.Int32},System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Data.Entity.Infrastructure.Annotations.AnnotationValues})">
      <summary>Crea una nuova definizione di colonna per archiviare i dati Integer.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <returns>Definizione di colonna appena creata.</returns>
      <param name="nullable">Valore che indica se la colonna ammette o meno valori Null.</param>
      <param name="identity">Valore che indica se nel database verranno o meno generati valori per questa colonna durante l'inserimento.</param>
      <param name="defaultValue">Valore costante da utilizzare come valore predefinito per questa colonna.</param>
      <param name="defaultValueSql">Espressione SQL utilizzata come valore predefinito per questa colonna.</param>
      <param name="name">Nome della colonna.</param>
      <param name="storeType">Tipo di dati specifici del provider da utilizzare per questa colonna.</param>
      <param name="annotations">Annotazioni personalizzate in genere dal modello Code First.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Long(System.Nullable{System.Boolean},System.Boolean,System.Nullable{System.Int64},System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Data.Entity.Infrastructure.Annotations.AnnotationValues})">
      <summary>Crea una nuova definizione di colonna per archiviare i dati Long.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <returns>Definizione di colonna appena creata.</returns>
      <param name="nullable">Valore che indica se la colonna ammette o meno valori Null.</param>
      <param name="identity">Valore che indica se nel database verranno o meno generati valori per questa colonna durante l'inserimento.</param>
      <param name="defaultValue">Valore costante da utilizzare come valore predefinito per questa colonna.</param>
      <param name="defaultValueSql">Espressione SQL utilizzata come valore predefinito per questa colonna.</param>
      <param name="name">Nome della colonna.</param>
      <param name="storeType">Tipo di dati specifici del provider da utilizzare per questa colonna.</param>
      <param name="annotations">Annotazioni personalizzate in genere dal modello Code First.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.MemberwiseClone">
      <summary>Crea una copia superficiale dell'oggetto <see cref="T:System.Object" /> corrente.</summary>
      <returns>Copia superficiale dell'oggetto <see cref="T:System.Object" /> corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Short(System.Nullable{System.Boolean},System.Boolean,System.Nullable{System.Int16},System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Data.Entity.Infrastructure.Annotations.AnnotationValues})">
      <summary>Crea una nuova definizione di colonna per archiviare i dati Short.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <returns>Definizione di colonna appena creata.</returns>
      <param name="nullable">Valore che indica se la colonna ammette o meno valori Null.</param>
      <param name="identity">Valore che indica se nel database verranno o meno generati valori per questa colonna durante l'inserimento.</param>
      <param name="defaultValue">Valore costante da utilizzare come valore predefinito per questa colonna.</param>
      <param name="defaultValueSql">Espressione SQL utilizzata come valore predefinito per questa colonna.</param>
      <param name="name">Nome della colonna.</param>
      <param name="storeType">Tipo di dati specifici del provider da utilizzare per questa colonna.</param>
      <param name="annotations">Annotazioni personalizzate in genere dal modello Code First.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Single(System.Nullable{System.Boolean},System.Nullable{System.Single},System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Data.Entity.Infrastructure.Annotations.AnnotationValues})">
      <summary>Crea una nuova definizione di colonna per archiviare i dati Single.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <returns>Definizione di colonna appena creata.</returns>
      <param name="nullable">Valore che indica se la colonna ammette o meno valori Null.</param>
      <param name="defaultValue">Valore costante da utilizzare come valore predefinito per questa colonna.</param>
      <param name="defaultValueSql">Espressione SQL utilizzata come valore predefinito per questa colonna.</param>
      <param name="name">Nome della colonna.</param>
      <param name="storeType">Tipo di dati specifici del provider da utilizzare per questa colonna.</param>
      <param name="annotations">Annotazioni personalizzate in genere dal modello Code First.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.String(System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Data.Entity.Infrastructure.Annotations.AnnotationValues})">
      <summary>Crea una nuova definizione di colonna per archiviare i dati String.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <returns>Definizione di colonna appena creata.</returns>
      <param name="nullable">Valore che indica se la colonna ammette o meno valori Null.</param>
      <param name="maxLength">Lunghezza massima consentita dei dati di tipo stringa.</param>
      <param name="fixedLength">Valore che indica se è necessario aggiungere tutti i dati fino alla lunghezza massima.</param>
      <param name="unicode">Valore che indica se la colonna supporta o meno il contenuto Unicode.</param>
      <param name="defaultValue">Valore costante da utilizzare come valore predefinito per questa colonna.</param>
      <param name="defaultValueSql">Espressione SQL utilizzata come valore predefinito per questa colonna.</param>
      <param name="name">Nome della colonna.</param>
      <param name="storeType">Tipo di dati specifici del provider da utilizzare per questa colonna.</param>
      <param name="annotations">Annotazioni personalizzate in genere dal modello Code First.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Time(System.Nullable{System.Boolean},System.Nullable{System.Byte},System.Nullable{System.TimeSpan},System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Data.Entity.Infrastructure.Annotations.AnnotationValues})">
      <summary>Crea una nuova definizione di colonna per archiviare i dati Time.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <returns>Definizione di colonna appena creata.</returns>
      <param name="nullable">Valore che indica se la colonna ammette o meno valori Null.</param>
      <param name="precision">Precisione della colonna.</param>
      <param name="defaultValue">Valore costante da utilizzare come valore predefinito per questa colonna.</param>
      <param name="defaultValueSql">Espressione SQL utilizzata come valore predefinito per questa colonna.</param>
      <param name="name">Nome della colonna.</param>
      <param name="storeType">Tipo di dati specifici del provider da utilizzare per questa colonna.</param>
      <param name="annotations">Annotazioni personalizzate in genere dal modello Code First.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.Builders.ParameterBuilder">
      <summary>Rappresenta una classe usata per configurare un parametro.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ParameterBuilder.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Builders.ParameterBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ParameterBuilder.Binary(System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Byte[],System.String,System.String,System.String,System.Boolean)">
      <summary>Crea una nuova definizione di parametro per passare i dati Binary.</summary>
      <returns>Definizione di parametro appena creata.</returns>
      <param name="maxLength">Lunghezza massima consentita dei dati di tipo matrice.</param>
      <param name="fixedLength">Valore che indica se è necessario aggiungere tutti i dati fino alla lunghezza massima.</param>
      <param name="defaultValue">Valore costante da utilizzare come valore predefinito per questo parametro.</param>
      <param name="defaultValueSql">Espressione SQL utilizzata come valore predefinito per questo parametro.</param>
      <param name="name">Nome del parametro.</param>
      <param name="storeType">Tipo di dati specifici del provider da utilizzare per questo parametro.</param>
      <param name="outParameter">Valore che indica se si tratta di un parametro di output.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ParameterBuilder.Boolean(System.Nullable{System.Boolean},System.String,System.String,System.String,System.Boolean)">
      <summary>Crea una nuova definizione di parametro per passare i dati Boolean.</summary>
      <returns>Definizione di parametro appena creata.</returns>
      <param name="defaultValue">Valore costante da usare come valore predefinito per questo parametro.</param>
      <param name="defaultValueSql">Espressione SQL usata come valore predefinito per questo parametro.</param>
      <param name="name">Nome del parametro.</param>
      <param name="storeType">Tipo di dati specifici del provider da usare per questo parametro.</param>
      <param name="outParameter">Valore che indica se si tratta di un parametro di output.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ParameterBuilder.Byte(System.Nullable{System.Byte},System.String,System.String,System.String,System.Boolean)">
      <summary>Crea una nuova definizione di parametro per passare i dati Byte.</summary>
      <returns>Definizione di parametro appena creata.</returns>
      <param name="defaultValue">Valore costante da usare come valore predefinito per questo parametro.</param>
      <param name="defaultValueSql">Espressione SQL usata come valore predefinito per questo parametro.</param>
      <param name="name">Nome del parametro.</param>
      <param name="storeType">Tipo di dati specifici del provider da usare per questo parametro.</param>
      <param name="outParameter">Valore che indica se si tratta di un parametro di output.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ParameterBuilder.DateTime(System.Nullable{System.Byte},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Boolean)">
      <summary>Crea una nuova definizione di parametro per passare i dati DateTime.</summary>
      <returns>Definizione di parametro appena creata.</returns>
      <param name="precision">Precisione del parametro.</param>
      <param name="defaultValue">Valore costante da usare come valore predefinito per questo parametro.</param>
      <param name="defaultValueSql">Espressione SQL usata come valore predefinito per questo parametro.</param>
      <param name="name">Nome del parametro.</param>
      <param name="storeType">Tipo di dati specifici del provider da usare per questo parametro.</param>
      <param name="outParameter">Valore che indica se si tratta di un parametro di output.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ParameterBuilder.DateTimeOffset(System.Nullable{System.Byte},System.Nullable{System.DateTimeOffset},System.String,System.String,System.String,System.Boolean)">
      <summary>Crea una nuova definizione di parametro per passare i dati DateTimeOffset.</summary>
      <returns>Definizione di parametro appena creata.</returns>
      <param name="precision">Precisione del parametro.</param>
      <param name="defaultValue">Valore costante da usare come valore predefinito per questo parametro.</param>
      <param name="defaultValueSql">Espressione SQL usata come valore predefinito per questo parametro.</param>
      <param name="name">Nome del parametro.</param>
      <param name="storeType">Tipo di dati specifici del provider da usare per questo parametro.</param>
      <param name="outParameter">Valore che indica se si tratta di un parametro di output.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ParameterBuilder.Decimal(System.Nullable{System.Byte},System.Nullable{System.Byte},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Boolean)">
      <summary>Crea una nuova definizione di parametro per passare i dati Decimal.</summary>
      <returns>Definizione di parametro appena creata.</returns>
      <param name="precision">Precisione numerica del parametro.</param>
      <param name="scale">Scala numerica del parametro.</param>
      <param name="defaultValue">Valore costante da usare come valore predefinito per questo parametro.</param>
      <param name="defaultValueSql">Espressione SQL usata come valore predefinito per questo parametro.</param>
      <param name="name">Nome del parametro.</param>
      <param name="storeType">Tipo di dati specifici del provider da usare per questo parametro.</param>
      <param name="outParameter">Valore che indica se si tratta di un parametro di output.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ParameterBuilder.Double(System.Nullable{System.Double},System.String,System.String,System.String,System.Boolean)">
      <summary>Crea una nuova definizione di parametro per passare i dati Double.</summary>
      <returns>Definizione di parametro appena creata.</returns>
      <param name="defaultValue">Valore costante da usare come valore predefinito per questo parametro.</param>
      <param name="defaultValueSql">Espressione SQL usata come valore predefinito per questo parametro.</param>
      <param name="name">Nome del parametro.</param>
      <param name="storeType">Tipo di dati specifici del provider da usare per questo parametro.</param>
      <param name="outParameter">Valore che indica se si tratta di un parametro di output.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ParameterBuilder.Equals(System.Object)">
      <summary>Specifica se questa istanza è uguale a un oggetto specifico.</summary>
      <returns>true se questa istanza è uguale a un oggetto specifico. In caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ParameterBuilder.Geography(System.Data.Entity.Spatial.DbGeography,System.String,System.String,System.String,System.Boolean)">
      <summary>Crea una nuova definizione di parametro per passare i dati di geografia.</summary>
      <returns>Definizione di parametro appena creata.</returns>
      <param name="defaultValue">Valore costante da usare come valore predefinito per questo parametro.</param>
      <param name="defaultValueSql">Espressione SQL usata come valore predefinito per questo parametro.</param>
      <param name="name">Nome del parametro.</param>
      <param name="storeType">Tipo di dati specifici del provider da usare per questo parametro.</param>
      <param name="outParameter">Valore che indica se si tratta di un parametro di output.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ParameterBuilder.Geometry(System.Data.Entity.Spatial.DbGeometry,System.String,System.String,System.String,System.Boolean)">
      <summary>Crea una nuova definizione di parametro per passare i dati di geometria.</summary>
      <returns>Definizione di parametro appena creata.</returns>
      <param name="defaultValue">Valore costante da usare come valore predefinito per questo parametro.</param>
      <param name="defaultValueSql">Espressione SQL usata come valore predefinito per questo parametro.</param>
      <param name="name">Nome del parametro.</param>
      <param name="storeType">Tipo di dati specifici del provider da usare per questo parametro.</param>
      <param name="outParameter">Valore che indica se si tratta di un parametro di output.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ParameterBuilder.GetHashCode">
      <summary>Ottiene il codice hash associato a questa istanza.</summary>
      <returns>Codice hash associato a questa istanza.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ParameterBuilder.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ParameterBuilder.Guid(System.Nullable{System.Guid},System.String,System.String,System.String,System.Boolean)">
      <summary>Crea una nuova definizione di parametro per passare i dati GUID.</summary>
      <returns>Definizione di parametro appena creata.</returns>
      <param name="defaultValue">Valore costante da usare come valore predefinito per questo parametro.</param>
      <param name="defaultValueSql">Espressione SQL usata come valore predefinito per questo parametro.</param>
      <param name="name">Nome del parametro.</param>
      <param name="storeType">Tipo di dati specifici del provider da usare per questo parametro.</param>
      <param name="outParameter">Valore che indica se si tratta di un parametro di output.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ParameterBuilder.Int(System.Nullable{System.Int32},System.String,System.String,System.String,System.Boolean)">
      <summary>Crea una nuova definizione di parametro per passare i dati Integer.</summary>
      <returns>Definizione di parametro appena creata.</returns>
      <param name="defaultValue">Valore costante da usare come valore predefinito per questo parametro.</param>
      <param name="defaultValueSql">Espressione SQL usata come valore predefinito per questo parametro.</param>
      <param name="name">Nome del parametro.</param>
      <param name="storeType">Tipo di dati specifici del provider da usare per questo parametro.</param>
      <param name="outParameter">Valore che indica se si tratta di un parametro di output.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ParameterBuilder.Long(System.Nullable{System.Int64},System.String,System.String,System.String,System.Boolean)">
      <summary>Crea una nuova definizione di parametro per passare i dati Long.</summary>
      <returns>Definizione di parametro appena creata.</returns>
      <param name="defaultValue">Valore costante da usare come valore predefinito per questo parametro.</param>
      <param name="defaultValueSql">Espressione SQL usata come valore predefinito per questo parametro.</param>
      <param name="name">Nome del parametro.</param>
      <param name="storeType">Tipo di dati specifici del provider da usare per questo parametro.</param>
      <param name="outParameter">Valore che indica se si tratta di un parametro di output.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ParameterBuilder.MemberwiseClone">
      <summary>Crea una copia superficiale dell'oggetto <see cref="T:System.Object" /> corrente.</summary>
      <returns>Copia superficiale dell'oggetto <see cref="T:System.Object" /> corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ParameterBuilder.Short(System.Nullable{System.Int16},System.String,System.String,System.String,System.Boolean)">
      <summary>Crea una nuova definizione di parametro per passare i dati Short.</summary>
      <returns>Definizione di parametro appena creata.</returns>
      <param name="defaultValue">Valore costante da usare come valore predefinito per questo parametro.</param>
      <param name="defaultValueSql">Espressione SQL usata come valore predefinito per questo parametro.</param>
      <param name="name">Nome del parametro.</param>
      <param name="storeType">Tipo di dati specifici del provider da usare per questo parametro.</param>
      <param name="outParameter">Valore che indica se si tratta di un parametro di output.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ParameterBuilder.Single(System.Nullable{System.Single},System.String,System.String,System.String,System.Boolean)">
      <summary>Crea una nuova definizione di parametro per passare i dati Single.</summary>
      <returns>Definizione di parametro appena creata.</returns>
      <param name="defaultValue">Valore costante da usare come valore predefinito per questo parametro.</param>
      <param name="defaultValueSql">Espressione SQL usata come valore predefinito per questo parametro.</param>
      <param name="name">Nome del parametro.</param>
      <param name="storeType">Tipo di dati specifici del provider da usare per questo parametro.</param>
      <param name="outParameter">Valore che indica se si tratta di un parametro di output.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ParameterBuilder.String(System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>Crea una nuova definizione di parametro per passare i dati String.</summary>
      <returns>Definizione di parametro appena creata.</returns>
      <param name="maxLength">Lunghezza massima consentita dei dati di tipo stringa.</param>
      <param name="fixedLength">Valore che indica se è necessario aggiungere tutti i dati fino alla lunghezza massima.</param>
      <param name="unicode">Valore che indica se il parametro supporta o meno il contenuto Unicode.</param>
      <param name="defaultValue">Valore costante da usare come valore predefinito per questo parametro.</param>
      <param name="defaultValueSql">Espressione SQL usata come valore predefinito per questo parametro.</param>
      <param name="name">Nome del parametro.</param>
      <param name="storeType">Tipo di dati specifici del provider da usare per questo parametro.</param>
      <param name="outParameter">Valore che indica se si tratta di un parametro di output.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ParameterBuilder.Time(System.Nullable{System.Byte},System.Nullable{System.TimeSpan},System.String,System.String,System.String,System.Boolean)">
      <summary>Crea una nuova definizione di parametro per passare i dati Time.</summary>
      <returns>Definizione di parametro appena creata.</returns>
      <param name="precision">Precisione del parametro.</param>
      <param name="defaultValue">Valore costante da usare come valore predefinito per questo parametro.</param>
      <param name="defaultValueSql">Espressione SQL usata come valore predefinito per questo parametro.</param>
      <param name="name">Nome del parametro.</param>
      <param name="storeType">Tipo di dati specifici del provider da usare per questo parametro.</param>
      <param name="outParameter">Valore che indica se si tratta di un parametro di output.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ParameterBuilder.ToString">
      <summary>Restituisce una rappresentazione di stringa di questa istanza.</summary>
      <returns>Rappresentazione di stringa di questa istanza.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.Builders.TableBuilder`1">
      <summary>Classe helper utilizzata per configurare ulteriormente una tabella creata da una chiamata a CreateTable su <see cref="T:System.Data.Entity.Migrations.DbMigration" />.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <typeparam name="TColumns">Tipo che rappresenta le colonne della tabella.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.TableBuilder`1.#ctor(System.Data.Entity.Migrations.Model.CreateTableOperation,System.Data.Entity.Migrations.DbMigration)">
      <summary>Inizializza una nuova istanza della classe TableBuilder.</summary>
      <param name="createTableOperation">Operazione di creazione di una tabella da configurare ulteriormente.</param>
      <param name="migration">Migrazione in cui viene creata la tabella.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.TableBuilder`1.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se l'oggetto specificato è uguale all'oggetto corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.TableBuilder`1.ForeignKey(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Boolean,System.String,System.Object)">
      <summary>Specifica un vincolo di chiave esterna da creare nella tabella.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <returns>Stessa istanza in modo che possano essere concatenate più chiamate.</returns>
      <param name="principalTable">Nome della tabella a cui è destinato il vincolo della chiave esterna.</param>
      <param name="dependentKeyExpression">Espressione lambda che rappresenta le proprietà della chiave esterna.C#: t =&amp;gt; t.PropertyOne VB.Net: Function(t) t.PropertyOne. Se la chiave esterna è costituita da più proprietà, specificare un tipo anonimo che includa le proprietà.C#: t =&amp;gt; new { t.PropertyOne, t.PropertyTwo } VB.Net: Function(t) New With { t.PropertyOne, t.PropertyTwo }</param>
      <param name="cascadeDelete">Valore che indica se è necessario configurare l'eliminazione a catena nel vincolo di chiave esterna.</param>
      <param name="name">Nome del vincolo di chiave esterna.Se non viene specificato alcun nome, verrà calcolato un nome predefinito.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.TableBuilder`1.GetHashCode">
      <summary>Ottiene il codice hash per l'oggetto corrente.</summary>
      <returns>Codice hash per l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.TableBuilder`1.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.TableBuilder`1.Index(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.Boolean,System.Boolean,System.Object)">
      <summary>Specifica un indice da creare nella tabella.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <returns>Stessa istanza in modo che possano essere concatenate più chiamate.</returns>
      <param name="indexExpression">Espressione lambda che rappresenta la proprietà da indicizzare.C#: t =&amp;gt; t.PropertyOne VB.Net: Function(t) t.PropertyOne. Se più proprietà devono essere indicizzate, specificare un tipo anonimo che includa le proprietà.C#: t =&amp;gt; new { t.PropertyOne, t.PropertyTwo } VB.Net: Function(t) New With { t.PropertyOne, t.PropertyTwo }</param>
      <param name="name">Nome dell'indice.</param>
      <param name="unique">Valore che indica se si tratta di un indice univoco.</param>
      <param name="clustered">Valore che indica se si tratta di un indice cluster.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.TableBuilder`1.MemberwiseClone">
      <summary>Crea una copia superficiale dell'oggetto <see cref="T:System.Object" /> corrente.</summary>
      <returns>Copia superficiale dell'oggetto <see cref="T:System.Object" /> corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.TableBuilder`1.PrimaryKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.Boolean,System.Object)">
      <summary>Specifica una chiave primaria per la tabella.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <returns>Stessa istanza in modo che possano essere concatenate più chiamate.</returns>
      <param name="keyExpression">Espressione lambda che rappresenta la proprietà da utilizzare come chiave primaria.C#: t =&amp;gt; t.Id VB.Net: Function(t) t.Id. Se la chiave primaria è costituita da più proprietà, specificare un tipo anonimo che include le proprietà.C#: t =&amp;gt; new { t.Id1, t.Id2 } VB.Net: Function(t) New With { t.Id1, t.Id2 }</param>
      <param name="name">Nome della chiave primaria.Se si specifica null, verrà generato un nome predefinito.</param>
      <param name="clustered">Valore che indica se si tratta di una chiave primaria cluster.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.TableBuilder`1.ToString">
      <summary>Restituisce una rappresentazione di stringa dell'oggetto corrente.</summary>
      <returns>Rappresentazione di stringa dell'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator">
      <summary>Genera il codice C# per una migrazione basata sul codice.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Byte[])">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:byte[]" />.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String,System.String)">
      <summary>Genera il file del codice primario che l'utente può visualizzare e modificare.</summary>
      <returns>Codice generato.</returns>
      <param name="operations">Operazioni da eseguire mediante la migrazione.</param>
      <param name="namespace">Spazio dei nomi in cui generare il codice.</param>
      <param name="className">Nome della classe da generare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Collections.Generic.IEnumerable{System.String},System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per specificare un set di nomi di colonna utilizzando un'espressione lambda.</summary>
      <param name="columns">Colonne per le quali generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.AddColumnOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.AddColumnOperation" />.</summary>
      <param name="addColumnOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.AddForeignKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.AddForeignKeyOperation" />.</summary>
      <param name="addForeignKeyOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation" />.</summary>
      <param name="addPrimaryKeyOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.AlterColumnOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.AlterColumnOperation" />.</summary>
      <param name="alterColumnOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.AlterProcedureOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.AlterProcedureOperation" />.</summary>
      <param name="alterProcedureOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.AlterTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per <see cref="T:System.Data.Entity.Migrations.Model.AlterTableOperation" />.</summary>
      <param name="alterTableOperation">Operazione per cui deve essere generato il codice.</param>
      <param name="writer">Writer in cui deve essere scritto il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.ColumnModel,System.Data.Entity.Migrations.Utilities.IndentedTextWriter,System.Boolean)">
      <summary>Genera il codice per specificare la definizione per un oggetto <see cref="T:System.Data.Entity.Migrations.Model.ColumnModel" />.</summary>
      <param name="column">Definizione di colonna per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
      <param name="emitName">Valore che indica se includere il nome della colonna nella definizione.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.CreateIndexOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.CreateIndexOperation" />.</summary>
      <param name="createIndexOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.CreateProcedureOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.CreateProcedureOperation" />.</summary>
      <param name="createProcedureOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.CreateTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.CreateTableOperation" />.</summary>
      <param name="createTableOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropColumnOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.DropColumnOperation" />.</summary>
      <param name="dropColumnOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropForeignKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.DropForeignKeyOperation" />.</summary>
      <param name="dropForeignKeyOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropIndexOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.DropIndexOperation" />.</summary>
      <param name="dropIndexOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation" />.</summary>
      <param name="dropPrimaryKeyOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropProcedureOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.DropProcedureOperation" />.</summary>
      <param name="dropProcedureOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.DropTableOperation" />.</summary>
      <param name="dropTableOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.MoveProcedureOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.MoveProcedureOperation" />.</summary>
      <param name="moveProcedureOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.MoveTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.MoveTableOperation" />.</summary>
      <param name="moveTableOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.ParameterModel,System.Data.Entity.Migrations.Utilities.IndentedTextWriter,System.Boolean)">
      <summary>Genera il codice per specificare la definizione per un oggetto <see cref="T:System.Data.Entity.Migrations.Model.ParameterModel" />.</summary>
      <param name="parameterModel">Definizione di parametro per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
      <param name="emitName">Valore che indica se includere il nome della colonna nella definizione.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.RenameColumnOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.RenameColumnOperation" />.</summary>
      <param name="renameColumnOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.RenameIndexOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.RenameIndexOperation" />.</summary>
      <param name="renameIndexOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.RenameProcedureOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.RenameProcedureOperation" />.</summary>
      <param name="renameProcedureOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.RenameTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.RenameTableOperation" />.</summary>
      <param name="renameTableOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.SqlOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.SqlOperation" />.</summary>
      <param name="sqlOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Spatial.DbGeography)">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.DateTime)">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.DateTime" />.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.DateTimeOffset)">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Decimal)">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.Decimal" />.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Guid)">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.Guid" />.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Int64)">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.Int64" />.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Object)">
      <summary>Genera il codice per specificare il valore predefinito per una colonna del tipo di dati sconosciuto.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Single)">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.Single" />.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.String)">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.String" />.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.String,System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String,System.String,System.String,System.String)">
      <summary>Genera il file code-behind con <see cref="T:System.Data.Entity.Migrations.Design.ScaffoldedMigration" />.</summary>
      <returns>Codice generato.</returns>
      <param name="migrationId">Identificatore univoco della migrazione.</param>
      <param name="operations">Operazione per la quale generare il codice.</param>
      <param name="sourceModel">Modello di origine da archiviare nei metadati della migrazione.</param>
      <param name="targetModel">Modello di destinazione da archiviare nei metadati della migrazione.</param>
      <param name="namespace">Spazio dei nomi in cui generare il codice.</param>
      <param name="className">Nome della classe da generare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.String,System.String,System.String,System.String,System.String)">
      <summary>Genera il file code-behind con i metadati della migrazione.</summary>
      <returns>Codice generato.</returns>
      <param name="migrationId">Identificatore univoco della migrazione.</param>
      <param name="sourceModel">Modello di origine da archiviare nei metadati della migrazione.</param>
      <param name="targetModel">Modello di destinazione da archiviare nei metadati della migrazione.</param>
      <param name="namespace">Spazio dei nomi in cui generare il codice.</param>
      <param name="className">Nome della classe da generare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.TimeSpan)">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.TimeSpan" />.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.GenerateAnnotation(System.String,System.Object,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per il valore di annotazione specificato che può essere null.Il comportamento predefinito consiste nell'utilizzare <see cref="T:System.Data.Entity.Infrastructure.Annotations.AnnotationCodeGenerator" /> se è registrato; in caso contrario, viene chiamato ToString sul valore di annotazione.</summary>
      <param name="name">Nome dell'annotazione per cui è necessario il codice.</param>
      <param name="annotation">Valore di annotazione da generare.</param>
      <param name="writer">Writer in cui deve essere scritto il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.GenerateAnnotations(System.Collections.Generic.IDictionary{System.String,System.Data.Entity.Infrastructure.Annotations.AnnotationValues},System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per ricreare il dizionario di annotazioni specificato da usare quando si passano le annotazioni come parametro di una chiamata <see cref="T:System.Data.Entity.Migrations.DbMigration" />.</summary>
      <param name="annotations">Annotazioni da generare.</param>
      <param name="writer">Writer in cui deve essere scritto il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.GenerateAnnotations(System.Collections.Generic.IDictionary{System.String,System.Object},System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per ricreare il dizionario di annotazioni specificato da usare quando si passano le annotazioni come parametro di una chiamata <see cref="T:System.Data.Entity.Migrations.DbMigration" />.</summary>
      <param name="annotations">Annotazioni da generare.</param>
      <param name="writer">Writer in cui deve essere scritto il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.GenerateInline(System.Data.Entity.Migrations.Model.AddForeignKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.AddForeignKeyOperation" /> come parte di un'operazione <see cref="T:System.Data.Entity.Migrations.Model.CreateTableOperation" />.</summary>
      <param name="addForeignKeyOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.GenerateInline(System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation" /> come parte di un'operazione <see cref="T:System.Data.Entity.Migrations.Model.CreateTableOperation" />.</summary>
      <param name="addPrimaryKeyOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.GenerateInline(System.Data.Entity.Migrations.Model.CreateIndexOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.CreateIndexOperation" /> come parte di un'operazione <see cref="T:System.Data.Entity.Migrations.Model.CreateTableOperation" />.</summary>
      <param name="createIndexOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Quote(System.String)">
      <summary>Racchiude tra virgolette un identificatore utilizzando l'escape appropriato per consentirne l'archiviazione in una stringa.</summary>
      <returns>Identificatore delimitato.</returns>
      <param name="identifier">Identificatore da delimitare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.ScrubName(System.String)">
      <summary>Rimuove eventuali caratteri non validi dal nome di un elemento del database.</summary>
      <returns>Nome selezionato.</returns>
      <param name="name">Nome da selezionare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.TranslateColumnType(System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind)">
      <summary>Ottiene il nome del tipo da utilizzare per una colonna del tipo di dati specificato.</summary>
      <returns>Nome del tipo da utilizzare nella migrazione generata.</returns>
      <param name="primitiveTypeKind">Tipo di dati da convertire.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.WriteClassAttributes(System.Data.Entity.Migrations.Utilities.IndentedTextWriter,System.Boolean)">
      <summary>Genera attributi di classe.</summary>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
      <param name="designer">Valore che indica se la classe viene generata per un file code-behind.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.WriteClassEnd(System.String,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice di chiusura per una classe avviata con WriteClassStart.</summary>
      <param name="namespace">Spazio dei nomi in cui generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.WriteClassStart(System.String,System.String,System.Data.Entity.Migrations.Utilities.IndentedTextWriter,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Genera uno spazio dei nomi utilizzando istruzioni e definizione di classe.</summary>
      <param name="namespace">Spazio dei nomi in cui generare il codice.</param>
      <param name="className">Nome della classe da generare.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
      <param name="base">Classe base per la classe generata.</param>
      <param name="designer">Valore che indica se la classe viene generata per un file code-behind.</param>
      <param name="namespaces">Spazi dei nomi per i quali verranno aggiunte direttive using.Se null, verranno utilizzati gli spazi dei nomi restituiti da GetDefaultNamespaces.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.WriteProperty(System.String,System.String,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera una proprietà per restituire il modello di origine o di destinazione nel file code-behind.</summary>
      <param name="name">Nome della proprietà.</param>
      <param name="value">Valore da restituire.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="T:System.Data.Entity.Migrations.Design.MigrationCodeGenerator">
      <summary>Classe base per provider che generano il codice per le migrazioni basate sul codice.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.MigrationCodeGenerator.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Design.MigrationCodeGenerator" />.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Design.MigrationCodeGenerator.AnnotationGenerators">
      <summary>Ottiene le istanze di <see cref="T:System.Data.Entity.Infrastructure.Annotations.AnnotationCodeGenerator" /> in uso.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.MigrationCodeGenerator.Generate(System.String,System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String,System.String,System.String,System.String)">
      <summary>Genera il codice da aggiungere al progetto degli utenti.</summary>
      <returns>Codice generato.</returns>
      <param name="migrationId">Identificatore univoco della migrazione.</param>
      <param name="operations">Operazioni da eseguire mediante la migrazione.</param>
      <param name="sourceModel">Modello di origine da archiviare nei metadati della migrazione.</param>
      <param name="targetModel">Modello di destinazione da archiviare nei metadati della migrazione.</param>
      <param name="namespace">Spazio dei nomi in cui generare il codice.</param>
      <param name="className">Nome della classe da generare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.MigrationCodeGenerator.GetDefaultNamespaces(System.Boolean)">
      <summary>Ottiene gli spazi dei nomi predefiniti che devono essere restituiti come direttive "using" o "Import" per qualsiasi codice generato.</summary>
      <returns>Elenco ordinato di nomi degli spazi dei nomi.</returns>
      <param name="designer">Valore che indica se la classe viene generata per un file code-behind.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.MigrationCodeGenerator.GetNamespaces(System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation})">
      <summary>Ottiene gli spazi dei nomi che devono essere restituiti come direttive "using" o "Import" per gestire il codice generato mediante le operazioni specificate.</summary>
      <returns>Elenco ordinato di nomi degli spazi dei nomi.</returns>
      <param name="operations">Operazioni per le quali verrà generato il codice.</param>
    </member>
    <member name="T:System.Data.Entity.Migrations.Design.MigrationScaffolder">
      <summary>Esegue lo scaffolding di migrazioni basate sul codice per applicare al database modifiche del modello in sospeso.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.MigrationScaffolder.#ctor(System.Data.Entity.Migrations.DbMigrationsConfiguration)">
      <summary>Inizializza una nuova istanza della classe MigrationScaffolder.</summary>
      <param name="migrationsConfiguration">Configurazione da utilizzare per lo scaffolding.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Design.MigrationScaffolder.Namespace">
      <summary>Ottiene o imposta lo spazio dei nomi utilizzato nel codice generato della migrazione.Per impostazione predefinita, corrisponde a MigrationsNamespace nell'oggetto di configurazione delle migrazioni passato al costruttore.Per progetti VB.NET, sarà necessario aggiornarlo per prendere in considerazione lo spazio dei nomi radice del progetto.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.MigrationScaffolder.Scaffold(System.String)">
      <summary>Esegue lo scaffolding di una migrazione basata sul codice per applicare al database eventuali modifiche del modello in sospeso.</summary>
      <returns>Migrazione con scaffolding.</returns>
      <param name="migrationName">Nome da utilizzare per la migrazione con scaffolding.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.MigrationScaffolder.Scaffold(System.String,System.Boolean)">
      <summary>Esegue lo scaffolding di una migrazione basata sul codice per applicare al database eventuali modifiche del modello in sospeso.</summary>
      <returns>Migrazione con scaffolding.</returns>
      <param name="migrationName">Nome da utilizzare per la migrazione con scaffolding.</param>
      <param name="ignoreChanges">Indica se includere o meno le modifiche al modello.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.MigrationScaffolder.ScaffoldInitialCreate">
      <summary>Esegue lo scaffolding della migrazione basata sul codice iniziale corrispondente a un inizializzatore di database eseguito in precedenza.</summary>
      <returns>Migrazione con scaffolding.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.Design.ScaffoldedMigration">
      <summary>Rappresenta una migrazione basata sul codice con scaffolding e pronta per essere scritta in un file.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.ScaffoldedMigration.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Design.ScaffoldedMigration" />.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Design.ScaffoldedMigration.DesignerCode">
      <summary>Ottiene o imposta il codice di migrazione con scaffolding che deve essere archiviato in un file code-behind.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Design.ScaffoldedMigration.Directory">
      <summary>Ottiene o imposta la sottodirectory nel progetto dell'utente in cui deve essere salvata questa migrazione.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Design.ScaffoldedMigration.IsRescaffold">
      <summary>Ottiene o imposta un valore che indica se la migrazione è stata nuovamente sottoposta a scaffolding.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Design.ScaffoldedMigration.Language">
      <summary>Ottiene o imposta il linguaggio di programmazione utilizzato per questa migrazione.In genere utilizzato per l'estensione di file del codice generato.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Design.ScaffoldedMigration.MigrationId">
      <summary>Ottiene o imposta l'identificatore univoco per questa migrazione.In genere utilizzato per il nome file del codice generato.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Design.ScaffoldedMigration.Resources">
      <summary>Ottiene un dizionario delle risorse di stringa da aggiungere al file di risorse della migrazione.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Design.ScaffoldedMigration.UserCode">
      <summary>Ottiene o imposta il codice di migrazione con scaffolding che l'utente può modificare.</summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Design.ToolingFacade">
      <summary>Classe helper utilizzata dagli strumenti della fase di progettazione per eseguire comandi correlati alle migrazioni che devono interagire con un'applicazione modificata in Visual Studio.Dal momento che l'applicazione viene modificata, gli assembly devono essere caricati in un AppDomain distinto per garantire che venga sempre caricata la versione più recente.Il file App/Web.config viene inoltre copiato dal progetto di avvio per garantire l'applicazione di una configurazione.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.ToolingFacade.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Data.Entity.Infrastructure.DbConnectionInfo)">
      <summary>Inizializza una nuova istanza della classe ToolingFacade.</summary>
      <param name="migrationsAssemblyName">Nome dell'assembly che contiene la configurazione delle migrazioni da utilizzare.</param>
      <param name="contextAssemblyName">Nome dell'assembly che contiene l'oggetto DbContext da utilizzare.</param>
      <param name="configurationTypeName">Nome completo dello spazio dei nomi della configurazione delle migrazioni da utilizzare.</param>
      <param name="workingDirectory">Directory di lavoro contenente gli assembly compilati.</param>
      <param name="configurationFilePath">Percorso del file di configurazione dal progetto di avvio.</param>
      <param name="dataDirectory">Percorso della directory dei dati dell'applicazione dal progetto di avvio.In genere, la directory App_Data per le applicazioni Web o la directory di lavoro per i file eseguibili.</param>
      <param name="connectionStringInfo">Connessione al database di cui eseguire la migrazione.Se si specifica null, verrà utilizzata la connessione predefinita per il contesto.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.ToolingFacade.Dispose">
      <summary>Rilascia le risorse utilizzate dall'istanza corrente della classe <see cref="T:System.Data.Entity.Migrations.Design.ToolingFacade" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.ToolingFacade.Dispose(System.Boolean)">
      <summary>Rilascia tutte le risorse utilizzate dalla facciata.</summary>
      <param name="disposing">true per rilasciare le risorse gestite e non gestite; false per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.ToolingFacade.Finalize">
      <summary>Rilascia tutte le risorse non gestite utilizzate dalla facciata.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.ToolingFacade.GetContextType(System.String)">
      <summary>Ottiene il nome completo di un tipo che deriva da <see cref="T:System.Data.Entity.DbContext" />.</summary>
      <returns>Tipo di contesto trovato.</returns>
      <param name="contextTypeName">Nome del tipo di contesto.Se Null, verrà restituito il singolo tipo di contesto trovato nell'assembly.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.ToolingFacade.GetContextTypes">
      <summary>Ottiene il nome completo di tutti i tipi derivanti da <see cref="T:System.Data.Entity.DbContext" />.</summary>
      <returns>Tutti i tipi di contesto rilevati.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.ToolingFacade.GetDatabaseMigrations">
      <summary>Ottiene un elenco di tutte le migrazioni applicate al database.</summary>
      <returns>ID delle migrazioni applicate.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.ToolingFacade.GetPendingMigrations">
      <summary>Ottiene un elenco di tutte le migrazioni non applicate al database.</summary>
      <returns>ID delle migrazioni in sospeso.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Design.ToolingFacade.LogInfoDelegate">
      <summary>Ottiene o imposta un'azione da eseguire per registrare informazioni.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Design.ToolingFacade.LogVerboseDelegate">
      <summary>Ottiene o imposta un'azione da eseguire per registrare informazioni dettagliate.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Design.ToolingFacade.LogWarningDelegate">
      <summary>Ottiene o imposta un'azione da eseguire per registrare avvisi.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.ToolingFacade.Scaffold(System.String,System.String,System.String,System.Boolean)">
      <summary>Esegue lo scaffolding di una migrazione basata sul codice per applicare eventuali modifiche del modello in sospeso.</summary>
      <returns>Migrazione con scaffolding.</returns>
      <param name="migrationName">Nome per la migrazione generata.</param>
      <param name="language">Linguaggio di programmazione della migrazione generata.</param>
      <param name="rootNamespace">Spazio dei nomi radice del progetto a cui verrà aggiunta la migrazione.</param>
      <param name="ignoreChanges">Indica se includere o meno le modifiche al modello.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.ToolingFacade.ScaffoldInitialCreate(System.String,System.String)">
      <summary>Esegue lo scaffolding della migrazione basata sul codice iniziale corrispondente a un inizializzatore di database eseguito in precedenza.</summary>
      <returns>Migrazione con scaffolding.</returns>
      <param name="language">Linguaggio di programmazione della migrazione generata.</param>
      <param name="rootNamespace">Spazio dei nomi radice del progetto a cui verrà aggiunta la migrazione.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.ToolingFacade.ScriptUpdate(System.String,System.String,System.Boolean)">
      <summary>Genera uno script SQL per la migrazione tra due migrazioni.</summary>
      <returns>Script SQL generato.</returns>
      <param name="sourceMigration">Migrazione da cui eseguire l'aggiornamento.Se si specifica null, verrà generato uno script per aggiornare il database corrente.</param>
      <param name="targetMigration">Migrazione a cui eseguire l'aggiornamento.Se si specifica null, verrà generato uno script da aggiornare alla migrazione più recente.</param>
      <param name="force">Valore che indica se è ammessa la perdita di dati durante la migrazione automatica.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.ToolingFacade.Update(System.String,System.Boolean)">
      <summary>Aggiorna il database alla migrazione specificata.</summary>
      <param name="targetMigration">ID della migrazione a cui migrare.Se si specifica null, il database verrà aggiornato alla migrazione più recente.</param>
      <param name="force">Valore che indica se è ammessa la perdita di dati durante la migrazione automatica.</param>
    </member>
    <member name="T:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator">
      <summary>Genera codice VB.Net per una migrazione basata sul codice.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Byte[])">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:byte[]" />.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String,System.String)">
      <summary>Genera il file del codice primario che l'utente può visualizzare e modificare.</summary>
      <returns>Codice generato.</returns>
      <param name="operations">Operazioni da eseguire mediante la migrazione.</param>
      <param name="namespace">Spazio dei nomi in cui generare il codice.</param>
      <param name="className">Nome della classe da generare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Collections.Generic.IEnumerable{System.String},System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per specificare un set di nomi di colonna utilizzando un'espressione lambda.</summary>
      <param name="columns">Colonne per le quali generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.AddColumnOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.AddColumnOperation" />.</summary>
      <param name="addColumnOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.AddForeignKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.AddForeignKeyOperation" />.</summary>
      <param name="addForeignKeyOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation" />.</summary>
      <param name="addPrimaryKeyOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.AlterColumnOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.AlterColumnOperation" />.</summary>
      <param name="alterColumnOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.AlterProcedureOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.AlterProcedureOperation" />.</summary>
      <param name="alterProcedureOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.AlterTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per <see cref="T:System.Data.Entity.Migrations.Model.AlterTableOperation" />.</summary>
      <param name="alterTableOperation">Operazione per cui deve essere generato il codice.</param>
      <param name="writer">Writer in cui deve essere scritto il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.ColumnModel,System.Data.Entity.Migrations.Utilities.IndentedTextWriter,System.Boolean)">
      <summary>Genera il codice per specificare la definizione per un oggetto <see cref="T:System.Data.Entity.Migrations.Model.ColumnModel" />.</summary>
      <param name="column">Definizione di colonna per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
      <param name="emitName">Valore che indica se includere il nome della colonna nella definizione.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.CreateIndexOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.CreateIndexOperation" />.</summary>
      <param name="createIndexOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.CreateProcedureOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.CreateProcedureOperation" />.</summary>
      <param name="createProcedureOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.CreateTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.CreateTableOperation" />.</summary>
      <param name="createTableOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropColumnOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.DropColumnOperation" />.</summary>
      <param name="dropColumnOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropForeignKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.DropForeignKeyOperation" />.</summary>
      <param name="dropForeignKeyOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropIndexOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.DropIndexOperation" />.</summary>
      <param name="dropIndexOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation" />.</summary>
      <param name="dropPrimaryKeyOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropProcedureOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.DropProcedureOperation" />.</summary>
      <param name="dropProcedureOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.DropTableOperation" />.</summary>
      <param name="dropTableOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.MoveProcedureOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.MoveProcedureOperation" />.</summary>
      <param name="moveProcedureOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.MoveTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.MoveTableOperation" />.</summary>
      <param name="moveTableOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.ParameterModel,System.Data.Entity.Migrations.Utilities.IndentedTextWriter,System.Boolean)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.ParameterModel" />.</summary>
      <param name="parameterModel">Definizione di modello del parametro per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
      <param name="emitName">true per includere il nome della colonna nella definizione; in caso contrario, false.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.RenameColumnOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.RenameColumnOperation" />.</summary>
      <param name="renameColumnOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.RenameIndexOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.RenameIndexOperation" />.</summary>
      <param name="renameIndexOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.RenameProcedureOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.RenameProcedureOperation" />.</summary>
      <param name="renameProcedureOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.RenameTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.RenameTableOperation" />.</summary>
      <param name="renameTableOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.SqlOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.SqlOperation" />.</summary>
      <param name="sqlOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Spatial.DbGeography)">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.DateTime)">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.DateTime" />.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.DateTimeOffset)">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Decimal)">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.Decimal" />.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Guid)">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.Guid" />.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Int64)">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.Int64" />.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Object)">
      <summary>Genera il codice per specificare il valore predefinito per una colonna del tipo di dati sconosciuto.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Single)">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.Single" />.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.String)">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.String" />.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.String,System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String,System.String,System.String,System.String)">
      <summary>Genera il file code-behind con i metadati della migrazione.</summary>
      <returns>Codice generato.</returns>
      <param name="migrationId">Identificatore univoco della migrazione.</param>
      <param name="operations">Operazioni da eseguire mediante la migrazione.</param>
      <param name="sourceModel">Modello di origine da archiviare nei metadati della migrazione.</param>
      <param name="targetModel">Modello di destinazione da archiviare nei metadati della migrazione.</param>
      <param name="namespace">Spazio dei nomi in cui generare il codice.</param>
      <param name="className">Nome della classe da generare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.String,System.String,System.String,System.String,System.String)">
      <summary>Genera il file code-behind con i metadati della migrazione.</summary>
      <returns>Codice generato.</returns>
      <param name="migrationId">Identificatore univoco della migrazione.</param>
      <param name="sourceModel">Modello di origine da archiviare nei metadati della migrazione.</param>
      <param name="targetModel">Modello di destinazione da archiviare nei metadati della migrazione.</param>
      <param name="namespace">Spazio dei nomi in cui generare il codice.</param>
      <param name="className">Nome della classe da generare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.TimeSpan)">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.TimeSpan" />.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.GenerateAnnotation(System.String,System.Object,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per il valore di annotazione specificato che può essere null.Il comportamento predefinito consiste nell'utilizzare <see cref="T:System.Data.Entity.Infrastructure.Annotations.AnnotationCodeGenerator" /> se è registrato; in caso contrario, viene chiamato ToString sul valore di annotazione.</summary>
      <param name="name">Nome dell'annotazione per cui è necessario il codice.</param>
      <param name="annotation">Valore di annotazione da generare.</param>
      <param name="writer">Writer in cui deve essere scritto il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.GenerateAnnotations(System.Collections.Generic.IDictionary{System.String,System.Data.Entity.Infrastructure.Annotations.AnnotationValues},System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per ricreare il dizionario di annotazioni specificato da usare quando si passano le annotazioni come parametro di una chiamata <see cref="T:System.Data.Entity.Migrations.DbMigration" />.</summary>
      <param name="annotations">Annotazioni da generare.</param>
      <param name="writer">Writer in cui deve essere scritto il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.GenerateAnnotations(System.Collections.Generic.IDictionary{System.String,System.Object},System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per ricreare il dizionario di annotazioni specificato da usare quando si passano le annotazioni come parametro di una chiamata <see cref="T:System.Data.Entity.Migrations.DbMigration" />.</summary>
      <param name="annotations">Annotazioni da generare.</param>
      <param name="writer">Writer in cui deve essere scritto il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.GenerateInline(System.Data.Entity.Migrations.Model.AddForeignKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.AddForeignKeyOperation" /> come parte di un'operazione <see cref="T:System.Data.Entity.Migrations.Model.CreateTableOperation" />.</summary>
      <param name="addForeignKeyOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.GenerateInline(System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation" /> come parte di un'operazione <see cref="T:System.Data.Entity.Migrations.Model.CreateTableOperation" />.</summary>
      <param name="addPrimaryKeyOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.GenerateInline(System.Data.Entity.Migrations.Model.CreateIndexOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.CreateIndexOperation" /> come parte di un'operazione <see cref="T:System.Data.Entity.Migrations.Model.CreateTableOperation" />.</summary>
      <param name="createIndexOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Quote(System.String)">
      <summary>Racchiude tra virgolette un identificatore utilizzando l'escape appropriato per consentirne l'archiviazione in una stringa.</summary>
      <returns>Identificatore delimitato.</returns>
      <param name="identifier">Identificatore da delimitare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.ScrubName(System.String)">
      <summary>Rimuove eventuali caratteri non validi dal nome di un elemento del database.</summary>
      <returns>Nome selezionato.</returns>
      <param name="name">Nome da selezionare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.TranslateColumnType(System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind)">
      <summary>Ottiene il nome del tipo da utilizzare per una colonna del tipo di dati specificato.</summary>
      <returns>Nome del tipo da utilizzare nella migrazione generata.</returns>
      <param name="primitiveTypeKind">Tipo di dati da convertire.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.WriteClassAttributes(System.Data.Entity.Migrations.Utilities.IndentedTextWriter,System.Boolean)">
      <summary>Genera attributi di classe.</summary>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
      <param name="designer">Valore che indica se la classe viene generata per un file code-behind.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.WriteClassEnd(System.String,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice di chiusura per una classe avviata con WriteClassStart.</summary>
      <param name="namespace">Spazio dei nomi in cui generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.WriteClassStart(System.String,System.String,System.Data.Entity.Migrations.Utilities.IndentedTextWriter,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Genera uno spazio dei nomi utilizzando istruzioni e definizione di classe.</summary>
      <param name="namespace">Spazio dei nomi in cui generare il codice.</param>
      <param name="className">Nome della classe da generare.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
      <param name="base">Classe base per la classe generata.</param>
      <param name="designer">Valore che indica se la classe viene generata per un file code-behind.</param>
      <param name="namespaces">Spazi dei nomi per i quali verranno aggiunte direttive Import.Se null, verranno utilizzati gli spazi dei nomi restituiti da GetDefaultNamespaces.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.WriteProperty(System.String,System.String,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera una proprietà per restituire il modello di origine o di destinazione nel file code-behind.</summary>
      <param name="name">Nome della proprietà.</param>
      <param name="value">Valore da restituire.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="T:System.Data.Entity.Migrations.History.HistoryContext">
      <summary>Questa classe viene utilizzata da Migrazioni Code First per leggere e scrivere la cronologia delle migrazioni dal database.Per personalizzare la definizione della tabella relativa alla cronologia delle migrazioni, è possibile derivare da questa classe ed eseguire l'override di OnModelCreating.Le istanze derivate possono essere registrate in base alla configurazione delle migrazioni tramite <see cref="M:System.Data.Entity.Migrations.DbMigrationsConfiguration.SetHistoryContextFactory(System.String,System.Func{System.Data.Common.DbConnection,System.String,System.Data.Entity.Migrations.History.HistoryContext})" /> o a livello globale tramite <see cref="M:System.Data.Entity.DbConfiguration.SetDefaultHistoryContext(System.Func{System.Data.Common.DbConnection,System.String,System.Data.Entity.Migrations.History.HistoryContext})" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.History.HistoryContext.#ctor(System.Data.Common.DbConnection,System.String)">
      <summary>Inizializza una nuova istanza della classe HistoryContext.Per creare un contesto di cronologia derivato, in genere viene esposto un costruttore che accetta questi stessi parametri e li passa al costruttore base.</summary>
      <param name="existingConnection">Connessione esistente da utilizzare per il nuovo contesto.</param>
      <param name="defaultSchema">Schema predefinito del modello di cui viene eseguita la migrazione.Questo schema verrà utilizzato per la tabella relativa alla cronologia delle migrazioni a meno che in OnModelCreating non sia stato configurato uno schema diverso.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.History.HistoryContext.CacheKey">
      <summary>Ottiene la chiave utilizzata per trovare un modello compilato in precedenza per questo contesto.Utilizzato per evitare l'elaborazione di OnModelCreating e il calcolo del modello ogni volta che viene creata una nuova istanza di contesto.Per impostazione predefinita, questa proprietà restituisce lo schema predefinito.Nella maggior parte dei casi, non è necessario eseguire l'override di questa proprietà.Se, tuttavia, l'implementazione di OnModelCreating contiene logica condizionale che restituisce un modello diverso compilato per lo schema predefinito e lo stesso provider di database, è necessario eseguire l'override di questa proprietà e calcolare una chiave appropriata.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.History.HistoryContext.DefaultSchema">
      <summary>Ottiene lo schema predefinito del modello di cui viene eseguita la migrazione.Questo schema verrà utilizzato per la tabella relativa alla cronologia delle migrazioni a meno che in OnModelCreating non sia stato configurato uno schema diverso.</summary>
    </member>
    <member name="F:System.Data.Entity.Migrations.History.HistoryContext.DefaultTableName">
      <summary>Nome predefinito utilizzato per la tabella relativa alla cronologia delle migrazioni.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.History.HistoryContext.History">
      <summary>Ottiene o imposta un oggetto <see cref="T:System.Data.Entity.DbSet`1" /> da utilizzare per leggere e scrivere istanze di <see cref="T:System.Data.Entity.Migrations.History.HistoryRow" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.History.HistoryContext.OnModelCreating(System.Data.Entity.DbModelBuilder)">
      <summary>Applica la configurazione predefinita per la tabella relativa alla cronologia delle migrazioni.Se si esegue l'override di questo metodo, è consigliabile chiamare questa implementazione di base prima di applicare la configurazione personalizzata.</summary>
      <param name="modelBuilder">Generatore che definisce il modello per il contesto creato.</param>
    </member>
    <member name="T:System.Data.Entity.Migrations.History.HistoryRow">
      <summary>Questa classe viene utilizzata da Migrazioni Code First per leggere e scrivere la cronologia delle migrazioni dal database.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.History.HistoryRow.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.History.HistoryRow" />.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.History.HistoryRow.ContextKey">
      <summary>Ottiene o imposta una chiave che rappresenta a quale contesto si applica la riga.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.History.HistoryRow.MigrationId">
      <summary>Ottiene o imposta l'ID della migrazione che questa riga rappresenta.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.History.HistoryRow.Model">
      <summary>Ottiene o imposta lo stato del modello dopo l'applicazione della migrazione.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.History.HistoryRow.ProductVersion">
      <summary>Ottiene o imposta la versione di Entity Framework in cui è stata creata questa voce.</summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Infrastructure.AutomaticDataLossException">
      <summary>Rappresenta un errore che si verifica quando una migrazione automatica determina una perdita di dati.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.AutomaticDataLossException.#ctor">
      <summary>Inizializza una nuova istanza della classe AutomaticDataLossException.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.AutomaticDataLossException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe AutomaticDataLossException.</summary>
      <param name="message">Messaggio in cui viene descritto l'errore.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.AutomaticDataLossException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe MigrationsException.</summary>
      <param name="message">Messaggio in cui viene descritto l'errore.</param>
      <param name="innerException">Eccezione che costituisce la causa dell'eccezione corrente o un riferimento Null (Nothing in Visual Basic) se non è specificata alcuna eccezione interna.</param>
    </member>
    <member name="T:System.Data.Entity.Migrations.Infrastructure.AutomaticMigrationsDisabledException">
      <summary>Rappresenta un errore che si verifica quando sono presenti modifiche del modello in sospeso dopo l'applicazione dell'ultima migrazione e la disabilitazione della migrazione automatica.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.AutomaticMigrationsDisabledException.#ctor">
      <summary>Inizializza una nuova istanza della classe AutomaticMigrationsDisabledException.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.AutomaticMigrationsDisabledException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe AutomaticMigrationsDisabledException.</summary>
      <param name="message">Messaggio in cui viene descritto l'errore.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.AutomaticMigrationsDisabledException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe MigrationsException.</summary>
      <param name="message">Messaggio in cui viene descritto l'errore.</param>
      <param name="innerException">Eccezione che costituisce la causa dell'eccezione corrente o un riferimento Null (Nothing in Visual Basic) se non è specificata alcuna eccezione interna.</param>
    </member>
    <member name="T:System.Data.Entity.Migrations.Infrastructure.IDbMigration">
      <summary>Implementato in modo esplicito da <see cref="T:System.Data.Entity.Migrations.DbMigration" /> per impedire la visualizzazione di determinati membri nella finestra IntelliSense delle migrazioni con scaffolding.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.IDbMigration.AddOperation(System.Data.Entity.Migrations.Model.MigrationOperation)">
      <summary>Aggiunge un oggetto <see cref="T:System.Data.Entity.Migrations.Model.MigrationOperation" /> personalizzato alla migrazione.Per l'implementazione di operazioni personalizzate è consigliabile creare metodi di estensione su <see cref="T:System.Data.Entity.Migrations.Infrastructure.IDbMigration" /> per fornire un'API pratica per l'aggiunta delle nuove operazioni.</summary>
      <param name="migrationOperation">Operazione da aggiungere.</param>
    </member>
    <member name="T:System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata">
      <summary>Fornisce metadati aggiuntivi su una migrazione basata sul codice.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Id">
      <summary>Ottiene l'identificatore univoco per la migrazione.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Source">
      <summary>Ottiene lo stato del modello prima dell'esecuzione della migrazione.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Target">
      <summary>Ottiene lo stato del modello dopo l'esecuzione della migrazione.</summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Infrastructure.MigrationsException">
      <summary>Rappresenta gli errori che si verificano all'interno della pipeline Migrazioni Code First.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.MigrationsException.#ctor">
      <summary>Inizializza una nuova istanza della classe MigrationsException.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.MigrationsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe MigrationsException con dati serializzati.</summary>
      <param name="info">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che contiene i dati dell'oggetto serializzati, relativi all'eccezione generata.</param>
      <param name="context">Oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> che contiene le informazioni contestuali relative all'origine o alla destinazione.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.MigrationsException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe MigrationsException.</summary>
      <param name="message">Messaggio in cui viene descritto l'errore.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.MigrationsException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe MigrationsException.</summary>
      <param name="message">Messaggio in cui viene descritto l'errore.</param>
      <param name="innerException">Eccezione che costituisce la causa dell'eccezione corrente o un riferimento Null (Nothing in Visual Basic) se non è specificata alcuna eccezione interna.</param>
    </member>
    <member name="T:System.Data.Entity.Migrations.Infrastructure.MigrationsLogger">
      <summary>Classe base per logger che possono essere utilizzati per il processo di migrazione.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.MigrationsLogger.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Infrastructure.MigrationsLogger" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.MigrationsLogger.Info(System.String)">
      <summary>Registra un messaggio informativo.</summary>
      <param name="message">Messaggio da registrare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.MigrationsLogger.Verbose(System.String)">
      <summary>Registra informazioni aggiuntive che devono essere visualizzate all'utente solo nel caso in cui richieda un output dettagliato.</summary>
      <param name="message">Messaggio da registrare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.MigrationsLogger.Warning(System.String)">
      <summary>Registra un avviso da comunicare all'utente.</summary>
      <param name="message">Messaggio da registrare.</param>
    </member>
    <member name="T:System.Data.Entity.Migrations.Infrastructure.MigrationsPendingException">
      <summary>Eccezione generata quando non è possibile eseguire un'operazione perché vi sono migrazioni che non sono state applicate al database.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.MigrationsPendingException.#ctor">
      <summary>Inizializza una nuova istanza della classe MigrationsPendingException.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.MigrationsPendingException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe MigrationsPendingException.</summary>
      <param name="message">Messaggio in cui viene descritto l'errore.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.MigrationsPendingException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe MigrationsPendingException.</summary>
      <param name="message">Messaggio in cui viene descritto l'errore.</param>
      <param name="innerException">Eccezione che costituisce la causa dell'eccezione corrente o un riferimento Null (Nothing in Visual Basic) se non è specificata alcuna eccezione interna.</param>
    </member>
    <member name="T:System.Data.Entity.Migrations.Infrastructure.MigratorBase">
      <summary>Rappresenta una classe di base per elementi Decorator che eseguono il wrapping dell'oggetto <see cref="T:System.Data.Entity.Migrations.DbMigrator" /> principale.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.MigratorBase.#ctor(System.Data.Entity.Migrations.Infrastructure.MigratorBase)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Infrastructure.MigratorBase" />.</summary>
      <param name="innerMigrator">Utilità di migrazione di cui l'elemento Decorator sta eseguendo il wrapping.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Infrastructure.MigratorBase.Configuration">
      <summary>Ottiene la configurazione utilizzata per il processo di migrazione.</summary>
      <returns>Processo usato per il processo di migrazione.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.MigratorBase.GetDatabaseMigrations">
      <summary>Ottiene un elenco delle migrazioni applicate al database.</summary>
      <returns>Elenco di ID delle migrazioni.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.MigratorBase.GetLocalMigrations">
      <summary>Ottiene un elenco delle migrazioni definite nell'assembly.</summary>
      <returns>Elenco di ID delle migrazioni.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.MigratorBase.GetPendingMigrations">
      <summary>Ottiene un elenco delle migrazioni in sospeso non applicate al database.</summary>
      <returns>Elenco di ID delle migrazioni.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.MigratorBase.Update">
      <summary>Aggiorna il database di destinazione alla migrazione più recente.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.MigratorBase.Update(System.String)">
      <summary>Aggiorna il database di destinazione a una determinata migrazione.</summary>
      <param name="targetMigration">Migrazione a cui effettuare l'aggiornamento/il downgrade.</param>
    </member>
    <member name="T:System.Data.Entity.Migrations.Infrastructure.MigratorLoggingDecorator">
      <summary>Elemento Decorator che consente la registrazione durante le operazioni di migrazione.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.MigratorLoggingDecorator.#ctor(System.Data.Entity.Migrations.Infrastructure.MigratorBase,System.Data.Entity.Migrations.Infrastructure.MigrationsLogger)">
      <summary>Inizializza una nuova istanza della classe MigratorLoggingDecorator.</summary>
      <param name="innerMigrator">Utilità di migrazione di cui l'elemento Decorator sta eseguendo il wrapping.</param>
      <param name="logger">Logger in cui scrivere messaggi.</param>
    </member>
    <member name="T:System.Data.Entity.Migrations.Infrastructure.MigratorScriptingDecorator">
      <summary>Elemento Decorator per generare uno script SQL anziché applicare modifiche al database.Se si utilizza questo elemento Decorator per eseguire il wrapping di <see cref="T:System.Data.Entity.Migrations.DbMigrator" />, <see cref="T:System.Data.Entity.Migrations.DbMigrator" /> non applicherà eventuali modifiche al database di destinazione.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.MigratorScriptingDecorator.#ctor(System.Data.Entity.Migrations.Infrastructure.MigratorBase)">
      <summary>Inizializza una nuova istanza della classe MigratorScriptingDecorator.</summary>
      <param name="innerMigrator">Utilità di migrazione di cui l'elemento Decorator sta eseguendo il wrapping.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.MigratorScriptingDecorator.ScriptUpdate(System.String,System.String)">
      <summary>Genera uno script per aggiornare il database.</summary>
      <returns>Script SQL generato.</returns>
      <param name="sourceMigration">Migrazione da cui eseguire l'aggiornamento.Se si specifica null, verrà generato uno script per aggiornare il database corrente.</param>
      <param name="targetMigration">Migrazione a cui eseguire l'aggiornamento.Se si specifica null, verrà generato uno script da aggiornare alla migrazione più recente.</param>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.AddColumnOperation">
      <summary>Rappresenta una colonna aggiunta a una tabella.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.AddColumnOperation.#ctor(System.String,System.Data.Entity.Migrations.Model.ColumnModel,System.Object)">
      <summary>Inizializza una nuova istanza della classe AddColumnOperation.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="table">Nome della tabella a cui aggiungere la colonna.</param>
      <param name="column">Dettagli della colonna aggiunta.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.AddColumnOperation.Column">
      <summary>Ottiene i dettagli della colonna aggiunta.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.AddColumnOperation.Inverse">
      <summary>Ottiene un'operazione che rappresenta l'eliminazione della colonna aggiunta.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.AddColumnOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se la modifica è distruttiva.</summary>
      <returns>true se la modifica è distruttiva; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.AddColumnOperation.Table">
      <summary>Ottiene il nome della tabella a cui aggiungere la colonna.</summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.AddForeignKeyOperation">
      <summary>Rappresenta un vincolo di chiave esterna aggiunto a una tabella.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.AddForeignKeyOperation.#ctor(System.Object)">
      <summary>Inizializza una nuova istanza della classe AddForeignKeyOperation.È necessario inoltre popolare le proprietà PrincipalTable, PrincipalColumns, DependentTable e DependentColumns.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.AddForeignKeyOperation.CascadeDelete">
      <summary>Ottiene o imposta un valore che indica se è necessario configurare l'eliminazione a catena nel vincolo di chiave esterna.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.AddForeignKeyOperation.CreateCreateIndexOperation">
      <summary>Ottiene un'operazione che consente di creare un indice nelle colonne di chiavi esterne.</summary>
      <returns>Operazione che consente di aggiungere l'indice.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.AddForeignKeyOperation.Inverse">
      <summary>Ottiene un'operazione che consente di eliminare il vincolo di chiave esterna.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.AddForeignKeyOperation.IsDestructiveChange">
      <summary>Ottiene o imposta un valore che indica se questa modifica comporta la perdita di dati.</summary>
      <returns>true se questa modifica comporta la perdita di dati; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.AddForeignKeyOperation.PrincipalColumns">
      <summary>Nomi delle colonne a cui il vincolo di chiave esterna deve fare riferimento.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation">
      <summary>Rappresenta l'aggiunta di una chiave primaria a una tabella.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation.#ctor(System.Object)">
      <summary>Inizializza una nuova istanza della classe AddPrimaryKeyOperation.È necessario inoltre popolare le proprietà Tabella e Colonne.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation.Inverse">
      <summary>Ottiene un'operazione che consente di eliminare la chiave primaria.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation.IsClustered">
      <summary>Ottiene o imposta un valore che indica se si tratta di una chiave primaria cluster.</summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.AlterColumnOperation">
      <summary>Rappresenta la modifica di una colonna esistente.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.AlterColumnOperation.#ctor(System.String,System.Data.Entity.Migrations.Model.ColumnModel,System.Boolean,System.Data.Entity.Migrations.Model.AlterColumnOperation,System.Object)">
      <summary>Inizializza una nuova istanza della classe AlterColumnOperation.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="table">Nome della tabella a cui appartiene la colonna.</param>
      <param name="column">Dettagli del risultato della modifica della colonna.</param>
      <param name="isDestructiveChange">Valore che indica se la modifica determina una perdita di dati.</param>
      <param name="inverse">Operazione che consente di ripristinare la modifica della colonna.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.AlterColumnOperation.#ctor(System.String,System.Data.Entity.Migrations.Model.ColumnModel,System.Boolean,System.Object)">
      <summary>Inizializza una nuova istanza della classe AlterColumnOperation.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="table">Nome della tabella a cui appartiene la colonna.</param>
      <param name="column">Dettagli del risultato della modifica della colonna.</param>
      <param name="isDestructiveChange">Valore che indica se la modifica determina una perdita di dati.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.AlterColumnOperation.Column">
      <summary>Ottiene la nuova definizione della colonna.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.AlterColumnOperation.Inverse">
      <summary>Ottiene un'operazione che rappresenta il ripristino della modifica.L'operazione inversa non può essere automaticamente calcolata. Se non è stata fornita al costruttore, questa proprietà restituirà il valore Null.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.AlterColumnOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se questa modifica determina una perdita di dati.</summary>
      <returns>true se questa modifica comporta la perdita di dati; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.AlterColumnOperation.Table">
      <summary>Ottiene il nome della tabella a cui appartiene la colonna.</summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.AlterProcedureOperation">
      <summary>Rappresenta la modifica di una stored procedure esistente.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.AlterProcedureOperation.#ctor(System.String,System.String,System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Model.AlterProcedureOperation" />.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="name">Nome della stored procedure.</param>
      <param name="bodySql">Corpo della stored procedure espresso in SQL.</param>
      <param name="anonymousArguments">Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.AlterProcedureOperation.Inverse">
      <summary>Ottiene un'operazione che ripristina quella corrente.Restituisce sempre <see cref="T:System.Data.Entity.Migrations.Model.NotSupportedOperation" />.</summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.AlterTableOperation">
      <summary>Rappresenta le modifiche apportate alle annotazioni personalizzate in una tabella.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.AlterTableOperation.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Data.Entity.Infrastructure.Annotations.AnnotationValues},System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Model.AlterTableOperation" />.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="name">Nome della tabella in cui sono state modificate le annotazioni.</param>
      <param name="annotations">Annotazioni personalizzate modificate nella tabella.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.AlterTableOperation.Annotations">
      <summary>Ottiene le annotazioni personalizzate che sono state modificate nella tabella.</summary>
      <returns>Annotazioni personalizzate che sono state modificate nella tabella.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.AlterTableOperation.Columns">
      <summary>Ottiene le colonne da includere nella tabella per cui sono state modificate le annotazioni.</summary>
      <returns>Colonne da includere nella tabella per cui sono state modificate le annotazioni.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.AlterTableOperation.Inverse">
      <summary>Ottiene un'operazione che è l'inverso di questa in modo che le annotazioni verranno modificate nuovamente a come erano prima che l'operazione fosse applicata.</summary>
      <returns>Operazione che è l'inverso di questa in modo che le annotazioni verranno modificate nuovamente a come erano prima che l'operazione fosse applicata.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.AlterTableOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se questa operazione può determinare una perdita di dati.</summary>
      <returns>true se questa operazione può determinare una perdita di dati; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.AlterTableOperation.Name">
      <summary>Ottiene il nome della tabella in cui sono state modificate le annotazioni.</summary>
      <returns>Nome della tabella in cui sono state modificate le annotazioni.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.ColumnModel">
      <summary>Rappresenta le informazioni su una colonna.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.ColumnModel.#ctor(System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind)">
      <summary>Inizializza una nuova istanza della classe ColumnModel.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="type">Tipo di dati di questa colonna.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.ColumnModel.#ctor(System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind,System.Data.Entity.Core.Metadata.Edm.TypeUsage)">
      <summary>Inizializza una nuova istanza della classe ColumnModel.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="type">Tipo di dati di questa colonna.</param>
      <param name="typeUsage">Dettagli aggiuntivi sul tipo di dati,inclusi i dettagli, ad esempio lunghezza massima, valori null e così via.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.Annotations">
      <summary>Ottiene o imposta le annotazioni personalizzate modificate nella colonna.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.ClrDefaultValue">
      <summary>Ottiene il valore predefinito per il tipo CLR corrispondente al tipo di database di questa colonna.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.ClrType">
      <summary>Ottiene il tipo CLR corrispondente al tipo di database di questa colonna.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.IsIdentity">
      <summary>Ottiene o imposta un valore che indica se nel database verranno generati valori per questa colonna utilizzando il modello di identità.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.ColumnModel.IsNarrowerThan(System.Data.Entity.Migrations.Model.ColumnModel,System.Data.Entity.Core.Common.DbProviderManifest)">
      <summary>Determina se questa colonna rappresenta un tipo di dati più ristretto rispetto a un'altra colonna.Utilizzato per determinare se la modifica della definizione di colonna fornita per questa definizione comporta una perdita di dati.</summary>
      <returns>True se questa colonna rappresenta un tipo di dati più ristretto.</returns>
      <param name="column">Colonna da confrontare.</param>
      <param name="providerManifest">Dettagli del provider del database utilizzato.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.IsNullable">
      <summary>Ottiene o imposta un valore che indica se la colonna può archiviare valori null.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.IsTimestamp">
      <summary>Ottiene o imposta un valore che indica se il modello della proprietà deve essere configurata come timestamp.</summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.CreateIndexOperation">
      <summary>Rappresenta la creazione di un indice del database.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.CreateIndexOperation.#ctor(System.Object)">
      <summary>Inizializza una nuova istanza della classe CreateIndexOperation.È necessario inoltre popolare le proprietà Tabella e Colonne.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.CreateIndexOperation.Inverse">
      <summary>Ottiene un'operazione che consente di eliminare l'indice.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.CreateIndexOperation.IsClustered">
      <summary>Ottiene o imposta un valore che indica se si tratta di un indice cluster.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.CreateIndexOperation.IsDestructiveChange">
      <summary>Ottiene o imposta un valore che indica se questa modifica comporta la perdita di dati.</summary>
      <returns>true se questa modifica comporta la perdita di dati; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.CreateIndexOperation.IsUnique">
      <summary>Ottiene o imposta un valore che indica se si tratta di un indice univoco.</summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.CreateProcedureOperation">
      <summary>Operazione di migrazione per aggiungere una nuova stored procedure nel database.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.CreateProcedureOperation.#ctor(System.String,System.String,System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Model.CreateProcedureOperation" />.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="name">Nome della stored procedure.</param>
      <param name="bodySql">Corpo della stored procedure espresso in SQL.</param>
      <param name="anonymousArguments">Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.CreateProcedureOperation.Inverse">
      <summary>Ottiene un'operazione che consente di eliminare la stored procedure.</summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.CreateTableOperation">
      <summary>Rappresenta la creazione di una tabella.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.CreateTableOperation.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Model.CreateTableOperation" />.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="name">Nome della tabella da creare.</param>
      <param name="annotations">Annotazioni personalizzate presenti nella tabella da creare.Può essere null o vuoto.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.CreateTableOperation.#ctor(System.String,System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Model.CreateTableOperation" />.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="name">Nome della tabella da creare.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.CreateTableOperation.Annotations">
      <summary>Ottiene le annotazioni personalizzate presenti nella tabella da creare.</summary>
      <returns>Annotazioni personalizzate presenti nella tabella da creare.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.CreateTableOperation.Columns">
      <summary>Ottiene le colonne da includere nella nuova tabella.</summary>
      <returns>Colonne da includere nella nuova tabella.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.CreateTableOperation.Inverse">
      <summary>Ottiene un'operazione che consente di eliminare la tabella.</summary>
      <returns>Operazione per eliminare la tabella.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.CreateTableOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se l'operazione può determinare una perdita di dati.</summary>
      <returns>true se questa operazione può determinare una perdita di dati; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.CreateTableOperation.Name">
      <summary>Ottiene il nome della tabella da creare.</summary>
      <returns>Nome della tabella da creare.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.CreateTableOperation.PrimaryKey">
      <summary>Ottiene o imposta la chiave primaria per la nuova tabella.</summary>
      <returns>Chiave primaria per la nuova tabella.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.DropColumnOperation">
      <summary>Rappresenta una colonna eliminata da una tabella.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.DropColumnOperation.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Data.Entity.Migrations.Model.AddColumnOperation,System.Object)">
      <summary>Inizializza una nuova istanza della classe DropColumnOperation.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="table">Nome della tabella da cui eliminare la colonna.</param>
      <param name="name">Nome della colonna da eliminare.</param>
      <param name="removedAnnotations">Annotazioni personalizzate presenti nella colonna che viene eliminata.Può essere null o vuoto.</param>
      <param name="inverse">Operazione che rappresenta il ripristino dell'operazione di eliminazione.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.DropColumnOperation.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)">
      <summary>Inizializza una nuova istanza della classe DropColumnOperation.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="table">Nome della tabella da cui eliminare la colonna.</param>
      <param name="name">Nome della colonna da eliminare.</param>
      <param name="removedAnnotations">Annotazioni personalizzate presenti nella colonna che viene eliminata.Può essere null o vuoto.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.DropColumnOperation.#ctor(System.String,System.String,System.Data.Entity.Migrations.Model.AddColumnOperation,System.Object)">
      <summary>Inizializza una nuova istanza della classe DropColumnOperation.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="table">Nome della tabella da cui eliminare la colonna.</param>
      <param name="name">Nome della colonna da eliminare.</param>
      <param name="inverse">Operazione che rappresenta il ripristino dell'operazione di eliminazione.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.DropColumnOperation.#ctor(System.String,System.String,System.Object)">
      <summary>Inizializza una nuova istanza della classe DropColumnOperation.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="table">Nome della tabella da cui eliminare la colonna.</param>
      <param name="name">Nome della colonna da eliminare.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.DropColumnOperation.Inverse">
      <summary>Ottiene un'operazione che rappresenta il ripristino dell'eliminazione della colonna.L'operazione inversa non può essere automaticamente calcolata. Se non è stata fornita al costruttore, questa proprietà restituirà il valore Null.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.DropColumnOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se questa operazione può determinare una perdita di dati.</summary>
      <returns>true se questa operazione può determinare una perdita di dati; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.DropColumnOperation.Name">
      <summary>Ottiene il nome della colonna da eliminare.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.DropColumnOperation.RemovedAnnotations">
      <summary>Ottiene le annotazioni personalizzate presenti nella colonna che viene eliminata.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.DropColumnOperation.Table">
      <summary>Ottiene il nome della tabella da cui eliminare la colonna.</summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.DropForeignKeyOperation">
      <summary>Rappresenta un vincolo di chiave esterna eliminato da una tabella.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.DropForeignKeyOperation.#ctor(System.Data.Entity.Migrations.Model.AddForeignKeyOperation,System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Model.DropForeignKeyOperation" />.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="inverse">Operazione che rappresenta il ripristino dell'eliminazione del vincolo di chiave esterna.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.DropForeignKeyOperation.#ctor(System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Model.DropForeignKeyOperation" />.È necessario inoltre popolare le proprietà PrincipalTable, DependentTable e DependentColumns.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.DropForeignKeyOperation.CreateDropIndexOperation">
      <summary>Ottiene un'operazione che consente di eliminare l'indice associato nelle colonne di chiavi esterne.</summary>
      <returns>Operazione che consente di eliminare l'indice.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.DropForeignKeyOperation.Inverse">
      <summary>Ottiene un'operazione che rappresenta il ripristino dell'eliminazione del vincolo di chiave esterna.L'operazione inversa non può essere automaticamente calcolata. Se non è stata fornita al costruttore, questa proprietà restituirà il valore Null.</summary>
      <returns>Operazione che rappresenta il ripristino dell'eliminazione del vincolo di chiave esterna.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.DropForeignKeyOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se una modifica è distruttiva.</summary>
      <returns>true se una modifica è distruttiva; in caso contrario, false.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.DropIndexOperation">
      <summary>Rappresenta l'eliminazione di un indice esistente.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.DropIndexOperation.#ctor(System.Data.Entity.Migrations.Model.CreateIndexOperation,System.Object)">
      <summary>Inizializza una nuova istanza della classe DropIndexOperation.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="inverse">Operazione che rappresenta il ripristino dell'eliminazione dell'indice.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.DropIndexOperation.#ctor(System.Object)">
      <summary>Inizializza una nuova istanza della classe DropIndexOperation.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.DropIndexOperation.Inverse">
      <summary>Ottiene un'operazione che rappresenta il ripristino dell'eliminazione dell'indice.L'operazione inversa non può essere automaticamente calcolata. Se non è stata fornita al costruttore, questa proprietà restituirà il valore Null.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.DropIndexOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se questa operazione può determinare una perdita di dati.</summary>
      <returns>true se questa operazione può determinare una perdita di dati; in caso contrario, false.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation">
      <summary>Rappresenta l'eliminazione di una chiave primaria da una tabella.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation.#ctor(System.Object)">
      <summary>Inizializza una nuova istanza della classe DropPrimaryKeyOperation.È necessario inoltre popolare le proprietà Tabella e Colonne.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation.CreateTableOperation">
      <summary>Utilizzato per la modifica della tabella relativa alla cronologia delle migrazioni in modo tale che la tabella possa essere ricompilata anziché limitarsi a eliminare e aggiungere la chiave primaria.</summary>
      <returns>Operazione di creazione della tabella per la tabella relativa alla cronologia delle migrazioni.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation.Inverse">
      <summary>Ottiene un'operazione che consente di aggiungere la chiave primaria.</summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.DropProcedureOperation">
      <summary>Elimina una stored procedure dal database.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.DropProcedureOperation.#ctor(System.String,System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Model.DropProcedureOperation" />.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="name">Nome della stored procedure da eliminare.</param>
      <param name="anonymousArguments">Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.DropProcedureOperation.Inverse">
      <summary>Ottiene un'operazione che ripristina quella corrente.Restituisce sempre <see cref="T:System.Data.Entity.Migrations.Model.NotSupportedOperation" />.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.DropProcedureOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se l'operazione può determinare una perdita di dati.Restituisce sempre false.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.DropProcedureOperation.Name">
      <summary>Ottiene il nome della stored procedure da eliminare.</summary>
      <returns>Nome della stored procedure da eliminare.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.DropTableOperation">
      <summary>Rappresenta l'eliminazione di una tabella esistente.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.DropTableOperation.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IDictionary{System.String,System.Object}},System.Data.Entity.Migrations.Model.CreateTableOperation,System.Object)">
      <summary>Inizializza una nuova istanza della classe DropTableOperation.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="name">Nome della tabella da eliminare.</param>
      <param name="removedAnnotations">Annotazioni personalizzate presenti nella tabella che viene eliminata.Può essere null o vuoto.</param>
      <param name="removedColumnAnnotations">Annotazioni personalizzate presenti nelle colonne della tabella che viene eliminata.Può essere null o vuoto.</param>
      <param name="inverse">Operazione che rappresenta il ripristino dell'eliminazione della tabella.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.DropTableOperation.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IDictionary{System.String,System.Object}},System.Object)">
      <summary>Inizializza una nuova istanza della classe DropTableOperation.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="name">Nome della tabella da eliminare.</param>
      <param name="removedAnnotations">Annotazioni personalizzate presenti nella tabella che viene eliminata.Può essere null o vuoto.</param>
      <param name="removedColumnAnnotations">Annotazioni personalizzate presenti nelle colonne della tabella che viene eliminata.Può essere null o vuoto.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.DropTableOperation.#ctor(System.String,System.Data.Entity.Migrations.Model.CreateTableOperation,System.Object)">
      <summary>Inizializza una nuova istanza della classe DropTableOperation.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="name">Nome della tabella da eliminare.</param>
      <param name="inverse">Operazione che rappresenta il ripristino dell'eliminazione della tabella.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.DropTableOperation.#ctor(System.String,System.Object)">
      <summary>Inizializza una nuova istanza della classe DropTableOperation.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="name">Nome della tabella da eliminare.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.DropTableOperation.Inverse">
      <summary>Ottiene un'operazione che rappresenta il ripristino dell'eliminazione della tabella.L'operazione inversa non può essere automaticamente calcolata. Se non è stata fornita al costruttore, questa proprietà restituirà il valore Null.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.DropTableOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se l'operazione può determinare una perdita di dati.</summary>
      <returns>true se l'operazione può determinare una perdita di dati; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.DropTableOperation.Name">
      <summary>Ottiene il nome della tabella da eliminare.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.DropTableOperation.RemovedAnnotations">
      <summary>Ottiene le annotazioni personalizzate presenti nella tabella che viene eliminata.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.DropTableOperation.RemovedColumnAnnotations">
      <summary>Ottiene le annotazioni personalizzate presenti nelle colonne della tabella che viene eliminata.</summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.ForeignKeyOperation">
      <summary>Classe base per modifiche che influiscono sui vincoli di chiave esterna.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.ForeignKeyOperation.#ctor(System.Object)">
      <summary>Inizializza una nuova istanza della classe ForeignKeyOperation.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ForeignKeyOperation.DependentColumns">
      <summary>Nomi delle colonne di chiavi esterne.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ForeignKeyOperation.DependentTable">
      <summary>Ottiene o imposta il nome della tabella in cui sono presenti le colonne di chiavi esterne.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ForeignKeyOperation.HasDefaultName">
      <summary>Ottiene un valore che indica se è stato fornito un nome specifico per il vincolo di chiave esterna.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ForeignKeyOperation.Name">
      <summary>Ottiene o imposta il nome del vincolo di chiave esterna.Se non viene specificato alcun nome, verrà calcolato un nome predefinito.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ForeignKeyOperation.PrincipalTable">
      <summary>Ottiene o imposta il nome della tabella a cui il vincolo di chiave esterna fa riferimento.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.HistoryOperation">
      <summary>Operazione che rappresenta le modifiche DML alla tabella relativa alla cronologia delle migrazioni.La tabella relativa alla cronologia delle migrazioni viene utilizzata per archiviare un log delle migrazioni applicate al database.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.HistoryOperation.#ctor(System.Collections.Generic.IList{System.Data.Entity.Core.Common.CommandTrees.DbModificationCommandTree},System.Object)">
      <summary>Inizializza una nuova istanza della classe HistoryOperation.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="commandTrees">Sequenza di alberi dei comandi che rappresenta le operazioni applicate alla tabella relativa alla cronologia.</param>
      <param name="anonymousArguments">Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.HistoryOperation.CommandTrees">
      <summary>Sequenza di comandi che rappresenta le operazioni applicate alla tabella relativa alla cronologia.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.HistoryOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se questa operazione può determinare una perdita di dati.</summary>
      <returns>true se questa operazione può determinare una perdita di dati; in caso contrario, false.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.IndexOperation">
      <summary>Classe base comune per operazioni che interessano gli indici.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.IndexOperation.#ctor(System.Object)">
      <summary>Inizializza una nuova istanza della classe IndexOperation.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.IndexOperation.BuildDefaultName(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Crea un nome di indice predefinito basato sui nomi di colonna specificati.</summary>
      <returns>Nome di indice predefinito.</returns>
      <param name="columns">Nomi di colonna utilizzati per creare un nome di indice predefinito.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.IndexOperation.Columns">
      <summary>Ottiene le colonne indicizzate.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.IndexOperation.HasDefaultName">
      <summary>Ottiene un valore che indica se è stato fornito un nome specifico per questo indice.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.IndexOperation.Name">
      <summary>Ottiene o imposta il nome dell'indice.Se non viene specificato alcun nome, verrà calcolato un nome predefinito.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.IndexOperation.Table">
      <summary>Ottiene o imposta la tabella alla quale appartiene l'indice.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.MigrationOperation">
      <summary>Rappresenta un'operazione che consente di modificare uno schema del database.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.MigrationOperation.#ctor(System.Object)">
      <summary>Inizializza una nuova istanza della classe MigrationOperation.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="anonymousArguments">Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.MigrationOperation.AnonymousArguments">
      <summary>Ottiene argomenti aggiuntivi che possono essere elaborati dai provider.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.MigrationOperation.Inverse">
      <summary>Ottiene un'operazione che ripristina quella corrente.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.MigrationOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se l'operazione può determinare una perdita di dati.</summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.MoveProcedureOperation">
      <summary>Rappresenta lo spostamento di una stored procedure in un nuovo schema del database.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.MoveProcedureOperation.#ctor(System.String,System.String,System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Model.MoveProcedureOperation" />.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="name">Nome della stored procedure da spostare.</param>
      <param name="newSchema">Nuovo schema per la stored procedure.</param>
      <param name="anonymousArguments">Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.MoveProcedureOperation.Inverse">
      <summary>Ottiene un'operazione che ripristina quella corrente.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.MoveProcedureOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se l'operazione può determinare una perdita di dati.Restituisce sempre false.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.MoveProcedureOperation.Name">
      <summary>Ottiene il nome della stored procedure da spostare.</summary>
      <returns>Nome della stored procedure da spostare.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.MoveProcedureOperation.NewSchema">
      <summary>Ottiene il nuovo schema per la stored procedure.</summary>
      <returns>Nuovo schema per la stored procedure.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.MoveTableOperation">
      <summary>Rappresenta lo spostamento di una tabella da uno schema a un altro.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.MoveTableOperation.#ctor(System.String,System.String,System.Object)">
      <summary>Inizializza una nuova istanza della classe MoveTableOperation.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="name">Nome della tabella da spostare.</param>
      <param name="newSchema">Nome dello schema in cui spostare la tabella.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.MoveTableOperation.ContextKey">
      <summary>Utilizzato per la modifica della tabella relativa alla cronologia delle migrazioni in modo tale da poter spostare i dati nella nuova tabella.</summary>
      <returns>Chiave del contesto per il modello.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.MoveTableOperation.CreateTableOperation">
      <summary>Utilizzato per la modifica della tabella relativa alla cronologia delle migrazioni in modo tale che la tabella possa essere ricompilata anziché limitarsi a eliminare e aggiungere la chiave primaria.</summary>
      <returns>Operazione di creazione della tabella per la tabella relativa alla cronologia delle migrazioni.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.MoveTableOperation.Inverse">
      <summary>Ottiene un'operazione che riporta la tabella nello schema originale.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.MoveTableOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se questa modifica comporta la perdita di dati.</summary>
      <returns>true se questa modifica comporta la perdita di dati; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.MoveTableOperation.IsSystem">
      <summary>Ottiene un valore che indica se si tratta di una tabella di sistema.</summary>
      <returns>true se la tabella è una tabella di sistema; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.MoveTableOperation.Name">
      <summary>Ottiene il nome della tabella da spostare.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.MoveTableOperation.NewSchema">
      <summary>Ottiene il nome dello schema in cui spostare la tabella.</summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.NotSupportedOperation">
      <summary>Rappresenta un'operazione di migrazione che non può essere eseguita, probabilmente perché non è supportata dal provider di database di destinazione.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.NotSupportedOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se l'operazione può determinare una perdita di dati.Restituisce sempre false.</summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.ParameterModel">
      <summary>Rappresenta le informazioni su un parametro.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.ParameterModel.#ctor(System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind)">
      <summary>Inizializza una nuova istanza della classe ParameterModel con il tipo specificato.</summary>
      <param name="type">Tipo di dati di questo parametro.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.ParameterModel.#ctor(System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind,System.Data.Entity.Core.Metadata.Edm.TypeUsage)">
      <summary>Inizializza una nuova istanza della classe ParameterModel usando il tipo specificato e l'uso del tipo specificato.</summary>
      <param name="type">Tipo di dati di questo parametro.</param>
      <param name="typeUsage">Dettagli aggiuntivi sul tipo di dati,inclusi i dettagli, ad esempio lunghezza massima, valori null e così via.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ParameterModel.IsOutParameter">
      <summary>Recupera o imposta un valore che indica se questa istanza è fuori parametro.</summary>
      <returns>true se questa istanza è fuori parametro. In caso contrario, false.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.PrimaryKeyOperation">
      <summary>Classe base comune che consente di rappresentare operazioni che interessano le chiavi primarie.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.PrimaryKeyOperation.#ctor(System.Object)">
      <summary>Inizializza una nuova istanza della classe PrimaryKeyOperation.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.PrimaryKeyOperation.BuildDefaultName(System.String)">
      <summary>Restituisce il nome predefinito della chiave primaria.</summary>
      <returns>Nome della chiave primaria predefinita.</returns>
      <param name="table">Nome della tabella di destinazione.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.PrimaryKeyOperation.Columns">
      <summary>Ottiene le colonne che costituiscono la chiave primaria.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.PrimaryKeyOperation.HasDefaultName">
      <summary>Ottiene un valore che indica se è stato fornito un nome specifico per la chiave primaria.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.PrimaryKeyOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se questa operazione può determinare una perdita di dati.</summary>
      <returns>true se questa operazione può determinare una perdita di dati; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.PrimaryKeyOperation.Name">
      <summary>Ottiene o imposta il nome della chiave primaria.Se non viene specificato alcun nome, verrà calcolato un nome predefinito.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.PrimaryKeyOperation.Table">
      <summary>Ottiene o imposta il nome della tabella contenente la chiave primaria.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.ProcedureOperation">
      <summary>Operazione di migrazione che influisce sulle stored procedure.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.ProcedureOperation.#ctor(System.String,System.String,System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Model.ProcedureOperation" />.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="name">Nome della stored procedure.</param>
      <param name="bodySql">Corpo della stored procedure espresso in SQL.</param>
      <param name="anonymousArguments">Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ProcedureOperation.BodySql">
      <summary>Ottiene il corpo della stored procedure espresso in SQL.</summary>
      <returns>Corpo della stored procedure espresso in SQL.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ProcedureOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se l'operazione può determinare una perdita di dati.Restituisce sempre false.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ProcedureOperation.Name">
      <summary>Ottiene il nome della stored procedure.</summary>
      <returns>Nome della stored procedure.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ProcedureOperation.Parameters">
      <summary>Ottiene i parametri della stored procedure.</summary>
      <returns>Parametri della stored procedure.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.PropertyModel">
      <summary>Rappresenta le informazioni su una proprietà di un'entità.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.PropertyModel.#ctor(System.Data.Entity.Core.Metadata.Edm.PrimitiveTypeKind,System.Data.Entity.Core.Metadata.Edm.TypeUsage)">
      <summary>Inizializza una nuova istanza della classe PropertyModel.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="type">Tipo di dati per questo modello di proprietà.</param>
      <param name="typeUsage">Dettagli aggiuntivi sul tipo di dati,inclusi i dettagli, ad esempio lunghezza massima, valori null e così via.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.PropertyModel.DefaultValue">
      <summary>Ottiene o imposta un valore costante da utilizzare come valore predefinito per questo modello di proprietà.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.PropertyModel.DefaultValueSql">
      <summary>Ottiene o imposta un'espressione SQL utilizzata come valore predefinito per questo modello di proprietà.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.PropertyModel.IsFixedLength">
      <summary>Ottiene o imposta un valore che indica se il modello di proprietà presenta una lunghezza fissa.Valido solo per tipi di dati della matrice.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.PropertyModel.IsUnicode">
      <summary>Ottiene o imposta un valore che indica se il modello di proprietà supporta caratteri Unicode.Valido solo per tipi di dati testuali.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.PropertyModel.MaxLength">
      <summary>Ottiene o imposta la lunghezza massima di questo modello di proprietà.Valido solo per tipi di dati della matrice.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.PropertyModel.Name">
      <summary>Ottiene o imposta il nome del modello di proprietà.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.PropertyModel.Precision">
      <summary>Ottiene o imposta la precisione per questo modello di proprietà.Valido solo per tipi di dati decimali.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.PropertyModel.Scale">
      <summary>Ottiene o imposta la scala per questo modello di proprietà.Valido solo per tipi di dati decimali.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.PropertyModel.StoreType">
      <summary>Ottiene o imposta un tipo di dati specifici del provider da utilizzare per questo modello di proprietà.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.PropertyModel.Type">
      <summary>Ottiene il tipo di dati per questo modello di proprietà.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.PropertyModel.TypeUsage">
      <summary>Ottiene dettagli aggiuntivi sul tipo di dati di questo modello di proprietà,inclusi i dettagli, ad esempio lunghezza massima, valori null e così via.</summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.RenameColumnOperation">
      <summary>Rappresenta la ridenominazione di una colonna esistente.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.RenameColumnOperation.#ctor(System.String,System.String,System.String,System.Object)">
      <summary>Inizializza una nuova istanza della classe RenameColumnOperation.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="table">Nome della tabella a cui appartiene la colonna.</param>
      <param name="name">Nome della colonna da rinominare.</param>
      <param name="newName">Nuovo nome della colonna.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.RenameColumnOperation.Inverse">
      <summary>Ottiene un'operazione che ripristina la ridenominazione.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.RenameColumnOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se questa operazione può determinare una perdita di dati.</summary>
      <returns>true se questa operazione può determinare una perdita di dati; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.RenameColumnOperation.Name">
      <summary>Ottiene il nome della colonna da rinominare.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.RenameColumnOperation.NewName">
      <summary>Ottiene il nuovo nome della colonna.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.RenameColumnOperation.Table">
      <summary>Ottiene il nome della tabella a cui appartiene la colonna.</summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.RenameIndexOperation">
      <summary>Rappresenta l'operazione di ridenominazione di un indice esistente.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.RenameIndexOperation.#ctor(System.String,System.String,System.String,System.Object)">
      <summary>Inizializza una nuova istanza della classe RenameIndexOperation.</summary>
      <param name="table">Nome della tabella a cui appartiene l'indice.</param>
      <param name="name">Nome dell'indice da rinominare.</param>
      <param name="newName">Nuovo nome dell'indice.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.RenameIndexOperation.Inverse">
      <summary>Ottiene un'operazione che inverte il nome precedente dell'indice.</summary>
      <returns>Operazione che inverte il nome precedente dell'indice.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.RenameIndexOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se la ridenominazione dell'indice può essere distruttiva per l'operazione.</summary>
      <returns>true se la ridenominazione dell'indice può essere distruttiva per l'operazione. In caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.RenameIndexOperation.Name">
      <summary>Ottiene il nome dell'indice da rinominare.</summary>
      <returns>Nome dell'indice da rinominare.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.RenameIndexOperation.NewName">
      <summary>Ottiene il nuovo nome dell'indice.</summary>
      <returns>Nuovo nome dell'indice.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.RenameIndexOperation.Table">
      <summary>Ottiene il nome della tabella a cui appartiene l'indice.</summary>
      <returns>Nome della tabella a cui appartiene l'indice.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.RenameProcedureOperation">
      <summary>Rappresenta la ridenominazione di una stored procedure nel database.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.RenameProcedureOperation.#ctor(System.String,System.String,System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Model.RenameProcedureOperation" />.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="name">Nome della stored procedure da rinominare.</param>
      <param name="newName">Nuovo nome per la stored procedure.</param>
      <param name="anonymousArguments">Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.RenameProcedureOperation.Inverse">
      <summary>Ottiene un'operazione che ripristina quella corrente.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.RenameProcedureOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se l'operazione può determinare una perdita di dati.Restituisce sempre false.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.RenameProcedureOperation.Name">
      <summary>Ottiene il nome della stored procedure da rinominare.</summary>
      <returns>Nome della stored procedure da rinominare.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.RenameProcedureOperation.NewName">
      <summary>Ottiene il nuovo nome per la stored procedure.</summary>
      <returns>Nuovo nome per la stored procedure.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.RenameTableOperation">
      <summary>Rappresenta la ridenominazione di una tabella esistente.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.RenameTableOperation.#ctor(System.String,System.String,System.Object)">
      <summary>Inizializza una nuova istanza della classe RenameTableOperation.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="name">Nome della tabella da rinominare.</param>
      <param name="newName">Nuovo nome della tabella.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.RenameTableOperation.Inverse">
      <summary>Ottiene un'operazione che ripristina la ridenominazione.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.RenameTableOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se la modifica è distruttiva.</summary>
      <returns>true se la modifica è distruttiva; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.RenameTableOperation.Name">
      <summary>Ottiene il nome della tabella da rinominare.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.RenameTableOperation.NewName">
      <summary>Ottiene il nuovo nome della tabella.</summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.SqlOperation">
      <summary>Rappresenta un'istruzione SQL specifica del provider da eseguire direttamente in relazione al database di destinazione.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.SqlOperation.#ctor(System.String,System.Object)">
      <summary>Inizializza una nuova istanza della classe SqlOperation.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="sql">Comando SQL da eseguire.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider.Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.SqlOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se questa operazione può determinare una perdita di dati.</summary>
      <returns>true se questa operazione può determinare una perdita di dati; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.SqlOperation.Sql">
      <summary>Ottiene il comando SQL da eseguire.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.SqlOperation.SuppressTransaction">
      <summary>Ottiene o imposta un valore che indica se l'istruzione deve essere eseguita all'esterno dell'ambito della transazione utilizzata per rendere transazionale il processo di migrazione.Se impostata su true, non verrà eseguito il rollback dell'operazione in caso di esito negativo del processo di migrazione.</summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.UpdateDatabaseOperation">
      <summary>Utilizzato durante lo scripting di un'operazione del database di aggiornamento per archiviare le operazioni che sarebbero state eseguite sul database.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.UpdateDatabaseOperation.#ctor(System.Collections.Generic.IList{System.Data.Entity.Core.Common.CommandTrees.DbQueryCommandTree})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Model.UpdateDatabaseOperation" />.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="historyQueryTrees">Query utilizzate per determinare se questa migrazione deve essere applicata al database.Utilizzate per generare uno script SQL idempotente che può essere eseguito su un database di qualsiasi versione.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.UpdateDatabaseOperation.AddMigration(System.String,System.Collections.Generic.IList{System.Data.Entity.Migrations.Model.MigrationOperation})">
      <summary>Aggiunge una migrazione a questa operazione del database di aggiornamento.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <param name="migrationId">ID della migrazione.</param>
      <param name="operations">Singole operazioni applicate dalla migrazione.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.UpdateDatabaseOperation.HistoryQueryTrees">
      <summary>Query utilizzate per determinare se questa migrazione deve essere applicata al database.Utilizzate per generare uno script SQL idempotente che può essere eseguito su un database di qualsiasi versione.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.UpdateDatabaseOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se un'operazione può determinare una perdita di dati.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.UpdateDatabaseOperation.Migrations">
      <summary>Ottiene le migrazioni applicate durante l'operazione del database di aggiornamento.</summary>
      <returns>Migrazioni applicate durante l'operazione del database di aggiornamento.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.UpdateDatabaseOperation.Migration">
      <summary>Rappresenta una migrazione da applicare al database.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.UpdateDatabaseOperation.Migration.MigrationId">
      <summary>Ottiene l'ID della migrazione.</summary>
      <returns>ID della migrazione.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.UpdateDatabaseOperation.Migration.Operations">
      <summary>Ottiene le singole operazioni applicate da questa migrazione.</summary>
      <returns>Singole operazioni applicate da questa migrazione.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.Sql.MigrationSqlGenerator">
      <summary>Classe di base comune per i provider che convertono le operazioni di migrazione indipendenti dal provider in comandi SQL specifici del provider di database.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.MigrationSqlGenerator.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Sql.MigrationSqlGenerator" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.MigrationSqlGenerator.BuildStoreTypeUsage(System.String,System.Data.Entity.Migrations.Model.PropertyModel)">
      <summary>Compila l'utilizzo del tipo di archiviazione per l'oggetto <paramref name="storeTypeName" /> specificato tramite facet dall'oggetto <paramref name="propertyModel" />specificato.</summary>
      <returns>TypeUsage specifico di un archivio</returns>
      <param name="storeTypeName">Nome del tipo di archivio.</param>
      <param name="propertyModel">Proprietà di destinazione.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.MigrationSqlGenerator.Generate(System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String)">
      <summary>Converte un set di operazioni di migrazione in codice SQL specifico per il provider di database.</summary>
      <returns>Elenco di istruzioni SQL da utilizzare per eseguire le operazioni di migrazione.</returns>
      <param name="migrationOperations">Operazioni da convertire.</param>
      <param name="providerManifestToken">Token che rappresenta la versione del database di destinazione.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.MigrationSqlGenerator.GenerateProcedureBody(System.Collections.Generic.ICollection{System.Data.Entity.Core.Common.CommandTrees.DbModificationCommandTree},System.String,System.String)">
      <summary>Genera il corpo SQL per una stored procedure.</summary>
      <returns>Corpo SQL per la stored procedure.</returns>
      <param name="commandTrees">Alberi dei comandi che rappresentano i comandi per un'operazione di inserimento, aggiornamento o eliminazione.</param>
      <param name="rowsAffectedParameter">Nome del parametro delle righe interessate.</param>
      <param name="providerManifestToken">Token del manifesto del provider.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Sql.MigrationSqlGenerator.ProviderManifest">
      <summary>Ottiene o imposta il manifesto del provider.</summary>
      <returns>Manifesto del provider.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.Sql.MigrationStatement">
      <summary>Rappresenta un'operazione di migrazione convertita in un'istruzione SQL.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.MigrationStatement.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Sql.MigrationStatement" />.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Sql.MigrationStatement.BatchTerminator">
      <summary>Ottiene o imposta il terminatore di batch per il provider di database.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
      <returns>Terminatore di batch per il provider di database.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Sql.MigrationStatement.Sql">
      <summary>Ottiene o imposta il codice SQL da utilizzare per eseguire l'operazione di migrazione.Le API di Entity Framework Migrations non sono progettate per accettare un input fornito da origini non attendibili, ad esempio l'utente finale di un'applicazione.Se viene accettato un input da tali origini, è necessario convalidarlo prima di passarlo alle API in modo da fornire protezione dagli attacchi SQL injection e da altri tipi di attacchi.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Sql.MigrationStatement.SuppressTransaction">
      <summary>Ottiene o imposta un valore che indica se l'istruzione deve essere eseguita all'esterno dell'ambito della transazione utilizzata per rendere transazionale il processo di migrazione.Se impostata su true, non verrà eseguito il rollback dell'operazione in caso di esito negativo del processo di migrazione.</summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Utilities.IndentedTextWriter">
      <summary>Equivale a <see cref="T:System.CodeDom.Compiler.IndentedTextWriter" /> ma funziona in un contesto di attendibilità parziale e aggiunge la memorizzazione esplicita nella cache della stringa per il rientro generata, nonché riconosce la scrittura di una stringa contenente solo \r\n o \n come oggetto WriteLine, per garantire il corretto rientro per la riga successiva.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.#ctor(System.IO.TextWriter)">
      <summary>Inizializza una nuova istanza della classe IndentedTextWriter utilizzando il writer di testo specificato e la stringa di tabulazioni predefinita.Si noti che il writer passato a questo costruttore deve utilizzare l'oggetto <see cref="T:System.Globalization.CultureInfo" /> specificato dalla proprietà <see cref="F:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Culture" />.</summary>
      <param name="writer">Oggetto <see cref="T:System.IO.TextWriter" /> da utilizzare per l'output.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.#ctor(System.IO.TextWriter,System.String)">
      <summary>Inizializza una nuova istanza della classe IndentedTextWriter utilizzando il writer di testo specificato e la stringa di tabulazioni.Si noti che il writer passato a questo costruttore deve utilizzare l'oggetto <see cref="T:System.Globalization.CultureInfo" /> specificato dalla proprietà <see cref="F:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Culture" />.</summary>
      <param name="writer">Oggetto <see cref="T:System.IO.TextWriter" /> da utilizzare per l'output.</param>
      <param name="tabString">Stringa di tabulazioni da utilizzare per il rientro.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Close">
      <summary>Chiude il documento in cui viene effettuata la scrittura.</summary>
    </member>
    <member name="F:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Culture">
      <summary>Specifica le impostazioni cultura che verranno utilizzate dall'oggetto TextWriter sottostante.Questa proprietà statica è di sola lettura.Si noti che il writer passato a uno dei costruttori dell'oggetto <see cref="T:System.Data.Entity.Migrations.Utilities.IndentedTextWriter" /> deve utilizzare le stesse impostazioni cultura.Le impostazioni cultura sono <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.CurrentIndentation">
      <summary>Compila una stringa che rappresenta il livello di rientro corrente per una nuova riga.</summary>
      <returns>Stringa vuota o stringa contenente il valore del livello di rientro della stringa di tabulazione specificata.</returns>
    </member>
    <member name="F:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.DefaultTabString">
      <summary>Specifica la stringa di tabulazioni predefinita.Questo campo è costante.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Encoding">
      <summary>Ottiene la codifica che deve essere utilizzata dal writer di testo.</summary>
      <returns>Oggetto <see cref="T:System.Text.Encoding" /> che indica la codifica che deve essere utilizzata dal writer di testo.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Flush">
      <summary>Scarica il flusso.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Indent">
      <summary>Ottiene o imposta il numero di spazi da utilizzare per il rientro.</summary>
      <returns>Numero di spazi da utilizzare per il rientro.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.InnerWriter">
      <summary>Ottiene l'oggetto <see cref="T:System.IO.TextWriter" /> da utilizzare.</summary>
      <returns>Oggetto <see cref="T:System.IO.TextWriter" /> da utilizzare.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.NewLine">
      <summary>Ottiene o imposta il carattere di nuova riga da utilizzare.</summary>
      <returns>Carattere di nuova riga da utilizzare.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.OutputTabs">
      <summary>Restituisce la stringa di tabulazioni una volta per ciascun livello di rientro in base alla proprietà <see cref="P:System.CodeDom.Compiler.IndentedTextWriter.Indent" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.Boolean)">
      <summary>Scrive la rappresentazione testuale di un valore booleano nel flusso di testo.</summary>
      <param name="value">Valore booleano da scrivere.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.Char)">
      <summary>Scrive un carattere nel flusso di testo.</summary>
      <param name="value">Carattere da scrivere.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.Char[])">
      <summary>Scrive una matrice di caratteri nel flusso di testo.</summary>
      <param name="buffer">Matrice di caratteri da scrivere.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.Char[],System.Int32,System.Int32)">
      <summary>Scrive una sottomatrice di caratteri nel flusso di testo.</summary>
      <param name="buffer">Matrice di caratteri da cui scrivere i dati.</param>
      <param name="index">Indice iniziale nel buffer.</param>
      <param name="count">Numero di caratteri da scrivere.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.Double)">
      <summary>Scrive la rappresentazione testuale di un valore Double nel flusso di testo.</summary>
      <param name="value">Valore Double da scrivere.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.Int32)">
      <summary>Scrive la rappresentazione testuale di un Integer nel flusso di testo.</summary>
      <param name="value">Integer da scrivere.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.Int64)">
      <summary>Scrive la rappresentazione testuale di un Integer a 8 byte nel flusso di testo.</summary>
      <param name="value">Integer a 8 byte da scrivere.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.Object)">
      <summary>Scrive la rappresentazione testuale di un oggetto nel flusso di testo.</summary>
      <param name="value">Oggetto da scrivere.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.Single)">
      <summary>Scrive la rappresentazione testuale di un valore Single nel flusso di testo.</summary>
      <param name="value">Valore Single da scrivere.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.String)">
      <summary>Scrive la stringa specificata nel flusso di testo.</summary>
      <param name="value">Stringa da scrivere.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.String,System.Object)">
      <summary>Scrive una stringa formattata utilizzando la semantica specificata.</summary>
      <param name="format">Stringa di formattazione.</param>
      <param name="arg0">Oggetto da scrivere nella stringa formattata.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.String,System.Object,System.Object)">
      <summary>Scrive una stringa formattata utilizzando la semantica specificata.</summary>
      <param name="format">Stringa di formattazione da utilizzare.</param>
      <param name="arg0">Primo oggetto da scrivere nella stringa formattata.</param>
      <param name="arg1">Secondo oggetto da scrivere nella stringa formattata.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.String,System.Object[])">
      <summary>Scrive una stringa formattata utilizzando la semantica specificata.</summary>
      <param name="format">Stringa di formattazione da utilizzare.</param>
      <param name="arg">Matrice di argomenti per l'output.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine">
      <summary>Scrive un terminatore di riga.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.Boolean)">
      <summary>Scrive nel flusso di testo la rappresentazione testuale di un valore booleano seguita da un terminatore di riga.</summary>
      <param name="value">Valore booleano da scrivere.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.Char)">
      <summary>Scrive nel flusso di testo un carattere seguito da un terminatore di riga.</summary>
      <param name="value">Carattere da scrivere.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.Char[])">
      <summary>Scrive nel flusso di testo una matrice di caratteri seguita da un terminatore di riga.</summary>
      <param name="buffer">Matrice di caratteri da scrivere.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
      <summary>Scrive nel flusso di testo una sottomatrice di caratteri seguita da un terminatore di riga.</summary>
      <param name="buffer">Matrice di caratteri da cui scrivere i dati.</param>
      <param name="index">Indice iniziale nel buffer.</param>
      <param name="count">Numero di caratteri da scrivere.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.Double)">
      <summary>Scrive nel flusso di testo la rappresentazione testuale di un valore Double seguita da un terminatore di riga.</summary>
      <param name="value">Valore Double da scrivere.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.Int32)">
      <summary>Scrive nel flusso di testo la rappresentazione testuale di un Integer seguita da un terminatore di riga.</summary>
      <param name="value">Integer da scrivere.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.Int64)">
      <summary>Scrive nel flusso di testo la rappresentazione testuale di un Integer a 8 byte seguita da un terminatore di riga.</summary>
      <param name="value">Integer a 8 byte da scrivere.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.Object)">
      <summary>Scrive nel flusso di testo la rappresentazione testuale di un oggetto seguita da un terminatore di riga.</summary>
      <param name="value">Oggetto da scrivere.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.Single)">
      <summary>Scrive nel flusso di testo la rappresentazione testuale di un valore Single seguita da un terminatore di riga.</summary>
      <param name="value">Valore Single da scrivere.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.String)">
      <summary>Scrive nel flusso di testo la stringa specificata seguita da un terminatore di riga.</summary>
      <param name="value">Stringa da scrivere.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.String,System.Object)">
      <summary>Scrive una stringa formattata seguita da un terminatore di riga, utilizzando la semantica specificata.</summary>
      <param name="format">Stringa di formattazione.</param>
      <param name="arg0">Oggetto da scrivere nella stringa formattata.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.String,System.Object,System.Object)">
      <summary>Scrive una stringa formattata seguita da un terminatore di riga, utilizzando la semantica specificata.</summary>
      <param name="format">Stringa di formattazione da utilizzare.</param>
      <param name="arg0">Primo oggetto da scrivere nella stringa formattata.</param>
      <param name="arg1">Secondo oggetto da scrivere nella stringa formattata.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.String,System.Object[])">
      <summary>Scrive una stringa formattata seguita da un terminatore di riga, utilizzando la semantica specificata.</summary>
      <param name="format">Stringa di formattazione da utilizzare.</param>
      <param name="arg">Matrice di argomenti per l'output.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.UInt32)">
      <summary>Scrive nel flusso di testo la rappresentazione testuale di un valore UInt32 seguita da un terminatore di riga.</summary>
      <param name="value">Valore UInt32 per l'output.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLineNoTabs(System.String)">
      <summary>Scrive la stringa specificata in una riga priva di tabulazioni.</summary>
      <param name="value">Stringa da scrivere.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.ComplexTypeConfiguration`1">
      <summary>Consente di eseguire la configurazione di un tipo complesso in un modello.Un oggetto ComplexTypeConfiguration può essere ottenuto tramite il metodo ComplexType su <see cref="T:System.Data.Entity.DbModelBuilder" /> oppure un tipo personalizzato derivato da ComplexTypeConfiguration può essere registrato tramite la proprietà Configurations su <see cref="T:System.Data.Entity.DbModelBuilder" />.</summary>
      <typeparam name="TComplexType">Tipo complesso da configurare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.ComplexTypeConfiguration`1.#ctor">
      <summary>Inizializza una nuova istanza di ComplexTypeConfiguration</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.ComplexTypeConfiguration`1.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'oggetto specificato.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.ComplexTypeConfiguration`1.GetHashCode">
      <summary>Funge da funzione hash per un tipo specifico.</summary>
      <returns>Funzione hash per un tipo specifico.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.ComplexTypeConfiguration`1.GetType">
      <summary>Ottiene il tipo dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.ComplexTypeConfiguration`1.Ignore``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Esclude una proprietà dal modello in modo che non venga eseguito il relativo mapping al database.</summary>
      <returns>Stessa istanza di ComplexTypeConfiguration in modo che da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <typeparam name="TProperty">Tipo della proprietà da ignorare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.ComplexTypeConfiguration`1.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1">
      <summary>Consente di eseguire la configurazione di un tipo di entità in un modello.Un oggetto EntityTypeConfiguration può essere ottenuto tramite il metodo Entity su <see cref="T:System.Data.Entity.DbModelBuilder" /> oppure un tipo personalizzato derivato da EntityTypeConfiguration può essere registrato tramite la proprietà Configurations su <see cref="T:System.Data.Entity.DbModelBuilder" />.</summary>
      <typeparam name="TEntityType">Tipo di entità configurato.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1.#ctor">
      <summary>Inizializza una nuova istanza di EntityTypeConfiguration</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1.Equals(System.Object)">
      <summary>Restituisce un valore che indica se il modello di configurazione specificato è uguale al modello di configurazione corrente.</summary>
      <returns>true se il modello di configurazione specificato è uguale al modello di configurazione corrente; in caso contrario, false.</returns>
      <param name="obj">Modello da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1.GetHashCode">
      <summary>Restituisce la funzione hash per il modello di configurazione specificato.</summary>
      <returns>Funzione hash per il generatore di modelli specificato.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1.GetType">
      <summary>Ottiene il tipo per la configurazione di modello corrente.</summary>
      <returns>Tipo per la configurazione di modello corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1.HasEntitySetName(System.String)">
      <summary>Configura il nome del set di entità da utilizzare per questo tipo di entità.Il nome del set di entità può essere configurato solo per il tipo di base in ogni set.</summary>
      <returns>Stessa istanza di EntityTypeConfiguration in modo che da poter concatenare più chiamate.</returns>
      <param name="entitySetName">Nome del set di entità.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1.HasKey``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Configura le proprietà di chiave primaria per questo tipo di entità.</summary>
      <returns>Stessa istanza di EntityTypeConfiguration in modo che da poter concatenare più chiamate.</returns>
      <param name="keyExpression">Espressione lambda che rappresenta la proprietà da utilizzare come chiave primaria.C#: t =&amp;gt; t.Id VB.Net: Function(t) t.Id. Se la chiave primaria è costituita da più proprietà, specificare un tipo anonimo che include le proprietà.C#: t =&amp;gt; new { t.Id1, t.Id2 } VB.Net: Function(t) New With { t.Id1, t.Id2 }</param>
      <typeparam name="TKey">Tipo di chiave.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1.HasMany``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.ICollection{``0}}})">
      <summary>Configura una relazione molti da questo tipo di entità.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
      <param name="navigationPropertyExpression">Espressione lambda che rappresenta la proprietà di navigazione per la relazione.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <typeparam name="TTargetEntity">Tipo dell'entità nell'altra entità finale della relazione.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1.HasOptional``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Configura una relazione facoltativa da questo tipo di entità.Le istanze del tipo di entità potranno essere salvate nel database senza la specifica di questa relazione.La chiave esterna nel database sarà nullable.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
      <param name="navigationPropertyExpression">Espressione lambda che rappresenta la proprietà di navigazione per la relazione.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <typeparam name="TTargetEntity">Tipo dell'entità nell'altra entità finale della relazione.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1.HasRequired``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Configura una relazione obbligatoria da questo tipo di entità.Le istanze del tipo di entità non potranno essere salvate nel database a meno che non sia specificata questa relazione.La chiave esterna nel database sarà non nullable.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
      <param name="navigationPropertyExpression">Espressione lambda che rappresenta la proprietà di navigazione per la relazione.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <typeparam name="TTargetEntity">Tipo dell'entità nell'altra entità finale della relazione.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1.HasTableAnnotation(System.String,System.Object)">
      <summary>Imposta un'annotazione nel modello per la tabella alla quale questa entità esegue il mapping.Il valore di annotazione può essere successivamente utilizzato durante l'elaborazione della tabella, ad esempio durante la creazione delle migrazioni.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="name">Nome dell'annotazione che deve essere un identificatore C#/EDM valido.</param>
      <param name="value">Valore dell'annotazione che può essere una stringa o un altro tipo che è possibile serializzare con <see cref="T:System.Data.Entity.Infrastructure.IMetadataAnnotationSerializer" /></param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1.Ignore``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Esclude una proprietà dal modello in modo che non venga eseguito il relativo mapping al database.</summary>
      <returns>Stessa istanza di EntityTypeConfiguration in modo che da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <typeparam name="TProperty">Tipo della proprietà da ignorare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1.Map``1(System.Action{System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration{``0}})">
      <summary>Consente la configurazione avanzata correlata alla modalità di esecuzione del mapping di un tipo di entità derivato allo schema del database.Le chiamate a Map sono additive, pertanto le chiamate successive non eseguiranno l'override della configurazione già eseguita tramite Map.</summary>
      <returns>Stessa istanza di EntityTypeConfiguration in modo che da poter concatenare più chiamate.</returns>
      <param name="derivedTypeMapConfigurationAction">Azione che esegue la configurazione su un oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1" />.</param>
      <typeparam name="TDerived">Tipo di entità derivata da configurare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1.Map(System.Action{System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration{`0}})">
      <summary>Consente la configurazione avanzata correlata alla modalità di esecuzione del mapping di questo tipo di entità allo schema del database.Per impostazione predefinita, qualsiasi configurazione verrà applicata anche a qualsiasi tipo derivato da questo tipo di entità.I tipi derivati possono essere configurati attraverso l'overload di Map che configura un tipo derivato o tramite un oggetto EntityTypeConfiguration per il tipo derivato.Le proprietà di un'entità possono essere suddivise tra più tabelle utilizzando più chiamate a Map.Le chiamate a Map sono additive, pertanto le chiamate successive non eseguiranno l'override della configurazione già eseguita tramite Map.</summary>
      <returns>Stessa istanza di EntityTypeConfiguration in modo che da poter concatenare più chiamate.</returns>
      <param name="entityMappingConfigurationAction">Azione che esegue la configurazione su un oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1" />.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1.MapToStoredProcedures">
      <summary>Configura questo tipo per utilizzare stored procedure per inserire, aggiornare ed eliminare.Verranno utilizzate le convenzioni predefinite per i nomi della procedura e del parametro.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1.MapToStoredProcedures(System.Action{System.Data.Entity.ModelConfiguration.Configuration.ModificationStoredProceduresConfiguration{`0}})">
      <summary>Configura questo tipo per utilizzare stored procedure per inserire, aggiornare ed eliminare.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="modificationStoredProcedureMappingConfigurationAction">Configurazione per eseguire l'override delle convenzioni predefinite per i nomi della procedura e del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1.ToString">
      <summary>Restituisce una rappresentazione di stringa della configurazione di modello.</summary>
      <returns>Rappresentazione di stringa del generatore di modelli.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1.ToTable(System.String)">
      <summary>Configura il nome della tabella a cui viene eseguito il mapping di questo tipo di entità.</summary>
      <returns>Stessa istanza di EntityTypeConfiguration in modo che da poter concatenare più chiamate.</returns>
      <param name="tableName">Nome della tabella.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1.ToTable(System.String,System.String)">
      <summary>Configura il nome della tabella a cui viene eseguito il mapping di questo tipo di entità.</summary>
      <returns>Stessa istanza di EntityTypeConfiguration in modo che da poter concatenare più chiamate.</returns>
      <param name="tableName">Nome della tabella.</param>
      <param name="schemaName">Schema del database della tabella.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.ModelValidationException">
      <summary>Eccezione generata dall'oggetto <see cref="T:System.Data.Entity.DbModelBuilder" /> se viene generato un modello non valido durante il processo di creazione.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.ModelValidationException.#ctor">
      <summary>Inizializza una nuova istanza di ModelValidationException</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.ModelValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza del contesto di flusso e delle informazioni di serializzazione della classe <see cref="T:System.Data.Entity.ModelConfiguration.ModelValidationException" />.</summary>
      <param name="info">Informazioni di serializzazione.</param>
      <param name="context">Contesto di flusso.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.ModelValidationException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza di ModelValidationException</summary>
      <param name="message">Messaggio dell'eccezione.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.ModelValidationException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza di ModelValidationException</summary>
      <param name="message">Messaggio dell'eccezione.</param>
      <param name="innerException">Eccezione interna.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.AssociationMappingConfiguration">
      <summary>Classe base per eseguire la configurazione di una relazione.Questa funzionalità di configurazione è disponibile utilizzando l'API Fluent Code First (vedere <see cref="T:System.Data.Entity.DbModelBuilder" />).</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.AssociationMappingConfiguration.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.AssociationMappingConfiguration" />.</summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.AssociationModificationStoredProcedureConfiguration`1">
      <summary>Consente di eseguire la configurazione per una stored procedure utilizzata per modificare una relazione.</summary>
      <typeparam name="TEntityType">Tipo dell'entità da cui viene configurata la relazione.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.AssociationModificationStoredProcedureConfiguration`1.Parameter(System.Linq.Expressions.Expression{System.Func{`0,System.Byte[]}},System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il parametro.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="parameterName">Nome del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.AssociationModificationStoredProcedureConfiguration`1.Parameter``1(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{``0}}},System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il parametro.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="parameterName">Nome del parametro.</param>
      <typeparam name="TProperty">Tipo della proprietà.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.AssociationModificationStoredProcedureConfiguration`1.Parameter(System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il parametro.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="parameterName">Nome del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.AssociationModificationStoredProcedureConfiguration`1.Parameter``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il parametro.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="parameterName">Nome del parametro.</param>
      <typeparam name="TProperty">Tipo della proprietà.</typeparam>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration">
      <summary>Utilizzato per configurare una proprietà <see cref="T:System.byte[]" /> di un tipo di entità o di un tipo complesso.Questa funzionalità di configurazione è disponibile utilizzando l'API Fluent Code First (vedere <see cref="T:System.Data.Entity.DbModelBuilder" />).</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration.HasColumnAnnotation(System.String,System.Object)">
      <summary>Imposta un'annotazione nel modello per la colonna di database utilizzata per archiviare la proprietà.Il valore di annotazione può essere successivamente utilizzato durante l'elaborazione della colonna, ad esempio durante la creazione delle migrazioni.</summary>
      <returns>Stessa istanza di BinaryPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="name">Nome dell'annotazione che deve essere un identificatore C#/EDM valido.</param>
      <param name="value">Valore dell'annotazione che può essere una stringa o un altro tipo che è possibile serializzare con <see cref="T:System.Data.Entity.Infrastructure.IMetadataAnnotationSerializer" /></param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration.HasColumnName(System.String)">
      <summary>Configura il nome della colonna di database utilizzata per archiviare la proprietà.</summary>
      <returns>Stessa istanza di BinaryPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnName">Nome della colonna.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration.HasColumnOrder(System.Nullable{System.Int32})">
      <summary>Configura l'ordine della colonna di database utilizzata per archiviare la proprietà.Questo metodo viene utilizzato inoltre per specificare l'ordinamento di chiavi quando un tipo di entità dispone di una chiave composta.</summary>
      <returns>Stessa istanza di BinaryPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnOrder">Ordine di visualizzazione di questa colonna nella tabella di database.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration.HasColumnType(System.String)">
      <summary>Configura il tipo di dati della colonna di database utilizzata per archiviare la proprietà.</summary>
      <returns>Stessa istanza di BinaryPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnType">Nome del tipo di dati specifico del provider del database.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration.HasDatabaseGeneratedOption(System.Nullable{System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption})">
      <summary>Configura la modalità con cui i valori della proprietà vengono generati dal database.</summary>
      <returns>Stessa istanza di BinaryPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="databaseGeneratedOption">Pattern utilizzato per la generazione dei valori per la proprietà nel database.Se si imposta "null" verrà utilizzata l'opzione predefinita che può essere "None", "Identity" o "Computed" a seconda del tipo di proprietà, della relativa semantica nel modello (ad esempiole chiavi primarie vengono gestite in modo diverso) e del set di convenzioni utilizzate.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration.HasMaxLength(System.Nullable{System.Int32})">
      <summary>Configura la proprietà in modo che disponga della lunghezza massima specificata.</summary>
      <returns>Stessa istanza di BinaryPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="value">Lunghezza massima per la proprietà.L'impostazione "null" rimuoverà qualsiasi restrizione di lunghezza massima dalla proprietà.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration.IsConcurrencyToken">
      <summary>Configura la proprietà da utilizzare come token di concorrenza ottimistica.</summary>
      <returns>Stessa istanza di BinaryPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration.IsConcurrencyToken(System.Nullable{System.Boolean})">
      <summary>Configura un valore che indica se la proprietà deve essere utilizzata o meno come token di concorrenza ottimistica.</summary>
      <returns>Stessa istanza di BinaryPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="concurrencyToken">Valore che indica se la proprietà è o meno un token di concorrenza.L'impostazione "null" rimuoverà il facet del token di concorrenza dalla proprietà.Il comportamento in fase di esecuzione causato da tale impostazione è analogo a quello ottenuto specificando 'false'.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration.IsFixedLength">
      <summary>Configura la proprietà in modo che sia a lunghezza fissa.Utilizzare HasMaxLength per impostare la lunghezza a cui è fissa la proprietà.</summary>
      <returns>Stessa istanza di BinaryPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration.IsMaxLength">
      <summary>Configura la proprietà per consentire la lunghezza massima supportata dal provider del database.</summary>
      <returns>Stessa istanza di BinaryPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration.IsOptional">
      <summary>Configura la proprietà in modo che sia facoltativa.La colonna di database utilizzata per archiviare questa proprietà ammetterà i valori Null.Le proprietà <see cref="T:System.byte[]" /> sono facoltative per impostazione predefinita.</summary>
      <returns>Stessa istanza di BinaryPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration.IsRequired">
      <summary>Configura la proprietà in modo che sia obbligatoria.La colonna di database utilizzata per archiviare questa proprietà non ammetterà i valori Null.</summary>
      <returns>Stessa istanza di BinaryPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration.IsRowVersion">
      <summary>Configura la proprietà in modo che sia una versione di riga nel database.Il tipo effettivo di dati varierà a seconda del provider del database utilizzato.L'impostazione della proprietà in modo che sia una versione di riga la configurerà automaticamente affinché sia un token di concorrenza ottimistica.</summary>
      <returns>Stessa istanza di BinaryPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration.IsVariableLength">
      <summary>Configura la proprietà in modo che sia a lunghezza variabile.Le proprietà <see cref="T:System.byte[]" /> sono a lunghezza variabile per impostazione predefinita.</summary>
      <returns>Stessa istanza di BinaryPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.CascadableNavigationPropertyConfiguration">
      <summary>Configura una relazione che può supportare la funzionalità di eliminazione a catena.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.CascadableNavigationPropertyConfiguration.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.CascadableNavigationPropertyConfiguration.GetHashCode">
      <summary>Funge da funzione hash per un tipo specifico.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.CascadableNavigationPropertyConfiguration.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.CascadableNavigationPropertyConfiguration.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.CascadableNavigationPropertyConfiguration.WillCascadeOnDelete">
      <summary>Configura l'eliminazione a catena in modo che sia abilitata per la relazione.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.CascadableNavigationPropertyConfiguration.WillCascadeOnDelete(System.Boolean)">
      <summary>Configura un valore che indica se l'eliminazione a catena è o meno abilitata per la relazione.</summary>
      <param name="value">Valore che indica se l'eliminazione a catena è o meno abilitata.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar">
      <summary>Consente la registrazione di classi delle configurazioni derivate per entità e tipi complessi con un oggetto <see cref="T:System.Data.Entity.DbModelBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar.Add``1(System.Data.Entity.ModelConfiguration.ComplexTypeConfiguration{``0})">
      <summary>Aggiunge un oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.Types.ComplexTypeConfiguration" /> all'oggetto <see cref="T:System.Data.Entity.DbModelBuilder" />.Per ogni tipo in un modello può essere aggiunto un unico oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.Types.ComplexTypeConfiguration" />.</summary>
      <returns>Stessa istanza di ConfigurationRegistrar in modo da poter concatenare più chiamate.</returns>
      <param name="complexTypeConfiguration">Configurazione del tipo complesso da aggiungere.</param>
      <typeparam name="TComplexType">Tipo complesso configurato.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar.Add``1(System.Data.Entity.ModelConfiguration.EntityTypeConfiguration{``0})">
      <summary>Aggiunge un oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.Types.EntityTypeConfiguration" /> all'oggetto <see cref="T:System.Data.Entity.DbModelBuilder" />.Per ogni tipo in un modello può essere aggiunto un unico oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.Types.EntityTypeConfiguration" />.</summary>
      <returns>Stessa istanza di ConfigurationRegistrar in modo da poter concatenare più chiamate.</returns>
      <param name="entityTypeConfiguration">Configurazione del tipo di entità da aggiungere.</param>
      <typeparam name="TEntityType">Tipo di entità configurato.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar.AddFromAssembly(System.Reflection.Assembly)">
      <summary>Individua tutti i tipi che ereditano da <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.Types.EntityTypeConfiguration" /> o <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.Types.ComplexTypeConfiguration" /> nell'assembly specificato e aggiunge un'istanza di ogni tipo individuato a questa registrazione avanzata.</summary>
      <returns>Stessa istanza di ConfigurationRegistrar in modo da poter concatenare più chiamate.</returns>
      <param name="assembly">Assembly che contiene le configurazioni del modello da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se l'oggetto specificato è uguale all'oggetto corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar.GetHashCode">
      <summary>Funge da funzione hash per un tipo specifico.</summary>
      <returns>Codice hash per l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionDeleteModificationStoredProcedureConfiguration">
      <summary>Crea una convenzione tramite cui vengono configurate le stored procedure da utilizzare per eliminare le entità nel database.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionDeleteModificationStoredProcedureConfiguration.Equals(System.Object)">
      <summary>Specifica se questa istanza è uguale a un oggetto specifico.</summary>
      <returns>true se questa istanza è uguale a un oggetto specifico. In caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionDeleteModificationStoredProcedureConfiguration.GetHashCode">
      <summary>Ottiene il codice hash associato a questa istanza.</summary>
      <returns>Codice hash associato a questa istanza.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionDeleteModificationStoredProcedureConfiguration.GetType">
      <summary>Ottiene il tipo sottostante dell'istanza.</summary>
      <returns>Tipo sottostante dell'istanza.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionDeleteModificationStoredProcedureConfiguration.HasName(System.String)">
      <summary>Configura il nome della stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="procedureName">Nome della stored procedure.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionDeleteModificationStoredProcedureConfiguration.HasName(System.String,System.String)">
      <summary>Configura il nome della stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="procedureName">Nome della stored procedure.</param>
      <param name="schemaName">Nome dello schema.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionDeleteModificationStoredProcedureConfiguration.Parameter(System.Reflection.PropertyInfo,System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyInfo">Proprietà per cui configurare il parametro.</param>
      <param name="parameterName">Nome del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionDeleteModificationStoredProcedureConfiguration.Parameter(System.String,System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyName">Nome della proprietà per cui configurare il parametro.</param>
      <param name="parameterName">Nome del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionDeleteModificationStoredProcedureConfiguration.RowsAffectedParameter(System.String)">
      <summary>Configura il parametro di output tramite cui vengono restituite le righe interessate da questa procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="parameterName">Nome del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionDeleteModificationStoredProcedureConfiguration.ToString">
      <summary>Restituisce una rappresentazione di stringa di questa istanza.</summary>
      <returns>Rappresentazione di stringa di questa istanza.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionInsertModificationStoredProcedureConfiguration">
      <summary>Crea una convenzione tramite cui vengono configurate le stored procedure da utilizzare per inserire le entità nel database.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionInsertModificationStoredProcedureConfiguration.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'istanza corrente.</summary>
      <returns>true se l'oggetto specificato è uguale all'istanza corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionInsertModificationStoredProcedureConfiguration.GetHashCode">
      <summary>Ottiene il codice hash per l'istanza corrente.</summary>
      <returns>Codice hash per l'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionInsertModificationStoredProcedureConfiguration.GetType">
      <summary>Ottiene il tipo associato alla configurazione.</summary>
      <returns>Tipo associato alla configurazione.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionInsertModificationStoredProcedureConfiguration.HasName(System.String)">
      <summary>Configura il nome della stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="procedureName">Nome della stored procedure.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionInsertModificationStoredProcedureConfiguration.HasName(System.String,System.String)">
      <summary>Configura il nome della stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="procedureName">Nome della stored procedure.</param>
      <param name="schemaName">Nome dello schema.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionInsertModificationStoredProcedureConfiguration.Parameter(System.Reflection.PropertyInfo,System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyInfo">Proprietà per cui configurare il parametro.</param>
      <param name="parameterName">Nome del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionInsertModificationStoredProcedureConfiguration.Parameter(System.String,System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyName">Nome della proprietà per cui configurare il parametro.</param>
      <param name="parameterName">Nome del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionInsertModificationStoredProcedureConfiguration.Result(System.Reflection.PropertyInfo,System.String)">
      <summary>Configura una colonna del risultato affinché venga eseguito il mapping di questa stored procedure a una proprietà.Viene utilizzato per colonne generate da database.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyInfo">Proprietà per cui configurare il risultato.</param>
      <param name="columnName">Nome della colonna dei risultati.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionInsertModificationStoredProcedureConfiguration.Result(System.String,System.String)">
      <summary>Configura una colonna del risultato affinché venga eseguito il mapping di questa stored procedure a una proprietà.Viene utilizzato per colonne generate da database.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyName">Nome della proprietà per cui configurare il risultato.</param>
      <param name="columnName">Nome della colonna dei risultati.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionInsertModificationStoredProcedureConfiguration.ToString">
      <summary>Restituisce la rappresentazione di stringa di questa istanza.</summary>
      <returns>Rappresentazione di stringa di questa istanza.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionModificationStoredProcedureConfiguration">
      <summary>Rappresenta una convenzione tramite cui sono configurate le stored procedure da usare per modificare le entità nel database.</summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionModificationStoredProceduresConfiguration">
      <summary>Crea una convenzione tramite cui vengono configurate le stored procedure da utilizzare per modificare le entità nel database.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionModificationStoredProceduresConfiguration.Delete(System.Action{System.Data.Entity.ModelConfiguration.Configuration.ConventionDeleteModificationStoredProcedureConfiguration})">
      <summary>Configura la stored procedura utilizzata per eliminare le entità.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="modificationStoredProcedureConfigurationAction">Espressione lambda tramite cui viene eseguita la configurazione per la stored procedure.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionModificationStoredProceduresConfiguration.Equals(System.Object)">
      <summary>Specifica se la configurazione è uguale a un oggetto specifico.</summary>
      <returns>true se la configurazione è uguale a un oggetto specifico. In caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionModificationStoredProceduresConfiguration.GetHashCode">
      <summary>Ottiene il codice hash associato a questa configurazione.</summary>
      <returns>Codice hash associato a questa configurazione.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionModificationStoredProceduresConfiguration.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionModificationStoredProceduresConfiguration.Insert(System.Action{System.Data.Entity.ModelConfiguration.Configuration.ConventionInsertModificationStoredProcedureConfiguration})">
      <summary>Configura la stored procedura utilizzata per inserire le entità.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="modificationStoredProcedureConfigurationAction">Espressione lambda tramite cui viene eseguita la configurazione per la stored procedure.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionModificationStoredProceduresConfiguration.ToString">
      <summary>Restituisce una rappresentazione in forma di stringa della classe <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionModificationStoredProceduresConfiguration" />.</summary>
      <returns>Rappresentazione in forma di stringa della classe <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionModificationStoredProceduresConfiguration" />.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionModificationStoredProceduresConfiguration.Update(System.Action{System.Data.Entity.ModelConfiguration.Configuration.ConventionUpdateModificationStoredProcedureConfiguration})">
      <summary>Configura la stored procedura utilizzata per aggiornare le entità.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="modificationStoredProcedureConfigurationAction">Espressione lambda tramite cui viene eseguita la configurazione per la stored procedure.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration">
      <summary>Rappresenta una proprietà primitiva di un tipo di entità o di un tipo complesso.</summary>
    </member>
    <member name="P:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration.ClrPropertyInfo">
      <summary>Ottiene l'oggetto <see cref="T:System.Reflection.PropertyInfo" /> per questa proprietà.</summary>
      <returns>Oggetto <see cref="T:System.Reflection.PropertyInfo" /> per questa proprietà.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration.Equals(System.Object)">
      <summary>Specifica se questa istanza è uguale a un altro oggetto.</summary>
      <returns>true se questa istanza è uguale a un altro oggetto. In caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration.GetHashCode">
      <summary>Ottiene il codice hash dell'istanza.</summary>
      <returns>Codice hash dell'istanza.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration.HasColumnAnnotation(System.String,System.Object)">
      <summary>Imposta un'annotazione nel modello per la colonna di database utilizzata per archiviare la proprietà.Il valore di annotazione può essere successivamente utilizzato durante l'elaborazione della colonna, ad esempio durante la creazione delle migrazioni.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="name">Nome dell'annotazione che deve essere un identificatore C#/EDM valido.</param>
      <param name="value">Valore dell'annotazione che può essere una stringa o un altro tipo che è possibile serializzare con <see cref="T:System.Data.Entity.Infrastructure.IMetadataAnnotationSerializer" /></param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration.HasColumnName(System.String)">
      <summary>Configura il nome della colonna di database utilizzata per archiviare la proprietà.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnName">Nome della colonna.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration.HasColumnOrder(System.Int32)">
      <summary>Configura l'ordine della colonna di database utilizzata per archiviare la proprietà.Questo metodo viene utilizzato inoltre per specificare l'ordinamento di chiavi quando un tipo di entità dispone di una chiave composta.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnOrder">Ordine di visualizzazione di questa colonna nella tabella di database.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration.HasColumnType(System.String)">
      <summary>Configura il tipo di dati della colonna di database utilizzata per archiviare la proprietà.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnType">Nome del tipo di dati specifico del provider del database.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration.HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption)">
      <summary>Configura la modalità con cui i valori della proprietà vengono generati dal database.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="databaseGeneratedOption">Pattern utilizzato per la generazione dei valori per la proprietà nel database.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration.HasMaxLength(System.Int32)">
      <summary>Configura la proprietà in modo che disponga della lunghezza massima specificata.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="maxLength">Lunghezza massima per la proprietà.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration.HasParameterName(System.String)">
      <summary>Configura il nome del parametro utilizzato nelle stored procedure per questa proprietà.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="parameterName">Il nome del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration.HasPrecision(System.Byte)">
      <summary>Configura la precisione della proprietà <see cref="T:System.DateTime" />.Se il provider del database non supporta la precisione per il tipo di dati della colonna, il valore viene ignorato.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="value">Precisione della proprietà.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration.HasPrecision(System.Byte,System.Byte)">
      <summary>Configura la precisione e la scala della proprietà <see cref="T:System.Decimal" />.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="precision">Precisione della proprietà.</param>
      <param name="scale">Scala della proprietà.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration.IsConcurrencyToken">
      <summary>Configura la proprietà da utilizzare come token di concorrenza ottimistica.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration.IsConcurrencyToken(System.Boolean)">
      <summary>Configura un valore che indica se la proprietà deve essere utilizzata o meno come token di concorrenza ottimistica.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="concurrencyToken">Valore che indica se la proprietà è o meno un token di concorrenza.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration.IsFixedLength">
      <summary>Configura la proprietà in modo che sia a lunghezza fissa.Utilizzare HasMaxLength per impostare la lunghezza a cui è fissa la proprietà.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration.IsKey">
      <summary>Configura questa proprietà come parte della chiave primaria del tipo di entità.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration.IsMaxLength">
      <summary>Configura la proprietà per consentire la lunghezza massima supportata dal provider del database.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration.IsOptional">
      <summary>Configura la proprietà in modo che sia facoltativa.La colonna di database utilizzata per archiviare questa proprietà ammetterà i valori Null.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration.IsRequired">
      <summary>Configura la proprietà in modo che sia obbligatoria.La colonna di database utilizzata per archiviare questa proprietà non ammetterà i valori Null.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration.IsRowVersion">
      <summary>Configura la proprietà in modo che sia una versione di riga nel database.Il tipo effettivo di dati varierà a seconda del provider del database utilizzato.L'impostazione della proprietà in modo che sia una versione di riga la configurerà automaticamente affinché sia un token di concorrenza ottimistica.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration.IsUnicode">
      <summary>Configura la proprietà per supportare il contenuto della stringa Unicode.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration.IsUnicode(System.Boolean)">
      <summary>Configura un valore che indica se la proprietà supporta o meno il contenuto della stringa Unicode.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="unicode">Valore che indica se la proprietà supporta o meno il contenuto della stringa Unicode.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration.IsVariableLength">
      <summary>Configura la proprietà in modo che sia a lunghezza variabile.Le proprietà sono a lunghezza variabile per impostazione predefinita.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration.ToString">
      <summary>Restituisce una rappresentazione di stringa di questa istanza.</summary>
      <returns>Rappresentazione di stringa di questa istanza.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration">
      <summary>Consente la personalizzazione delle convenzioni utilizzate da un'istanza di <see cref="T:System.Data.Entity.DbModelBuilder" />.Le convenzioni predefinite sono disponibili nello spazio dei nomi System.Data.Entity.ModelConfiguration.Conventions.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration.Add``1">
      <summary>Abilita una convenzione per l'oggetto <see cref="T:System.Data.Entity.DbModelBuilder" />.</summary>
      <typeparam name="TConvention">Tipo della convenzione da abilitare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration.Add(System.Data.Entity.ModelConfiguration.Conventions.IConvention[])">
      <summary>Abilita una o più convenzioni per l'oggetto <see cref="T:System.Data.Entity.DbModelBuilder" />.</summary>
      <param name="conventions">Convenzioni da abilitare.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration.AddAfter``1(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
      <summary>Abilita una convenzione per l'oggetto <see cref="T:System.Data.Entity.DbModelBuilder" />.Questa convenzione verrà eseguita dopo quella specificata.</summary>
      <param name="newConvention">Convenzione da abilitare.</param>
      <typeparam name="TExistingConvention">Tipo della convenzione dopo la quale verrà eseguita quella abilitata.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration.AddBefore``1(System.Data.Entity.ModelConfiguration.Conventions.IConvention)">
      <summary>Abilita una convenzione di configurazione per l'oggetto <see cref="T:System.Data.Entity.DbModelBuilder" />.Questa convenzione verrà eseguita prima di quella specificata.</summary>
      <param name="newConvention">Convenzione da abilitare.</param>
      <typeparam name="TExistingConvention">Tipo della convenzione prima della quale verrà eseguita quella abilitata.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration.AddFromAssembly(System.Reflection.Assembly)">
      <summary>Individua tutte le convenzioni nell'assembly specificato e le aggiunge a <see cref="T:System.Data.Entity.DbModelBuilder" />.</summary>
      <param name="assembly">Assembly contenente le convenzioni da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration.GetHashCode">
      <summary>Funge da funzione hash per un tipo specifico.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration.Remove``1">
      <summary>Disabilita una convenzione per <see cref="T:System.Data.Entity.DbModelBuilder" />.Le convenzioni predefinite disponibili per la rimozione sono contenute nello spazio dei nomi System.Data.Entity.ModelConfiguration.Conventions.</summary>
      <typeparam name="TConvention">Tipo della convenzione da disabilitare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration.Remove(System.Data.Entity.ModelConfiguration.Conventions.IConvention[])">
      <summary>Disabilita una o più convenzioni per l'oggetto <see cref="T:System.Data.Entity.DbModelBuilder" />.</summary>
      <param name="conventions">Convenzioni da disabilitare.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration">
      <summary>Consente di eseguire la configurazione di un tipo di entità in un modello.Questa funzionalità di configurazione è disponibile tramite convenzioni leggere.</summary>
    </member>
    <member name="P:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.ClrType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> di questo tipo di entità.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> di questo tipo di entità.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'istanza corrente.</summary>
      <returns>true se l'oggetto specificato è uguale all'istanza corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza corrente.</summary>
      <returns>Codice hash per l'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.HasEntitySetName(System.String)">
      <summary>Configura il nome del set di entità da utilizzare per questo tipo di entità.Il nome del set di entità può essere configurato solo per il tipo di base in ogni set.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="entitySetName">Nome del set di entità.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.HasKey(System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo})">
      <summary>Configura le proprietà di chiave primaria per questo tipo di entità.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="keyProperties">Proprietà da utilizzare come chiave primaria.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.HasKey(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Configura le proprietà di chiave primaria per questo tipo di entità.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="propertyNames">Nomi delle proprietà da utilizzare come chiave primaria.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.HasKey(System.Reflection.PropertyInfo)">
      <summary>Configura la proprietà della chiave primaria per questo tipo di entità.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="propertyInfo">Proprietà da utilizzare come chiave primaria.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.HasKey(System.String)">
      <summary>Configura la proprietà della chiave primaria per questo tipo di entità.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="propertyName">Nome della proprietà da utilizzare come chiave primaria.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.HasTableAnnotation(System.String,System.Object)">
      <summary>Imposta un'annotazione nel modello per la tabella alla quale questa entità esegue il mapping.Il valore di annotazione può essere successivamente utilizzato durante l'elaborazione della tabella, ad esempio durante la creazione delle migrazioni.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="name">Nome dell'annotazione che deve essere un identificatore C#/EDM valido.</param>
      <param name="value">Valore dell'annotazione che può essere una stringa o un altro tipo che è possibile serializzare con <see cref="T:System.Data.Entity.Infrastructure.IMetadataAnnotationSerializer" /></param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.Ignore">
      <summary>Esclude il tipo di entità dal modello in modo che non venga eseguito il relativo mapping al database.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.Ignore(System.Reflection.PropertyInfo)">
      <summary>Esclude una proprietà dal modello in modo che non venga eseguito il relativo mapping al database.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="propertyInfo">Proprietà da configurare.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.Ignore(System.String)">
      <summary>Esclude una proprietà dal modello in modo che non venga eseguito il relativo mapping al database.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="propertyName">Nome della proprietà da configurare.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.IsComplexType">
      <summary>Modifica questo tipo di entità in tipo complesso.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.MapToStoredProcedures">
      <summary>Configura questo tipo per utilizzare stored procedure per inserire, aggiornare ed eliminare.Verranno utilizzate le convenzioni predefinite per i nomi della procedura e del parametro.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.MapToStoredProcedures(System.Action{System.Data.Entity.ModelConfiguration.Configuration.ConventionModificationStoredProceduresConfiguration})">
      <summary>Configura questo tipo per utilizzare stored procedure per inserire, aggiornare ed eliminare.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="modificationStoredProceduresConfigurationAction">Configurazione per eseguire l'override delle convenzioni predefinite per i nomi della procedura e del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.Property(System.Reflection.PropertyInfo)">
      <summary>Configura una proprietà definita su questo tipo.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyInfo">Proprietà in corso di configurazione.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.Property(System.String)">
      <summary>Configura una proprietà definita su questo tipo.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyName">Nome della proprietà in corso di configurazione.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.ToString">
      <summary>Restituisce la rappresentazione di stringa di questa istanza.</summary>
      <returns>Rappresentazione di stringa di questa istanza.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.ToTable(System.String)">
      <summary>Configura il nome della tabella a cui viene eseguito il mapping di questo tipo di entità.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="tableName">Nome della tabella.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.ToTable(System.String,System.String)">
      <summary>Configura il nome della tabella a cui viene eseguito il mapping di questo tipo di entità.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="tableName">Nome della tabella.</param>
      <param name="schemaName">Schema del database della tabella.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration`1">
      <summary>Consente di eseguire la configurazione di un tipo di entità in un modello.Questa funzionalità di configurazione è disponibile tramite convenzioni leggere.</summary>
      <typeparam name="T">Tipo ereditato dal tipo di entità.</typeparam>
    </member>
    <member name="P:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration`1.ClrType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> di questo tipo di entità.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> di questo tipo di entità.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration`1.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'istanza corrente.</summary>
      <returns>true se l'oggetto specificato è uguale all'istanza corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration`1.GetHashCode">
      <summary>Recupera il codice hash dell'istanza corrente.</summary>
      <returns>Codice hash dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration`1.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration`1.HasEntitySetName(System.String)">
      <summary>Configura il nome del set di entità da utilizzare per questo tipo di entità.Il nome del set di entità può essere configurato solo per il tipo di base in ogni set.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration`1" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="entitySetName">Nome del set di entità.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration`1.HasKey``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Configura le proprietà di chiave primaria per questo tipo di entità.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration`1" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="keyExpression">Espressione lambda che rappresenta la proprietà da utilizzare come chiave primaria.C#: t =&amp;gt; t.Id VB.Net: Function(t) t.Id. Se la chiave primaria è costituita da più proprietà, specificare un tipo anonimo che include le proprietà.C#: t =&amp;gt; new { t.Id1, t.Id2 } VB.Net: Function(t) New With { t.Id1, t.Id2 }</param>
      <typeparam name="TProperty">Tipo di chiave.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration`1.HasTableAnnotation(System.String,System.Object)">
      <summary>Imposta un'annotazione nel modello per la tabella alla quale questa entità esegue il mapping.Il valore di annotazione può essere successivamente utilizzato durante l'elaborazione della tabella, ad esempio durante la creazione delle migrazioni.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="name">Nome dell'annotazione che deve essere un identificatore C#/EDM valido.</param>
      <param name="value">Valore dell'annotazione che può essere una stringa o un altro tipo che è possibile serializzare con <see cref="T:System.Data.Entity.Infrastructure.IMetadataAnnotationSerializer" />.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration`1.Ignore">
      <summary>Esclude il tipo di entità dal modello in modo che non venga eseguito il relativo mapping al database.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration`1" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration`1.Ignore``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Esclude una proprietà dal modello in modo che non venga eseguito il relativo mapping al database.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration`1" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <typeparam name="TProperty">Tipo della proprietà da ignorare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration`1.IsComplexType">
      <summary>Modifica questo tipo di entità in tipo complesso.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration`1" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration`1.MapToStoredProcedures">
      <summary>Configura questo tipo per utilizzare stored procedure per inserire, aggiornare ed eliminare.Verranno utilizzate le convenzioni predefinite per i nomi della procedura e del parametro.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration`1.MapToStoredProcedures(System.Action{System.Data.Entity.ModelConfiguration.Configuration.ModificationStoredProceduresConfiguration{`0}})">
      <summary>Configura questo tipo per utilizzare stored procedure per inserire, aggiornare ed eliminare.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="modificationStoredProceduresConfigurationAction">Configurazione per eseguire l'override delle convenzioni predefinite per i nomi della procedura e del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Configura una proprietà definita su questo tipo.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <typeparam name="TProperty">Tipo della proprietà configurata.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration`1.ToString">
      <summary>Converte il valore dell'istanza corrente nella rappresentazione di stringa equivalente.</summary>
      <returns>Rappresentazione di stringa dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration`1.ToTable(System.String)">
      <summary>Configura il nome della tabella a cui viene eseguito il mapping di questo tipo di entità.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration`1" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="tableName">Nome della tabella.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration`1.ToTable(System.String,System.String)">
      <summary>Configura il nome della tabella a cui viene eseguito il mapping di questo tipo di entità.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration`1" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="tableName">Nome della tabella.</param>
      <param name="schemaName">Schema del database della tabella.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionUpdateModificationStoredProcedureConfiguration">
      <summary>Crea una convenzione tramite cui vengono configurate le stored procedure da utilizzare per aggiornare le entità nel database.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionUpdateModificationStoredProcedureConfiguration.Equals(System.Object)">
      <summary>Determina se questa istanza è uguale all'oggetto specificato.</summary>
      <returns>true se questa istanza è uguale all'oggetto specificato. In caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionUpdateModificationStoredProcedureConfiguration.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza corrente.</summary>
      <returns>Codice hash per l'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionUpdateModificationStoredProcedureConfiguration.GetType">
      <summary>Restituisce il tipo associato all'istanza corrente.</summary>
      <returns>Tipo associato all'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionUpdateModificationStoredProcedureConfiguration.HasName(System.String)">
      <summary>Configura il nome della stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="procedureName">Nome della stored procedure.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionUpdateModificationStoredProcedureConfiguration.HasName(System.String,System.String)">
      <summary>Configura il nome della stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="procedureName">Nome della stored procedure.</param>
      <param name="schemaName">Nome dello schema.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionUpdateModificationStoredProcedureConfiguration.Parameter(System.Reflection.PropertyInfo,System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyInfo">Proprietà per cui configurare il parametro.</param>
      <param name="parameterName">Nome del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionUpdateModificationStoredProcedureConfiguration.Parameter(System.Reflection.PropertyInfo,System.String,System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyInfo">Proprietà per cui configurare il parametro.</param>
      <param name="currentValueParameterName">Nome del parametro del valore corrente.</param>
      <param name="originalValueParameterName">Nome del parametro del valore originale.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionUpdateModificationStoredProcedureConfiguration.Parameter(System.String,System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyName">Nome della proprietà per cui configurare il parametro.</param>
      <param name="parameterName">Nome del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionUpdateModificationStoredProcedureConfiguration.Parameter(System.String,System.String,System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyName">Nome della proprietà per cui configurare il parametro.</param>
      <param name="currentValueParameterName">Nome del parametro del valore corrente.</param>
      <param name="originalValueParameterName">Nome del parametro del valore originale.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionUpdateModificationStoredProcedureConfiguration.Result(System.Reflection.PropertyInfo,System.String)">
      <summary>Configura una colonna del risultato affinché venga eseguito il mapping di questa stored procedure a una proprietà.Viene utilizzato per colonne generate da database.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyInfo">Proprietà per cui configurare il risultato.</param>
      <param name="columnName">Nome della colonna dei risultati.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionUpdateModificationStoredProcedureConfiguration.Result(System.String,System.String)">
      <summary>Configura una colonna del risultato affinché venga eseguito il mapping di questa stored procedure a una proprietà.Viene utilizzato per colonne generate da database.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyName">Nome della proprietà per cui configurare il risultato.</param>
      <param name="columnName">Nome della colonna dei risultati.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionUpdateModificationStoredProcedureConfiguration.RowsAffectedParameter(System.String)">
      <summary>Configura il parametro di output tramite cui vengono restituite le righe interessate da questa procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="parameterName">Nome del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionUpdateModificationStoredProcedureConfiguration.ToString">
      <summary>Restituisce la rappresentazione di stringa per questa istanza.</summary>
      <returns>Rappresentazione di stringa per questa istanza.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration">
      <summary>Utilizzato per configurare una proprietà <see cref="T:System.DateTime" /> di un tipo di entità o di un tipo complesso.Questa funzionalità di configurazione è disponibile utilizzando l'API Fluent Code First (vedere <see cref="T:System.Data.Entity.DbModelBuilder" />).</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration.HasColumnAnnotation(System.String,System.Object)">
      <summary>Imposta un'annotazione nel modello per la colonna di database utilizzata per archiviare la proprietà.Il valore di annotazione può essere successivamente utilizzato durante l'elaborazione della colonna, ad esempio durante la creazione delle migrazioni.</summary>
      <returns>Stessa istanza di DateTimePropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="name">Nome dell'annotazione che deve essere un identificatore C#/EDM valido.</param>
      <param name="value">Valore dell'annotazione che può essere una stringa o un altro tipo che è possibile serializzare con <see cref="T:System.Data.Entity.Infrastructure.IMetadataAnnotationSerializer" /></param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration.HasColumnName(System.String)">
      <summary>Configura il nome della colonna di database utilizzata per archiviare la proprietà.</summary>
      <returns>Stessa istanza di DateTimePropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnName">Nome della colonna.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration.HasColumnOrder(System.Nullable{System.Int32})">
      <summary>Configura l'ordine della colonna di database utilizzata per archiviare la proprietà.Questo metodo viene utilizzato inoltre per specificare l'ordinamento di chiavi quando un tipo di entità dispone di una chiave composta.</summary>
      <returns>Stessa istanza di DateTimePropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnOrder">Ordine di visualizzazione di questa colonna nella tabella di database.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration.HasColumnType(System.String)">
      <summary>Configura il tipo di dati della colonna di database utilizzata per archiviare la proprietà.</summary>
      <returns>Stessa istanza di DateTimePropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnType">Nome del tipo di dati specifico del provider del database.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration.HasDatabaseGeneratedOption(System.Nullable{System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption})">
      <summary>Configura la modalità con cui i valori della proprietà vengono generati dal database.</summary>
      <returns>Stessa istanza di DateTimePropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="databaseGeneratedOption">Pattern utilizzato per la generazione dei valori per la proprietà nel database.Se si imposta "null" verrà utilizzata l'opzione predefinita che può essere "None", "Identity" o "Computed" a seconda del tipo di proprietà, della relativa semantica nel modello (ad esempiole chiavi primarie vengono gestite in modo diverso) e del set di convenzioni utilizzate.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration.HasPrecision(System.Byte)">
      <summary>Configura la precisione della proprietà.Se il provider del database non supporta la precisione per il tipo di dati della colonna, il valore viene ignorato.</summary>
      <returns>Stessa istanza di DateTimePropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="value">Precisione della proprietà.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration.IsConcurrencyToken">
      <summary>Configura la proprietà da utilizzare come token di concorrenza ottimistica.</summary>
      <returns>Stessa istanza di DateTimePropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration.IsConcurrencyToken(System.Nullable{System.Boolean})">
      <summary>Configura un valore che indica se la proprietà deve essere utilizzata o meno come token di concorrenza ottimistica.</summary>
      <returns>Stessa istanza di DateTimePropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="concurrencyToken">Valore che indica se la proprietà è o meno un token di concorrenza.L'impostazione "null" rimuoverà il facet del token di concorrenza dalla proprietà.Il comportamento in fase di esecuzione causato da tale impostazione è analogo a quello ottenuto specificando 'false'.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration.IsOptional">
      <summary>Configura la proprietà in modo che sia facoltativa.La colonna di database utilizzata per archiviare questa proprietà ammetterà i valori Null.</summary>
      <returns>Stessa istanza di DateTimePropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration.IsRequired">
      <summary>Configura la proprietà in modo che sia obbligatoria.La colonna di database utilizzata per archiviare questa proprietà non ammetterà i valori Null.Le proprietà <see cref="T:System.DateTime" /> sono obbligatorie per impostazione predefinita.</summary>
      <returns>Stessa istanza di DateTimePropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.DecimalPropertyConfiguration">
      <summary>Utilizzato per configurare una proprietà <see cref="T:System.decimal" /> di un tipo di entità o di un tipo complesso.Questa funzionalità di configurazione è disponibile utilizzando l'API Fluent Code First (vedere <see cref="T:System.Data.Entity.DbModelBuilder" />).</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DecimalPropertyConfiguration.HasColumnAnnotation(System.String,System.Object)">
      <summary>Imposta un'annotazione nel modello per la colonna di database utilizzata per archiviare la proprietà.Il valore di annotazione può essere successivamente utilizzato durante l'elaborazione della colonna, ad esempio durante la creazione delle migrazioni.</summary>
      <returns>Stessa istanza di DecimalPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="name">Nome dell'annotazione che deve essere un identificatore C#/EDM valido.</param>
      <param name="value">Valore dell'annotazione che può essere una stringa o un altro tipo che è possibile serializzare con <see cref="T:System.Data.Entity.Infrastructure.IMetadataAnnotationSerializer" /></param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DecimalPropertyConfiguration.HasColumnName(System.String)">
      <summary>Configura il nome della colonna di database utilizzata per archiviare la proprietà.</summary>
      <returns>Stessa istanza di DecimalPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnName">Nome della colonna.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DecimalPropertyConfiguration.HasColumnOrder(System.Nullable{System.Int32})">
      <summary>Configura l'ordine della colonna di database utilizzata per archiviare la proprietà.Questo metodo viene utilizzato inoltre per specificare l'ordinamento di chiavi quando un tipo di entità dispone di una chiave composta.</summary>
      <returns>Stessa istanza di DecimalPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnOrder">Ordine di visualizzazione di questa colonna nella tabella di database.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DecimalPropertyConfiguration.HasColumnType(System.String)">
      <summary>Configura il tipo di dati della colonna di database utilizzata per archiviare la proprietà.</summary>
      <returns>Stessa istanza di DecimalPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnType">Nome del tipo di dati specifico del provider del database.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DecimalPropertyConfiguration.HasDatabaseGeneratedOption(System.Nullable{System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption})">
      <summary>Configura la modalità con cui i valori della proprietà vengono generati dal database.</summary>
      <returns>Stessa istanza di DecimalPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="databaseGeneratedOption">Pattern utilizzato per la generazione dei valori per la proprietà nel database.Se si imposta "null" verrà utilizzata l'opzione predefinita che può essere "None", "Identity" o "Computed" a seconda del tipo di proprietà, della relativa semantica nel modello (ad esempiole chiavi primarie vengono gestite in modo diverso) e del set di convenzioni utilizzate.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DecimalPropertyConfiguration.HasPrecision(System.Byte,System.Byte)">
      <summary>Configura la precisione e la scala della proprietà.</summary>
      <returns>Stessa istanza di DecimalPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="precision">Precisione della proprietà.</param>
      <param name="scale">Scala della proprietà.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DecimalPropertyConfiguration.IsConcurrencyToken">
      <summary>Configura la proprietà da utilizzare come token di concorrenza ottimistica.</summary>
      <returns>Stessa istanza di DecimalPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DecimalPropertyConfiguration.IsConcurrencyToken(System.Nullable{System.Boolean})">
      <summary>Configura un valore che indica se la proprietà deve essere utilizzata o meno come token di concorrenza ottimistica.</summary>
      <returns>Stessa istanza di DecimalPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="concurrencyToken">Valore che indica se la proprietà è o meno un token di concorrenza.L'impostazione "null" rimuoverà il facet del token di concorrenza dalla proprietà.Il comportamento in fase di esecuzione causato da tale impostazione è analogo a quello ottenuto specificando 'false'.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DecimalPropertyConfiguration.IsOptional">
      <summary>Configura la proprietà in modo che sia facoltativa.La colonna di database utilizzata per archiviare questa proprietà ammetterà i valori Null.</summary>
      <returns>Stessa istanza di DecimalPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DecimalPropertyConfiguration.IsRequired">
      <summary>Configura la proprietà in modo che sia obbligatoria.La colonna di database utilizzata per archiviare questa proprietà non ammetterà i valori Null.Le proprietà <see cref="T:System.decimal" /> sono obbligatorie per impostazione predefinita.</summary>
      <returns>Stessa istanza di DecimalPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.DeleteModificationStoredProcedureConfiguration`1">
      <summary>Consente di eseguire la configurazione per una stored procedure utilizzata per eliminare entità.</summary>
      <typeparam name="TEntityType">Tipo dell'entità per la cui eliminazione è possibile utilizzare la stored procedure.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DeleteModificationStoredProcedureConfiguration`1.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se l'oggetto specificato è uguale all'oggetto corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto con cui eseguire il confronto.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DeleteModificationStoredProcedureConfiguration`1.GetHashCode">
      <summary>Recupera il codice hash dell'istanza corrente.</summary>
      <returns>Codice hash dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DeleteModificationStoredProcedureConfiguration`1.GetType">
      <summary>Recupera il tipo dell'istanza corrente.</summary>
      <returns>Tipo dell’istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DeleteModificationStoredProcedureConfiguration`1.HasName(System.String)">
      <summary>Configura il nome della stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="procedureName">Nome della stored procedure.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DeleteModificationStoredProcedureConfiguration`1.HasName(System.String,System.String)">
      <summary>Configura il nome della stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="procedureName">Nome della stored procedure.</param>
      <param name="schemaName">Nome dello schema.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DeleteModificationStoredProcedureConfiguration`1.Navigation``1(System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.ICollection{`0}}},System.Action{System.Data.Entity.ModelConfiguration.Configuration.AssociationModificationStoredProcedureConfiguration{``0}})">
      <summary>Configura i parametri per una relazione in cui la proprietà di chiave esterna non è inclusa nella classe.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="navigationPropertyExpression">Espressione lambda che rappresenta la proprietà di navigazione per la relazione.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="associationModificationStoredProcedureConfigurationAction">Espressione lambda tramite cui viene eseguita la configurazione.</param>
      <typeparam name="TPrincipalEntityType">Tipo dell'entità principale nella relazione.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DeleteModificationStoredProcedureConfiguration`1.Navigation``1(System.Linq.Expressions.Expression{System.Func{``0,`0}},System.Action{System.Data.Entity.ModelConfiguration.Configuration.AssociationModificationStoredProcedureConfiguration{``0}})">
      <summary>Configura i parametri per una relazione in cui la proprietà di chiave esterna non è inclusa nella classe.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="navigationPropertyExpression">Espressione lambda che rappresenta la proprietà di navigazione per la relazione.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="associationModificationStoredProcedureConfigurationAction">Espressione lambda tramite cui viene eseguita la configurazione.</param>
      <typeparam name="TPrincipalEntityType">Tipo dell'entità principale nella relazione.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DeleteModificationStoredProcedureConfiguration`1.Parameter(System.Linq.Expressions.Expression{System.Func{`0,System.Byte[]}},System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il parametro.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="parameterName">Nome del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DeleteModificationStoredProcedureConfiguration`1.Parameter(System.Linq.Expressions.Expression{System.Func{`0,System.Data.Entity.Spatial.DbGeography}},System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il parametro.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="parameterName">Nome del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DeleteModificationStoredProcedureConfiguration`1.Parameter(System.Linq.Expressions.Expression{System.Func{`0,System.Data.Entity.Spatial.DbGeometry}},System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il parametro.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="parameterName">Nome del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DeleteModificationStoredProcedureConfiguration`1.Parameter``1(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{``0}}},System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il parametro.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="parameterName">Nome del parametro.</param>
      <typeparam name="TProperty">Tipo della proprietà da configurare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DeleteModificationStoredProcedureConfiguration`1.Parameter(System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il parametro.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="parameterName">Nome del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DeleteModificationStoredProcedureConfiguration`1.Parameter``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il parametro.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="parameterName">Nome del parametro.</param>
      <typeparam name="TProperty">Tipo della proprietà da configurare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DeleteModificationStoredProcedureConfiguration`1.RowsAffectedParameter(System.String)">
      <summary>Configura il parametro di output tramite cui vengono restituite le righe interessate da questa procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="parameterName">Nome del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DeleteModificationStoredProcedureConfiguration`1.ToString">
      <summary>Converte il valore dell'istanza corrente nella rappresentazione di stringa equivalente.</summary>
      <returns>Rappresentazione di stringa dell'istanza corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration`1">
      <summary>Configura una relazione che può supportare proprietà di chiave esterna esposte nel modello a oggetti.Questa funzionalità di configurazione è disponibile utilizzando l'API Fluent Code First (vedere <see cref="T:System.Data.Entity.DbModelBuilder" />).</summary>
      <typeparam name="TDependentEntityType">Tipo di entità dipendente.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration`1.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se l'oggetto specificato è uguale all'oggetto corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration`1.GetHashCode">
      <summary>Funge da funzione hash per un tipo specifico.</summary>
      <returns>Codice hash per l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration`1.GetType">
      <summary>Ottiene il tipo dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration`1.HasForeignKey``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Configura la relazione per l'utilizzo di proprietà di chiave esterna esposte nel modello a oggetti.Se le proprietà di chiave esterna non sono esposte nel modello a oggetti, utilizzare il metodo Map.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
      <param name="foreignKeyExpression">Espressione lambda che rappresenta la proprietà da utilizzare come chiave esterna.Se la chiave esterna è costituita da più proprietà, specificare un tipo anonimo che include le proprietà.Quando si utilizzano più proprietà di chiave esterna, le proprietà devono essere specificate nello stesso ordine in cui le proprietà di chiave primaria sono state configurate per il tipo di entità principale.</param>
      <typeparam name="TKey">Tipo di chiave.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration`1.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1">
      <summary>Configura il mapping di tabelle e colonne per un tipo di entità o un subset di proprietà da un tipo di entità.Questa funzionalità di configurazione è disponibile utilizzando l'API Fluent Code First (vedere <see cref="T:System.Data.Entity.DbModelBuilder" />).</summary>
      <typeparam name="TEntityType">Tipo di entità di cui eseguire il mapping.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se l'oggetto specificato è uguale all'oggetto corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.GetHashCode">
      <summary>Funge da funzione hash per un tipo specifico.</summary>
      <returns>Codice hash per l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.HasTableAnnotation(System.String,System.Object)">
      <summary>Imposta un'annotazione nel modello per la tabella alla quale questa entità esegue il mapping.Il valore di annotazione può essere successivamente utilizzato durante l'elaborazione della tabella, ad esempio durante la creazione delle migrazioni.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="name">Nome dell'annotazione che deve essere un identificatore C#/EDM valido.</param>
      <param name="value">Valore dell'annotazione che può essere una stringa o un altro tipo che è possibile serializzare con <see cref="T:System.Data.Entity.Infrastructure.IMetadataAnnotationSerializer" /></param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.MapInheritedProperties">
      <summary>Esegue nuovamente il mapping di tutte le proprietà ereditate dai tipi di base.Quando si configura un tipo derivato di cui eseguire il mapping a una tabella separata, tale operazione causerà l'inclusione di tutte le proprietà nella tabella anziché solo delle proprietà non ereditate.Questo metodo è noto come mapping di tabella per tipo concreto (TPC).</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Properties``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Configura le proprietà che verranno incluse in questo frammento di mapping.Se questo metodo non viene chiamato, verranno configurate tutte le proprietà che non sono state ancora incluse in un frammento di mapping.</summary>
      <param name="propertiesExpression">Espressione lambda in un tipo anonimo che contiene le proprietà di cui eseguire il mapping.C#: t =&amp;gt; new { t.Id, t.Property1, t.Property2 } VB.Net: Function(t) New With { p.Id, t.Property1, t.Property2 }</param>
      <typeparam name="TObject">Un tipo anonimo che include le proprietà di cui eseguire il mapping.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Byte[]}})">
      <summary>Configura una proprietà <see cref="T:System.byte[]" /> che è inclusa in questo frammento di mapping.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Data.Entity.Spatial.DbGeography}})">
      <summary>Configura una proprietà <see cref="T:DbGeography" /> che è inclusa in questo frammento di mapping.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Data.Entity.Spatial.DbGeometry}})">
      <summary>Configura una proprietà <see cref="T:DbGeometry" /> che è inclusa in questo frammento di mapping.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.DateTime}})">
      <summary>Configura una proprietà <see cref="T:System.DateTime" /> che è inclusa in questo frammento di mapping.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.DateTimeOffset}})">
      <summary>Configura una proprietà <see cref="T:System.DateTimeOffset" /> che è inclusa in questo frammento di mapping.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Decimal}})">
      <summary>Configura una proprietà <see cref="T:System.decimal" /> che è inclusa in questo frammento di mapping.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.DateTime}}})">
      <summary>Configura una proprietà <see cref="T:System.DateTime?" /> che è inclusa in questo frammento di mapping.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.DateTimeOffset}}})">
      <summary>Configura una proprietà <see cref="T:System.DateTimeOffset?" /> che è inclusa in questo frammento di mapping.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Decimal}}})">
      <summary>Configura una proprietà <see cref="T:System.decimal?" /> che è inclusa in questo frammento di mapping.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.TimeSpan}}})">
      <summary>Configura una proprietà <see cref="T:System.TimeSpan?" /> che è inclusa in questo frammento di mapping.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{``0}}})">
      <summary>Configura una proprietà <see cref="T:System.struct?" /> che è inclusa in questo frammento di mapping.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <typeparam name="T">Tipo della proprietà configurata.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
      <summary>Configura una proprietà <see cref="T:System.string" /> che è inclusa in questo frammento di mapping.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.TimeSpan}})">
      <summary>Configura una proprietà <see cref="T:System.TimeSpan" /> che è inclusa in questo frammento di mapping.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Configura una proprietà <see cref="T:System.struct" /> che è inclusa in questo frammento di mapping.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <typeparam name="T">Tipo della proprietà configurata.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Requires``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Configura la condizione del discriminatore utilizzata per distinguere i tipi in una gerarchia di ereditarietà.</summary>
      <returns>Oggetto di configurazione per configurare ulteriormente la condizione del discriminatore.</returns>
      <param name="property">Espressione lambda che rappresenta la proprietà utilizzata per la discriminazione tra i tipi.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <typeparam name="TProperty">Tipo della proprietà utilizzata per la discriminazione tra i tipi.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Requires(System.String)">
      <summary>Configura la colonna discriminatore utilizzata per distinguere i tipi in una gerarchia di ereditarietà.</summary>
      <returns>Oggetto di configurazione per configurare ulteriormente la colonna discriminatore e i valori discriminanti.</returns>
      <param name="discriminator">Nome della colonna discriminatore.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.ToTable(System.String)">
      <summary>Configura il nome della tabella a cui deve essere eseguito il mapping.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="tableName">Nome della tabella.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.ToTable(System.String,System.String)">
      <summary>Configura il nome e lo schema della tabella a cui deve essere eseguito il mapping.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="tableName">Nome della tabella.</param>
      <param name="schemaName">Schema della tabella.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyAssociationMappingConfiguration">
      <summary>Configura il mapping di tabelle e colonne di una relazione che non espone proprietà di chiave esterna nel modello a oggetti.Questa funzionalità di configurazione è disponibile utilizzando l'API Fluent Code First (vedere <see cref="T:System.Data.Entity.DbModelBuilder" />).</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyAssociationMappingConfiguration.Equals(System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyAssociationMappingConfiguration)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="other">Oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyAssociationMappingConfiguration" /> da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyAssociationMappingConfiguration.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyAssociationMappingConfiguration.GetHashCode">
      <summary>Funge da funzione hash per un tipo specifico.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyAssociationMappingConfiguration.GetType">
      <summary>Ottiene il tipo dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyAssociationMappingConfiguration.HasColumnAnnotation(System.String,System.String,System.Object)">
      <summary>Imposta un'annotazione nel modello per una colonna del database configurata con <see cref="M:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyAssociationMappingConfiguration.MapKey(System.String[])" />.Il valore di annotazione può essere successivamente utilizzato durante l'elaborazione della colonna, ad esempio durante la creazione delle migrazioni.</summary>
      <returns>Stessa istanza di ForeignKeyAssociationMappingConfiguration in modo da poter concatenare più chiamate.</returns>
      <param name="keyColumnName">Nome della colonna configurata con il metodo HasKey.</param>
      <param name="annotationName">Nome dell'annotazione che deve essere un identificatore C#/EDM valido.</param>
      <param name="value">Valore dell'annotazione che può essere una stringa o un altro tipo che è possibile serializzare con <see cref="T:System.Data.Entity.Infrastructure.IMetadataAnnotationSerializer" /></param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyAssociationMappingConfiguration.MapKey(System.String[])">
      <summary>Configura il nome delle colonne per la chiave esterna.</summary>
      <returns>Stessa istanza di ForeignKeyAssociationMappingConfiguration in modo da poter concatenare più chiamate.</returns>
      <param name="keyColumnNames">Nomi di colonne di chiavi esterne.Quando si utilizzano più proprietà di chiave esterna, le proprietà devono essere specificate nello stesso ordine in cui sono state configurate le proprietà di chiave primaria per il tipo di entità di destinazione.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyAssociationMappingConfiguration.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyAssociationMappingConfiguration.ToTable(System.String)">
      <summary>Configura il nome della tabella in cui risiedono le colonne di chiavi esterne.Il mapping della tabella specificata deve essere già stato eseguito per il tipo di entità.Se si desidera che le chiavi esterne risiedano nella relativa tabella, utilizzare il metodo Map sull'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration" /> per eseguire la suddivisione delle entità in modo che la tabella venga creata solo con la proprietà di chiave primaria.Le chiavi esterne possono quindi essere aggiunte alla tabella tramite questo metodo.</summary>
      <returns>Stessa istanza di ForeignKeyAssociationMappingConfiguration in modo da poter concatenare più chiamate.</returns>
      <param name="tableName">Nome della tabella.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyAssociationMappingConfiguration.ToTable(System.String,System.String)">
      <summary>Configura il nome e lo schema della tabella in cui risiedono le colonne di chiavi esterne.Il mapping della tabella specificata deve essere già stato eseguito per il tipo di entità.Se si desidera che le chiavi esterne risiedano nella relativa tabella, utilizzare il metodo Map sull'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration" /> per eseguire la suddivisione delle entità in modo che la tabella venga creata solo con la proprietà di chiave primaria.Le chiavi esterne possono quindi essere aggiunte alla tabella tramite questo metodo.</summary>
      <returns>Stessa istanza di ForeignKeyAssociationMappingConfiguration in modo da poter concatenare più chiamate.</returns>
      <param name="tableName">Nome della tabella.</param>
      <param name="schemaName">Schema della tabella.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration">
      <summary>Configura una relazione che può supportare solo proprietà di chiave esterna non esposte nel modello a oggetti.Questa funzionalità di configurazione è disponibile utilizzando l'API Fluent Code First (vedere <see cref="T:System.Data.Entity.DbModelBuilder" />).</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente. </param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration.GetHashCode">
      <summary>Funge da funzione hash per un tipo specifico.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration.GetType">
      <summary>Ottiene il tipo dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration.Map(System.Action{System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyAssociationMappingConfiguration})">
      <summary>Configura la relazione per l'utilizzo di proprietà di chiave esterna non esposte nel modello a oggetti.Le colonne e la tabella possono essere personalizzate specificando un'azione di configurazione.Se viene specificata un'azione di configurazione vuota, i nomi di colonna verranno generati per convenzione.Se le proprietà di chiave esterna sono esposte nel modello a oggetti, utilizzare il metodo HasForeignKey.Non tutte le relazioni supportano l'esposizione di proprietà di chiave esterna nel modello a oggetti.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
      <param name="configurationAction">Azione che configura le colonne di chiavi esterne e la tabella.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.InsertModificationStoredProcedureConfiguration`1">
      <summary>Rappresenta un valore che permette di eseguire la configurazione per una stored procedure usata per inserire entità.</summary>
      <typeparam name="TEntityType">Tipo dell'entità per il cui inserimento è possibile utilizzare la stored procedure.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.InsertModificationStoredProcedureConfiguration`1.Equals(System.Object)">
      <summary>Specifica se questa istanza è uguale a un oggetto specifico.</summary>
      <returns>true se questa istanza è uguale a un oggetto specifico. In caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.InsertModificationStoredProcedureConfiguration`1.GetHashCode">
      <summary>Ottiene il codice hash per questa istanza.</summary>
      <returns>Codice hash per l'istanza.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.InsertModificationStoredProcedureConfiguration`1.GetType">
      <summary>Ottiene il tipo dell'istanza.</summary>
      <returns>Tipo dell'istanza.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.InsertModificationStoredProcedureConfiguration`1.HasName(System.String)">
      <summary>Configura il nome della stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="procedureName">Nome della stored procedure.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.InsertModificationStoredProcedureConfiguration`1.HasName(System.String,System.String)">
      <summary>Configura il nome della stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="procedureName">Nome della stored procedure.</param>
      <param name="schemaName">Nome dello schema.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.InsertModificationStoredProcedureConfiguration`1.Navigation``1(System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.ICollection{`0}}},System.Action{System.Data.Entity.ModelConfiguration.Configuration.AssociationModificationStoredProcedureConfiguration{``0}})">
      <summary>Configura i parametri per una relazione in cui la proprietà di chiave esterna non è inclusa nella classe.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="navigationPropertyExpression">Espressione lambda che rappresenta la proprietà di navigazione per la relazione.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="associationModificationStoredProcedureConfigurationAction">Espressione lambda tramite cui viene eseguita la configurazione.</param>
      <typeparam name="TPrincipalEntityType">Tipo dell'entità principale nella relazione.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.InsertModificationStoredProcedureConfiguration`1.Navigation``1(System.Linq.Expressions.Expression{System.Func{``0,`0}},System.Action{System.Data.Entity.ModelConfiguration.Configuration.AssociationModificationStoredProcedureConfiguration{``0}})">
      <summary>Configura i parametri per una relazione in cui la proprietà di chiave esterna non è inclusa nella classe.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="navigationPropertyExpression">Espressione lambda che rappresenta la proprietà di navigazione per la relazione.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="associationModificationStoredProcedureConfigurationAction">Espressione lambda tramite cui viene eseguita la configurazione.</param>
      <typeparam name="TPrincipalEntityType">Tipo dell'entità principale nella relazione.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.InsertModificationStoredProcedureConfiguration`1.Parameter(System.Linq.Expressions.Expression{System.Func{`0,System.Byte[]}},System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il parametro.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="parameterName">Nome del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.InsertModificationStoredProcedureConfiguration`1.Parameter(System.Linq.Expressions.Expression{System.Func{`0,System.Data.Entity.Spatial.DbGeography}},System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il parametro.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="parameterName">Nome del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.InsertModificationStoredProcedureConfiguration`1.Parameter(System.Linq.Expressions.Expression{System.Func{`0,System.Data.Entity.Spatial.DbGeometry}},System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il parametro.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="parameterName">Nome del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.InsertModificationStoredProcedureConfiguration`1.Parameter``1(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{``0}}},System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il parametro.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="parameterName">Nome del parametro.</param>
      <typeparam name="TProperty">Tipo della proprietà da configurare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.InsertModificationStoredProcedureConfiguration`1.Parameter(System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il parametro.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="parameterName">Nome del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.InsertModificationStoredProcedureConfiguration`1.Parameter``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il parametro.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="parameterName">Nome del parametro.</param>
      <typeparam name="TProperty">Tipo della proprietà da configurare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.InsertModificationStoredProcedureConfiguration`1.Result(System.Linq.Expressions.Expression{System.Func{`0,System.Byte[]}},System.String)">
      <summary>Configura una colonna del risultato affinché venga eseguito il mapping di questa stored procedure a una proprietà.Viene utilizzato per colonne generate da database.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il risultato.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="columnName">Nome della colonna dei risultati.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.InsertModificationStoredProcedureConfiguration`1.Result(System.Linq.Expressions.Expression{System.Func{`0,System.Data.Entity.Spatial.DbGeography}},System.String)">
      <summary>Configura una colonna del risultato affinché venga eseguito il mapping di questa stored procedure a una proprietà.Viene utilizzato per colonne generate da database.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il risultato.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="columnName">Nome della colonna dei risultati.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.InsertModificationStoredProcedureConfiguration`1.Result(System.Linq.Expressions.Expression{System.Func{`0,System.Data.Entity.Spatial.DbGeometry}},System.String)">
      <summary>Configura una colonna del risultato affinché venga eseguito il mapping di questa stored procedure a una proprietà.Viene utilizzato per colonne generate da database.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il risultato.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="columnName">Nome della colonna dei risultati.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.InsertModificationStoredProcedureConfiguration`1.Result``1(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{``0}}},System.String)">
      <summary>Configura una colonna del risultato affinché venga eseguito il mapping di questa stored procedure a una proprietà.Viene utilizzato per colonne generate da database.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il risultato.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="columnName">Nome della colonna dei risultati.</param>
      <typeparam name="TProperty">Tipo della proprietà da configurare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.InsertModificationStoredProcedureConfiguration`1.Result(System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.String)">
      <summary>Configura una colonna del risultato affinché venga eseguito il mapping di questa stored procedure a una proprietà.Viene utilizzato per colonne generate da database.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il risultato.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="columnName">Nome della colonna dei risultati.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.InsertModificationStoredProcedureConfiguration`1.Result``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
      <summary>Configura una colonna del risultato affinché venga eseguito il mapping di questa stored procedure a una proprietà.Viene utilizzato per colonne generate da database.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il risultato.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="columnName">Nome della colonna dei risultati.</param>
      <typeparam name="TProperty">Tipo della proprietà da configurare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.InsertModificationStoredProcedureConfiguration`1.ToString">
      <summary>Restituisce una rappresentazione di stringa di questa istanza.</summary>
      <returns>Rappresentazione di stringa di questa istanza.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.LengthColumnConfiguration">
      <summary>Utilizzato per configurare una colonna con facet di lunghezza per un tipo di entità o un tipo complesso.Questa funzionalità di configurazione è esposta dall'API Fluent di Code First; vedere <see cref="T:System.Data.Entity.DbModelBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.LengthColumnConfiguration.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.LengthColumnConfiguration.GetHashCode">
      <summary>Funge da funzione hash per un tipo specifico.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.LengthColumnConfiguration.GetType">
      <summary>Ottiene il tipo dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.LengthColumnConfiguration.HasMaxLength(System.Nullable{System.Int32})">
      <summary>Configura la colonna in modo che disponga della lunghezza massima specificata.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.LengthColumnConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="value">Lunghezza massima per la colonna.L'impostazione del valore su null rimuoverà qualsiasi restrizione di lunghezza massima dalla colonna e per la colonna di database verrà utilizzata una lunghezza predefinita.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.LengthColumnConfiguration.IsFixedLength">
      <summary>Configura la colonna in modo che sia a lunghezza fissa.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.LengthColumnConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.LengthColumnConfiguration.IsMaxLength">
      <summary>Configura la colonna per consentire la lunghezza massima supportata dal provider del database.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.LengthColumnConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.LengthColumnConfiguration.IsVariableLength">
      <summary>Configura la colonna in modo che sia a lunghezza variabile.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.LengthColumnConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.LengthColumnConfiguration.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration">
      <summary>Utilizzato per configurare una proprietà con facet di lunghezza per un tipo di entità o un tipo complesso.Questa funzionalità di configurazione è disponibile utilizzando l'API Fluent Code First (vedere <see cref="T:System.Data.Entity.DbModelBuilder" />).</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration.HasMaxLength(System.Nullable{System.Int32})">
      <summary>Configura la proprietà in modo che disponga della lunghezza massima specificata.</summary>
      <returns>Stessa istanza di LengthPropertyConfiguration in modo da poter concatenare più chiamate.</returns>
      <param name="value">Lunghezza massima per la proprietà.L'impostazione del valore su 'Null' rimuoverà qualsiasi restrizione di lunghezza massima dalla proprietà e per la colonna di database verrà utilizzata una lunghezza predefinita.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration.IsFixedLength">
      <summary>Configura la proprietà in modo che sia a lunghezza fissa.Utilizzare HasMaxLength per impostare la lunghezza a cui è fissa la proprietà.</summary>
      <returns>Stessa istanza di LengthPropertyConfiguration in modo da poter concatenare più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration.IsMaxLength">
      <summary>Configura la proprietà per consentire la lunghezza massima supportata dal provider del database.</summary>
      <returns>Stessa istanza di LengthPropertyConfiguration in modo da poter concatenare più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration.IsVariableLength">
      <summary>Configura la proprietà in modo che sia a lunghezza variabile.Le proprietà sono a lunghezza variabile per impostazione predefinita.</summary>
      <returns>Stessa istanza di LengthPropertyConfiguration in modo da poter concatenare più chiamate.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2">
      <summary>Configura una relazione molti da un tipo di entità.</summary>
      <typeparam name="TEntityType">Tipo di entità da cui ha origine la relazione.</typeparam>
      <typeparam name="TTargetEntityType">Tipo di entità che rappresenta la destinazione della relazione.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2.GetHashCode">
      <summary>Funge da funzione hash per un tipo specifico.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2.WithMany">
      <summary>Configura la relazione in modo che sia di tipo molti:molti senza una proprietà di navigazione sull'altro lato della relazione.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2.WithMany(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.ICollection{`0}}})">
      <summary>Configura la relazione in modo che sia di tipo molti:molti con una proprietà di navigazione sull'altro lato della relazione.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
      <param name="navigationPropertyExpression">Espressione lambda che rappresenta la proprietà di navigazione sull'altra entità finale della relazione.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2.WithOptional">
      <summary>Configura la relazione in modo che sia di tipo molti:facoltativa senza una proprietà di navigazione sull'altro lato della relazione.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2.WithOptional(System.Linq.Expressions.Expression{System.Func{`1,`0}})">
      <summary>Configura la relazione in modo che sia di tipo molti:facoltativa con una proprietà di navigazione sull'altro lato della relazione.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
      <param name="navigationPropertyExpression">Espressione lambda che rappresenta la proprietà di navigazione sull'altra entità finale della relazione.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2.WithRequired">
      <summary>Configura la relazione in modo che sia di tipo molti:obbligatoria senza una proprietà di navigazione sull'altro lato della relazione.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2.WithRequired(System.Linq.Expressions.Expression{System.Func{`1,`0}})">
      <summary>Configura la relazione in modo che sia di tipo molti:obbligatoria con una proprietà di navigazione sull'altro lato della relazione.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
      <param name="navigationPropertyExpression">Espressione lambda che rappresenta la proprietà di navigazione sull'altra entità finale della relazione.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration">
      <summary>Configura il mapping di tabella e colonne di una relazione molti:molti.Questa funzionalità di configurazione è disponibile utilizzando l'API Fluent Code First (vedere <see cref="T:System.Data.Entity.DbModelBuilder" />).</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration.Equals(System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se l'oggetto specificato è uguale all'oggetto corrente; in caso contrario, false.</returns>
      <param name="other">Oggetto da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se l'oggetto specificato è uguale all'oggetto corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration.GetHashCode">
      <summary>Funge da funzione hash per un tipo specifico.</summary>
      <returns>Codice hash per l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration.GetType">
      <summary>Ottiene il tipo dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration.HasTableAnnotation(System.String,System.Object)">
      <summary>Imposta un'annotazione nel modello per la tabella join.Il valore di annotazione può essere successivamente utilizzato durante l'elaborazione della tabella, ad esempio durante la creazione delle migrazioni.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="name">Nome dell'annotazione che deve essere un identificatore C#/EDM valido.</param>
      <param name="value">Valore dell'annotazione che può essere una stringa o un altro tipo che è possibile serializzare con <see cref="T:System.Data.Entity.Infrastructure.IMetadataAnnotationSerializer" /></param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration.MapLeftKey(System.String[])">
      <summary>Configura il nome delle colonne per la chiave esterna sinistra.La chiave esterna sinistra fa riferimento all'entità padre della proprietà di navigazione specificata nella chiamata a HasMany.</summary>
      <returns>Stessa istanza di ManyToManyAssociationMappingConfiguration in modo da poter concatenare più chiamate.</returns>
      <param name="keyColumnNames">Nomi di colonne di chiavi esterne.Quando si utilizzano più proprietà di chiave esterna, le proprietà devono essere specificate nello stesso ordine in cui sono state configurate le proprietà di chiave primaria per il tipo di entità di destinazione.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration.MapRightKey(System.String[])">
      <summary>Configura il nome delle colonne per la chiave esterna destra.La chiave esterna destra fa riferimento all'entità padre della proprietà di navigazione specificata nella chiamata a WithMany.</summary>
      <returns>Stessa istanza di ManyToManyAssociationMappingConfiguration in modo da poter concatenare più chiamate.</returns>
      <param name="keyColumnNames">Nomi di colonne di chiavi esterne.Quando si utilizzano più proprietà di chiave esterna, le proprietà devono essere specificate nello stesso ordine in cui sono state configurate le proprietà di chiave primaria per il tipo di entità di destinazione.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration.ToTable(System.String)">
      <summary>Configura il nome della tabella di join per la relazione.</summary>
      <returns>Stessa istanza di ManyToManyAssociationMappingConfiguration in modo da poter concatenare più chiamate.</returns>
      <param name="tableName">Nome della tabella.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration.ToTable(System.String,System.String)">
      <summary>Configura il nome e lo schema della tabella di join per la relazione.</summary>
      <returns>Stessa istanza di ManyToManyAssociationMappingConfiguration in modo da poter concatenare più chiamate.</returns>
      <param name="tableName">Nome della tabella.</param>
      <param name="schemaName">Schema della tabella.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyModificationStoredProcedureConfiguration`2">
      <summary>Consente di eseguire la configurazione per una stored procedure utilizzata per modificare una relazione molti a molti.</summary>
      <typeparam name="TEntityType">Tipo dell'entità da cui viene configurata la relazione.</typeparam>
      <typeparam name="TTargetEntityType">Tipo dell'entità a cui è destinata l'altra entità finale della relazione.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyModificationStoredProcedureConfiguration`2.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se l'oggetto specificato è uguale all'oggetto corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyModificationStoredProcedureConfiguration`2.GetHashCode">
      <summary>Recupera il codice hash dell'istanza corrente.</summary>
      <returns>Codice hash dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyModificationStoredProcedureConfiguration`2.GetType">
      <summary>Recupera il tipo dell'istanza corrente.</summary>
      <returns>Tipo dell’istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyModificationStoredProcedureConfiguration`2.HasName(System.String)">
      <summary>Imposta il nome della stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="procedureName">Nome della procedura.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyModificationStoredProcedureConfiguration`2.HasName(System.String,System.String)">
      <summary>Imposta il nome della stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="procedureName">Nome della procedura.</param>
      <param name="schemaName">Nome dello schema.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyModificationStoredProcedureConfiguration`2.LeftKeyParameter(System.Linq.Expressions.Expression{System.Func{`0,System.Byte[]}},System.String)">
      <summary>Configura il parametro per i valori della chiave sinistra.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="parameterName">Il nome del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyModificationStoredProcedureConfiguration`2.LeftKeyParameter``1(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{``0}}},System.String)">
      <summary>Configura il parametro per i valori della chiave sinistra.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="parameterName">Il nome del parametro.</param>
      <typeparam name="TProperty">Tipo della proprietà da configurare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyModificationStoredProcedureConfiguration`2.LeftKeyParameter(System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.String)">
      <summary>Configura il parametro per i valori della chiave sinistra.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="parameterName">Il nome del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyModificationStoredProcedureConfiguration`2.LeftKeyParameter``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
      <summary>Configura il parametro per i valori della chiave sinistra.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="parameterName">Il nome del parametro.</param>
      <typeparam name="TProperty">Tipo della proprietà da configurare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyModificationStoredProcedureConfiguration`2.RightKeyParameter(System.Linq.Expressions.Expression{System.Func{`1,System.Byte[]}},System.String)">
      <summary>Configura il parametro per i valori della chiave destra.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="parameterName">Il nome del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyModificationStoredProcedureConfiguration`2.RightKeyParameter``1(System.Linq.Expressions.Expression{System.Func{`1,System.Nullable{``0}}},System.String)">
      <summary>Configura il parametro per i valori della chiave destra.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="parameterName">Il nome del parametro.</param>
      <typeparam name="TProperty">Tipo della proprietà da configurare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyModificationStoredProcedureConfiguration`2.RightKeyParameter(System.Linq.Expressions.Expression{System.Func{`1,System.String}},System.String)">
      <summary>Configura il parametro per i valori della chiave destra.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="parameterName">Il nome del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyModificationStoredProcedureConfiguration`2.RightKeyParameter``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.String)">
      <summary>Configura il parametro per i valori della chiave destra.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="parameterName">Il nome del parametro.</param>
      <typeparam name="TProperty">Tipo della proprietà da configurare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyModificationStoredProcedureConfiguration`2.ToString">
      <summary>Converte il valore dell'istanza corrente nella rappresentazione di stringa equivalente.</summary>
      <returns>Rappresentazione di stringa dell'istanza corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyModificationStoredProceduresConfiguration`2">
      <summary>Consente di eseguire la configurazione per una stored procedure utilizzata per modificare una relazione molti a molti.</summary>
      <typeparam name="TEntityType">Tipo dell'entità da cui viene configurata la relazione.</typeparam>
      <typeparam name="TTargetEntityType">Tipo dell'entità a cui è destinata l'altra entità finale della relazione.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyModificationStoredProceduresConfiguration`2.Delete(System.Action{System.Data.Entity.ModelConfiguration.Configuration.ManyToManyModificationStoredProcedureConfiguration{`0,`1}})">
      <summary>Configura la stored procedura utilizzata per eliminare le relazioni.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="modificationStoredProcedureConfigurationAction">Espressione lambda tramite cui viene eseguita la configurazione per la stored procedure.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyModificationStoredProceduresConfiguration`2.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se l'oggetto specificato è uguale all'oggetto corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyModificationStoredProceduresConfiguration`2.GetHashCode">
      <summary>Recupera il codice hash dell'istanza corrente.</summary>
      <returns>Codice hash dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyModificationStoredProceduresConfiguration`2.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyModificationStoredProceduresConfiguration`2.Insert(System.Action{System.Data.Entity.ModelConfiguration.Configuration.ManyToManyModificationStoredProcedureConfiguration{`0,`1}})">
      <summary>Configura la stored procedura utilizzata per inserire le relazioni.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="modificationStoredProcedureConfigurationAction">Espressione lambda tramite cui viene eseguita la configurazione per la stored procedure.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyModificationStoredProceduresConfiguration`2.ToString">
      <summary>Converte il valore dell'istanza corrente nella rappresentazione di stringa equivalente.</summary>
      <returns>Rappresentazione di stringa dell'istanza corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2">
      <summary>Configura una relazione molti:molti.Questa funzionalità di configurazione è disponibile utilizzando l'API Fluent Code First (vedere <see cref="T:System.Data.Entity.DbModelBuilder" />).</summary>
      <typeparam name="TEntityType">Tipo dell'entità padre della proprietà di navigazione specificata nella chiamata a HasMany.</typeparam>
      <typeparam name="TTargetEntityType">Tipo dell'entità padre della proprietà di navigazione specificata nella chiamata a WithMany.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2.GetHashCode">
      <summary>Funge da funzione hash per un tipo specifico.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2.Map(System.Action{System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration})">
      <summary>Configura le colonne di chiavi esterne e la tabella utilizzate per archiviare la relazione.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="configurationAction">Azione che configura le colonne di chiavi esterne e la tabella.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2.MapToStoredProcedures">
      <summary>Configura le stored procedure da utilizzare per la modifica di questa relazione.Verranno utilizzate le convenzioni predefinite per i nomi della procedura e del parametro.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2.MapToStoredProcedures(System.Action{System.Data.Entity.ModelConfiguration.Configuration.ManyToManyModificationStoredProceduresConfiguration{`0,`1}})">
      <summary>Configura le stored procedure da utilizzare per la modifica di questa relazione.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="modificationStoredProcedureMappingConfigurationAction">Configurazione per eseguire l'override delle convenzioni predefinite per i nomi della procedura e del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.ModificationStoredProcedureConfigurationBase">
      <summary>Esegue la configurazione di una stored procedure utilizzata per modificare un'entità nel database.</summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.ModificationStoredProceduresConfiguration`1">
      <summary>Consente di eseguire la configurazione per una stored procedure utilizzata per modificare entità.</summary>
      <typeparam name="TEntityType">Tipo dell'entità per la cui modifica è possibile utilizzare la stored procedure.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ModificationStoredProceduresConfiguration`1.Delete(System.Action{System.Data.Entity.ModelConfiguration.Configuration.DeleteModificationStoredProcedureConfiguration{`0}})">
      <summary>Configura la stored procedura usata per eliminare le entità.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="modificationStoredProcedureConfigurationAction">Espressione lambda tramite cui viene eseguita la configurazione per la stored procedure.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ModificationStoredProceduresConfiguration`1.Equals(System.Object)">
      <summary>Specifica se questa istanza è uguale a un oggetto specificato.</summary>
      <returns>true se questa istanza è uguale a un oggetto specificato. In caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ModificationStoredProceduresConfiguration`1.GetHashCode">
      <summary>Ottiene il codice hash per questa istanza.</summary>
      <returns>Codice hash per l'istanza.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ModificationStoredProceduresConfiguration`1.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ModificationStoredProceduresConfiguration`1.Insert(System.Action{System.Data.Entity.ModelConfiguration.Configuration.InsertModificationStoredProcedureConfiguration{`0}})">
      <summary>Configura la stored procedura utilizzata per inserire le entità.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="modificationStoredProcedureConfigurationAction">Espressione lambda tramite cui viene eseguita la configurazione per la stored procedure.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ModificationStoredProceduresConfiguration`1.ToString">
      <summary>Restituisce una rappresentazione di stringa di questa istanza.</summary>
      <returns>Rappresentazione di stringa di questa istanza.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ModificationStoredProceduresConfiguration`1.Update(System.Action{System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration{`0}})">
      <summary>Configura la stored procedura utilizzata per aggiornare le entità.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="modificationStoredProcedureConfigurationAction">Espressione lambda tramite cui viene eseguita la configurazione per la stored procedure.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.NotNullConditionConfiguration">
      <summary>Configura una condizione utilizzata per discriminare tra i tipi in una gerarchia di ereditarietà basata sui valori assegnati a una proprietà.Questa funzionalità di configurazione è disponibile utilizzando l'API Fluent Code First (vedere <see cref="T:System.Data.Entity.DbModelBuilder" />).</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.NotNullConditionConfiguration.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se l'oggetto specificato è uguale all'oggetto corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.NotNullConditionConfiguration.GetHashCode">
      <summary>Funge da funzione hash per un tipo specifico.</summary>
      <returns>Codice hash per l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.NotNullConditionConfiguration.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.NotNullConditionConfiguration.HasValue">
      <summary>Configura la condizione per richiedere un valore nella proprietà.Si presuppone che le righe che non dispongono di un valore assegnato alla colonna in cui viene archiviata questa proprietà siano del tipo di base di questo tipo di entità.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.NotNullConditionConfiguration.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2">
      <summary>Configura una relazione facoltativa da un tipo di entità.</summary>
      <typeparam name="TEntityType">Tipo di entità da cui ha origine la relazione.</typeparam>
      <typeparam name="TTargetEntityType">Tipo di entità che rappresenta la destinazione della relazione.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.GetHashCode">
      <summary>Funge da funzione hash per un tipo specifico.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.WithMany">
      <summary>Configura la relazione in modo che sia di tipo facoltativa:molti senza una proprietà di navigazione sull'altro lato della relazione.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.WithMany(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.ICollection{`0}}})">
      <summary>Configura la relazione in modo che sia di tipo facoltativa:molti con una proprietà di navigazione sull'altro lato della relazione.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
      <param name="navigationPropertyExpression">Espressione lambda che rappresenta la proprietà di navigazione sull'altra entità finale della relazione.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.WithOptionalDependent">
      <summary>Configura la relazione in modo che sia di tipo facoltativa:facoltativa senza una proprietà di navigazione sull'altro lato della relazione.Il tipo di entità configurato sarà il tipo dipendente e conterrà una chiave esterna per il tipo principale.Il tipo di entità che rappresenta la destinazione della relazione sarà il tipo principale nella relazione.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.WithOptionalDependent(System.Linq.Expressions.Expression{System.Func{`1,`0}})">
      <summary>Configura la relazione in modo che sia di tipo facoltativa:facoltativa con una proprietà di navigazione sull'altro lato della relazione.Il tipo di entità configurato sarà il tipo dipendente e conterrà una chiave esterna per il tipo principale.Il tipo di entità che rappresenta la destinazione della relazione sarà il tipo principale nella relazione.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
      <param name="navigationPropertyExpression">Espressione lambda che rappresenta la proprietà di navigazione sull'altra entità finale della relazione.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.WithOptionalPrincipal">
      <summary>Configura la relazione in modo che sia di tipo facoltativa:facoltativa senza una proprietà di navigazione sull'altro lato della relazione.Il tipo di entità configurato sarà il tipo principale nella relazione.Il tipo di entità che rappresenta la destinazione della relazione sarà il tipo dipendente e conterrà una chiave esterna per il tipo principale.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.WithOptionalPrincipal(System.Linq.Expressions.Expression{System.Func{`1,`0}})">
      <summary>Configura la relazione in modo che sia di tipo facoltativa:facoltativa con una proprietà di navigazione sull'altro lato della relazione.Il tipo di entità configurato sarà il tipo principale nella relazione.Il tipo di entità che rappresenta la destinazione della relazione sarà il tipo dipendente e conterrà una chiave esterna per il tipo principale.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
      <param name="navigationPropertyExpression">Espressione lambda che rappresenta la proprietà di navigazione sull'altra entità finale della relazione.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.WithRequired">
      <summary>Configura la relazione in modo che sia di tipo facoltativa:obbligatoria senza una proprietà di navigazione sull'altro lato della relazione.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.WithRequired(System.Linq.Expressions.Expression{System.Func{`1,`0}})">
      <summary>Configura la relazione in modo che sia di tipo facoltativa:obbligatoria con una proprietà di navigazione sull'altro lato della relazione.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
      <param name="navigationPropertyExpression">Espressione lambda che rappresenta la proprietà di navigazione sull'altra entità finale della relazione.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.PrimitiveColumnConfiguration">
      <summary>Configura una colonna primitiva da un tipo di entità.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitiveColumnConfiguration.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitiveColumnConfiguration.GetHashCode">
      <summary>Funge da funzione hash per un tipo specifico.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitiveColumnConfiguration.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitiveColumnConfiguration.HasColumnOrder(System.Nullable{System.Int32})">
      <summary>Configura l'ordine della colonna primitiva utilizzata per archiviare la proprietà.Questo metodo viene utilizzato inoltre per specificare l'ordinamento di chiavi quando un tipo di entità dispone di una chiave composta.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.PrimitiveColumnConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnOrder">Ordine di visualizzazione di questa colonna nella tabella di database.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitiveColumnConfiguration.HasColumnType(System.String)">
      <summary>Configura il tipo di dati della colonna primitiva utilizzata per archiviare la proprietà.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.PrimitiveColumnConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnType">Nome del tipo di dati specifico del provider del database.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitiveColumnConfiguration.IsOptional">
      <summary>Configura la colonna primitiva in modo che sia facoltativa.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.PrimitiveColumnConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitiveColumnConfiguration.IsRequired">
      <summary>Configura la colonna primitiva in modo che sia obbligatoria.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.PrimitiveColumnConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitiveColumnConfiguration.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration">
      <summary>Fornisce i metodi usati per configurare una proprietà primitiva di un tipo di entità o di un tipo complesso.Questa funzionalità di configurazione è disponibile utilizzando l'API Fluent Code First (vedere <see cref="T:System.Data.Entity.DbModelBuilder" />).</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.Equals(System.Object)">
      <summary>Determina se questa istanza è uguale all'oggetto specificato.</summary>
      <returns>true se questa istanza è uguale all'oggetto specificato. In caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza corrente.</summary>
      <returns>Codice hash per l'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.HasColumnAnnotation(System.String,System.Object)">
      <summary>Imposta un'annotazione nel modello per la colonna di database utilizzata per archiviare la proprietà.Il valore di annotazione può essere successivamente utilizzato durante l'elaborazione della colonna, ad esempio durante la creazione delle migrazioni.</summary>
      <returns>Stessa istanza di PrimitivePropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="name">Nome dell'annotazione che deve essere un identificatore C#/EDM valido.</param>
      <param name="value">Valore dell'annotazione che può essere una stringa o un altro tipo che è possibile serializzare con <see cref="T:System.Data.Entity.Infrastructure.IMetadataAnnotationSerializer" /></param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.HasColumnName(System.String)">
      <summary>Configura il nome della colonna di database utilizzata per archiviare la proprietà.</summary>
      <returns>Stessa istanza di PrimitivePropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnName">Nome della colonna.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.HasColumnOrder(System.Nullable{System.Int32})">
      <summary>Configura l'ordine della colonna di database utilizzata per archiviare la proprietà.Questo metodo viene utilizzato inoltre per specificare l'ordinamento di chiavi quando un tipo di entità dispone di una chiave composta.</summary>
      <returns>Stessa istanza di PrimitivePropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnOrder">Ordine di visualizzazione di questa colonna nella tabella di database.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.HasColumnType(System.String)">
      <summary>Configura il tipo di dati della colonna di database utilizzata per archiviare la proprietà.</summary>
      <returns>Stessa istanza di PrimitivePropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnType">Nome del tipo di dati specifico del provider del database.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.HasDatabaseGeneratedOption(System.Nullable{System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption})">
      <summary>Configura la modalità con cui i valori della proprietà vengono generati dal database.</summary>
      <returns>Stessa istanza di PrimitivePropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="databaseGeneratedOption">Pattern utilizzato per la generazione dei valori per la proprietà nel database.Se si imposta "null" verrà utilizzata l'opzione predefinita che può essere "None", "Identity" o "Computed" a seconda del tipo di proprietà, della relativa semantica nel modello (ad esempiole chiavi primarie vengono gestite in modo diverso) e del set di convenzioni utilizzate.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.HasParameterName(System.String)">
      <summary>Configura il nome del parametro utilizzato nelle stored procedure per questa proprietà.</summary>
      <returns>Stessa istanza di PrimitivePropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="parameterName">Nome del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.IsConcurrencyToken">
      <summary>Configura la proprietà da utilizzare come token di concorrenza ottimistica.</summary>
      <returns>Stessa istanza di PrimitivePropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.IsConcurrencyToken(System.Nullable{System.Boolean})">
      <summary>Configura un valore che indica se la proprietà deve essere utilizzata o meno come token di concorrenza ottimistica.</summary>
      <returns>Stessa istanza di PrimitivePropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="concurrencyToken">Valore che indica se la proprietà è o meno un token di concorrenza.L'impostazione "null" rimuoverà il facet del token di concorrenza dalla proprietà.Il comportamento in fase di esecuzione causato da tale impostazione è analogo a quello ottenuto specificando 'false'.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.IsOptional">
      <summary>Configura la proprietà in modo che sia facoltativa.La colonna di database utilizzata per archiviare questa proprietà ammetterà i valori Null.</summary>
      <returns>Stessa istanza di PrimitivePropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.IsRequired">
      <summary>Configura la proprietà in modo che sia obbligatoria.La colonna di database utilizzata per archiviare questa proprietà non ammetterà i valori Null.</summary>
      <returns>Stessa istanza di PrimitivePropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.ToString">
      <summary>Restituisce la rappresentazione di stringa di questa istanza.</summary>
      <returns>Rappresentazione di stringa di questa istanza.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.PropertyConventionConfiguration">
      <summary>Consente di eseguire la configurazione per una convenzione leggera basata sulle proprietà in un modello.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PropertyConventionConfiguration.Configure(System.Action{System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration})">
      <summary>Consente la configurazione delle proprietà a cui si applica questa convenzione.</summary>
      <param name="propertyConfigurationAction">Azione che esegue la configurazione su un oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration" />.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PropertyConventionConfiguration.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se l'oggetto specificato è uguale all'oggetto corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PropertyConventionConfiguration.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash per l'istanza.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PropertyConventionConfiguration.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PropertyConventionConfiguration.Having``1(System.Func{System.Reflection.PropertyInfo,``0})">
      <summary>Filtra le proprietà a cui si applica questa convenzione in base a un predicato durante l'acquisizione di un valore da utilizzare in seguito durante la configurazione.</summary>
      <returns>Istanza di <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.PropertyConventionWithHavingConfiguration`1" /> in modo da poter concatenare più chiamate.</returns>
      <param name="capturingPredicate">Funzione per acquisire un valore per ogni proprietà.Se il valore è Null, la proprietà verrà esclusa.</param>
      <typeparam name="T">Tipo del valore acquisito.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PropertyConventionConfiguration.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente.</summary>
      <returns>Oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PropertyConventionConfiguration.Where(System.Func{System.Reflection.PropertyInfo,System.Boolean})">
      <summary>Filtra le proprietà a cui si applica questa convenzione in base a un predicato.</summary>
      <returns>Istanza di <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.PropertyConventionConfiguration" /> in modo da poter concatenare più chiamate.</returns>
      <param name="predicate">Funzione per testare ogni proprietà per una condizione.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.PropertyConventionWithHavingConfiguration`1">
      <summary>Consente di eseguire la configurazione per una convenzione leggera in base alle proprietà dei tipi di entità in un modello e un valore acquisito.</summary>
      <typeparam name="T">Tipo del valore acquisito.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PropertyConventionWithHavingConfiguration`1.Configure(System.Action{System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration,`0})">
      <summary>Consente la configurazione delle proprietà a cui si applica questa convenzione.</summary>
      <param name="propertyConfigurationAction">Azione che esegue la configurazione su un oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration" /> utilizzando un valore acquisito.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PropertyConventionWithHavingConfiguration`1.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se l'oggetto specificato è uguale all'oggetto corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PropertyConventionWithHavingConfiguration`1.GetHashCode">
      <summary>Funge da funzione hash per un tipo specifico.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PropertyConventionWithHavingConfiguration`1.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PropertyConventionWithHavingConfiguration`1.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration">
      <summary>Utilizzato per configurare una proprietà in un frammento di mapping.Questa funzionalità di configurazione è disponibile utilizzando l'API Fluent Code First (vedere <see cref="T:System.Data.Entity.DbModelBuilder" />).</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration.HasColumnAnnotation(System.String,System.Object)">
      <summary>Imposta un'annotazione nel modello per la colonna di database utilizzata per archiviare la proprietà.Il valore di annotazione può essere successivamente utilizzato durante l'elaborazione della colonna, ad esempio durante la creazione delle migrazioni.</summary>
      <returns>Stessa istanza di PropertyMappingConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="name">Nome dell'annotazione che deve essere un identificatore C#/EDM valido.</param>
      <param name="value">Valore dell'annotazione che può essere una stringa o un altro tipo che è possibile serializzare con <see cref="T:System.Data.Entity.Infrastructure.IMetadataAnnotationSerializer" /></param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration.HasColumnName(System.String)">
      <summary>Configura il nome della colonna di database utilizzata per archiviare la proprietà, in un frammento di mapping.</summary>
      <returns>Stessa istanza di PropertyMappingConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnName">Nome della colonna.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2">
      <summary>Configura una relazione obbligatoria da un tipo di entità.</summary>
      <typeparam name="TEntityType">Tipo di entità da cui ha origine la relazione.</typeparam>
      <typeparam name="TTargetEntityType">Tipo di entità che rappresenta la destinazione della relazione.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2.Equals(System.Object)">
      <summary>Specifica se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se l'oggetto specificato è uguale all'oggetto corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2.GetHashCode">
      <summary>Ottiene il codice hash associato all'oggetto corrente.</summary>
      <returns>Codice hash associato all'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2.ToString">
      <summary>Restituisce una rappresentazione di stringa dell'oggetto corrente.</summary>
      <returns>Rappresentazione di stringa dell'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2.WithMany">
      <summary>Configura la relazione in modo che sia di tipo obbligatoria:molti senza una proprietà di navigazione sull'altro lato della relazione.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2.WithMany(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.ICollection{`0}}})">
      <summary>Configura la relazione in modo che sia di tipo obbligatoria:molti con una proprietà di navigazione sull'altro lato della relazione.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
      <param name="navigationPropertyExpression">Espressione lambda che rappresenta la proprietà di navigazione sull'altra entità finale della relazione.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2.WithOptional">
      <summary>Configura la relazione in modo che sia di tipo obbligatoria:facoltativa senza una proprietà di navigazione sull'altro lato della relazione.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2.WithOptional(System.Linq.Expressions.Expression{System.Func{`1,`0}})">
      <summary>Configura la relazione in modo che sia di tipo obbligatoria:facoltativa con una proprietà di navigazione sull'altro lato della relazione.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
      <param name="navigationPropertyExpression">Espressione lambda che rappresenta la proprietà di navigazione sull'altra entità finale della relazione.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2.WithRequiredDependent">
      <summary>Configura la relazione in modo che sia di tipo obbligatoria:obbligatoria senza una proprietà di navigazione sull'altro lato della relazione.Il tipo di entità configurato sarà il tipo dipendente e conterrà una chiave esterna per il tipo principale.Il tipo di entità che rappresenta la destinazione della relazione sarà il tipo principale nella relazione.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2.WithRequiredDependent(System.Linq.Expressions.Expression{System.Func{`1,`0}})">
      <summary>Configura la relazione in modo che sia di tipo obbligatoria:obbligatoria con una proprietà di navigazione sull'altro lato della relazione.Il tipo di entità configurato sarà il tipo dipendente e conterrà una chiave esterna per il tipo principale.Il tipo di entità che rappresenta la destinazione della relazione sarà il tipo principale nella relazione.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
      <param name="navigationPropertyExpression">Espressione lambda che rappresenta la proprietà di navigazione sull'altra entità finale della relazione.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2.WithRequiredPrincipal">
      <summary>Configura la relazione in modo che sia di tipo obbligatoria:obbligatoria senza una proprietà di navigazione sull'altro lato della relazione.Il tipo di entità configurato sarà il tipo principale nella relazione.Il tipo di entità che rappresenta la destinazione della relazione sarà il tipo dipendente e conterrà una chiave esterna per il tipo principale.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2.WithRequiredPrincipal(System.Linq.Expressions.Expression{System.Func{`1,`0}})">
      <summary>Configura la relazione in modo che sia di tipo obbligatoria:obbligatoria con una proprietà di navigazione sull'altro lato della relazione.Il tipo di entità configurato sarà il tipo principale nella relazione.Il tipo di entità che rappresenta la destinazione della relazione sarà il tipo dipendente e conterrà una chiave esterna per il tipo principale.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
      <param name="navigationPropertyExpression">Espressione lambda che rappresenta la proprietà di navigazione sull'altra entità finale della relazione.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration">
      <summary>Configura una colonna di database utilizzata per archiviare valori stringa.Questa funzionalità di configurazione è disponibile utilizzando l'API Fluent Code First (vedere <see cref="T:System.Data.Entity.DbModelBuilder" />).</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration.GetHashCode">
      <summary>Funge da funzione hash per un tipo specifico.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration.GetType">
      <summary>Ottiene il tipo dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration.HasColumnOrder(System.Nullable{System.Int32})">
      <summary>Configura l'ordine della colonna di database.</summary>
      <returns>Stessa istanza di StringColumnConfiguration in modo da poter concatenare più chiamate.</returns>
      <param name="columnOrder">Ordine di visualizzazione di questa colonna nella tabella di database.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration.HasColumnType(System.String)">
      <summary>Configura il tipo di dati della colonna di database.</summary>
      <returns>Stessa istanza di StringColumnConfiguration in modo da poter concatenare più chiamate.</returns>
      <param name="columnType">Nome del tipo di dati specifico del provider del database.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration.HasMaxLength(System.Nullable{System.Int32})">
      <summary>Configura la proprietà in modo che disponga della lunghezza massima specificata.</summary>
      <returns>Stessa istanza di StringColumnConfiguration in modo da poter concatenare più chiamate.</returns>
      <param name="value">Lunghezza massima per la proprietà.L'impostazione di Null comporterà l'utilizzo di una lunghezza predefinita per la colonna.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration.IsFixedLength">
      <summary>Configura la colonna in modo che sia a lunghezza fissa.Utilizzare HasMaxLength per impostare la lunghezza a cui è fissa la proprietà.</summary>
      <returns>Stessa istanza di StringColumnConfiguration in modo da poter concatenare più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration.IsMaxLength">
      <summary>Configura la colonna per consentire la lunghezza massima supportata dal provider del database.</summary>
      <returns>Stessa istanza di StringColumnConfiguration in modo da poter concatenare più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration.IsOptional">
      <summary>Configura la colonna in modo che sia facoltativa.</summary>
      <returns>Stessa istanza di StringColumnConfiguration in modo da poter concatenare più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration.IsRequired">
      <summary>Configura la colonna in modo che sia obbligatoria.</summary>
      <returns>Stessa istanza di StringColumnConfiguration in modo da poter concatenare più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration.IsUnicode">
      <summary>Configura la colonna per supportare il contenuto della stringa Unicode.</summary>
      <returns>Stessa istanza di StringColumnConfiguration in modo da poter concatenare più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration.IsUnicode(System.Nullable{System.Boolean})">
      <summary>Configura un valore che indica se la colonna supporta o meno il contenuto della stringa Unicode.</summary>
      <returns>Stessa istanza di StringColumnConfiguration in modo da poter concatenare più chiamate.</returns>
      <param name="unicode">Valore che indica se la colonna supporta o meno il contenuto della stringa Unicode.L'impostazione 'Null' rimuoverà il facet Unicode dalla colonna.Il comportamento in fase di esecuzione causato da tale impostazione è analogo a quello ottenuto specificando 'false'.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration.IsVariableLength">
      <summary>Configura la colonna in modo che sia a lunghezza variabile.Le colonne sono a lunghezza variabile per impostazione predefinita.</summary>
      <returns>Stessa istanza di StringColumnConfiguration in modo da poter concatenare più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration">
      <summary>Utilizzato per configurare una proprietà <see cref="T:System.string" /> di un tipo di entità o di un tipo complesso.Questa funzionalità di configurazione è disponibile utilizzando l'API Fluent Code First (vedere <see cref="T:System.Data.Entity.DbModelBuilder" />).</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration.HasColumnAnnotation(System.String,System.Object)">
      <summary>Imposta un'annotazione nel modello per la colonna di database utilizzata per archiviare la proprietà.Il valore di annotazione può essere successivamente utilizzato durante l'elaborazione della colonna, ad esempio durante la creazione delle migrazioni.</summary>
      <returns>Stessa istanza di StringPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="name">Nome dell'annotazione che deve essere un identificatore C#/EDM valido.</param>
      <param name="value">Valore dell'annotazione che può essere una stringa o un altro tipo che è possibile serializzare con <see cref="T:System.Data.Entity.Infrastructure.IMetadataAnnotationSerializer" />.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration.HasColumnName(System.String)">
      <summary>Configura il nome della colonna di database utilizzata per archiviare la proprietà.</summary>
      <returns>Stessa istanza di StringPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnName">Nome della colonna.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration.HasColumnOrder(System.Nullable{System.Int32})">
      <summary>Configura l'ordine della colonna di database utilizzata per archiviare la proprietà.Questo metodo viene utilizzato inoltre per specificare l'ordinamento di chiavi quando un tipo di entità dispone di una chiave composta.</summary>
      <returns>Stessa istanza di StringPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnOrder">Ordine di visualizzazione di questa colonna nella tabella di database.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration.HasColumnType(System.String)">
      <summary>Configura il tipo di dati della colonna di database utilizzata per archiviare la proprietà.</summary>
      <returns>Stessa istanza di StringPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnType">Nome del tipo di dati specifico del provider del database.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration.HasDatabaseGeneratedOption(System.Nullable{System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption})">
      <summary>Configura la modalità con cui i valori della proprietà vengono generati dal database.</summary>
      <returns>Stessa istanza di StringPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="databaseGeneratedOption">Pattern utilizzato per la generazione dei valori per la proprietà nel database.Se si imposta "null" verrà utilizzata l'opzione predefinita che può essere "None", "Identity" o "Computed" a seconda del tipo di proprietà, della relativa semantica nel modello (ad esempiole chiavi primarie vengono gestite in modo diverso) e del set di convenzioni utilizzate.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration.HasMaxLength(System.Nullable{System.Int32})">
      <summary>Configura la proprietà in modo che disponga della lunghezza massima specificata.</summary>
      <returns>Stessa istanza di StringPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="value">Lunghezza massima per la proprietà.L'impostazione del valore su 'Null' rimuoverà qualsiasi restrizione di lunghezza massima dalla proprietà e per la colonna di database verrà utilizzata una lunghezza predefinita.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration.IsConcurrencyToken">
      <summary>Configura la proprietà da utilizzare come token di concorrenza ottimistica.</summary>
      <returns>Stessa istanza di StringPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration.IsConcurrencyToken(System.Nullable{System.Boolean})">
      <summary>Configura un valore che indica se la proprietà deve essere utilizzata o meno come token di concorrenza ottimistica.</summary>
      <returns>Stessa istanza di StringPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="concurrencyToken">Valore che indica se la proprietà è o meno un token di concorrenza.L'impostazione "null" rimuoverà il facet del token di concorrenza dalla proprietà.Il comportamento in fase di esecuzione causato da tale impostazione è analogo a quello ottenuto specificando 'false'.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration.IsFixedLength">
      <summary>Configura la proprietà in modo che sia a lunghezza fissa.Utilizzare HasMaxLength per impostare la lunghezza a cui è fissa la proprietà.</summary>
      <returns>Stessa istanza di StringPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration.IsMaxLength">
      <summary>Configura la proprietà per consentire la lunghezza massima supportata dal provider del database.</summary>
      <returns>Stessa istanza di StringPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration.IsOptional">
      <summary>Configura la proprietà in modo che sia facoltativa.La colonna di database utilizzata per archiviare questa proprietà ammetterà i valori Null.Le proprietà <see cref="T:System.string" /> sono facoltative per impostazione predefinita.</summary>
      <returns>Stessa istanza di StringPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration.IsRequired">
      <summary>Configura la proprietà in modo che sia obbligatoria.La colonna di database utilizzata per archiviare questa proprietà non ammetterà i valori Null.</summary>
      <returns>Stessa istanza di StringPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration.IsUnicode">
      <summary>Configura la proprietà per supportare il contenuto della stringa Unicode.</summary>
      <returns>Stessa istanza di StringPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration.IsUnicode(System.Nullable{System.Boolean})">
      <summary>Configura un valore che indica se la proprietà supporta o meno il contenuto della stringa Unicode.</summary>
      <returns>Stessa istanza di StringPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="unicode">Valore che indica se la proprietà supporta o meno il contenuto della stringa Unicode.L'impostazione 'Null' rimuoverà il facet Unicode dalla proprietà.Il comportamento in fase di esecuzione causato da tale impostazione è analogo a quello ottenuto specificando 'false'.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration.IsVariableLength">
      <summary>Configura la proprietà in modo che sia a lunghezza variabile.Le proprietà <see cref="T:System.string" /> sono a lunghezza variabile per impostazione predefinita.</summary>
      <returns>Stessa istanza di StringPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1">
      <summary>Consente di eseguire la configurazione di un tipo in un modello.</summary>
      <typeparam name="TStructuralType">Tipo da configurare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se l'oggetto specificato è uguale all'oggetto corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.GetHashCode">
      <summary>Funge da funzione hash per un tipo specifico.</summary>
      <returns>Codice hash per l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Byte[]}})">
      <summary>Configura una proprietà <see cref="T:System.byte[]" /> definita in questo tipo.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Data.Entity.Spatial.DbGeography}})">
      <summary>Configura una proprietà <see cref="T:DbGeography" /> definita in questo tipo.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Data.Entity.Spatial.DbGeometry}})">
      <summary>Configura una proprietà <see cref="T:DbGeometry" /> definita in questo tipo.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.DateTime}})">
      <summary>Configura una proprietà <see cref="T:System.DateTime" /> definita in questo tipo.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.DateTimeOffset}})">
      <summary>Configura una proprietà <see cref="T:System.DateTimeOffset" /> definita in questo tipo.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Decimal}})">
      <summary>Configura una proprietà <see cref="T:System.decimal" /> definita in questo tipo.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.DateTime}}})">
      <summary>Configura una proprietà <see cref="T:System.DateTime?" /> definita in questo tipo.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.DateTimeOffset}}})">
      <summary>Configura una proprietà <see cref="T:System.DateTimeOffset?" /> definita in questo tipo.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Decimal}}})">
      <summary>Configura una proprietà <see cref="T:System.decimal?" /> definita in questo tipo.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.TimeSpan}}})">
      <summary>Configura una proprietà <see cref="T:System.TimeSpan?" /> definita in questo tipo.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{``0}}})">
      <summary>Configura una proprietà <see cref="T:System.struct?" /> definita in questo tipo.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <typeparam name="T">Tipo della proprietà configurata.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
      <summary>Configura una proprietà <see cref="T:System.string" /> definita in questo tipo.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.TimeSpan}})">
      <summary>Configura una proprietà <see cref="T:System.TimeSpan" /> definita in questo tipo.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Configura una proprietà <see cref="T:System.struct" /> definita in questo tipo.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <typeparam name="T">Tipo della proprietà configurata.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.TypeConventionConfiguration">
      <summary>Consente di eseguire la configurazione per una convenzione leggera basata sui tipi di entità in un modello.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.TypeConventionConfiguration.Configure(System.Action{System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration})">
      <summary>Consente la configurazione dei tipi di entità a cui si applica questa convenzione.</summary>
      <param name="entityConfigurationAction">Azione che esegue la configurazione su un oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" />.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.TypeConventionConfiguration.Equals(System.Object)">
      <summary>Specifica se questa istanza è uguale a un oggetto specificato.</summary>
      <returns>true se questa istanza è uguale a un oggetto specificato. In caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.TypeConventionConfiguration.GetHashCode">
      <summary>Ottiene il codice hash per questa istanza.</summary>
      <returns>Codice hash per l'istanza.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.TypeConventionConfiguration.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.TypeConventionConfiguration.Having``1(System.Func{System.Type,``0})">
      <summary>Filtra i tipi di entità a cui si applica questa convenzione in base a un predicato durante l'acquisizione di un valore da utilizzare in seguito durante la configurazione.</summary>
      <returns>Istanza di <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.TypeConventionWithHavingConfiguration`1" /> in modo da poter concatenare più chiamate.</returns>
      <param name="capturingPredicate">Funzione per acquisire un valore per ogni tipo di entità.Se il valore è Null, il tipo di entità verrà escluso.</param>
      <typeparam name="T">Tipo del valore acquisito.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.TypeConventionConfiguration.ToString">
      <summary>Restituisce una rappresentazione di stringa di questa istanza.</summary>
      <returns>Rappresentazione di stringa di questa istanza.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.TypeConventionConfiguration.Where(System.Func{System.Type,System.Boolean})">
      <summary>Filtra i tipi di entità a cui si applica questa convenzione in base a un predicato.</summary>
      <returns>Istanza di <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.TypeConventionConfiguration" /> in modo da poter concatenare più chiamate.</returns>
      <param name="predicate">Funzione per testare ogni tipo di entità per una condizione.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.TypeConventionConfiguration`1">
      <summary>Consente di eseguire la configurazione per una convenzione leggera in base ai tipi di entità in un modello che ereditano da un tipo specificato comune.</summary>
      <typeparam name="T">Tipo comune dei tipi di entità a cui si applica questa convenzione.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.TypeConventionConfiguration`1.Configure(System.Action{System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration{`0}})">
      <summary>Consente la configurazione dei tipi di entità a cui si applica questa convenzione.</summary>
      <param name="entityConfigurationAction">Azione che esegue la configurazione su un oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration`1" />.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.TypeConventionConfiguration`1.Equals(System.Object)">
      <summary>Specifica se questa istanza è uguale a un oggetto specificato.</summary>
      <returns>true se questa istanza è uguale a un oggetto specificato. In caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.TypeConventionConfiguration`1.GetHashCode">
      <summary>Ottiene il codice hash per questa istanza.</summary>
      <returns>Codice hash per l'istanza.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.TypeConventionConfiguration`1.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.TypeConventionConfiguration`1.Having``1(System.Func{System.Type,``0})">
      <summary>Filtra i tipi di entità a cui si applica questa convenzione in base a un predicato durante l'acquisizione di un valore da utilizzare in seguito durante la configurazione.</summary>
      <returns>Istanza di <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.TypeConventionWithHavingConfiguration`2" /> in modo da poter concatenare più chiamate.</returns>
      <param name="capturingPredicate">Funzione per acquisire un valore per ogni tipo di entità.Se il valore è Null, il tipo di entità verrà escluso.</param>
      <typeparam name="TValue">Tipo del valore acquisito.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.TypeConventionConfiguration`1.ToString">
      <summary>Restituisce una rappresentazione di stringa di questa istanza.</summary>
      <returns>Rappresentazione di stringa di questa istanza.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.TypeConventionConfiguration`1.Where(System.Func{System.Type,System.Boolean})">
      <summary>Filtra i tipi di entità a cui si applica questa convenzione in base a un predicato.</summary>
      <returns>Istanza di <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.TypeConventionConfiguration`1" /> in modo da poter concatenare più chiamate.</returns>
      <param name="predicate">Funzione per testare ogni tipo di entità per una condizione.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.TypeConventionWithHavingConfiguration`1">
      <summary>Consente di eseguire la configurazione per una convenzione leggera in base ai tipi di entità in un modello e un valore acquisito.</summary>
      <typeparam name="T">Tipo del valore acquisito.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.TypeConventionWithHavingConfiguration`1.Configure(System.Action{System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration,`0})">
      <summary>Consente la configurazione dei tipi di entità a cui si applica questa convenzione.</summary>
      <param name="entityConfigurationAction">Azione che esegue la configurazione su un oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" /> utilizzando un valore acquisito.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.TypeConventionWithHavingConfiguration`1.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se l'oggetto specificato è uguale all'oggetto corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto con cui eseguire il confronto.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.TypeConventionWithHavingConfiguration`1.GetHashCode">
      <summary>Recupera il codice hash dell'istanza corrente.</summary>
      <returns>Codice hash dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.TypeConventionWithHavingConfiguration`1.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.TypeConventionWithHavingConfiguration`1.ToString">
      <summary>Converte un valore dell'istanza corrente nella rappresentazione di stringa equivalente.</summary>
      <returns>Rappresentazione di stringa dell'istanza corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.TypeConventionWithHavingConfiguration`2">
      <summary>Consente di eseguire la configurazione per una convenzione leggera in base ai tipi di entità in un modello che ereditano da un tipo specificato comune e un valore acquisito.</summary>
      <typeparam name="T">Tipo comune dei tipi di entità a cui si applica questa convenzione.</typeparam>
      <typeparam name="TValue">Tipo del valore acquisito.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.TypeConventionWithHavingConfiguration`2.Configure(System.Action{System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration{`0},`1})">
      <summary>Consente la configurazione dei tipi di entità a cui si applica questa convenzione.</summary>
      <param name="entityConfigurationAction">Azione che esegue la configurazione su un oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration`1" /> utilizzando un valore acquisito.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.TypeConventionWithHavingConfiguration`2.Equals(System.Object)">
      <summary>Specifica se questa istanza è uguale a un oggetto specificato.</summary>
      <returns>true se questa istanza è uguale a un oggetto specificato. In caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.TypeConventionWithHavingConfiguration`2.GetHashCode">
      <summary>Ottiene il codice hash per questa istanza.</summary>
      <returns>Codice hash per l'istanza.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.TypeConventionWithHavingConfiguration`2.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.TypeConventionWithHavingConfiguration`2.ToString">
      <summary>Restituisce una rappresentazione di stringa di questa istanza.</summary>
      <returns>Rappresentazione di stringa di questa istanza.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration`1">
      <summary>Consente di eseguire la configurazione per una stored procedure utilizzata per aggiornare entità.</summary>
      <typeparam name="TEntityType">Tipo dell'entità per il cui aggiornamento è possibile utilizzare la stored procedure.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration`1.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale a questa istanza dell'oggetto.</summary>
      <returns>true se l'oggetto specificato è uguale a questa istanza. In caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration`1.GetHashCode">
      <summary>Recupera il codice hash.</summary>
      <returns>Codice hash.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration`1.GetType">
      <summary>Recupera il tipo di questa configurazione.</summary>
      <returns>Tipo di questa configurazione.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration`1.HasName(System.String)">
      <summary>Configura il nome della stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="procedureName">Nome della stored procedure.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration`1.HasName(System.String,System.String)">
      <summary>Configura il nome della stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="procedureName">Nome della stored procedure.</param>
      <param name="schemaName">Nome dello schema.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration`1.Navigation``1(System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.ICollection{`0}}},System.Action{System.Data.Entity.ModelConfiguration.Configuration.AssociationModificationStoredProcedureConfiguration{``0}})">
      <summary>Configura i parametri per una relazione in cui la proprietà di chiave esterna non è inclusa nella classe.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="navigationPropertyExpression">Espressione lambda che rappresenta la proprietà di navigazione per la relazione.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="associationModificationStoredProcedureConfigurationAction">Espressione lambda tramite cui viene eseguita la configurazione.</param>
      <typeparam name="TPrincipalEntityType">Tipo dell'entità principale nella relazione.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration`1.Navigation``1(System.Linq.Expressions.Expression{System.Func{``0,`0}},System.Action{System.Data.Entity.ModelConfiguration.Configuration.AssociationModificationStoredProcedureConfiguration{``0}})">
      <summary>Configura i parametri per una relazione in cui la proprietà di chiave esterna non è inclusa nella classe.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="navigationPropertyExpression">Espressione lambda che rappresenta la proprietà di navigazione per la relazione.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="associationModificationStoredProcedureConfigurationAction">Espressione lambda tramite cui viene eseguita la configurazione.</param>
      <typeparam name="TPrincipalEntityType">Tipo dell'entità principale nella relazione.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration`1.Parameter(System.Linq.Expressions.Expression{System.Func{`0,System.Byte[]}},System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il parametro.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="parameterName">Nome del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration`1.Parameter(System.Linq.Expressions.Expression{System.Func{`0,System.Byte[]}},System.String,System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il parametro.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="currentValueParameterName">Nome del parametro del valore corrente.</param>
      <param name="originalValueParameterName">Nome del parametro del valore originale.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration`1.Parameter(System.Linq.Expressions.Expression{System.Func{`0,System.Data.Entity.Spatial.DbGeography}},System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il parametro.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="parameterName">Nome del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration`1.Parameter(System.Linq.Expressions.Expression{System.Func{`0,System.Data.Entity.Spatial.DbGeography}},System.String,System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il parametro.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="currentValueParameterName">Nome del parametro del valore corrente.</param>
      <param name="originalValueParameterName">Nome del parametro del valore originale.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration`1.Parameter(System.Linq.Expressions.Expression{System.Func{`0,System.Data.Entity.Spatial.DbGeometry}},System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il parametro.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="parameterName">Nome del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration`1.Parameter(System.Linq.Expressions.Expression{System.Func{`0,System.Data.Entity.Spatial.DbGeometry}},System.String,System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il parametro.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="currentValueParameterName">Nome del parametro del valore corrente.</param>
      <param name="originalValueParameterName">Nome del parametro del valore originale.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration`1.Parameter``1(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{``0}}},System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il parametro.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="parameterName">Nome del parametro.</param>
      <typeparam name="TProperty">Tipo della proprietà da configurare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration`1.Parameter``1(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{``0}}},System.String,System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il parametro.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="currentValueParameterName">Nome del parametro del valore corrente.</param>
      <param name="originalValueParameterName">Nome del parametro del valore originale.</param>
      <typeparam name="TProperty">Tipo della proprietà da configurare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration`1.Parameter(System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il parametro.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="parameterName">Nome del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration`1.Parameter(System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.String,System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il parametro.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="currentValueParameterName">Nome del parametro del valore corrente.</param>
      <param name="originalValueParameterName">Nome del parametro del valore originale.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration`1.Parameter``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il parametro.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="parameterName">Nome del parametro.</param>
      <typeparam name="TProperty">Tipo della proprietà da configurare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration`1.Parameter``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.String)">
      <summary>Configura un parametro per questa stored procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il parametro.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="currentValueParameterName">Nome del parametro del valore corrente.</param>
      <param name="originalValueParameterName">Nome del parametro del valore originale.</param>
      <typeparam name="TProperty">Tipo della proprietà da configurare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration`1.Result(System.Linq.Expressions.Expression{System.Func{`0,System.Byte[]}},System.String)">
      <summary>Configura una colonna del risultato affinché venga eseguito il mapping di questa stored procedure a una proprietà.Viene utilizzato per colonne generate da database.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il risultato.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="columnName">Nome della colonna dei risultati.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration`1.Result(System.Linq.Expressions.Expression{System.Func{`0,System.Data.Entity.Spatial.DbGeography}},System.String)">
      <summary>Configura una colonna del risultato affinché venga eseguito il mapping di questa stored procedure a una proprietà.Viene utilizzato per colonne generate da database.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il risultato.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="columnName">Nome della colonna dei risultati.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration`1.Result(System.Linq.Expressions.Expression{System.Func{`0,System.Data.Entity.Spatial.DbGeometry}},System.String)">
      <summary>Configura una colonna del risultato affinché venga eseguito il mapping di questa stored procedure a una proprietà.Viene utilizzato per colonne generate da database.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il risultato.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="columnName">Nome della colonna dei risultati.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration`1.Result``1(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{``0}}},System.String)">
      <summary>Configura una colonna del risultato affinché venga eseguito il mapping di questa stored procedure a una proprietà.Viene utilizzato per colonne generate da database.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il risultato.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="columnName">Nome della colonna dei risultati.</param>
      <typeparam name="TProperty">Tipo della proprietà da configurare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration`1.Result(System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.String)">
      <summary>Configura una colonna del risultato affinché venga eseguito il mapping di questa stored procedure a una proprietà.Viene utilizzato per colonne generate da database.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il risultato.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="columnName">Nome della colonna dei risultati.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration`1.Result``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
      <summary>Configura una colonna del risultato affinché venga eseguito il mapping di questa stored procedure a una proprietà.Viene utilizzato per colonne generate da database.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà per cui configurare il risultato.C#: t =&amp;gt; t.MyProperty VB.Net: Function(t) t.MyProperty</param>
      <param name="columnName">Nome della colonna dei risultati.</param>
      <typeparam name="TProperty">Tipo della proprietà da configurare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration`1.RowsAffectedParameter(System.String)">
      <summary>Configura il parametro di output tramite cui vengono restituite le righe interessate da questa procedure.</summary>
      <returns>Stessa istanza di configurazione in modo da poter concatenare più chiamate.</returns>
      <param name="parameterName">Nome del parametro.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.UpdateModificationStoredProcedureConfiguration`1.ToString">
      <summary>Converte il valore di questa istanza nella rappresentazione di stringa equivalente.</summary>
      <returns>Rappresentazione di stringa del valore di questa istanza.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.ValueConditionConfiguration">
      <summary>Configura una colonna discriminatore utilizzata per distinguere i tipi in una gerarchia di ereditarietà.Questa funzionalità di configurazione è disponibile utilizzando l'API Fluent Code First (vedere <see cref="T:System.Data.Entity.DbModelBuilder" />).</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ValueConditionConfiguration.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ValueConditionConfiguration.GetHashCode">
      <summary>Funge da funzione hash per un tipo specifico.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ValueConditionConfiguration.GetType">
      <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'istanza corrente.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ValueConditionConfiguration.HasValue``1(System.Nullable{``0})">
      <summary>Configura il valore del discriminatore utilizzato per identificare il tipo di entità configurato da altri tipi nella gerarchia di ereditarietà.</summary>
      <returns>Oggetto di configurazione per configurare la colonna utilizzata per archiviare i valori discriminanti.</returns>
      <param name="value">Valore da utilizzare per identificare il tipo di entità.</param>
      <typeparam name="T">Tipo del valore discriminante.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ValueConditionConfiguration.HasValue(System.String)">
      <summary>Configura il valore del discriminatore utilizzato per identificare il tipo di entità configurato da altri tipi nella gerarchia di ereditarietà.</summary>
      <returns>Oggetto di configurazione per configurare la colonna utilizzata per archiviare i valori discriminanti.</returns>
      <param name="value">Valore da utilizzare per identificare il tipo di entità.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ValueConditionConfiguration.HasValue``1(``0)">
      <summary>Configura il valore del discriminatore utilizzato per identificare il tipo di entità configurato da altri tipi nella gerarchia di ereditarietà.</summary>
      <returns>Oggetto di configurazione per configurare la colonna utilizzata per archiviare i valori discriminanti.</returns>
      <param name="value">Valore da utilizzare per identificare il tipo di entità.</param>
      <typeparam name="T">Tipo del valore discriminante.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ValueConditionConfiguration.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.AssociationInverseDiscoveryConvention">
      <summary>Fornisce la convenzione per rilevare inversioni tra proprietà di navigazione quando tra i tipi correlati esiste una sola coppia di proprietà di navigazione.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.AssociationInverseDiscoveryConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.AssociationInverseDiscoveryConvention" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.AssociationInverseDiscoveryConvention.Apply(System.Data.Entity.Core.Metadata.Edm.EdmModel,System.Data.Entity.Infrastructure.DbModel)">
      <summary>Applica questa convenzione a un elemento del modello.</summary>
      <param name="item">Elemento a cui applicare la convenzione.</param>
      <param name="model">Modello.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.AttributeToColumnAnnotationConvention`2">
      <summary>Classe generica per le convenzioni Code First che leggono gli attributi dalle proprietà .NET e generano le annotazioni di colonna basate sugli attributi.</summary>
      <typeparam name="TAttribute">Tipo di attributo da individuare.</typeparam>
      <typeparam name="TAnnotation">Tipo di annotazione che verrà creato.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.AttributeToColumnAnnotationConvention`2.#ctor(System.String,System.Func{System.Reflection.PropertyInfo,System.Collections.Generic.IList{`0},`1})">
      <summary>Costruisce una convenzione che crea automaticamente le annotazioni di colonna con il nome specificato utilizzando il delegato specificato della factory.</summary>
      <param name="annotationName">Nome delle annotazioni da creare.</param>
      <param name="annotationFactory">Factory per creare l'annotazione in ogni colonna.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.AttributeToTableAnnotationConvention`2">
      <summary>Classe generica per le convenzioni Code First che leggono gli attributi dai tipi .NET e generano le annotazioni di tabella basate sugli attributi.</summary>
      <typeparam name="TAttribute">Tipo di attributo da individuare.</typeparam>
      <typeparam name="TAnnotation">Tipo di annotazione che verrà creato.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.AttributeToTableAnnotationConvention`2.#ctor(System.String,System.Func{System.Type,System.Collections.Generic.IList{`0},`1})">
      <summary>Costruisce una convenzione che crea automaticamente le annotazioni di tabella con il nome specificato utilizzando il delegato specificato della factory.</summary>
      <param name="annotationName">Nome delle annotazioni da creare.</param>
      <param name="annotationFactory">Factory per creare l'annotazione in ogni tabella.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.ColumnAttributeConvention">
      <summary>Rappresenta una convenzione per elaborare le istanze di <see cref="T:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute" /> trovate nelle proprietà nel modello.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.ColumnAttributeConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.ColumnAttributeConvention" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.ColumnAttributeConvention.Apply(System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration,System.ComponentModel.DataAnnotations.Schema.ColumnAttribute)">
      <summary>Applica la convenzione alla configurazione specificata.</summary>
      <param name="configuration">Configurazione.</param>
      <param name="attribute">Attributo della colonna.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.ColumnOrderingConvention">
      <summary>Rappresenta una convenzione per applicare l'ordinamento delle colonne specificato utilizzando l'API <see cref="T:System.ComponentModel.DataAnnotations.ColumnAttribute" /> o <see cref="T:System.Data.Entity.DbModelBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.ColumnOrderingConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.ColumnOrderingConvention" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.ColumnOrderingConvention.Apply(System.Data.Entity.Core.Metadata.Edm.EntityType,System.Data.Entity.Infrastructure.DbModel)">
      <summary>Applica la configurazione all'elemento specificato nel modello di mapping.</summary>
      <param name="item">Elemento.</param>
      <param name="model">Modello di mapping.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.ColumnOrderingConvention.ValidateColumns(System.Data.Entity.Core.Metadata.Edm.EntityType,System.String)">
      <summary>Convalida la configurazione di ordinamento fornita per le colonne.Questa implementazione di base non esegue alcuna operazione.</summary>
      <param name="table">Nome della tabella a cui appartengono le colonne.</param>
      <param name="tableName">Definizione della tabella.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.ColumnOrderingConventionStrict">
      <summary>Convenzione per applicare l'ordinamento delle colonne specificato utilizzando l'API <see cref="T:System.ComponentModel.DataAnnotations.ColumnAttribute" /> o <see cref="T:System.Data.Entity.DbModelBuilder" />.Questa convenzione genera un'eccezione se viene rilevato un ordine delle colonne configurato duplicato.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.ColumnOrderingConventionStrict.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.ColumnOrderingConventionStrict" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.ColumnOrderingConventionStrict.ValidateColumns(System.Data.Entity.Core.Metadata.Edm.EntityType,System.String)">
      <summary>Convalida la configurazione di ordinamento fornita per le colonne per garantire che non venga fornito lo stesso ordinale per due colonne.</summary>
      <param name="table">Nome della tabella a cui appartengono le colonne.</param>
      <param name="tableName">Definizione della tabella.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.ComplexTypeAttributeConvention">
      <summary>Rappresenta la convenzione per elaborare istanze di <see cref="T:System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute" /> trovate in tipi nel modello.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.ComplexTypeAttributeConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.ComplexTypeAttributeConvention" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.ComplexTypeAttributeConvention.Apply(System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration,System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute)">
      <summary>Applica la convenzione all'attributo e alla configurazione specificati.</summary>
      <param name="configuration">Configurazione.</param>
      <param name="attribute">Attributo.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.ComplexTypeDiscoveryConvention">
      <summary>Rappresenta una convenzione per configurare un tipo come complesso qualora non disponga di alcuna chiave primaria, di alcun tipo di base mappato e di alcuna proprietà di navigazione.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.ComplexTypeDiscoveryConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.ComplexTypeDiscoveryConvention" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.ComplexTypeDiscoveryConvention.Apply(System.Data.Entity.Core.Metadata.Edm.EdmModel,System.Data.Entity.Infrastructure.DbModel)">
      <summary>Applica la configurazione all'elemento specificato nel modello di mapping.</summary>
      <param name="item">Elemento.</param>
      <param name="model">Modello di mapping.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.ConcurrencyCheckAttributeConvention">
      <summary>Rappresenta la convenzione per elaborare le istanze di <see cref="T:System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute" /> trovate nelle proprietà nel modello.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.ConcurrencyCheckAttributeConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.ConcurrencyCheckAttributeConvention" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.ConcurrencyCheckAttributeConvention.Apply(System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration,System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute)">
      <summary>Applica questa convenzione a una proprietà.</summary>
      <param name="configuration">Configurazione per la proprietà con l'attributo.</param>
      <param name="attribute">Attributo.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.Convention">
      <summary>Convenzione che non esegue l'override della configurazione.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Convention.#ctor">
      <summary>La classe derivata può utilizzare il costruttore predefinito per applicare una regola impostata che modifica la configurazione del modello.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Convention.Properties">
      <summary>Avvia la configurazione di una convenzione leggera che si applica a tutte le proprietà nel modello.</summary>
      <returns>Oggetto configurazione per la convenzione.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Convention.Properties``1">
      <summary>Avvia la configurazione di una convenzione leggera che si applica a tutte le proprietà primitive del tipo specificato nel modello.</summary>
      <returns>Oggetto configurazione per la convenzione.</returns>
      <typeparam name="T">Tipo delle proprietà a cui si applica la convenzione.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Convention.Types``1">
      <summary>Avvia la configurazione di una convenzione leggera che si applica a tutti i tipi di cui è stato eseguito il mapping nel modello che deriva o implementa il tipo specificato.</summary>
      <returns>Oggetto configurazione per la convenzione.</returns>
      <typeparam name="T">Il tipo di entità a cui si applica questa convenzione.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.Convention.Types">
      <summary>Avvia la configurazione di una convenzione leggera che si applica a tutti i tipi di cui è stato eseguito il mapping nel modello.</summary>
      <returns>Oggetto configurazione per la convenzione.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.DatabaseGeneratedAttributeConvention">
      <summary>Rappresenta una convenzione per elaborare le istanze di <see cref="T:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute" /> trovate nelle proprietà nel modello.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.DatabaseGeneratedAttributeConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.DatabaseGeneratedAttributeConvention" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.DatabaseGeneratedAttributeConvention.Apply(System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration,System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute)">
      <summary>Applica la convenzione all'attributo con la configurazione specificata.</summary>
      <param name="configuration">Configurazione.</param>
      <param name="attribute">Attributo.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.DecimalPropertyConvention">
      <summary>Convenzione per impostare la precisione su 18 e la scala su 2 per proprietà decimal.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.DecimalPropertyConvention.#ctor">
      <summary>Inizializza una nuova istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.DecimalPropertyConvention" /> con i valori predefiniti.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.DecimalPropertyConvention.#ctor(System.Byte,System.Byte)">
      <summary>Inizializza una nuova istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.DecimalPropertyConvention" /> con la precisione e la scala specificate.</summary>
      <param name="precision">Precisione</param>
      <param name="scale">Scale</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.DecimalPropertyConvention.Apply(System.Data.Entity.Core.Metadata.Edm.EdmProperty,System.Data.Entity.Infrastructure.DbModel)">
      <summary>Applica questa convenzione a una proprietà.</summary>
      <param name="item">Elemento.</param>
      <param name="model">Modello.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.DeclaredPropertyOrderingConvention">
      <summary>Rappresenta una convenzione per spostare proprietà di chiave primaria da visualizzare per prima.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.DeclaredPropertyOrderingConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.DeclaredPropertyOrderingConvention" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.DeclaredPropertyOrderingConvention.Apply(System.Data.Entity.Core.Metadata.Edm.EntityType,System.Data.Entity.Infrastructure.DbModel)">
      <summary>Applica questa convenzione a un elemento del modello.</summary>
      <param name="item">Elemento a cui applicare la convenzione.</param>
      <param name="model">Modello.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyAssociationMultiplicityConvention">
      <summary>Rappresenta una convenzione per distinguere tra relazione facoltativa e relazione obbligatoria in base al supporto di valori Null CLR della proprietà di chiave esterna.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyAssociationMultiplicityConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyAssociationMultiplicityConvention" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyAssociationMultiplicityConvention.Apply(System.Data.Entity.Core.Metadata.Edm.AssociationType,System.Data.Entity.Infrastructure.DbModel)">
      <summary>Applica la configurazione all'elemento specificato nel modello di mapping.</summary>
      <param name="item">Elemento.</param>
      <param name="model">Modello di mapping.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyDiscoveryConvention">
      <summary>Rappresenta una classe di base per convenzioni che individuano le proprietà di chiave esterna.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyDiscoveryConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyDiscoveryConvention" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyDiscoveryConvention.Apply(System.Data.Entity.Core.Metadata.Edm.AssociationType,System.Data.Entity.Infrastructure.DbModel)">
      <summary>Applica questa convenzione a una proprietà.</summary>
      <param name="item">Elemento.</param>
      <param name="model">Modello.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyDiscoveryConvention.MatchDependentKeyProperty(System.Data.Entity.Core.Metadata.Edm.AssociationType,System.Data.Entity.Core.Metadata.Edm.AssociationEndMember,System.Data.Entity.Core.Metadata.Edm.EdmProperty,System.Data.Entity.Core.Metadata.Edm.EntityType,System.Data.Entity.Core.Metadata.Edm.EdmProperty)">
      <summary>Quando sottoposto a override, restituisce true se <paramref name="dependentProperty" /> deve far parte della chiave esterna.</summary>
      <returns>true se dependentProperty deve fare parte della chiave esterna. In caso contrario, false, false.</returns>
      <param name="associationType">Tipo di associazione configurata.</param>
      <param name="dependentAssociationEnd">Estremità dipendente.</param>
      <param name="dependentProperty">Proprietà candidata nell'estremità dipendente.</param>
      <param name="principalEntityType">Tipo di entità dell'estremità principale.</param>
      <param name="principalKeyProperty">Proprietà di chiave nell'estremità principale che è una destinazione candidata per la chiave esterna.</param>
    </member>
    <member name="P:System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyDiscoveryConvention.SupportsMultipleAssociations">
      <summary>Restituisce un valore che indica se la convenzione supporta coppie di tipi di entità che dispongono di più associazioni definite tra esse.</summary>
      <returns>true se la convenzione supporta coppie di tipi di entità che dispongono di più associazioni definite tra esse. In caso contrario, false.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyIndexConvention">
      <summary>Rappresenta una convenzione per introdurre gli indici per le chiavi esterne.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyIndexConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyIndexConvention" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyIndexConvention.Apply(System.Data.Entity.Core.Metadata.Edm.AssociationType,System.Data.Entity.Infrastructure.DbModel)">
      <summary>Applica questa convenzione a una proprietà.</summary>
      <param name="item">Elemento.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyNavigationPropertyAttributeConvention">
      <summary>Rappresenta una convenzione per elaborare istanze di <see cref="T:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute" /> trovate in proprietà di navigazione del modello.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyNavigationPropertyAttributeConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyNavigationPropertyAttributeConvention" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyNavigationPropertyAttributeConvention.Apply(System.Data.Entity.Core.Metadata.Edm.NavigationProperty,System.Data.Entity.Infrastructure.DbModel)">
      <summary>Applica questa convenzione a un elemento del modello.</summary>
      <param name="item">Elemento a cui applicare la convenzione.</param>
      <param name="model">Modello di database.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyPrimitivePropertyAttributeConvention">
      <summary>Rappresenta una convenzione per elaborare le istanze di <see cref="T:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute" /> trovate in proprietà di chiave esterna nel modello.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyPrimitivePropertyAttributeConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyPrimitivePropertyAttributeConvention" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyPrimitivePropertyAttributeConvention.Apply(System.Reflection.PropertyInfo,System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration,System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute)">
      <summary>Applica la configurazione all'attributo specificato.</summary>
      <param name="memberInfo">Informazioni sulle proprietà.</param>
      <param name="configuration">Configurazione da eseguire per un tipo di entità in un modello.</param>
      <param name="attribute">Proprietà o classe esclusa dal mapping del database.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.IConceptualModelConvention`1">
      <summary>Convenzione utilizzata nella sezione concettuale del modello dopo la creazione del modello.</summary>
      <typeparam name="T">Tipo di elemento di metadati su cui viene eseguita questa convenzione.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.IConceptualModelConvention`1.Apply(`0,System.Data.Entity.Infrastructure.DbModel)">
      <summary>Applica questa convenzione a un elemento del modello.</summary>
      <param name="item">Elemento a cui applicare la convenzione.</param>
      <param name="model">Modello.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.IConvention">
      <summary>Identifica convenzioni che è possibile aggiungere o rimuovere da un'istanza di <see cref="T:System.Data.Entity.DbModelBuilder" />.</summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.IdKeyDiscoveryConvention">
      <summary>Convenzione per rilevare proprietà di chiave primaria.Criteri di denominazione riconosciuti in ordine di precedenza: 1. 'Id' 2.[nome tipo]Id Il rilevamento della chiave primaria non fa distinzione tra maiuscole e minuscole.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.IdKeyDiscoveryConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.IdKeyDiscoveryConvention" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.IdKeyDiscoveryConvention.MatchKeyProperty(System.Data.Entity.Core.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.EdmProperty})">
      <summary>Convenzione per creare una corrispondenza della classe <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmProperty" />.</summary>
      <returns>Classe <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmProperty" /> per cui creare una corrispondenza.</returns>
      <param name="entityType">Tipo di entità.</param>
      <param name="primitiveProperties">Raccolta di proprietà primitive.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.IndexAttributeConvention">
      <summary>Convenzione per individuare gli attributi <see cref="T:System.ComponentModel.DataAnnotations.Schema.IndexAttribute" /> nelle proprietà e generare annotazioni della colonna <see cref="T:System.Data.Entity.Infrastructure.Annotations.IndexAnnotation" /> nel modello.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.IndexAttributeConvention.#ctor">
      <summary>Costruisce una nuova istanza della convenzione.</summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.InversePropertyAttributeConvention">
      <summary>Rappresenta una convenzione per elaborare le istanze di <see cref="T:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute" /> trovate nelle proprietà nel modello.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.InversePropertyAttributeConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.InversePropertyAttributeConvention" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.InversePropertyAttributeConvention.Apply(System.Reflection.PropertyInfo,System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration,System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute)">
      <summary>Applica la convenzione all'attributo specificato con la configurazione.</summary>
      <param name="memberInfo">Informazioni sul membro.</param>
      <param name="configuration">Configurazione.</param>
      <param name="attribute">Attributo.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.IStoreModelConvention`1">
      <summary>Convenzione utilizzata nella sezione del database del modello dopo la creazione del modello.</summary>
      <typeparam name="T">Tipo di elemento di metadati su cui viene eseguita questa convenzione.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.IStoreModelConvention`1.Apply(`0,System.Data.Entity.Infrastructure.DbModel)">
      <summary>Applica questa convenzione a un elemento del modello.</summary>
      <param name="item">Elemento a cui applicare la convenzione.</param>
      <param name="model">Modello.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.KeyAttributeConvention">
      <summary>Convenzione per elaborare istanze di <see cref="T:System.ComponentModel.DataAnnotations.KeyAttribute" /> trovate in proprietà nel modello.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.KeyAttributeConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.KeyAttributeConvention" />.</summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.KeyDiscoveryConvention">
      <summary>Rappresenta una classe di base per convenzioni che individuano le proprietà di chiave primaria.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.KeyDiscoveryConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.KeyDiscoveryConvention" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.KeyDiscoveryConvention.Apply(System.Data.Entity.Core.Metadata.Edm.EntityType,System.Data.Entity.Infrastructure.DbModel)">
      <summary>Applica questa convenzione a un elemento del modello.</summary>
      <param name="item">Elemento a cui applicare la convenzione.</param>
      <param name="model">Modello.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.KeyDiscoveryConvention.MatchKeyProperty(System.Data.Entity.Core.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.EdmProperty})">
      <summary>Quando sottoposto a override, restituisce il subset di proprietà che faranno parte della chiave primaria.</summary>
      <returns>Proprietà che devono far parte della chiave primaria.</returns>
      <param name="entityType">Tipo di entità.</param>
      <param name="primitiveProperties">Tipi primitivi delle entità.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.ManyToManyCascadeDeleteConvention">
      <summary>Convenzione per aggiungere un'eliminazione a catena alla tabella di join da entrambe le tabelle coinvolte in una relazione molti-a-molti.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.ManyToManyCascadeDeleteConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.ManyToManyCascadeDeleteConvention" />.</summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.MappingInheritedPropertiesSupportConvention">
      <summary>Convenzione per assicurarsi che non venga creato un mapping non valido o non supportato quando si esegue il mapping di proprietà ereditate</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.MappingInheritedPropertiesSupportConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.MappingInheritedPropertiesSupportConvention" />.</summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.MaxLengthAttributeConvention">
      <summary>Rappresenta una convenzione per elaborare le istanze di <see cref="T:System.ComponentModel.DataAnnotations.MaxLengthAttribute" /> trovate nelle proprietà nel modello.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.MaxLengthAttributeConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.MaxLengthAttributeConvention" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.MaxLengthAttributeConvention.Apply(System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration,System.ComponentModel.DataAnnotations.MaxLengthAttribute)">
      <summary>Applica la convenzione all'attributo con la configurazione specificata.</summary>
      <param name="configuration">Configurazione.</param>
      <param name="attribute">Attributo.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.NavigationPropertyNameForeignKeyDiscoveryConvention">
      <summary>Convenzione per individuare proprietà di chiave esterna i cui nomi sono una combinazione del nome di proprietà di navigazione dipendente e dei nomi di proprietà di chiave primaria di tipo principale.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.NavigationPropertyNameForeignKeyDiscoveryConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.NavigationPropertyNameForeignKeyDiscoveryConvention" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.NavigationPropertyNameForeignKeyDiscoveryConvention.MatchDependentKeyProperty(System.Data.Entity.Core.Metadata.Edm.AssociationType,System.Data.Entity.Core.Metadata.Edm.AssociationEndMember,System.Data.Entity.Core.Metadata.Edm.EdmProperty,System.Data.Entity.Core.Metadata.Edm.EntityType,System.Data.Entity.Core.Metadata.Edm.EdmProperty)">
      <summary>Esegue la corrispondenza della chiave del modello di entità dipendente.</summary>
      <returns>Restituisce il valore <see cref="T:System.Boolean" />.</returns>
      <param name="associationType">Oggetto metadati di tipo di associazione.</param>
      <param name="dependentAssociationEnd">Fine dell'associazione dipendente.</param>
      <param name="dependentProperty">Proprietà dipendente.</param>
      <param name="principalEntityType">Tipo di entità principale</param>
      <param name="principalKeyProperty">Proprietà di chiave principale.</param>
    </member>
    <member name="P:System.Data.Entity.ModelConfiguration.Conventions.NavigationPropertyNameForeignKeyDiscoveryConvention.SupportsMultipleAssociations">
      <summary>Ottiene o imposta un valore che indica se la convenzione supporta più associazioni.</summary>
      <returns>true se la convenzione supporta più associazioni; in caso contrario, false.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.NotMappedPropertyAttributeConvention">
      <summary>Rappresenta una convenzione per elaborare le istanze di <see cref="T:System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute" /> trovate nelle proprietà nel modello.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.NotMappedPropertyAttributeConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.NotMappedPropertyAttributeConvention" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.NotMappedPropertyAttributeConvention.Apply(System.Reflection.PropertyInfo,System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration,System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute)">
      <summary>Applica la configurazione all'attributo specificato.</summary>
      <param name="memberInfo">Informazioni sulle proprietà.</param>
      <param name="configuration">Configurazione da eseguire per un tipo di entità in un modello.</param>
      <param name="attribute">Proprietà o classe esclusa dal mapping del database.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.NotMappedTypeAttributeConvention">
      <summary>Rappresenta una convenzione per elaborare istanze di <see cref="T:System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute" /> trovate in tipi nel modello.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.NotMappedTypeAttributeConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.NotMappedTypeAttributeConvention" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.NotMappedTypeAttributeConvention.Apply(System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration,System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute)">
      <summary>Applica la configurazione all'attributo specificato.</summary>
      <param name="configuration">Configurazione da eseguire per un tipo di entità in un modello.</param>
      <param name="attribute">Proprietà o classe esclusa dal mapping del database.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.OneToManyCascadeDeleteConvention">
      <summary>Fornisce una convenzione per abilitare l'eliminazione a catena per tutte le relazioni obbligatorie.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.OneToManyCascadeDeleteConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.OneToManyCascadeDeleteConvention" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.OneToManyCascadeDeleteConvention.Apply(System.Data.Entity.Core.Metadata.Edm.AssociationType,System.Data.Entity.Infrastructure.DbModel)">
      <summary>Applica questa convenzione a un elemento del modello.</summary>
      <param name="item">Elemento a cui applicare la convenzione.</param>
      <param name="model">Modello di database.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.OneToOneConstraintIntroductionConvention">
      <summary>Fornisce una convenzione per configurare le chiavi primarie del tipo di entità dipendente come chiavi esterne in una relazione uno-a-uno.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.OneToOneConstraintIntroductionConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.OneToOneConstraintIntroductionConvention" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.OneToOneConstraintIntroductionConvention.Apply(System.Data.Entity.Core.Metadata.Edm.AssociationType,System.Data.Entity.Infrastructure.DbModel)">
      <summary>Applica questa convenzione a un elemento del modello.</summary>
      <param name="item">Elemento a cui applicare la convenzione.</param>
      <param name="model">Modello di database.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.PluralizingEntitySetNameConvention">
      <summary>Rappresenta una convenzione per impostare il nome del set di entità in modo che sia una versione pluralizzata del nome del tipo di entità.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.PluralizingEntitySetNameConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.PluralizingEntitySetNameConvention" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.PluralizingEntitySetNameConvention.Apply(System.Data.Entity.Core.Metadata.Edm.EntitySet,System.Data.Entity.Infrastructure.DbModel)">
      <summary>Applica questa convenzione a una proprietà.</summary>
      <param name="item">Set di entità.</param>
      <param name="model">Modello di database.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.PluralizingTableNameConvention">
      <summary>Rappresenta una convenzione per impostare il nome della tabella in modo che sia una versione pluralizzata del nome del tipo di entità.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.PluralizingTableNameConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.PluralizingTableNameConvention" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.PluralizingTableNameConvention.Apply(System.Data.Entity.Core.Metadata.Edm.EntityType,System.Data.Entity.Infrastructure.DbModel)">
      <summary>Applica questa convenzione a un elemento del modello.</summary>
      <param name="item">Elemento a cui applicare la convenzione.</param>
      <param name="model">Modello.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.PrimaryKeyNameForeignKeyDiscoveryConvention">
      <summary>Convenzione per individuare proprietà di chiave esterna i cui nomi corrispondono ai nomi di proprietà di chiave primaria del tipo principale.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.PrimaryKeyNameForeignKeyDiscoveryConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.PrimaryKeyNameForeignKeyDiscoveryConvention" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.PrimaryKeyNameForeignKeyDiscoveryConvention.MatchDependentKeyProperty(System.Data.Entity.Core.Metadata.Edm.AssociationType,System.Data.Entity.Core.Metadata.Edm.AssociationEndMember,System.Data.Entity.Core.Metadata.Edm.EdmProperty,System.Data.Entity.Core.Metadata.Edm.EntityType,System.Data.Entity.Core.Metadata.Edm.EdmProperty)">
      <summary>Corrisponde alla proprietà della chiave dipendente associata alla convenzione.</summary>
      <returns>Proprietà di chiave dipendente corrispondente.</returns>
      <param name="associationType">Tipo di associazione.</param>
      <param name="dependentAssociationEnd">Entità finale dell'associazione dipendente.</param>
      <param name="dependentProperty">Proprietà dipendente.</param>
      <param name="principalEntityType">Tipo di entità principale.</param>
      <param name="principalKeyProperty">Proprietà di chiave principale.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.PrimitivePropertyAttributeConfigurationConvention`1">
      <summary>Classe di base per le convenzioni che elaborano gli attributi CLR trovati nelle proprietà primitive del modello.</summary>
      <typeparam name="TAttribute">Tipo di attributo da cercare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.PrimitivePropertyAttributeConfigurationConvention`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.PrimitivePropertyAttributeConfigurationConvention`1" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.PrimitivePropertyAttributeConfigurationConvention`1.Apply(System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration,`0)">
      <summary>Applica questa convenzione a una proprietà che dispone di un attributo di tipo TAttribute applicato.</summary>
      <param name="configuration">Configurazione per la proprietà con l'attributo.</param>
      <param name="attribute">Attributo.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.PropertyAttributeConfigurationConvention`1">
      <summary>Classe di base per le convenzioni che elaborano gli attributi CLR trovati nelle proprietà dei tipi del modello.</summary>
      <typeparam name="TAttribute">Tipo di attributo da cercare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.PropertyAttributeConfigurationConvention`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.PropertyAttributeConfigurationConvention`1" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.PropertyAttributeConfigurationConvention`1.Apply(System.Reflection.PropertyInfo,System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration,`0)">
      <summary>Applica questa convenzione a una proprietà che dispone di un attributo di tipo TAttribute applicato.</summary>
      <param name="memberInfo">Informazioni sul membro per la proprietà con l'attributo.</param>
      <param name="configuration">Configurazione per la classe contenente la proprietà.</param>
      <param name="attribute">Attributo.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.PropertyMaxLengthConvention">
      <summary>Rappresenta una convenzione per impostare una lunghezza massima per le proprietà il cui tipo supporta i facet di lunghezza.Il valore predefinito è 128.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.PropertyMaxLengthConvention.#ctor">
      <summary>Inizializza una nuova istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.PropertyMaxLengthConvention" /> con la lunghezza predefinita.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.PropertyMaxLengthConvention.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.PropertyMaxLengthConvention" /> con la lunghezza specificata.</summary>
      <param name="length">Lunghezza massima delle proprietà.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.PropertyMaxLengthConvention.Apply(System.Data.Entity.Core.Metadata.Edm.AssociationType,System.Data.Entity.Infrastructure.DbModel)">
      <summary>Applica la convenzione alla configurazione di modello specificata.</summary>
      <param name="item">Elemento.</param>
      <param name="model">Modello di mapping.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.PropertyMaxLengthConvention.Apply(System.Data.Entity.Core.Metadata.Edm.ComplexType,System.Data.Entity.Infrastructure.DbModel)">
      <summary>Applica la convenzione alla configurazione di modello specificata.</summary>
      <param name="item">Elemento.</param>
      <param name="model">Modello di mapping.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.PropertyMaxLengthConvention.Apply(System.Data.Entity.Core.Metadata.Edm.EntityType,System.Data.Entity.Infrastructure.DbModel)">
      <summary>Applica la convenzione alla configurazione di modello specificata.</summary>
      <param name="item">Elemento.</param>
      <param name="model">Modello di mapping.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.RequiredNavigationPropertyAttributeConvention">
      <summary>Convenzione per elaborare istanze di <see cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute" /> trovate in proprietà di navigazione nel modello.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.RequiredNavigationPropertyAttributeConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.RequiredNavigationPropertyAttributeConvention" />.</summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.RequiredPrimitivePropertyAttributeConvention">
      <summary>Rappresenta una convenzione per elaborare le istanze di <see cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute" /> trovate nelle proprietà primitive nel modello.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.RequiredPrimitivePropertyAttributeConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.RequiredPrimitivePropertyAttributeConvention" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.RequiredPrimitivePropertyAttributeConvention.Apply(System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration,System.ComponentModel.DataAnnotations.RequiredAttribute)">
      <summary>Applica la convenzione all'attributo con la configurazione specificata.</summary>
      <param name="configuration">Configurazione.</param>
      <param name="attribute">Attributo.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.SqlCePropertyMaxLengthConvention">
      <summary>Rappresenta una convenzione per impostare una lunghezza massima predefinita di 4000 per le proprietà il cui tipo supporta facet di lunghezza quando SqlCe è il provider.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.SqlCePropertyMaxLengthConvention.#ctor">
      <summary>Inizializza una nuova istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.SqlCePropertyMaxLengthConvention" /> con la lunghezza predefinita.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.SqlCePropertyMaxLengthConvention.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.SqlCePropertyMaxLengthConvention" /> con la lunghezza specificata.</summary>
      <param name="length">Lunghezza massima predefinita per le proprietà.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.SqlCePropertyMaxLengthConvention.Apply(System.Data.Entity.Core.Metadata.Edm.ComplexType,System.Data.Entity.Infrastructure.DbModel)">
      <summary>Applica la convenzione al provider specificato.</summary>
      <param name="item">Elemento.</param>
      <param name="model">Modello.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.SqlCePropertyMaxLengthConvention.Apply(System.Data.Entity.Core.Metadata.Edm.EntityType,System.Data.Entity.Infrastructure.DbModel)">
      <summary>Applica la convenzione al provider specificato.</summary>
      <param name="item">Elemento.</param>
      <param name="model">Modello.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.StoreGeneratedIdentityKeyConvention">
      <summary>Rappresenta una convenzione per configurare l'identità delle chiavi primarie Integer.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.StoreGeneratedIdentityKeyConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.StoreGeneratedIdentityKeyConvention" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.StoreGeneratedIdentityKeyConvention.Apply(System.Data.Entity.Core.Metadata.Edm.EntityType,System.Data.Entity.Infrastructure.DbModel)">
      <summary>Applica la configurazione all'elemento specificato nel modello di mapping.</summary>
      <param name="item">Elemento.</param>
      <param name="model">Modello di mapping.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.StringLengthAttributeConvention">
      <summary>Rappresenta una convenzione per elaborare le istanze di <see cref="T:System.ComponentModel.DataAnnotations.StringLengthAttribute" /> trovate nelle proprietà nel modello.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.StringLengthAttributeConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.StringLengthAttributeConvention" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.StringLengthAttributeConvention.Apply(System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration,System.ComponentModel.DataAnnotations.StringLengthAttribute)">
      <summary>Applica la convenzione all'attributo e alla configurazione specificati.</summary>
      <param name="configuration">Configurazione.</param>
      <param name="attribute">Attributo.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.TableAttributeConvention">
      <summary>Rappresenta una convenzione per elaborare istanze di <see cref="T:System.ComponentModel.DataAnnotations.Schema.TableAttribute" /> trovate in tipi nel modello.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.TableAttributeConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.TableAttributeConvention" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.TableAttributeConvention.Apply(System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration,System.ComponentModel.DataAnnotations.Schema.TableAttribute)">
      <summary>Applica questa convenzione a una proprietà.</summary>
      <param name="configuration">Configurazione per la proprietà con l'attributo.</param>
      <param name="attribute">Attributo.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.TimestampAttributeConvention">
      <summary>Rappresenta una convenzione per elaborare le istanze di <see cref="T:System.ComponentModel.DataAnnotations.TimestampAttribute" /> trovate nelle proprietà nel modello.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.TimestampAttributeConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.TimestampAttributeConvention" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.TimestampAttributeConvention.Apply(System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration,System.ComponentModel.DataAnnotations.TimestampAttribute)">
      <summary>Applica questa convenzione a una proprietà.</summary>
      <param name="configuration">Configurazione per la proprietà con l'attributo.</param>
      <param name="attribute">Attributo.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.TypeAttributeConfigurationConvention`1">
      <summary>Classe di base per le convenzioni che elaborano gli attributi CLR trovati nel modello.</summary>
      <typeparam name="TAttribute">Tipo di attributo da cercare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.TypeAttributeConfigurationConvention`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.TypeAttributeConfigurationConvention`1" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.TypeAttributeConfigurationConvention`1.Apply(System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration,`0)">
      <summary>Applica questa convenzione a una classe che dispone di un attributo di tipo TAttribute applicato.</summary>
      <param name="configuration">Configurazione per la classe contenente la proprietà.</param>
      <param name="attribute">Attributo.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.TypeNameForeignKeyDiscoveryConvention">
      <summary>Convenzione per individuare proprietà di chiave esterna i cui nomi sono una combinazione del nome del tipo principale e dei nomi di proprietà di chiave primaria di tipo principale.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.TypeNameForeignKeyDiscoveryConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.TypeNameForeignKeyDiscoveryConvention" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Conventions.TypeNameForeignKeyDiscoveryConvention.MatchDependentKeyProperty(System.Data.Entity.Core.Metadata.Edm.AssociationType,System.Data.Entity.Core.Metadata.Edm.AssociationEndMember,System.Data.Entity.Core.Metadata.Edm.EdmProperty,System.Data.Entity.Core.Metadata.Edm.EntityType,System.Data.Entity.Core.Metadata.Edm.EdmProperty)">
      <summary>Determina se la proprietà della chiave dipendente corrisponde alla chiave corrente.</summary>
      <returns>true se la proprietà della chiave dipendente corrisponde alla chiave corrente; in caso contrario, false.</returns>
      <param name="associationType">Tipo di associazione.</param>
      <param name="dependentAssociationEnd">Associazione dipendente nell'entità finale.</param>
      <param name="dependentProperty">Proprietà dipendente.</param>
      <param name="principalEntityType">Tipo di entità principale.</param>
      <param name="principalKeyProperty">Proprietà di chiave principale.</param>
    </member>
    <member name="T:System.Data.Entity.Spatial.DbGeography">
      <summary>Rappresenta i dati in un sistema di coordinate geodetico (terra rotonda).</summary>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeography.Area">
      <summary>Ottiene un valore Double che ammette i valori Null che indica l'area di questo valore DbGeography, che potrebbe essere Null se questo valore non rappresenta una superficie.</summary>
      <returns>Valore Double che ammette i valori Null che indica l'area di questo valore DbGeography.</returns>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeography.AsBinary">
      <summary>Genera la rappresentazione WKB di questo valore DbGeography.</summary>
      <returns>Genera la rappresentazione WKB di questo valore DbGeography.</returns>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeography.AsGml">
      <summary>Genera la rappresentazione GML (Geography Markup Language) di questo valore DbGeography.</summary>
      <returns>Stringa che contiene la rappresentazione GML di questo valore DbGeography.</returns>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeography.AsText">
      <summary>Genera la rappresentazione WKT di questo valore DbGeography.Include solo la longitudine e la latitudine per i punti.</summary>
      <returns>Stringa che contiene una rappresentazione WKT del valore DbGeography.</returns>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeography.Buffer(System.Nullable{System.Double})">
      <summary>Restituisce un oggetto geografico che rappresenta l'unione di tutti i punti la cui distanza da un'istanza geografica è minore o uguale a un valore specificato.</summary>
      <returns>Oggetto geografico che rappresenta l'unione di tutti i punti.</returns>
      <param name="distance">La distanza.</param>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeography.CoordinateSystemId">
      <summary>Ottiene l'identificatore associato al sistema di coordinate.</summary>
      <returns>Identificatore associato al sistema di coordinate.</returns>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId">
      <summary>Ottiene l'ID del sistema di coordinate predefinito (SRID) per i valori geografici (WGS 84)</summary>
      <returns>ID del sistema di coordinate predefinito (SRID) per i valori geografici (WGS 84).</returns>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeography.Difference(System.Data.Entity.Spatial.DbGeography)">
      <summary>Calcola la differenza tra questo valore DbGeography e un altro valore DbGeography.</summary>
      <returns>Nuovo valore DbGeography che rappresenta la differenza tra questo valore geografico e Other.</returns>
      <param name="other">Valore geografico per cui deve essere calcolata la differenza con questo valore.</param>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeography.Dimension">
      <summary>Ottiene la dimensione del valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato o, se il valore è una raccolta, la dimensione di elementi più ampia.</summary>
      <returns>Dimensione del valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato.</returns>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeography.Disjoint(System.Data.Entity.Spatial.DbGeography)">
      <summary>Determina se questo valore DbGeography è spazialmente non contiguo rispetto all'argomento DbGeography specificato.</summary>
      <returns>true se Other non è contiguo a questo valore geografico. In caso contrario, false.</returns>
      <param name="other">Valore geografico che deve essere confrontato con questo valore geografico ai fini della contiguità.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeography.Distance(System.Data.Entity.Spatial.DbGeography)">
      <summary>Calcola la distanza tra i punti più vicini in questo valore DbGeography e un altro valore DbGeography.</summary>
      <returns>Valore Double che specifica la distanza tra i due punti più vicini in questo valore geografico e Other.</returns>
      <param name="other">Valore geografico per cui deve essere calcolata la distanza da questo valore.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeography.ElementAt(System.Int32)">
      <summary>Restituisce un elemento di questo valore DbGeography da una posizione specifica, se rappresenta una raccolta di valori geografici.&amp;amp;lt;param name="index"&amp;amp;gt;Posizione all'interno di questo valore geografico da cui derivare l'elemento.&amp;amp;lt;/param&amp;amp;gt;&amp;amp;lt;returns&amp;amp;gt;Elemento in questo valore geografico nella posizione specificata, se rappresenta una raccolta di altri valori geografici. In caso contrario, Null.&amp;amp;lt;/returns&amp;amp;gt;</summary>
      <returns>Elemento di questo valore DbGeography da una posizione specifica.</returns>
      <param name="index">Indice.</param>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeography.ElementCount">
      <summary>Ottiene il numero di elementi in questo valore DbGeography, se rappresenta una raccolta di valori geografici.&amp;amp;lt;returns&amp;amp;gt;Numero di elementi in questo valore geografico, se rappresenta una raccolta di altri valori geografici. In caso contrario, Null.&amp;amp;lt;/returns&amp;amp;gt;</summary>
      <returns>Numero di elementi di questo valore DbGeography.</returns>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeography.Elevation">
      <summary>Ottiene l'elevazione (coordinata Z) di questo valore DbGeography, se rappresenta un punto.&amp;amp;lt;returns&amp;amp;gt;Valore di elevazione (coordinata Z) di questo valore geografico, se rappresenta un punto. In caso contrario, Null.&amp;amp;lt;/returns&amp;amp;gt;</summary>
      <returns>Elevazione (coordinata Z) di questo valore DbGeography.</returns>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeography.EndPoint">
      <summary>Ottiene un valore DbGeography che rappresenta il punto iniziale di questo valore, che potrebbe essere Null se questo valore DbGeography non rappresenta una curva.</summary>
      <returns>Valore DbGeography che rappresenta il punto iniziale di questo valore.</returns>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeography.FromBinary(System.Byte[])">
      <summary>Crea un nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> in base al valore WKB specificato.</summary>
      <returns>Nuovo valore DbGeography definito dal valore WKB con l'identificatore del sistema di coordinate geografico predefinito (SRID) (<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />).</returns>
      <param name="wellKnownBinary">Matrice di byte che contiene una rappresentazione WKB del valore geografico.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeography.FromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> in base al valore WKB e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore DbGeography definito dal valore WKB con l'identificatore del sistema di coordinate specificato.</returns>
      <param name="wellKnownBinary">Matrice di byte che contiene una rappresentazione WKB del valore geografico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore DbGeography.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeography.FromGml(System.String)">
      <summary>Crea un nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> in base al valore GML (Geography Markup Language) specificato.</summary>
      <returns>Nuovo valore DbGeography definito dal valore GML con l'identificatore del sistema di coordinate geografico predefinito (SRID) (<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />).</returns>
      <param name="geographyMarkup">Stringa che contiene una rappresentazione GML (Geography Markup Language) del valore geografico.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeography.FromGml(System.String,System.Int32)">
      <summary>Crea un nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> in base al valore GML e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore DbGeography definito dal valore GML con l'identificatore del sistema di coordinate specificato.</returns>
      <param name="geographyMarkup">Stringa che contiene una rappresentazione GML (Geography Markup Language) del valore geografico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore DbGeography.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeography.FromText(System.String)">
      <summary>Crea un nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> in base al valore WKT specificato.</summary>
      <returns>Nuovo valore DbGeography definito dal valore WKT con l'identificatore del sistema di coordinate geografico predefinito (SRID) (<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />).</returns>
      <param name="wellKnownText">Stringa che contiene una rappresentazione WKT del valore geografico.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeography.FromText(System.String,System.Int32)">
      <summary>Crea un nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> in base al valore WKT e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore DbGeography definito dal valore WKT con l'identificatore del sistema di coordinate specificato.</returns>
      <param name="wellKnownText">Stringa che contiene una rappresentazione WKT del valore geografico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore DbGeography.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeography.GeographyCollectionFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuovo valore della raccolta <see cref="T:System.Data.Entity.Spatial.DbGeography" /> in base al valore WKB e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore DbGeography definito dal valore WKB con l'identificatore del sistema di coordinate specificato.</returns>
      <param name="geographyCollectionWellKnownBinary">Matrice di byte che contiene una rappresentazione WKB del valore geografico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore DbGeography.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeography.GeographyCollectionFromText(System.String,System.Int32)">
      <summary>Crea un nuovo valore della raccolta <see cref="T:System.Data.Entity.Spatial.DbGeography" /> in base al valore WKT e all'identificatore del sistema di coordinate (SRID).</summary>
      <returns>Nuovo valore DbGeography definito dal valore WKT con l'identificatore del sistema di coordinate specificato.</returns>
      <param name="geographyCollectionWellKnownText">Stringa che contiene una rappresentazione WKT del valore geografico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore DbGeography.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeography.Intersection(System.Data.Entity.Spatial.DbGeography)">
      <summary>Calcola l'intersezione tra questo valore DbGeography e un altro valore DbGeography.</summary>
      <returns>Nuovo valore DbGeography che rappresenta l'intersezione tra questo valore geografico e Other.</returns>
      <param name="other">Valore geografico per cui deve essere calcolata l'intersezione con questo valore.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeography.Intersects(System.Data.Entity.Spatial.DbGeography)">
      <summary>Determina se questo valore DbGeography interseca spazialmente l'argomento DbGeography specificato.</summary>
      <returns>true se Other interseca questo valore geografico. In caso contrario, false.</returns>
      <param name="other">Valore geografico che deve essere confrontato con questo valore geografico ai fini dell'intersezione.</param>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeography.IsClosed">
      <summary>Ottiene un valore booleano che ammette i valori Null che indica questo valore DbGeography è chiuso, che potrebbe essere Null se questo valore non rappresenta una curva.</summary>
      <returns>True se questo valore DbGeography è chiuso. In caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeography.IsEmpty">
      <summary>Ottiene un valore booleano che ammette i valori Null che indica se questo valore DbGeography è vuoto.</summary>
      <returns>True se questo valore DbGeography è vuoto. In caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeography.Latitude">
      <summary>Ottiene coordinata latitudine di questo valore DbGeography, se rappresenta un punto.&amp;amp;lt;returns&amp;amp;gt;Valore della coordinata latitudine di questo valore geografico, se rappresenta un punto. In caso contrario, Null.&amp;amp;lt;/returns&amp;amp;gt;</summary>
      <returns>Coordinata latitudine di questo valore DbGeography.</returns>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeography.Length">
      <summary>Ottiene un valore Double che ammette i valori Null che indica la lunghezza di questo valore DbGeography, che potrebbe essere Null se questo valore non rappresenta una curva.</summary>
      <returns>Valore Double che ammette i valori Null che indica la lunghezza di questo valore DbGeography.</returns>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeography.LineFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuovo valore linea <see cref="T:System.Data.Entity.Spatial.DbGeography" /> in base al valore WKB e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore DbGeography definito dal valore WKB con l'identificatore del sistema di coordinate specificato.</returns>
      <param name="lineWellKnownBinary">Matrice di byte che contiene una rappresentazione WKB del valore geografico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore DbGeography.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeography.LineFromText(System.String,System.Int32)">
      <summary>Crea un nuovo valore linea <see cref="T:System.Data.Entity.Spatial.DbGeography" /> in base al valore WKT e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore DbGeography definito dal valore WKT con l'identificatore del sistema di coordinate specificato.</returns>
      <param name="lineWellKnownText">Stringa che contiene una rappresentazione WKT del valore geografico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore DbGeography.</param>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeography.Longitude">
      <summary>Ottiene coordinata longitudine di questo valore DbGeography, se rappresenta un punto.&amp;amp;lt;returns&amp;amp;gt;Valore della coordinata longitudine di questo valore geografico, se rappresenta un punto. In caso contrario, Null.&amp;amp;lt;/returns&amp;amp;gt;</summary>
      <returns>Coordinata longitudine di questo valore DbGeography.</returns>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeography.Measure">
      <summary>Ottiene la coordinata M (Misura) di questo valore DbGeography, se rappresenta un punto.&amp;amp;lt;returns&amp;amp;gt;Valore della coordinata M (Misura) di questo valore geografico, se rappresenta un punto. In caso contrario, Null.&amp;amp;lt;/returns&amp;amp;gt;</summary>
      <returns>Coordinata M (Misura) di questo valore DbGeography.</returns>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeography.MultiLineFromBinary(System.Byte[],System.Int32)">
      <summary>Restituisce il valore multilinea da un valore binario.</summary>
      <returns>Valore multilinea da un valore binario.</returns>
      <param name="multiLineWellKnownBinary">Valore WKB.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeography.MultiLineFromText(System.String,System.Int32)">
      <summary>Restituisce il valore multilinea da un valore WKT.</summary>
      <returns>Valore multilinea da un valore WKT.</returns>
      <param name="multiLineWellKnownText">Valore WKT.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeography.MultiPointFromBinary(System.Byte[],System.Int32)">
      <summary>Restituisce il valore multipunto da un valore WKB.</summary>
      <returns>Valore multipunto da un valore WKB.</returns>
      <param name="multiPointWellKnownBinary">Valore WKB.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeography.MultiPointFromText(System.String,System.Int32)">
      <summary>Restituisce il valore multipunto da un valore WKT.</summary>
      <returns>Valore multipunto da un valore WKT.</returns>
      <param name="multiPointWellKnownText">Valore WKT.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeography.MultiPolygonFromBinary(System.Byte[],System.Int32)">
      <summary>Restituisce il valore multipoligono da un valore WKB.</summary>
      <returns>Valore multipoligono da un valore WKB.</returns>
      <param name="multiPolygonWellKnownBinary">Valore WKB del multipoligono.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeography.MultiPolygonFromText(System.String,System.Int32)">
      <summary>Restituisce il valore multipoligono da un valore WKT.</summary>
      <returns>Valore multipoligono da un valore WKT.</returns>
      <param name="multiPolygonWellKnownText">Valore WKT del multipoligono.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeography.PointAt(System.Int32)">
      <summary>Restituisce un elemento di questo valore DbGeography da una posizione specifica, se rappresenta una linea spezzata o un anello lineare.&amp;amp;lt;param name="index"&amp;amp;gt;Posizione all'interno di questo valore geografico da cui derivare l'elemento..&amp;amp;lt;/param&amp;amp;gt;&amp;amp;lt;returns&amp;amp;gt;Elemento in questo valore geografico nella posizione specificata, se rappresenta una linea spezzata o un anello lineare. In caso contrario, Null.&amp;amp;lt;/returns&amp;amp;gt;</summary>
      <returns>Elemento di questo valore DbGeography da una posizione specifica.</returns>
      <param name="index">Indice.</param>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeography.PointCount">
      <summary>Ottiene il numero di punti in questo valore DbGeography, se rappresenta una linea spezzata o un anello lineare.&amp;amp;lt;returns&amp;amp;gt;Numero di elementi in questo valore geografico, se rappresenta una linea spezzata o un anello lineare. In caso contrario, Null.&amp;amp;lt;/returns&amp;amp;gt;</summary>
      <returns>Numero di punti di questo valore DbGeography.</returns>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeography.PointFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuovo valore punto <see cref="T:System.Data.Entity.Spatial.DbGeography" /> in base al valore WKB e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore DbGeography definito dal valore WKB con l'identificatore del sistema di coordinate specificato.</returns>
      <param name="pointWellKnownBinary">Matrice di byte che contiene una rappresentazione WKB del valore geografico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore DbGeography.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeography.PointFromText(System.String,System.Int32)">
      <summary>Crea un nuovo valore punto <see cref="T:System.Data.Entity.Spatial.DbGeography" /> in base al valore WKT e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore DbGeography definito dal valore WKT con l'identificatore del sistema di coordinate specificato.</returns>
      <param name="pointWellKnownText">Stringa che contiene una rappresentazione WKT del valore geografico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore DbGeography.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeography.PolygonFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuovo valore poligono <see cref="T:System.Data.Entity.Spatial.DbGeography" /> in base al valore WKB e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore DbGeography definito dal valore WKB con l'identificatore del sistema di coordinate specificato.</returns>
      <param name="polygonWellKnownBinary">Matrice di byte che contiene una rappresentazione WKB del valore geografico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore DbGeography.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeography.PolygonFromText(System.String,System.Int32)">
      <summary>Crea un nuovo valore poligono <see cref="T:System.Data.Entity.Spatial.DbGeography" /> in base al valore WKT e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore DbGeography definito dal valore WKT con l'identificatore del sistema di coordinate specificato.</returns>
      <param name="polygonWellKnownText">Stringa che contiene una rappresentazione WKT del valore geografico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore DbGeography.</param>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeography.Provider">
      <summary>Ottiene il provider spaziale che verrà utilizzato per le operazioni su questo tipo spaziale.</summary>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeography.ProviderValue">
      <summary>Ottiene una rappresentazione di questo valore DbGeography specifico del provider sottostante che lo ha costruito.</summary>
      <returns>Rappresentazione di questo valore DbGeography.</returns>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeography.SpatialEquals(System.Data.Entity.Spatial.DbGeography)">
      <summary>Determina se questo valore DbGeography è spazialmente uguale all'argomento DbGeography specificato.</summary>
      <returns>true se Other è spazialmente uguale a questo valore geografico. In caso contrario, false.</returns>
      <param name="other">Valore geografico che deve essere confrontato con questo valore geografico ai fini dell'uguaglianza.</param>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeography.SpatialTypeName">
      <summary>Ottiene il nome del tipo spaziale di questo valore DBGeography.</summary>
      <returns>Nome del tipo spaziale di questo valore DBGeography.</returns>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeography.StartPoint">
      <summary>Ottiene un valore DbGeography che rappresenta il punto iniziale di questo valore, che potrebbe essere Null se questo valore DbGeography non rappresenta una curva.</summary>
      <returns>Valore DbGeography che rappresenta il punto iniziale di questo valore.</returns>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeography.SymmetricDifference(System.Data.Entity.Spatial.DbGeography)">
      <summary>Calcola la differenza simmetrica tra questo valore DbGeography e un altro valore DbGeography.</summary>
      <returns>Nuovo valore DbGeography che rappresenta la differenza simmetrica tra questo valore geografico e Other.</returns>
      <param name="other">Valore geografico per cui deve essere calcolata la differenza simmetrica con questo valore.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeography.ToString">
      <summary>Restituisce una rappresentazione in forma di stringa del valore geografico.</summary>
      <returns>Rappresentazione in forma di stringa del valore geografico.</returns>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeography.Union(System.Data.Entity.Spatial.DbGeography)">
      <summary>Calcola l'unione tra questo valore DbGeography e un altro valore DbGeography.</summary>
      <returns>Nuovo valore DbGeography che rappresenta l'unione tra questo valore geografico e Other.</returns>
      <param name="other">Valore geografico per cui deve essere calcolata l'unione con questo valore.</param>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeography.WellKnownValue">
      <summary>Ottiene o imposta una rappresentazione WKB serializzabile di un contratto di dati di questo valore DbGeography.</summary>
      <returns>Rappresentazione nota serializzabile di un contratto di dati di questo valore DbGeography.</returns>
    </member>
    <member name="T:System.Data.Entity.Spatial.DbGeographyWellKnownValue">
      <summary>Rappresentazione serializzabile di un contratto di dati di un valore <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeographyWellKnownValue.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Spatial.DbGeographyWellKnownValue" />.</summary>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeographyWellKnownValue.CoordinateSystemId">
      <summary>Ottiene o imposta l'identificatore del sistema di coordinate (SRID) di questo valore.</summary>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeographyWellKnownValue.WellKnownBinary">
      <summary>Ottiene o imposta la rappresentazione WKB di questo valore.</summary>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeographyWellKnownValue.WellKnownText">
      <summary>Ottiene o imposta la rappresentazione WKT di questo valore.</summary>
    </member>
    <member name="T:System.Data.Entity.Spatial.DbGeometry">
      <summary>Rappresenta le forme geometriche.</summary>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeometry.Area">
      <summary>Ottiene un valore Double che ammette i valori Null che indica l'area di questo valore DbGeometry, che potrebbe essere Null se questo valore non rappresenta una superficie.</summary>
      <returns>Valore Double che ammette i valori Null che indica l'area di questo valore DbGeometry.</returns>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.AsBinary">
      <summary>Genera la rappresentazione WKB di questo valore DbGeometry.</summary>
      <returns>Rappresentazione WKB di questo valore DbGeometry.</returns>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.AsGml">
      <summary>Genera la rappresentazione GML (Geography Markup Language) di questo valore DbGeometry.</summary>
      <returns>Stringa che contiene la rappresentazione GML di questo valore DbGeometry.</returns>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.AsText">
      <summary>Genera la rappresentazione WKT di questo valore DbGeometry.Include solo le coordinate X e Y per i punti.</summary>
      <returns>Stringa che contiene una rappresentazione WKT del valore DbGeometry.</returns>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeometry.Boundary">
      <summary>Ottiene il limite degli oggetti DbGeometry.</summary>
      <returns>Limite degli oggetti DbGeometry.</returns>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.Buffer(System.Nullable{System.Double})">
      <summary>Restituisce un oggetto geometrico che rappresenta l'unione di tutti i punti la cui distanza da un'istanza geometrica è minore o uguale a un valore specificato.</summary>
      <returns>Oggetto geometrico che rappresenta l'unione di tutti i punti.</returns>
      <param name="distance">La distanza.</param>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeometry.Centroid">
      <summary>Ottiene il valore DbGeometry che rappresenta il centroide di questo valore DbGeometry, che potrebbe essere Null se questo valore non rappresenta una superficie.</summary>
      <returns>Valore DbGeometry che rappresenta il centroide di questo valore DbGeometry.</returns>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.Contains(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Determina se questo valore DbGeometry contiene spazialmente l'argomento DbGeometry specificato.</summary>
      <returns>true se questo valore geometrico contiene Other. In caso contrari, false.</returns>
      <param name="other">Valore geometrico che deve essere confrontato con questo valore geometrico ai fini del contenimento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeometry.ConvexHull">
      <summary>Ottiene la struttura convessa di questo valore DbGeometry come un altro valore DbGeometry.</summary>
      <returns>Struttura convessa di questo valore DbGeometry come un altro valore DbGeometry.</returns>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeometry.CoordinateSystemId">
      <summary>Ottiene l'identificatore del sistema di coordinate dell'oggetto DbGeometry.</summary>
      <returns>Identificatore del sistema di coordinate dell'oggetto DbGeometry.</returns>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.Crosses(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Determina se questo valore DbGeometry incrocia spazialmente l'argomento DbGeometry specificato.</summary>
      <returns>true se Other incrocia questo valore geometrico. In caso contrario, false.</returns>
      <param name="other">Valore geometrico che deve essere confrontato con questo valore geometrico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId">
      <summary>Ottiene l'ID del sistema di coordinate predefinito (SRID) per i valori geometrici.</summary>
      <returns>ID del sistema di coordinate predefinito (SRID) per i valori geometrici.</returns>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.Difference(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Calcola la differenza tra questo valore DbGeometry e un altro valore DbGeometry.</summary>
      <returns>Nuovo valore DbGeometry che rappresenta la differenza tra questo valore geometrico e Other.</returns>
      <param name="other">Valore geometrico per cui deve essere calcolata la differenza con questo valore.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeometry.Dimension">
      <summary>Ottiene la dimensione del valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato o, se il valore è una raccolta, la dimensione dell'elemento più grande.</summary>
      <returns>Dimensione del valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato.</returns>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.Disjoint(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Determina se questo valore DbGeometry è spazialmente non contiguo rispetto all'argomento DbGeometry specificato.</summary>
      <returns>true se Other non è contiguo a questo valore geometrico. In caso contrario, false.</returns>
      <param name="other">Valore geometrico che deve essere confrontato con questo valore geometrico ai fini della contiguità.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.Distance(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Calcola la distanza tra i punti più vicini in questo valore DbGeometry e un altro valore DbGeometry.</summary>
      <returns>Valore Double che specifica la distanza tra i due punti più vicini in questo valore geometrico e Other.</returns>
      <param name="other">Valore geometrico per cui deve essere calcolata la distanza da questo valore.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.ElementAt(System.Int32)">
      <summary>Restituisce un elemento di questo valore DbGeometry da una posizione specifica, se rappresenta una raccolta di valori geometrici. </summary>
      <returns>Elemento in questo valore geometrico alla posizione specificata, se rappresenta una raccolta di altri valori geometrici. In caso contrario, Null.</returns>
      <param name="index">Posizione all'interno di questo valore geometrico da cui derivare l'elemento.</param>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeometry.ElementCount">
      <summary>Ottiene il numero di elementi in questo valore DbGeometry, se rappresenta una raccolta di valori geometrici. </summary>
      <returns>Numero di elementi in questo valore geometrico, se rappresenta una raccolta di altri valori geometrici. In caso contrario, Null. </returns>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeometry.Elevation">
      <summary>Ottiene l'elevazione (coordinata Z) di questo valore DbGeometry, se rappresenta un punto. </summary>
      <returns>Elevazione (coordinata Z) di questo valore DbGeometry, se rappresenta un punto. In caso contrario, Null. </returns>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeometry.EndPoint">
      <summary>Ottiene un valore DbGeometry che rappresenta il punto iniziale di questo valore, che potrebbe essere Null se questo valore DbGeometry non rappresenta una curva.</summary>
      <returns>Valore DbGeometry che rappresenta il punto iniziale di questo valore.</returns>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeometry.Envelope">
      <summary>Ottiene la versione envelope (rettangolo di selezione minimo) di questo valore DbGeometry, come valore geometrico.</summary>
      <returns>Versione envelope (rettangolo di selezione minimo) di questo valore DbGeometry.</returns>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeometry.ExteriorRing">
      <summary>Ottiene il valore DbGeometry che rappresenta l'anello esterno di questo valore DbGeometry, che potrebbe essere Null se questo valore non rappresenta un poligono.</summary>
      <returns>Valore DbGeometry che rappresenta l'anello esterno di questo valore DbGeometry.</returns>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.FromBinary(System.Byte[])">
      <summary>Crea un nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> in base al valore WKB specificato.</summary>
      <returns>Nuovo valore DbGeometry definito dal valore WKB con l'identificatore del sistema di coordinate geometrico predefinito (<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />).</returns>
      <param name="wellKnownBinary">Matrice di byte che contiene una rappresentazione WKB del valore geometrico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="wellKnownBinary" /> è null.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.FromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> in base al valore WKB e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore DbGeometry definito dal valore WKB con l'identificatore del sistema di coordinate specificato.</returns>
      <param name="wellKnownBinary">Matrice di byte che contiene una rappresentazione WKB del valore geometrico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore DbGeometry.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="wellKnownBinary" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="coordinateSystemId" /> non valido.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.FromGml(System.String)">
      <summary>Crea un nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> in base al valore GML (Geography Markup Language) specificato.</summary>
      <returns>Nuovo valore DbGeometry definito dal valore GML con l'identificatore del sistema di coordinate geometrico predefinito (SRID) (<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />).</returns>
      <param name="geometryMarkup">Stringa che contiene una rappresentazione GML (Geography Markup Language) del valore geometrico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryMarkup" /> è null.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.FromGml(System.String,System.Int32)">
      <summary>Crea un nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> in base al valore GML e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore DbGeometry definito dal valore GML con l'identificatore del sistema di coordinate specificato.</returns>
      <param name="geometryMarkup">Stringa che contiene una rappresentazione GML (Geography Markup Language) del valore geometrico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore DbGeometry.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryMarkup" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="coordinateSystemId" /> non valido.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.FromText(System.String)">
      <summary>Crea un nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> in base al valore WKT specificato.</summary>
      <returns>Nuovo valore DbGeometry definito dal valore WKT con l'identificatore del sistema di coordinate geometrico predefinito (SRID) (<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />).</returns>
      <param name="wellKnownText">Stringa che contiene una rappresentazione WKT del valore geometrico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="wellKnownText" /> è null.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.FromText(System.String,System.Int32)">
      <summary>Crea un nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> in base al valore WKT e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore DbGeometry definito dal valore WKT con l'identificatore del sistema di coordinate specificato.</returns>
      <param name="wellKnownText">Stringa che contiene una rappresentazione WKT del valore geometrico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore DbGeometry.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="wellKnownText" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="coordinateSystemId" /> non valido.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.GeometryCollectionFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuovo valore della raccolta <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> in base al valore WKB e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore DbGeometry definito dal valore WKB con l'identificatore del sistema di coordinate specificato.</returns>
      <param name="geometryCollectionWellKnownBinary">Matrice di byte che contiene una rappresentazione WKB del valore geometrico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore DbGeometry.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryCollectionWellKnownBinary" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="coordinateSystemId" /> non valido.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.GeometryCollectionFromText(System.String,System.Int32)">
      <summary>Crea un nuovo valore della raccolta <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> in base al valore WKT e all'identificatore del sistema di coordinate (SRID).</summary>
      <returns>Nuovo valore DbGeometry definito dal valore WKT con l'identificatore del sistema di coordinate specificato.</returns>
      <param name="geometryCollectionWellKnownText">Stringa che contiene una rappresentazione WKT del valore geometrico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore DbGeometry.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryCollectionWellKnownText" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="coordinateSystemId" /> non valido.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.InteriorRingAt(System.Int32)">
      <summary>Restituisce un anello interno di questo valore DbGeometry a una posizione specifica, se rappresenta un poligono. </summary>
      <returns>Anello interno in questo valore geometrico alla posizione specificata, se rappresenta un poligono. In caso contrario, Null.</returns>
      <param name="index">Posizione all'interno di questo valore geometrico da cui derivare l'anello interno.</param>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeometry.InteriorRingCount">
      <summary>Ottiene il numero di anelli interni in questo valore DbGeometry, se rappresenta un poligono. </summary>
      <returns>Numero di elementi in questo valore geometrico, se rappresenta un poligono. In caso contrario, Null.</returns>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.Intersection(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Calcola l'intersezione tra questo valore DbGeometry e un altro valore DbGeometry.</summary>
      <returns>Nuovo valore DbGeometry che rappresenta l'intersezione tra questo valore geometrico e Other.</returns>
      <param name="other">Valore geometrico per cui deve essere calcolata l'intersezione con questo valore.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.Intersects(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Determina se questo valore DbGeometry interseca spazialmente l'argomento DbGeometry specificato.</summary>
      <returns>true se Other interseca questo valore geometrico. In caso contrario, false.</returns>
      <param name="other">Valore geometrico che deve essere confrontato con questo valore geometrico ai fini dell'intersezione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeometry.IsClosed">
      <summary>Ottiene un valore booleano che ammette i valori Null che indica questo valore DbGeometry è chiuso, che potrebbe essere Null se questo valore non rappresenta una curva.</summary>
      <returns>true se questo valore DbGeometry è chiuso. In caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeometry.IsEmpty">
      <summary>Ottiene un valore booleano che ammette i valori Null che indica questo valore DbGeometry è vuoto, che potrebbe essere Null se questo valore non rappresenta una curva.</summary>
      <returns>true se questo valore DbGeometry è vuoto. In caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeometry.IsRing">
      <summary>Ottiene un valore booleano che ammette i valori Null che indica questo valore DbGeometry è un anello, che potrebbe essere Null se questo valore non rappresenta una curva.</summary>
      <returns>true se questo valore DbGeometry è un anello. In caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeometry.IsSimple">
      <summary>Ottiene un valore booleano che ammette i valori Null che indica se questo valore DbGeometry è semplice.</summary>
      <returns>true se questo valore DbGeometry è semplice. In caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeometry.IsValid">
      <summary>Ottiene un valore booleano che ammette i valori Null che indica se questo valore DbGeometry è valido.</summary>
      <returns>true se questo valore DbGeometry è valido. In caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeometry.Length">
      <summary>Ottiene un valore Double che ammette i valori Null che indica la lunghezza di questo valore DbGeometry, che potrebbe essere Null se questo valore non rappresenta una curva.</summary>
      <returns>Lunghezza di questo valore DbGeometry.</returns>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.LineFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuovo valore linea <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> in base al valore WKB e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore DbGeometry definito dal valore WKB con l'identificatore del sistema di coordinate specificato.</returns>
      <param name="lineWellKnownBinary">Matrice di byte che contiene una rappresentazione WKB del valore geometrico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore DbGeometry.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="lineWellKnownBinary" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="coordinateSystemId" /> non valido.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.LineFromText(System.String,System.Int32)">
      <summary>Crea un nuovo valore linea <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> in base al valore WKT e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore DbGeometry definito dal valore WKT con l'identificatore del sistema di coordinate specificato.</returns>
      <param name="lineWellKnownText">Stringa che contiene una rappresentazione WKT del valore geometrico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore DbGeometry.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="lineWellKnownText" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="coordinateSystemId" /> non valido.</exception>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeometry.Measure">
      <summary>Ottiene la Misura (coordinata M) di questo valore DbGeometry, se rappresenta un punto. </summary>
      <returns>Valore Misura (coordinata M) di questo valore geometrico, se rappresenta un punto. In caso contrario, Null.</returns>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.MultiLineFromBinary(System.Byte[],System.Int32)">
      <summary>Restituisce il valore multilinea da un valore binario.</summary>
      <returns>Valore multilinea da un valore binario.</returns>
      <param name="multiLineWellKnownBinary">Valore WKB.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.MultiLineFromText(System.String,System.Int32)">
      <summary>Restituisce il valore multilinea da un valore WKT.</summary>
      <returns>Valore multilinea da un valore WKT.</returns>
      <param name="multiLineWellKnownText">Valore WKT.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.MultiPointFromBinary(System.Byte[],System.Int32)">
      <summary>Restituisce il valore multipunto da un valore WKB.</summary>
      <returns>Valore multipunto da un valore WKB.</returns>
      <param name="multiPointWellKnownBinary">Valore WKB.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.MultiPointFromText(System.String,System.Int32)">
      <summary>Restituisce il valore multipunto da un valore WKT.</summary>
      <returns>Valore multipunto da un valore WKT.</returns>
      <param name="multiPointWellKnownText">Valore WKT.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.MultiPolygonFromBinary(System.Byte[],System.Int32)">
      <summary>Restituisce il valore multipoligono da un valore WKB.</summary>
      <returns>Valore multipunto da un valore WKT.</returns>
      <param name="multiPolygonWellKnownBinary">Valore WKT del multipoligono.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.MultiPolygonFromText(System.String,System.Int32)">
      <summary>Restituisce il valore multipoligono da un valore WKB.</summary>
      <returns>Valore multipoligono da un valore WKB.</returns>
      <param name="multiPolygonWellKnownText">Valore WKT del multipoligono.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.Overlaps(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Determina se questo valore DbGeometry si sovrappone spazialmente all'argomento DbGeometry specificato.</summary>
      <returns>true se questo valore geometrico si sovrappone ad Other. In caso contrario, false.</returns>
      <param name="other">Valore geometrico che deve essere confrontato con questo valore geometrico ai fini della sovrapposizione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.PointAt(System.Int32)">
      <summary>Restituisce un elemento di questo valore DbGeometry da una posizione specifica, se rappresenta una linea spezzata o un anello lineare. </summary>
      <returns>Elemento in questo valore geometrico alla posizione specificata, se rappresenta una linea spezzata o un anello lineare. In caso contrario, Null.</returns>
      <param name="index">Posizione all'interno di questo valore geometrico da cui derivare l'elemento.</param>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeometry.PointCount">
      <summary>Ottiene il numero di punti in questo valore DbGeometry, se rappresenta una linea spezzata o un anello lineare. </summary>
      <returns>Numero di elementi in questo valore geometrico, se rappresenta una linea spezzata o un anello lineare. In caso contrario, Null.</returns>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.PointFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuovo valore punto <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> in base al valore WKB e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore DbGeometry definito dal valore WKB con l'identificatore del sistema di coordinate specificato.</returns>
      <param name="pointWellKnownBinary">Matrice di byte che contiene una rappresentazione WKB del valore geometrico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore DbGeometry.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pointWellKnownBinary" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="coordinateSystemId" /> non valido.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.PointFromText(System.String,System.Int32)">
      <summary>Crea un nuovo valore punto <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> in base al valore WKT e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore DbGeometry definito dal valore WKT con l'identificatore del sistema di coordinate specificato.</returns>
      <param name="pointWellKnownText">Stringa che contiene una rappresentazione WKT del valore geometrico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore DbGeometry.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pointWellKnownText" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="coordinateSystemId" /> non valido.</exception>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeometry.PointOnSurface">
      <summary>Ottiene un punto sulla superficie di questo valore DbGeometry che potrebbe essere Null se questo valore non rappresenta una superficie.</summary>
      <returns>Punto sulla superficie di questo valore DbGeometry.</returns>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.PolygonFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuovo valore poligono <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> in base al valore WKB e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore DbGeometry definito dal valore WKB con l'identificatore del sistema di coordinate specificato.</returns>
      <param name="polygonWellKnownBinary">Matrice di byte che contiene una rappresentazione WKB del valore geometrico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore DbGeometry.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="polygonWellKnownBinary" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="coordinateSystemId" /> non valido.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.PolygonFromText(System.String,System.Int32)">
      <summary>Crea un nuovo valore poligono <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> in base al valore WKT e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore DbGeometry definito dal valore WKT con l'identificatore del sistema di coordinate specificato.</returns>
      <param name="polygonWellKnownText">Stringa che contiene una rappresentazione WKT del valore geometrico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore DbGeometry.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="polygonWellKnownText" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="coordinateSystemId" /> non valido.</exception>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeometry.Provider">
      <summary>Ottiene il provider spaziale che verrà utilizzato per le operazioni su questo tipo spaziale.</summary>
      <returns>Provider spaziale che verrà utilizzato per le operazioni su questo tipo spaziale.</returns>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeometry.ProviderValue">
      <summary>Ottiene una rappresentazione di questo valore DbGeometry specifico del provider sottostante che lo ha costruito.</summary>
      <returns>Rappresentazione di questo valore DbGeometry.</returns>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.Relate(System.Data.Entity.Spatial.DbGeometry,System.String)">
      <summary>Determina se questo valore DbGeometry è spazialmente correlato all'argomento DbGeometry specificato in base al pattern di intersezione DE-9IM (Dimensionally Extended Nine-Intersection Model ).</summary>
      <returns>true se questo valore geometrico è correlato ad Other in base alla matrice del pattern di intersezione specificato. In caso contrario, false.</returns>
      <param name="other">Valore geometrico che deve essere confrontato con questo valore geometrico ai fini della relazione.</param>
      <param name="matrix">Stringa che contiene la rappresentazione di testo del pattern di intersezione (DE-9IM) che definisce la relazione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> e <paramref name="matrix" /> è Null.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.SpatialEquals(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Determina se questo valore DbGeometry è spazialmente uguale all'argomento DbGeometry specificato.</summary>
      <returns>true se Other è spazialmente uguale a questo valore geometrico. In caso contrario, false.</returns>
      <param name="other">Valore geometrico che deve essere confrontato con questo valore geometrico ai fini dell'uguaglianza.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeometry.SpatialTypeName">
      <summary>Ottiene una rappresentazione del nome del tipo spaziale di questo valore DbGeometry.</summary>
      <returns>Rappresentazione del nome del tipo spaziale di questo valore DbGeometry.</returns>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeometry.StartPoint">
      <summary>Ottiene un valore DbGeometry che rappresenta il punto iniziale di questo valore, che potrebbe essere Null se questo valore DbGeometry non rappresenta una curva.</summary>
      <returns>Valore DbGeometry che rappresenta il punto iniziale di questo valore.</returns>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.SymmetricDifference(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Calcola la differenza simmetrica tra questo valore DbGeometry e un altro valore DbGeometry.</summary>
      <returns>Nuovo valore DbGeometry che rappresenta la differenza simmetrica tra questo valore geometrico e Other.</returns>
      <param name="other">Valore geometrico per cui deve essere calcolata la differenza simmetrica con questo valore.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.ToString">
      <summary>Restituisce una rappresentazione in forma di stringa del valore geometrico.</summary>
      <returns>Rappresentazione in forma di stringa del valore geometrico.</returns>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.Touches(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Determina se questo valore DbGeometry tocca spazialmente l'argomento DbGeometry specificato.</summary>
      <returns>true se Other tocca questo valore geometrico. In caso contrario, false.</returns>
      <param name="other">Valore geometrico che deve essere confrontato con questo valore geometrico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.Union(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Calcola l'unione tra questo valore DbGeometry e un altro valore DbGeometry.</summary>
      <returns>Nuovo valore DbGeometry che rappresenta l'unione tra questo valore geometrico e Other.</returns>
      <param name="other">Valore geometrico per cui deve essere calcolata l'unione con questo valore.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeometry.WellKnownValue">
      <summary>Ottiene o imposta una rappresentazione WKB serializzabile di un contratto di dati di questo valore DbGeometry.</summary>
      <returns>Rappresentazione WKB serializzabile di un contratto di dati di questo valore DbGeometry.</returns>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometry.Within(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Determina se questo valore DbGeometry si trova spazialmente all'interno dell'argomento DbGeometry specificato.</summary>
      <returns>true se questo valore geometrico si trova all'interno di Other. In caso contrario, false.</returns>
      <param name="other">Valore geometrico che deve essere confrontato con questo valore geometrico ai fini del contenimento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è null.</exception>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeometry.XCoordinate">
      <summary>Ottiene la coordinata X di questo valore DbGeometry, se rappresenta un punto.</summary>
      <returns>Valore della coordinata X di questo valore geometrico, se rappresenta un punto. In caso contrario, Null.</returns>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeometry.YCoordinate">
      <summary>Ottiene la coordinata Y di questo valore DbGeometry, se rappresenta un punto.</summary>
      <returns>Valore della coordinata Y di questo valore geometrico, se rappresenta un punto. In caso contrario, Null.</returns>
    </member>
    <member name="T:System.Data.Entity.Spatial.DbGeometryWellKnownValue">
      <summary>Rappresentazione serializzabile di un contratto di dati di un valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbGeometryWellKnownValue.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Spatial.DbGeometryWellKnownValue" />.</summary>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeometryWellKnownValue.CoordinateSystemId">
      <summary>Ottiene o imposta l'identificatore del sistema di coordinate (SRID) di questo valore.</summary>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeometryWellKnownValue.WellKnownBinary">
      <summary>Ottiene o imposta la rappresentazione WKB di questo valore.</summary>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbGeometryWellKnownValue.WellKnownText">
      <summary>Ottiene o imposta la rappresentazione WKT di questo valore.</summary>
    </member>
    <member name="T:System.Data.Entity.Spatial.DbSpatialDataReader">
      <summary>API del servizio indipendente dal provider per il supporto dei tipi geospaziali (Geometria/Geografia).</summary>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialDataReader.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Spatial.DbSpatialDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialDataReader.GetGeography(System.Int32)">
      <summary>Se implementata in tipi derivati, legge un'istanza di <see cref="T:System.Data.Entity.Spatial.DbGeography" /> dalla colonna all'ordinale specificato.</summary>
      <returns>Istanza di DbGeography al valore di colonna specificato.</returns>
      <param name="ordinal">Ordinale della colonna che contiene il valore geografico.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialDataReader.GetGeographyAsync(System.Int32,System.Threading.CancellationToken)">
      <summary>Legge in modo asincrono un'istanza di <see cref="T:System.Data.Entity.Spatial.DbGeography" /> dalla colonna all'ordinale specificato.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene l'istanza di <see cref="T:System.Data.Entity.Spatial.DbGeography" /> con il valore di colonna specificato.</returns>
      <param name="ordinal">Ordinale della colonna che contiene il valore geografico.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialDataReader.GetGeometry(System.Int32)">
      <summary>Se implementata in tipi derivati, legge un'istanza di <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> dalla colonna all'ordinale specificato.</summary>
      <returns>Istanza di DbGeometry al valore di colonna specificato.</returns>
      <param name="ordinal">Ordinale della colonna del record di dati che contiene i dati geometrici specifici del provider.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialDataReader.GetGeometryAsync(System.Int32,System.Threading.CancellationToken)">
      <summary>Legge in modo asincrono un'istanza di <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> dalla colonna all'ordinale specificato.</summary>
      <returns>Attività che rappresenta l'operazione asincrona.Il risultato dell'attività contiene l'istanza di <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> con il valore di colonna specificato.</returns>
      <param name="ordinal">Ordinale della colonna del record di dati che contiene i dati geometrici specifici del provider.</param>
      <param name="cancellationToken">Oggetto <see cref="T:System.Threading.CancellationToken" /> da osservare durante l'attesa del completamento dell'attività.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialDataReader.IsGeographyColumn(System.Int32)">
      <summary>Restituisce se la colonna all'ordinale specificato è di tipo geografico</summary>
      <returns>true se la colonna all'ordinale specificato è di tipo geografico; in caso contrario false.</returns>
      <param name="ordinal">Ordinale della colonna.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialDataReader.IsGeometryColumn(System.Int32)">
      <summary>Restituisce se la colonna all'ordinale specificato è di tipo geometrico</summary>
      <returns>true se la colonna all'ordinale specificato è di tipo geometrico; in caso contrario false.</returns>
      <param name="ordinal">Ordinale della colonna.</param>
    </member>
    <member name="T:System.Data.Entity.Spatial.DbSpatialServices">
      <summary>API del servizio indipendente dal provider per il supporto dei tipi geospaziali (Geometria/Geografia).</summary>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Spatial.DbSpatialServices" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.AsBinary(System.Data.Entity.Spatial.DbGeography)">
      <summary>Ottiene la rappresentazione WKB (well-known binary) del valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato.</summary>
      <returns>Rappresentazione WKB del valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato.</returns>
      <param name="geographyValue">Valore geografico per cui è necessario generare una rappresentazione WKB.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geographyValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geographyValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.AsBinary(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Ottiene la rappresentazione WKB (well-known binary) del valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato.</summary>
      <returns>Rappresentazione WKB del valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato.</returns>
      <param name="geometryValue">Valore geometrico per cui è necessario generare una rappresentazione WKB.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.AsGml(System.Data.Entity.Spatial.DbGeography)">
      <summary>Genera la rappresentazione GML (Geography Markup Language) di questo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</summary>
      <returns>Stringa che contiene la rappresentazione GML di questo valore DbGeography.</returns>
      <param name="geographyValue">Valore geografico per cui è necessario generare la rappresentazione GML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geographyValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geographyValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.AsGml(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Genera la rappresentazione GML (Geography Markup Language) di questo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</summary>
      <returns>Stringa che contiene la rappresentazione GML di questo valore DbGeometry.</returns>
      <param name="geometryValue">Valore geometrico per cui è necessario generare la rappresentazione GML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.AsText(System.Data.Entity.Spatial.DbGeography)">
      <summary>Ottiene la rappresentazione WKT (well-known text) del valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato.Questo valore deve includere unicamente la longitudine e la latitudine dei punti.</summary>
      <returns>Stringa che contiene la rappresentazione WKT di geographyValue.</returns>
      <param name="geographyValue">Valore geografico per cui è necessario generare la rappresentazione WKT.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geographyValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geographyValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.AsText(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Ottiene la rappresentazione WKT del valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato, includendo solo le coordinate X e Y dei punti.</summary>
      <returns>Stringa che contiene la rappresentazione WKT di geometryValue.</returns>
      <param name="geometryValue">Valore geometrico per cui è necessario generare la rappresentazione WKT.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.AsTextIncludingElevationAndMeasure(System.Data.Entity.Spatial.DbGeography)">
      <summary>Restituisce una rappresentazione testuale di <see cref="T:System.Data.Entity.Spatial.DbSpatialServices" /> con elevazione e misura.</summary>
      <returns>Rappresentazione testuale di <see cref="T:System.Data.Entity.Spatial.DbSpatialServices" />.</returns>
      <param name="geographyValue">Valore geografico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geographyValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geographyValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.AsTextIncludingElevationAndMeasure(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Restituisce una rappresentazione testuale di <see cref="T:System.Data.Entity.Spatial.DbSpatialServices" /> con elevazione e misura.</summary>
      <returns>Rappresentazione testuale di <see cref="T:System.Data.Entity.Spatial.DbSpatialServices" /> con elevazione e misura.</returns>
      <param name="geometryValue">Valore geometrico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.Buffer(System.Data.Entity.Spatial.DbGeography,System.Double)">
      <summary>Crea un valore geografico che rappresenta tutti i punti minori o uguali alla distanza dal valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato.</summary>
      <returns>Crea un valore DbGeography che rappresenta tutti i punti minori o uguali alla distanza da geographyValue.</returns>
      <param name="geographyValue">Valore geografico.</param>
      <param name="distance">Valore Double che specifica la distanza da geographyValue al buffer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geographyValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geographyValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.Buffer(System.Data.Entity.Spatial.DbGeometry,System.Double)">
      <summary>Crea un valore geometrico che rappresenta tutti i punti minori o uguali alla distanza dal valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato.</summary>
      <returns>Nuovo valore DbGeometry che rappresenta tutti i punti minori o uguali alla distanza da geometryValue.</returns>
      <param name="geometryValue">Valore geometrico.</param>
      <param name="distance">Valore Double che specifica la distanza da geometryValue al buffer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.Contains(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>Consente di stabilire se un valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> contiene l'altro.</summary>
      <returns>true se geometryValue contiene otherGeometry. In caso contrario, false.</returns>
      <param name="geometryValue">Primo valore geometrico.</param>
      <param name="otherGeometry">Secondo valore geometrico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> o <paramref name="otherGeometry" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> o <paramref name="otherGeometry" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.CreateGeography(System.Data.Entity.Spatial.DbSpatialServices,System.Object)">
      <summary>Questo metodo deve essere utilizzato dalle implementazioni derivate di <see cref="M:System.Data.Entity.Spatial.DbSpatialServices.GeographyFromProviderValue(System.Object)" /> dopo la convalida appropriata del valore del provider specificato in modo da assicurarsi che sia adatto all'utilizzo con l'implementazione derivata.</summary>
      <returns>Nuova istanza di <see cref="T:System.Data.Entity.Spatial.DbGeography" /> che contiene il valore providerValue specificato e utilizza il valore spatialServices specificato come relativa implementazione spaziale.</returns>
      <param name="spatialServices">Istanza dei servizi spaziali da cui dipenderà il valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> restituito per la relativa implementazione della funzionalità spaziale.</param>
      <param name="providerValue">Valore del provider.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.CreateGeometry(System.Data.Entity.Spatial.DbSpatialServices,System.Object)">
      <summary>Questo metodo deve essere utilizzato dalle implementazioni derivate di <see cref="M:System.Data.Entity.Spatial.DbSpatialServices.GeometryFromProviderValue(System.Object)" /> dopo la convalida appropriata del valore del provider specificato in modo da assicurarsi che sia adatto all'utilizzo con l'implementazione derivata.</summary>
      <returns>Nuova istanza di <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> che contiene il valore providerValue specificato e utilizza il valore spatialServices specificato come relativa implementazione spaziale.</returns>
      <param name="spatialServices">Istanza dei servizi spaziali da cui dipenderà il valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> restituito per la relativa implementazione della funzionalità spaziale.</param>
      <param name="providerValue">Valore del provider.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.CreateProviderValue(System.Data.Entity.Spatial.DbGeographyWellKnownValue)">
      <summary>Crea un valore specifico del provider compatibile con l'implementazione spaziale dei servizi in base alla rappresentazione di <see cref="T:System.Data.Entity.Spatial.DbGeography" /> nota.</summary>
      <returns>Valore specifico del provider che codifica le informazioni contenute in wellKnownValue in un modo compatibile con l'implementazione spaziale dei servizi.</returns>
      <param name="wellKnownValue">Istanza di <see cref="T:System.Data.Entity.Spatial.DbGeographyWellKnownValue" /> che contiene la rappresentazione nota di un valore geografico.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.CreateProviderValue(System.Data.Entity.Spatial.DbGeometryWellKnownValue)">
      <summary>Crea un valore specifico del provider compatibile con l'implementazione spaziale dei servizi in base alla rappresentazione di <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> nota.</summary>
      <returns>Valore specifico del provider che codifica le informazioni contenute in wellKnownValue in un modo compatibile con l'implementazione spaziale dei servizi.</returns>
      <param name="wellKnownValue">Istanza di <see cref="T:System.Data.Entity.Spatial.DbGeometryWellKnownValue" /> che contiene la rappresentazione nota di un valore geometrico.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.CreateWellKnownValue(System.Data.Entity.Spatial.DbGeography)">
      <summary>Crea un'istanza di <see cref="T:System.Data.Entity.Spatial.DbGeographyWellKnownValue" /> che rappresenta il valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato utilizzando uno o entrambi i formati spaziali noti standard.</summary>
      <returns>Rappresentazione nota di geographyValue, come un nuovo oggetto <see cref="T:System.Data.Entity.Spatial.DbGeographyWellKnownValue" />.</returns>
      <param name="geographyValue">Valore geografico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geographyValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geographyValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.CreateWellKnownValue(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Crea un'istanza di <see cref="T:System.Data.Entity.Spatial.DbGeometryWellKnownValue" /> che rappresenta il valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato utilizzando uno o entrambi i formati spaziali noti standard.</summary>
      <returns>Rappresentazione nota di geometryValue, come un nuovo oggetto <see cref="T:System.Data.Entity.Spatial.DbGeometryWellKnownValue" />.</returns>
      <param name="geometryValue">Valore geometrico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.Crosses(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>Determina se due valori <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificati si incrociano spazialmente.</summary>
      <returns>true se geometryValue incrocia otherGeometry. In caso contrario, false.</returns>
      <param name="geometryValue">Primo valore geometrico.</param>
      <param name="otherGeometry">Secondo valore geometrico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> o <paramref name="otherGeometry" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> o <paramref name="otherGeometry" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbSpatialServices.Default">
      <summary>Ottiene i servizi predefiniti per <see cref="T:System.Data.Entity.Spatial.DbSpatialServices" />.</summary>
      <returns>Servizi predefiniti.</returns>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.Difference(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>Calcola la differenza tra due valori <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</summary>
      <returns>Nuovo valore DbGeography che rappresenta la differenza tra geographyValue e otherGeography.</returns>
      <param name="geographyValue">Primo valore geografico.</param>
      <param name="otherGeography">Secondo valore geografico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geographyValue" /> o <paramref name="otherGeography" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geographyValue" /> o <paramref name="otherGeography" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.Difference(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>Calcola la differenza tra due valori <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</summary>
      <returns>Nuovo valore DbGeometry che rappresenta la differenza tra geometryValue e otherGeometry.</returns>
      <param name="geometryValue">Primo valore geometrico.</param>
      <param name="otherGeometry">Secondo valore geometrico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> o <paramref name="otherGeometry" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> o <paramref name="otherGeometry" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.Disjoint(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>Determina se due valori <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificati sono spazialmente non contigui.</summary>
      <returns>true se geographyValue non è contiguo a geographyValue. In caso contrario, false.</returns>
      <param name="geographyValue">Primo valore geografico da confrontare ai fini della contiguità.</param>
      <param name="otherGeography">Secondo valore geografico da confrontare ai fini della contiguità.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geographyValue" /> o <paramref name="otherGeography" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geographyValue" /> o <paramref name="otherGeography" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.Disjoint(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>Determina se due valori <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificati sono spazialmente non contigui.</summary>
      <returns>true se geometryValue non è contiguo a otherGeometry. In caso contrario, false.</returns>
      <param name="geometryValue">Primo valore geometrico da confrontare ai fini della contiguità.</param>
      <param name="otherGeometry">Secondo valore geometrico da confrontare ai fini della contiguità.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> o <paramref name="otherGeometry" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> o <paramref name="otherGeometry" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.Distance(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>Calcola la distanza tra i punti più vicini in due valori <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</summary>
      <returns>Valore Double che specifica la distanza tra i due punti più vicini in geographyValue e otherGeography.</returns>
      <param name="geographyValue">Primo valore geografico.</param>
      <param name="otherGeography">Secondo valore geografico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geographyValue" /> o <paramref name="otherGeography" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geographyValue" /> o <paramref name="otherGeography" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.Distance(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>Calcola la distanza tra i punti più vicini in due valori <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</summary>
      <returns>Valore Double che specifica la distanza tra i due punti più vicini in geometryValue e otherGeometry.</returns>
      <param name="geometryValue">Primo valore geometrico.</param>
      <param name="otherGeometry">Secondo valore geometrico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> o <paramref name="otherGeometry" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> o <paramref name="otherGeometry" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.ElementAt(System.Data.Entity.Spatial.DbGeography,System.Int32)">
      <summary>Restituisce un elemento del valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato, se rappresenta una raccolta di valori geografici.</summary>
      <returns>Elemento in geographyValue alla posizione index, se rappresenta una raccolta di altri valori geografici. In caso contrario, Null.</returns>
      <param name="geographyValue">Valore geografico che non deve rappresentare una raccolta di valori geografici.</param>
      <param name="index">Posizione all'interno del valore geografico da cui derivare l'elemento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geographyValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geographyValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.ElementAt(System.Data.Entity.Spatial.DbGeometry,System.Int32)">
      <summary>Restituisce un elemento del valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato, se rappresenta una raccolta di valori geometrici.</summary>
      <returns>Elemento in geometryValue alla posizione index, se rappresenta una raccolta di altri valori geometrici. In caso contrario, Null.</returns>
      <param name="geometryValue">Valore geometrico che non deve rappresentare una raccolta di valori geometrici.</param>
      <param name="index">Posizione all'interno del valore geometrico da cui derivare l'elemento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeographyCollectionFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuovo valore della raccolta <see cref="T:System.Data.Entity.Spatial.DbGeography" /> in base al valore WKB e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> definito dal valore WKB con l'identificatore del sistema di coordinate specificato (<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />).</returns>
      <param name="geographyCollectionWellKnownBinary">Matrice di byte che contiene una rappresentazione WKB del valore geografico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeographyCollectionFromText(System.String,System.Int32)">
      <summary>Crea un nuovo valore della raccolta <see cref="T:System.Data.Entity.Spatial.DbGeography" /> in base al valore WKT e all'identificatore del sistema di coordinate (SRID).</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> definito dal valore WKT con l'identificatore del sistema di coordinate specificato (<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />).</returns>
      <param name="geographyCollectionWellKnownText">Stringa che contiene una rappresentazione WKT del valore geografico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeographyFromBinary(System.Byte[])">
      <summary>Crea un nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> in base al valore WKB specificato.</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> definito dal valore WKB con l'identificatore del sistema di coordinate <see cref="T:System.Data.Entity.Spatial.DbGeography" /> predefinito (<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />).</returns>
      <param name="wellKnownBinary">Matrice di byte che contiene una rappresentazione WKB del valore geografico.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeographyFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> in base al valore WKB e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> definito dal valore WKB con l'identificatore del sistema di coordinate specificato (<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />).</returns>
      <param name="wellKnownBinary">Matrice di byte che contiene una rappresentazione WKB del valore geografico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeographyFromGml(System.String)">
      <summary>Crea un nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> in base al valore GML (Geography Markup Language) specificato.</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> definito dal valore GML con l'identificatore del sistema di coordinate <see cref="T:System.Data.Entity.Spatial.DbGeography" /> predefinito (<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />).</returns>
      <param name="geographyMarkup">Stringa che contiene una rappresentazione GML del valore geografico.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeographyFromGml(System.String,System.Int32)">
      <summary>Crea un nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> in base al valore GML e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> definito dal valore GML con l'identificatore del sistema di coordinate specificato.</returns>
      <param name="geographyMarkup">Stringa che contiene una rappresentazione GML del valore geografico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeographyFromProviderValue(System.Object)">
      <summary>Crea un nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> basato su un valore specifico del provider compatibile con l'implementazione spaziale dei servizi.</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> supportato dall'implementazione spaziale dei servizi e dal valore del provider specificato.</returns>
      <param name="providerValue">Valore specifico del provider che l'implementazione spaziale dei servizi è in grado di interpretare come valore geografico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="providerValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="providerValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeographyFromText(System.String)">
      <summary>Crea un nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> in base al valore WKT specificato.</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> definito dal valore WKT con l'identificatore del sistema di coordinate <see cref="T:System.Data.Entity.Spatial.DbGeography" /> predefinito (<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />).</returns>
      <param name="wellKnownText">Stringa che contiene una rappresentazione WKT del valore geografico.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeographyFromText(System.String,System.Int32)">
      <summary>Crea un nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> in base al valore WKT e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> definito dal valore WKT con l'identificatore del sistema di coordinate specificato (<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />).</returns>
      <param name="wellKnownText">Stringa che contiene una rappresentazione WKT del valore geografico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeographyLineFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuovo valore linea <see cref="T:System.Data.Entity.Spatial.DbGeography" /> in base al valore WKB e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> definito dal valore WKB con l'identificatore del sistema di coordinate specificato (<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />).</returns>
      <param name="lineWellKnownBinary">Matrice di byte che contiene una rappresentazione WKB del valore geografico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeographyLineFromText(System.String,System.Int32)">
      <summary>Crea un nuovo valore linea <see cref="T:System.Data.Entity.Spatial.DbGeography" /> in base al valore WKT e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> definito dal valore WKT con l'identificatore del sistema di coordinate specificato (<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />).</returns>
      <param name="lineWellKnownText">Stringa che contiene una rappresentazione WKT del valore geografico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeographyMultiLineFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuovo valore multilinea <see cref="T:System.Data.Entity.Spatial.DbGeography" /> in base al valore WKB e all'identificatore del sistema di coordinate specificati.</summary>
      <returns>Nuovo valore multilinea <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</returns>
      <param name="multiLineWellKnownBinary">Valore WKB.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeographyMultiLineFromText(System.String,System.Int32)">
      <summary>Crea un nuovo valore multilinea <see cref="T:System.Data.Entity.Spatial.DbGeography" /> basato sul valore WKT e sull'identificatore del sistema di coordinate specificati.</summary>
      <returns>Nuovo valore multilinea <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</returns>
      <param name="multiLineWellKnownText">Valore WKT.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeographyMultiPointFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuovo valore multipunto <see cref="T:System.Data.Entity.Spatial.DbGeography" /> in base al valore WKB e all'identificatore del sistema di coordinate specificati.</summary>
      <returns>Nuovo valore multipunto <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</returns>
      <param name="multiPointWellKnownBinary">Valore WKB.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeographyMultiPointFromText(System.String,System.Int32)">
      <summary>Crea un nuovo valore multipunto <see cref="T:System.Data.Entity.Spatial.DbGeography" /> in base al valore WKT e all'identificatore del sistema di coordinate specificati.</summary>
      <returns>Nuovo valore multipunto <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</returns>
      <param name="multiPointWellKnownText">Valore WKT.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeographyMultiPolygonFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuovo valore multipoligono <see cref="T:System.Data.Entity.Spatial.DbGeography" /> in base al valore WKB e all'identificatore del sistema di coordinate specificati.</summary>
      <returns>Nuovo valore multipoligono <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</returns>
      <param name="multiPolygonWellKnownBinary">Valore WKB.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeographyMultiPolygonFromText(System.String,System.Int32)">
      <summary>Crea un nuovo valore multipoligono <see cref="T:System.Data.Entity.Spatial.DbGeography" /> in base al valore WKT e all'identificatore del sistema di coordinate specificati.</summary>
      <returns>Nuovo valore multipoligono <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</returns>
      <param name="multiPolygonKnownText">Valore WKT.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeographyPointFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuovo valore punto <see cref="T:System.Data.Entity.Spatial.DbGeography" /> in base al valore WKB e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> definito dal valore WKB con l'identificatore del sistema di coordinate specificato (<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />).</returns>
      <param name="pointWellKnownBinary">Matrice di byte che contiene una rappresentazione WKB del valore geografico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeographyPointFromText(System.String,System.Int32)">
      <summary>Crea un nuovo valore punto <see cref="T:System.Data.Entity.Spatial.DbGeography" /> in base al valore WKT e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> definito dal valore WKT con l'identificatore del sistema di coordinate specificato (<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />).</returns>
      <param name="pointWellKnownText">Stringa che contiene una rappresentazione WKT del valore geografico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeographyPolygonFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuovo valore poligono <see cref="T:System.Data.Entity.Spatial.DbGeography" /> in base al valore WKB e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> definito dal valore WKB con l'identificatore del sistema di coordinate specificato (<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />).</returns>
      <param name="polygonWellKnownBinary">Matrice di byte che contiene una rappresentazione WKB del valore geografico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeographyPolygonFromText(System.String,System.Int32)">
      <summary>Crea un nuovo valore poligono <see cref="T:System.Data.Entity.Spatial.DbGeography" /> in base al valore WKT e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> definito dal valore WKT con l'identificatore del sistema di coordinate specificato (<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />).</returns>
      <param name="polygonWellKnownText">Stringa che contiene una rappresentazione WKT del valore geografico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeometryCollectionFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuovo valore della raccolta <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> in base al valore WKB e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> definito dal valore WKB con l'identificatore del sistema di coordinate specificato (<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />).</returns>
      <param name="geometryCollectionWellKnownBinary">Matrice di byte che contiene una rappresentazione WKB del valore geometrico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeometryCollectionFromText(System.String,System.Int32)">
      <summary>Crea un nuovo valore della raccolta <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> in base al valore WKT e all'identificatore del sistema di coordinate (SRID).</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> definito dal valore WKT con l'identificatore del sistema di coordinate specificato (<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />).</returns>
      <param name="geometryCollectionWellKnownText">Stringa che contiene una rappresentazione WKT del valore geometrico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeometryFromBinary(System.Byte[])">
      <summary>Crea un nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> in base al valore WKB specificato.</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> definito dal valore WKB con l'identificatore del sistema di coordinate <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> predefinito (<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />).</returns>
      <param name="wellKnownBinary">Matrice di byte che contiene una rappresentazione WKB del valore geometrico.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeometryFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> in base al valore WKB e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> definito dal valore WKB con l'identificatore del sistema di coordinate specificato (<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />).</returns>
      <param name="wellKnownBinary">Matrice di byte che contiene una rappresentazione WKB del valore geometrico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeometryFromGml(System.String)">
      <summary>Crea un nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> in base al valore GML (Geography Markup Language) specificato.</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> definito dal valore GML con l'identificatore del sistema di coordinate <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> predefinito (<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />).</returns>
      <param name="geometryMarkup">Stringa che contiene una rappresentazione GML (Geography Markup Language) del valore geometrico.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeometryFromGml(System.String,System.Int32)">
      <summary>Crea un nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> in base al valore GML e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> definito dal valore GML con l'identificatore del sistema di coordinate specificato.</returns>
      <param name="geometryMarkup">Stringa che contiene una rappresentazione GML (Geography Markup Language) del valore geometrico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeometryFromProviderValue(System.Object)">
      <summary>Crea un nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> basato su un valore specifico del provider compatibile con l'implementazione spaziale dei servizi.</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> supportato dall'implementazione spaziale dei servizi e dal valore del provider specificato.</returns>
      <param name="providerValue">Valore specifico del provider che l'implementazione spaziale dei servizi è in grado di interpretare come valore geometrico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="providerValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="providerValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeometryFromText(System.String)">
      <summary>Crea un nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> in base al valore WKT specificato.</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> definito dal valore WKT con l'identificatore del sistema di coordinate <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> predefinito (<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />).</returns>
      <param name="wellKnownText">Stringa che contiene una rappresentazione WKT del valore geometrico.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeometryFromText(System.String,System.Int32)">
      <summary>Crea un nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> in base al valore WKT e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> definito dal valore WKT con l'identificatore del sistema di coordinate specificato (<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />).</returns>
      <param name="wellKnownText">Stringa che contiene una rappresentazione WKT del valore geometrico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeometryLineFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuovo valore linea <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> in base al valore WKB e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> definito dal valore WKB con l'identificatore del sistema di coordinate specificato (<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />).</returns>
      <param name="lineWellKnownBinary">Matrice di byte che contiene una rappresentazione WKB del valore geometrico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeometryLineFromText(System.String,System.Int32)">
      <summary>Crea un nuovo valore linea <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> in base al valore WKT e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> definito dal valore WKT con l'identificatore del sistema di coordinate specificato (<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />).</returns>
      <param name="lineWellKnownText">Stringa che contiene una rappresentazione WKT del valore geometrico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeometryMultiLineFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuovo valore multilinea <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> in base al valore WKB e all'identificatore del sistema di coordinate specificati.</summary>
      <returns>Nuovo valore multilinea <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</returns>
      <param name="multiLineWellKnownBinary">Valore WKB.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeometryMultiLineFromText(System.String,System.Int32)">
      <summary>Crea un nuovo valore multilinea <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> basato sul valore WKT e sull'identificatore del sistema di coordinate specificati.</summary>
      <returns>Nuovo valore multilinea <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</returns>
      <param name="multiLineWellKnownText">Valore WKT.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeometryMultiPointFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuovo valore multipunto <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> in base al valore WKB e all'identificatore del sistema di coordinate specificati.</summary>
      <returns>Nuovo valore multipunto <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</returns>
      <param name="multiPointWellKnownBinary">Valore WKB.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeometryMultiPointFromText(System.String,System.Int32)">
      <summary>Crea un nuovo valore multipunto <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> in base al valore WKT e all'identificatore del sistema di coordinate specificati.</summary>
      <returns>Nuovo valore multipunto <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</returns>
      <param name="multiPointWellKnownText">Valore WKT.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeometryMultiPolygonFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuovo valore multipoligono <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> in base al valore WKB e all'identificatore del sistema di coordinate specificati.</summary>
      <returns>Nuovo valore multipoligono <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</returns>
      <param name="multiPolygonWellKnownBinary">Valore WKB.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeometryMultiPolygonFromText(System.String,System.Int32)">
      <summary>Crea un nuovo valore multipoligono <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> in base al valore WKT e all'identificatore del sistema di coordinate specificati.</summary>
      <returns>Nuovo valore multipoligono <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</returns>
      <param name="multiPolygonKnownText">Valore WKT.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeometryPointFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuovo valore punto <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> in base al valore WKB e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> definito dal valore WKB con l'identificatore del sistema di coordinate specificato (<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />).</returns>
      <param name="pointWellKnownBinary">Matrice di byte che contiene una rappresentazione WKB del valore geometrico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeometryPointFromText(System.String,System.Int32)">
      <summary>Crea un nuovo valore punto <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> in base al valore WKT e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> definito dal valore WKT con l'identificatore del sistema di coordinate specificato (<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />).</returns>
      <param name="pointWellKnownText">Stringa che contiene una rappresentazione WKT del valore geometrico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeometryPolygonFromBinary(System.Byte[],System.Int32)">
      <summary>Crea un nuovo valore poligono <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> in base al valore WKB e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> definito dal valore WKB con l'identificatore del sistema di coordinate specificato (<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />).</returns>
      <param name="polygonWellKnownBinary">Matrice di byte che contiene una rappresentazione WKB del valore geometrico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GeometryPolygonFromText(System.String,System.Int32)">
      <summary>Crea un nuovo valore poligono <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> in base al valore WKT e all'identificatore del sistema di coordinate (SRID) specificati.</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> definito dal valore WKT con l'identificatore del sistema di coordinate specificato (<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />).</returns>
      <param name="polygonWellKnownText">Stringa che contiene una rappresentazione WKT del valore geometrico.</param>
      <param name="coordinateSystemId">Identificatore del sistema di coordinate che deve essere utilizzato dal nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetArea(System.Data.Entity.Spatial.DbGeography)">
      <summary>Restituisce un valore Double che ammette i valori Null che indica l'area del valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato, che potrebbe essere Null se il valore non rappresenta una superficie.</summary>
      <returns>Valore Double che ammette i valori Null che indica l'area del valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato.</returns>
      <param name="geographyValue">Valore geografico che non deve rappresentare una superficie.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geographyValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geographyValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetArea(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Restituisce un valore Double che ammette i valori Null che indica l'area del valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato, che potrebbe essere Null se il valore non rappresenta una superficie.</summary>
      <returns>Valore Double che ammette i valori Null che indica l'area del valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato.</returns>
      <param name="geometryValue">Valore geometrico che non deve rappresentare una superficie.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetBoundary(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Restituisce un valore Double che ammette i valori Null che indica il limite del valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato.</summary>
      <returns>Limite del valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato.</returns>
      <param name="geometryValue">Valore geometrico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetCentroid(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Restituisce un valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> che rappresenta il centroide del valore DbGeometry specificato, che potrebbe essere Null se il valore non rappresenta una superficie.</summary>
      <returns>Centroide di geometryValue, se rappresenta una superficie. In caso contrario, Null.</returns>
      <param name="geometryValue">Valore geometrico che non deve rappresentare una superficie.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetConvexHull(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Restituisce un valore Double che ammette i valori Null che indica la struttura convessa del valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato.</summary>
      <returns>Struttura convessa del valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato.</returns>
      <param name="geometryValue">Valore geometrico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetCoordinateSystemId(System.Data.Entity.Spatial.DbGeography)">
      <summary>Restituisce l'identificatore del sistema di coordinate del valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato.</summary>
      <returns>Identificatore del sistema di coordinate del valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato.</returns>
      <param name="geographyValue">Valore geografico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geographyValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geographyValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetCoordinateSystemId(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Restituisce l'identificatore del sistema di coordinate del valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato.</summary>
      <returns>Identificatore del sistema di coordinate del valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato.</returns>
      <param name="geometryValue">Valore geometrico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetDimension(System.Data.Entity.Spatial.DbGeography)">
      <summary>Ottiene la dimensione del valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato o, se il valore è una raccolta, la dimensione di elementi più ampia.</summary>
      <returns>Dimensione di geographyValue o la dimensione di elementi più ampia se <see cref="T:System.Data.Entity.Spatial.DbGeography" /> è una raccolta.</returns>
      <param name="geographyValue">Valore geografico per cui è necessario recuperare il valore dimensione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geographyValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geographyValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetDimension(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Ottiene la dimensione del valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato o, se il valore è una raccolta, la dimensione di elementi più ampia.</summary>
      <returns>Dimensione di geometryValue o la dimensione di elementi più ampia se <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> è una raccolta.</returns>
      <param name="geometryValue">Valore geometrico per cui è necessario recuperare il valore dimensione.</param>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetElementCount(System.Data.Entity.Spatial.DbGeography)">
      <summary>Restituisce il numero di elementi nel valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato, se rappresenta una raccolta di valori geografici.</summary>
      <returns>Numero di elementi in geographyValue, se rappresenta una raccolta di altri valori geografici. In caso contrario, Null.</returns>
      <param name="geographyValue">Valore geografico che non deve rappresentare una raccolta di valori geografici.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geographyValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geographyValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetElementCount(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Restituisce il numero di elementi nel valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato, se rappresenta una raccolta di valori geometrici.</summary>
      <returns>Numero di elementi in geometryValue, se rappresenta una raccolta di altri valori geometrici. In caso contrario, Null.</returns>
      <param name="geometryValue">Valore geometrico che non deve rappresentare una raccolta di valori geometrici.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetElevation(System.Data.Entity.Spatial.DbGeography)">
      <summary>Restituisce l'elevazione (coordinata Z) del valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato, se rappresenta un punto.</summary>
      <returns>Elevazione (coordinata Z) di geographyValue, se rappresenta un punto. In caso contrario, Null.</returns>
      <param name="geographyValue">Valore geografico che non deve rappresentare un punto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geographyValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geographyValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetElevation(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Restituisce l'elevazione (Z) del valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato, se rappresenta un punto.</summary>
      <returns>Elevazione (coordinata Z) di geometryValue, se rappresenta un punto. In caso contrario, Null.</returns>
      <param name="geometryValue">Valore geometrico che non deve rappresentare un punto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetEndPoint(System.Data.Entity.Spatial.DbGeography)">
      <summary>Restituisce un valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> che rappresenta il punto finale del valore DbGeography specificato, che potrebbe essere Null se il valore non rappresenta una curva.</summary>
      <returns>Punto finale di geographyValue, se rappresenta un curva. In caso contrario, Null.</returns>
      <param name="geographyValue">Valore geografico che non deve rappresentare una curva.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geographyValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geographyValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetEndPoint(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Restituisce un valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> che rappresenta il punto finale del valore DbGeometry specificato, che potrebbe essere Null se il valore non rappresenta una curva.</summary>
      <returns>Punto finale di geometryValue, se rappresenta un curva. In caso contrario, Null.</returns>
      <param name="geometryValue">Valore geometrico che non deve rappresentare una curva.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetEnvelope(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Ottiene la versione envelope (rettangolo di selezione minimo) del valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato, come valore geometrico.</summary>
      <returns>Versione envelope di geometryValue, come valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</returns>
      <param name="geometryValue">Valore geometrico per cui è necessario recuperare il valore envelope.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetExteriorRing(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Restituisce un valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> che rappresenta l'anello esterno del valore DbGeometry specificato, che potrebbe essere Null se il valore non rappresenta un poligono.</summary>
      <returns>Valore DbGeometry che rappresenta l'anello esterno in geometryValue, se rappresenta un poligono. In caso contrario, Null.</returns>
      <param name="geometryValue">Valore geometrico che non deve rappresentare un poligono.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetInteriorRingCount(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Restituisce il numero di anelli interni nel valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato, se rappresenta un poligono.</summary>
      <returns>Numero di elementi in geometryValue, se rappresenta un poligono. In caso contrario, Null.</returns>
      <param name="geometryValue">Valore geometrico che non deve rappresentare un poligono.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetIsClosed(System.Data.Entity.Spatial.DbGeography)">
      <summary>Restituisce un valore booleano che ammette i valori Null che indica se il valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato è chiuso, che potrebbe essere Null se il valore non rappresenta una curva.</summary>
      <returns>true se il valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato è chiuso. In caso contrario, false.</returns>
      <param name="geographyValue">Valore geografico che non deve rappresentare una curva.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geographyValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geographyValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetIsClosed(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Restituisce un valore booleano che ammette i valori Null che indica se il valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato è chiuso, che potrebbe essere Null se il valore non rappresenta una curva.</summary>
      <returns>true se il valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato è chiuso. In caso contrario, false.</returns>
      <param name="geometryValue">Valore geometrico che non deve rappresentare una curva.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetIsEmpty(System.Data.Entity.Spatial.DbGeography)">
      <summary>Restituisce un valore booleano che ammette i valori Null che indica se il valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato è vuoto.</summary>
      <returns>true se il valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato è vuoto; in caso contrario, false.</returns>
      <param name="geographyValue">Valore geografico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geographyValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geographyValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetIsEmpty(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Restituisce un valore booleano che ammette i valori Null che indica se il valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato è vuoto.</summary>
      <returns>true se il valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato è vuoto; in caso contrario, false.</returns>
      <param name="geometryValue">Valore geometrico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetIsRing(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Restituisce un valore booleano che ammette i valori Null che indica se il valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato è un anello, che potrebbe essere Null se il valore non rappresenta una curva.</summary>
      <returns>true se il valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato è un anello. In caso contrario, false.</returns>
      <param name="geometryValue">Valore geometrico che non deve rappresentare una curva.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetIsSimple(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Restituisce un valore booleano che ammette i valori Null che indica se il valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato è semplice.</summary>
      <returns>true se il valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato è semplice; in caso contrario, false.</returns>
      <param name="geometryValue">Valore geometrico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetIsValid(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Restituisce un valore booleano che ammette i valori Null che indica se il valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato è valido.</summary>
      <returns>true se il valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato è valido; in caso contrario, false.</returns>
      <param name="geometryValue">Valore geometrico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetLatitude(System.Data.Entity.Spatial.DbGeography)">
      <summary>Restituisce la coordinata latitudine del valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato, se rappresenta un punto.</summary>
      <returns>Coordinata latitudine del valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato.</returns>
      <param name="geographyValue">Valore geografico che non deve rappresentare un punto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geographyValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geographyValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetLength(System.Data.Entity.Spatial.DbGeography)">
      <summary>Restituisce un valore Double che ammette i valori Null che indica la lunghezza del valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato, che potrebbe essere Null se il valore non rappresenta una curva.</summary>
      <returns>Lunghezza del valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato.</returns>
      <param name="geographyValue">Valore geografico che non deve rappresentare una curva.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geographyValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geographyValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetLength(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Restituisce un valore Double che ammette i valori Null che indica la lunghezza del valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato, che potrebbe essere Null se il valore non rappresenta una curva.</summary>
      <returns>Lunghezza del valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato.</returns>
      <param name="geometryValue">Valore geometrico che non deve rappresentare una curva.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetLongitude(System.Data.Entity.Spatial.DbGeography)">
      <summary>Restituisce la coordinata longitudine del valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato, se rappresenta un punto.</summary>
      <returns>Coordinata longitudine del valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato.</returns>
      <param name="geographyValue">Valore geografico che non deve rappresentare un punto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geographyValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geographyValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetMeasure(System.Data.Entity.Spatial.DbGeography)">
      <summary>Restituisce la coordinata M (Misura) del valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato, se rappresenta un punto.</summary>
      <returns>Coordinata M (Misura) del valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato.</returns>
      <param name="geographyValue">Valore geografico che non deve rappresentare un punto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geographyValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geographyValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetMeasure(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Restituisce la coordinata M (Misura) del valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato, se rappresenta un punto.</summary>
      <returns>Coordinata M (Misura) del valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato.</returns>
      <param name="geometryValue">Valore geometrico che non deve rappresentare un punto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetPointCount(System.Data.Entity.Spatial.DbGeography)">
      <summary>Restituisce il numero di punti nel valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato, se rappresenta una linea spezzata o un anello lineare.</summary>
      <returns>Numero di punti nel valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato.</returns>
      <param name="geographyValue">Valore geografico che non deve rappresentare una linea spezzata o un anello lineare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geographyValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geographyValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetPointCount(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Restituisce il numero di punti nel valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato, se rappresenta una linea spezzata o un anello lineare.</summary>
      <returns>Numero di punti nel valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato.</returns>
      <param name="geometryValue">Valore geometrico che non deve rappresentare una linea spezzata o un anello lineare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetPointOnSurface(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Restituisce un valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> che rappresenta un punto sulla superficie del valore DbGeometry specificato, che potrebbe essere Null se il valore non rappresenta una superficie.</summary>
      <returns>Valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> che rappresenta un punto della superficie del valore DbGeometry specificato.</returns>
      <param name="geometryValue">Valore geometrico che non deve rappresentare una superficie.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetSpatialTypeName(System.Data.Entity.Spatial.DbGeography)">
      <summary>Restituisce un valore che indica il nome del tipo spaziale del valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato.</summary>
      <returns>Nome del tipo spaziale del valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato.</returns>
      <param name="geographyValue">Valore geografico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geographyValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geographyValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetSpatialTypeName(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Restituisce un valore che indica il nome del tipo spaziale del valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato.</summary>
      <returns>Nome del tipo spaziale del valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato.</returns>
      <param name="geometryValue">Valore geometrico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetStartPoint(System.Data.Entity.Spatial.DbGeography)">
      <summary>Restituisce un valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> che rappresenta il punto iniziale del valore DbGeography specificato, che potrebbe essere Null se il valore non rappresenta una curva.</summary>
      <returns>Punto iniziale del valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato.</returns>
      <param name="geographyValue">Valore geografico che non deve rappresentare una curva.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geographyValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geographyValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetStartPoint(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Restituisce un valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> che rappresenta il punto iniziale del valore DbGeometry specificato, che potrebbe essere Null se il valore non rappresenta una curva.</summary>
      <returns>Punto iniziale del valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato.</returns>
      <param name="geometryValue">Valore geometrico che non deve rappresentare una curva.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetXCoordinate(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Restituisce la coordinata X del valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato, se rappresenta un punto.</summary>
      <returns>Coordinata X del valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato.</returns>
      <param name="geometryValue">Valore geometrico che non deve rappresentare un punto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.GetYCoordinate(System.Data.Entity.Spatial.DbGeometry)">
      <summary>Restituisce la coordinata Y del valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato, se rappresenta un punto.</summary>
      <returns>Coordinata Y del valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato.</returns>
      <param name="geometryValue">Valore geometrico che non deve rappresentare un punto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.InteriorRingAt(System.Data.Entity.Spatial.DbGeometry,System.Int32)">
      <summary>Restituisce un anello interno dal valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato, se rappresenta un poligono.</summary>
      <returns>Anello interno in geometryValue alla posizione index, se rappresenta un poligono. In caso contrario, Null.</returns>
      <param name="geometryValue">Valore geometrico che non deve rappresentare un poligono.</param>
      <param name="index">Posizione all'interno del valore geometrico da cui derivare l'elemento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.Intersection(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>Calcola l'intersezione di due valori <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> che rappresenta l'intersezione di geographyValue e otherGeography.</returns>
      <param name="geographyValue">Primo valore geografico.</param>
      <param name="otherGeography">Secondo valore geografico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geographyValue" /> o <paramref name="otherGeography" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geographyValue" /> o <paramref name="otherGeography" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.Intersection(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>Calcola l'intersezione di due valori <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> che rappresenta l'intersezione di geometryValue e otherGeometry.</returns>
      <param name="geometryValue">Primo valore geometrico.</param>
      <param name="otherGeometry">Secondo valore geometrico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> o <paramref name="otherGeometry" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> o <paramref name="otherGeometry" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.Intersects(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>Determina se due valori <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificati si intersecano spazialmente.</summary>
      <returns>true se geographyValue interseca geographyValue. In caso contrario, false.</returns>
      <param name="geographyValue">Primo valore geografico da confrontare ai fini dell'intersezione.</param>
      <param name="otherGeography">Secondo valore geografico da confrontare ai fini dell'intersezione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geographyValue" /> o <paramref name="otherGeography" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geographyValue" /> o <paramref name="otherGeography" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.Intersects(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>Determina se due valori <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificati si intersecano spazialmente.</summary>
      <returns>true se geometryValue interseca otherGeometry. In caso contrario, false.</returns>
      <param name="geometryValue">Primo valore geometrico da confrontare ai fini dell'intersezione.</param>
      <param name="otherGeometry">Secondo valore geometrico da confrontare ai fini dell'intersezione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> o <paramref name="otherGeometry" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> o <paramref name="otherGeometry" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="P:System.Data.Entity.Spatial.DbSpatialServices.NativeTypesAvailable">
      <summary>Ottiene un valore che indica che EF continuerà a ritenere che il provider dispone dei tipi e delle risorse necessari anziché restituire rapidamente un errore.Il valore predefinito è true.</summary>
      <returns>true se EF continuerà a ritenere che il provider dispone dei tipi e delle risorse necessari anziché restituire rapidamente un errore. In caso contrario, false.</returns>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.Overlaps(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>Determina se due valori <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificati si sovrappongono spazialmente.</summary>
      <returns>true se geometryValue si sovrappone a otherGeometry. In caso contrario, false.</returns>
      <param name="geometryValue">Primo valore geometrico.</param>
      <param name="otherGeometry">Secondo valore geometrico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> o <paramref name="otherGeometry" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> o <paramref name="otherGeometry" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.PointAt(System.Data.Entity.Spatial.DbGeography,System.Int32)">
      <summary>Restituisce un elemento punto del valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificato, se rappresenta una linea spezzata o un anello lineare.</summary>
      <returns>Punto in geographyValue alla posizione index, se rappresenta una linea spezzata o un anello lineare. In caso contrario, Null.</returns>
      <param name="geographyValue">Valore geografico che non deve rappresentare una linea spezzata o un anello lineare.</param>
      <param name="index">Posizione all'interno del valore geografico da cui derivare l'elemento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geographyValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geographyValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.PointAt(System.Data.Entity.Spatial.DbGeometry,System.Int32)">
      <summary>Restituisce un elemento punto del valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificato, se rappresenta una linea spezzata o un anello lineare.</summary>
      <returns>Punto in geometryValue alla posizione index, se rappresenta una linea spezzata o un anello lineare. In caso contrario, Null.</returns>
      <param name="geometryValue">Valore geometrico che non deve rappresentare una linea spezzata o un anello lineare.</param>
      <param name="index">Posizione all'interno del valore geometrico da cui derivare l'elemento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.Relate(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry,System.String)">
      <summary>Determina se due valori <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificati sono spazialmente correlati in base al pattern di intersezione DE-9IM (Dimensionally Extended Nine-Intersection Model).</summary>
      <returns>true se questo valore geometryValue è correlato ad otherGeometry in base alla matrice del pattern di intersezione specificato. In caso contrario, false.</returns>
      <param name="geometryValue">Primo valore geometrico.</param>
      <param name="otherGeometry">Valore geometrico che deve essere confrontato con il primo valore geometrico ai fini della relazione.</param>
      <param name="matrix">Stringa che contiene la rappresentazione di testo del pattern di intersezione (DE-9IM) che definisce la relazione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" />, <paramref name="otherGeometry" /> o <paramref name="matrix" /> è Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> o <paramref name="otherGeometry" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.SpatialEquals(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>Determina se due valori <see cref="T:System.Data.Entity.Spatial.DbGeography" /> specificati sono spazialmente uguali.</summary>
      <returns>true se geographyValue è spazialmente uguale a geographyValue. In caso contrario, false.</returns>
      <param name="geographyValue">Primo valore geografico da confrontare ai fini dell'uguaglianza.</param>
      <param name="otherGeography">Secondo valore geografico da confrontare ai fini dell'uguaglianza.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geographyValue" /> o <paramref name="otherGeography" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geographyValue" /> o <paramref name="otherGeography" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.SpatialEquals(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>Determina se due valori <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificati sono spazialmente uguali.</summary>
      <returns>true se geometryValue è spazialmente uguale a otherGeometry. In caso contrario, false.</returns>
      <param name="geometryValue">Primo valore geometrico da confrontare ai fini dell'uguaglianza.</param>
      <param name="otherGeometry">Secondo valore geometrico da confrontare ai fini dell'uguaglianza.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> o <paramref name="otherGeometry" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> o <paramref name="otherGeometry" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.SymmetricDifference(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>Calcola la differenza simmetrica tra due valori <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> che rappresenta la differenza simmetrica tra geographyValue e otherGeography.</returns>
      <param name="geographyValue">Primo valore geografico.</param>
      <param name="otherGeography">Secondo valore geografico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geographyValue" /> o <paramref name="otherGeography" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geographyValue" /> o <paramref name="otherGeography" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.SymmetricDifference(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>Calcola la differenza simmetrica tra due valori <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> che rappresenta la differenza simmetrica tra geometryValue e otherGeometry.</returns>
      <param name="geometryValue">Primo valore geometrico.</param>
      <param name="otherGeometry">Secondo valore geometrico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> o <paramref name="otherGeometry" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> o <paramref name="otherGeometry" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.Touches(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>Determina se due valori <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> specificati si toccano spazialmente.</summary>
      <returns>true se geometryValue tocca otherGeometry. In caso contrario, false.</returns>
      <param name="geometryValue">Primo valore geometrico.</param>
      <param name="otherGeometry">Secondo valore geometrico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> o <paramref name="otherGeometry" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> o <paramref name="otherGeometry" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.Union(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>Calcola l'unione di due valori <see cref="T:System.Data.Entity.Spatial.DbGeography" />.</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeography" /> che rappresenta l'unione di geographyValue e otherGeography.</returns>
      <param name="geographyValue">Primo valore geografico.</param>
      <param name="otherGeography">Secondo valore geografico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geographyValue" /> o <paramref name="otherGeography" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geographyValue" /> o <paramref name="otherGeography" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.Union(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>Calcola l'unione di due valori <see cref="T:System.Data.Entity.Spatial.DbGeometry" />.</summary>
      <returns>Nuovo valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> che rappresenta l'unione di geometryValue e otherGeometry.</returns>
      <param name="geometryValue">Primo valore geometrico.</param>
      <param name="otherGeometry">Secondo valore geometrico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> o <paramref name="otherGeometry" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> o <paramref name="otherGeometry" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="M:System.Data.Entity.Spatial.DbSpatialServices.Within(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>Determina se un valore <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> si trova spazialmente all'interno dell'altro.</summary>
      <returns>true se geometryValue si trova all'interno di otherGeometry. In caso contrario, false.</returns>
      <param name="geometryValue">Primo valore geometrico.</param>
      <param name="otherGeometry">Secondo valore geometrico.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="geometryValue" /> o <paramref name="otherGeometry" /> è null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="geometryValue" /> o <paramref name="otherGeometry" /> non è compatibile con l'implementazione spaziale dei servizi.</exception>
    </member>
    <member name="T:System.Data.Entity.Utilities.TaskExtensions">
      <summary>Contiene i metodi di estensione per la classe <see cref="T:System.Threading.Tasks.Task" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Utilities.TaskExtensions.WithCurrentCulture(System.Threading.Tasks.Task)">
      <summary>Configura un elemento awaiter usato per attendere questo oggetto <see cref="T:System.Threading.Tasks.Task" /> evitando il marshalling della continuazione al contesto originale, ma mantenendo le impostazioni cultura correnti e dell'interfaccia utente.</summary>
      <returns>Oggetto usato per attendere questa attività.</returns>
      <param name="task">Attività da attendere.</param>
    </member>
    <member name="M:System.Data.Entity.Utilities.TaskExtensions.WithCurrentCulture``1(System.Threading.Tasks.Task{``0})">
      <summary>Configura un elemento awaiter usato per attendere questo oggetto <see cref="T:System.Threading.Tasks.Task`1" /> evitando il marshalling della continuazione al contesto originale, ma mantenendo le impostazioni cultura correnti e dell'interfaccia utente.</summary>
      <returns>Oggetto usato per attendere questa attività.</returns>
      <param name="task">Attività da attendere.</param>
      <typeparam name="T">Tipo del risultato prodotto dall'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> associato.</typeparam>
    </member>
    <member name="T:System.Data.Entity.Utilities.TaskExtensions.CultureAwaiter">
      <summary>Fornisce un oggetto awaitable che consente le attese in <see cref="T:System.Threading.Tasks.Task" /> per mantenere le impostazioni cultura.</summary>
    </member>
    <member name="M:System.Data.Entity.Utilities.TaskExtensions.CultureAwaiter.#ctor(System.Threading.Tasks.Task)">
      <summary>Costruisce una nuova istanza della classe <see cref="T:System.Data.Entity.Utilities.TaskExtensions.CultureAwaiter" />.</summary>
      <param name="task">Attività da attendere.</param>
    </member>
    <member name="M:System.Data.Entity.Utilities.TaskExtensions.CultureAwaiter.GetAwaiter">
      <summary>Ottiene un elemento awaiter usato per attendere questo oggetto <see cref="T:System.Threading.Tasks.Task" />.</summary>
      <returns>Istanza di awaiter.</returns>
    </member>
    <member name="M:System.Data.Entity.Utilities.TaskExtensions.CultureAwaiter.GetResult">
      <summary>Termina l'attesa sull'oggetto <see cref="T:System.Threading.Tasks.Task" /> completato.</summary>
      <exception cref="T:System.NullReferenceException">L'elemento awaiter non è stato inizializzato correttamente.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">L'attività è stata annullata.</exception>
      <exception cref="T:System.Exception">L'attività è stata completata con uno stato di errore.</exception>
    </member>
    <member name="P:System.Data.Entity.Utilities.TaskExtensions.CultureAwaiter.IsCompleted">
      <summary>Ottiene un valore che indica se questo oggetto <see cref="T:System.Threading.Tasks.Task" /> è stato completato.</summary>
    </member>
    <member name="M:System.Data.Entity.Utilities.TaskExtensions.CultureAwaiter.OnCompleted(System.Action)">
      <summary>Questo metodo non è implementato e non deve essere chiamato.</summary>
      <param name="continuation">Azione da richiamare al completamento dell'operazione di attesa.</param>
    </member>
    <member name="M:System.Data.Entity.Utilities.TaskExtensions.CultureAwaiter.UnsafeOnCompleted(System.Action)">
      <summary>Pianifica la continuazione sull'oggetto <see cref="T:System.Threading.Tasks.Task" /> associato a questo oggetto <see cref="T:System.Runtime.CompilerServices.TaskAwaiter" />.</summary>
      <param name="continuation">Azione da richiamare al completamento dell'operazione di attesa.</param>
      <exception cref="T:System.ArgumentNullException">L'argomento <paramref name="continuation" /> è Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException">L'elemento awaiter non è stato inizializzato correttamente.</exception>
    </member>
    <member name="T:System.Data.Entity.Utilities.TaskExtensions.CultureAwaiter`1">
      <summary>Fornisce un oggetto awaitable che consente le attese in <see cref="T:System.Threading.Tasks.Task`1" /> per mantenere le impostazioni cultura.</summary>
      <typeparam name="T">Tipo del risultato prodotto dall'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> associato.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Utilities.TaskExtensions.CultureAwaiter`1.#ctor(System.Threading.Tasks.Task{`0})">
      <summary>Costruisce una nuova istanza della classe <see cref="T:System.Data.Entity.Utilities.TaskExtensions.CultureAwaiter`1" />.</summary>
      <param name="task">Attività da attendere.</param>
    </member>
    <member name="M:System.Data.Entity.Utilities.TaskExtensions.CultureAwaiter`1.GetAwaiter">
      <summary>Ottiene un elemento awaiter usato per attendere questo oggetto <see cref="T:System.Threading.Tasks.Task`1" />.</summary>
      <returns>Istanza di awaiter.</returns>
    </member>
    <member name="M:System.Data.Entity.Utilities.TaskExtensions.CultureAwaiter`1.GetResult">
      <summary>Termina l'attesa sull'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> completato.</summary>
      <returns>Risultato dell'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> completato.</returns>
      <exception cref="T:System.NullReferenceException">L'elemento awaiter non è stato inizializzato correttamente.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">L'attività è stata annullata.</exception>
      <exception cref="T:System.Exception">L'attività è stata completata con uno stato di errore.</exception>
    </member>
    <member name="P:System.Data.Entity.Utilities.TaskExtensions.CultureAwaiter`1.IsCompleted">
      <summary>Ottiene un valore che indica se questo oggetto <see cref="T:System.Threading.Tasks.Task" /> è stato completato.</summary>
    </member>
    <member name="M:System.Data.Entity.Utilities.TaskExtensions.CultureAwaiter`1.OnCompleted(System.Action)">
      <summary>Questo metodo non è implementato e non deve essere chiamato.</summary>
      <param name="continuation">Azione da richiamare al completamento dell'operazione di attesa.</param>
    </member>
    <member name="M:System.Data.Entity.Utilities.TaskExtensions.CultureAwaiter`1.UnsafeOnCompleted(System.Action)">
      <summary>Pianifica la continuazione sull'oggetto <see cref="T:System.Threading.Tasks.Task`1" /> associato a questo oggetto <see cref="T:System.Runtime.CompilerServices.TaskAwaiter`1" />.</summary>
      <param name="continuation">Azione da richiamare al completamento dell'operazione di attesa.</param>
      <exception cref="T:System.ArgumentNullException">L'argomento <paramref name="continuation" /> è Null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException">L'elemento awaiter non è stato inizializzato correttamente.</exception>
    </member>
    <member name="T:System.Data.Entity.Validation.DbEntityValidationException">
      <summary>Rappresenta un'eccezione generata da <see cref="M:System.Data.Entity.DbContext.SaveChanges" /> quando la convalida delle entità non viene completata.</summary>
    </member>
    <member name="M:System.Data.Entity.Validation.DbEntityValidationException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Validation.DbEntityValidationException" /> utilizzando i valori predefiniti.</summary>
    </member>
    <member name="M:System.Data.Entity.Validation.DbEntityValidationException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Validation.DbEntityValidationException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio dell'eccezione.</param>
    </member>
    <member name="M:System.Data.Entity.Validation.DbEntityValidationException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.Entity.Validation.DbEntityValidationResult})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Validation.DbEntityValidationException" /> usando il messaggio di errore specificato e i risultati della convalida.</summary>
      <param name="message">Messaggio dell'eccezione.</param>
      <param name="entityValidationResults">Risultati della convalida.</param>
    </member>
    <member name="M:System.Data.Entity.Validation.DbEntityValidationException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.Entity.Validation.DbEntityValidationResult},System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Validation.DbEntityValidationException" /> con il messaggio di errore, i risultati della convalida e l'eccezione interna specificati.</summary>
      <param name="message">Messaggio dell'eccezione.</param>
      <param name="entityValidationResults">Risultati della convalida.</param>
      <param name="innerException">Errore che ha causato l'eccezione.</param>
    </member>
    <member name="M:System.Data.Entity.Validation.DbEntityValidationException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Validation.DbEntityValidationException" /> con il messaggio di errore e l'eccezione interna specificati.</summary>
      <param name="message">Messaggio dell'eccezione.</param>
      <param name="innerException">Errore che ha causato l'eccezione.</param>
    </member>
    <member name="P:System.Data.Entity.Validation.DbEntityValidationException.EntityValidationErrors">
      <summary>Ottieni gli errori di convalida associati all'entità.</summary>
      <returns>Errori di convalida associati all'entità.</returns>
    </member>
    <member name="T:System.Data.Entity.Validation.DbEntityValidationResult">
      <summary>Rappresenta i risultati della convalida per una singola entità.</summary>
    </member>
    <member name="M:System.Data.Entity.Validation.DbEntityValidationResult.#ctor(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IEnumerable{System.Data.Entity.Validation.DbValidationError})">
      <summary>Crea un'istanza della classe <see cref="T:System.Data.Entity.Validation.DbEntityValidationResult" />.</summary>
      <param name="entry">Voce dell'entità a cui si applicano i risultati.Mai Null.</param>
      <param name="validationErrors">Elenco di istanze di <see cref="T:System.Data.Entity.Validation.DbValidationError" />.Mai Null.Può essere vuoto, ciò significa che l'entità è valida.</param>
    </member>
    <member name="P:System.Data.Entity.Validation.DbEntityValidationResult.Entry">
      <summary>Ottiene un'istanza di <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> a cui vengono applicati i risultati.</summary>
    </member>
    <member name="P:System.Data.Entity.Validation.DbEntityValidationResult.IsValid">
      <summary>Ottiene un indicatore se l'entità è valida.</summary>
    </member>
    <member name="P:System.Data.Entity.Validation.DbEntityValidationResult.ValidationErrors">
      <summary>Ottiene gli errori di convalida.Mai Null.</summary>
    </member>
    <member name="T:System.Data.Entity.Validation.DbUnexpectedValidationException">
      <summary>Eccezione generata da <see cref="M:System.Data.Entity.DbContext.GetValidationErrors" /> quando un'eccezione viene generata dal codice di convalida.</summary>
    </member>
    <member name="M:System.Data.Entity.Validation.DbUnexpectedValidationException.#ctor">
      <summary>Inizializza una nuova istanza di DbUnexpectedValidationException.</summary>
    </member>
    <member name="M:System.Data.Entity.Validation.DbUnexpectedValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza di DbUnexpectedValidationException con le informazioni e il contesto di serializzazione specificati.</summary>
      <param name="info">Informazioni di serializzazione.</param>
      <param name="context">Contesto di flusso.</param>
    </member>
    <member name="M:System.Data.Entity.Validation.DbUnexpectedValidationException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza di DbUnexpectedValidationException.</summary>
      <param name="message">Messaggio dell'eccezione.</param>
    </member>
    <member name="M:System.Data.Entity.Validation.DbUnexpectedValidationException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza di DbUnexpectedValidationException.</summary>
      <param name="message">Messaggio dell'eccezione.</param>
      <param name="innerException">Eccezione interna.</param>
    </member>
    <member name="T:System.Data.Entity.Validation.DbValidationError">
      <summary>Errore di convalida.Può essere un errore di convalida a livello di entità o di proprietà.</summary>
    </member>
    <member name="M:System.Data.Entity.Validation.DbValidationError.#ctor(System.String,System.String)">
      <summary>Crea un'istanza di <see cref="T:System.Data.Entity.Validation.DbValidationError" />.</summary>
      <param name="propertyName">Nome della proprietà non valida.Può essere null.</param>
      <param name="errorMessage">Messaggio di errore di convalida.Può essere null.</param>
    </member>
    <member name="P:System.Data.Entity.Validation.DbValidationError.ErrorMessage">
      <summary>Ottiene il messaggio di errore di convalida.</summary>
    </member>
    <member name="P:System.Data.Entity.Validation.DbValidationError.PropertyName">
      <summary>Ottiene il nome della proprietà non valida.</summary>
    </member>
  </members>
</doc>